<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Bongo Paw Clicker 开发记录</title>
    <url>/BongoPawClicker.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">本文是Bongo Paw Clicker的开发记录，对我在开发鼠标连点器过程中遇到的问题进行了记录</blockquote>

<p><img data-src="https://s2.loli.net/2023/08/21/NiZV537WgoJSdX8.webp" alt="cn-preview.webp"></p>
<span id="more"></span>

<h1 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h1><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/bongoClicker.webp"></object>
<p>Bongo Paw Clicker</p><p>一个集成了邦鼓猫 (Bongo Cat) 的自动鼠标连点器</p>
<a href="https://github.com/Siriusq/BongoPawClicker/releases/download/v1.0/BongoPawClicker.exe"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Github Repo Link</p><p>Bongo Paw Clicker 的 GitHub 仓库链接</p>
<a href="https://github.com/Siriusq/BongoPawClicker"></a>
</div></div>

<h1 id="UI设计"><a href="#UI设计" class="headerlink" title="UI设计"></a>UI设计</h1><p>WPF使用可扩展应用程序标记语言 (<a href="https://learn.microsoft.com/zh-cn/visualstudio/xaml-tools/xaml-overview?view=vs-2022">XAML</a>)来生成UI，VS中的<a href="https://learn.microsoft.com/zh-cn/visualstudio/xaml-tools/creating-a-ui-by-using-xaml-designer-in-visual-studio?view=vs-2022">XAML设计器</a>提供了一个可视界面来帮助我们进行UI设计。XAML在使用上和CSS比较像，上手基本没有难度，难的是设计。吐槽：程序员自己做UI设计是真的心累，我设计UI的时间比写代码的时间都长。</p>
<h2 id="窗口布局"><a href="#窗口布局" class="headerlink" title="窗口布局"></a>窗口布局</h2><p>我在UI中使用了Grid和StackPanel进行UI布局，Grid用于划分横向功能区，StackPanel用于在Grid的每行中横向排布组件。更多布局方式见<a href="https://learn.microsoft.com/zh-cn/visualstudio/xaml-tools/organize-objects-into-layout-containers-in-xaml-designer?view=vs-2022">微软文档</a></p>
<p>如果直接在同一个Grid中加入多个组件的话，这些组件会堆叠到一起，而不是按照顺序排列。如果要让组件均匀排列，需要为每个组件指定Margin，很麻烦，所以我才在Grid中嵌套了StackPanel来排布组件。</p>
<h3 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h3><p>顾名思义，Grid就是将面板划分为不同的网格</p>
<details class="note success"><summary><p>Grid示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span> <span class="comment">&lt;!--定义行--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;50&quot;</span> /&gt;</span> <span class="comment">&lt;!--定义首行参数，此处设置首行行高为50--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;60&quot;</span> /&gt;</span> <span class="comment">&lt;!--第二行参数--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span>&gt;</span> <span class="comment">&lt;!--第一行--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span> <span class="comment">&lt;!--定义列--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;130&quot;</span> /&gt;</span> <span class="comment">&lt;!--定义首列参数，此处设置首列列宽为130--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span> /&gt;</span> <span class="comment">&lt;!--第二列参数，此处*代表将列宽设为此行剩余的所有宽度，如果有多个列的宽度设置为*，则代表这些列均分剩余宽度--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span>&gt;</span> <span class="comment">&lt;!--第一列的内容--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Some Content --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;1&quot;</span>&gt;</span> <span class="comment">&lt;!--第二列的内容--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Some Content --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span>&gt;</span> <span class="comment">&lt;!--第二行--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;2*&quot;</span> /&gt;</span> <span class="comment">&lt;!-- 这里2*标识占据所有宽度的七分之二--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;5*&quot;</span> /&gt;</span> <span class="comment">&lt;!-- 这里2*标识占据所有宽度的七分之五--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h3 id="StackPanel"><a href="#StackPanel" class="headerlink" title="StackPanel"></a>StackPanel</h3><p>StackPanel可以实现在单个行中水平或者垂直排列组件，它不会自动换行，超出宽度的内容会不可视。</p>
<details class="note success"><summary><p>StackPanel示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">StackPanel</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Height</span>=<span class="string">&quot;60&quot;</span> &lt;!<span class="attr">--设置高度--</span>&gt;</span></span><br><span class="line">    HorizontalAlignment=&quot;Left&quot; <span class="comment">&lt;!--设置水平对齐方式--&gt;</span></span><br><span class="line">    VerticalAlignment=&quot;Center&quot; <span class="comment">&lt;!--设置垂直对齐方式--&gt;</span></span><br><span class="line">    Orientation=&quot;Horizontal&quot;&gt; <span class="comment">&lt;!--设置排列方向--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Label</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">AccessText</span> <span class="attr">Text</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Label</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">AccessText</span> <span class="attr">Text</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h2 id="Material-Design"><a href="#Material-Design" class="headerlink" title="Material Design"></a>Material Design</h2><p>起初我是想自己写一个UI样式，写着写着就发现自己很天真，圆角的半径、按钮的动画什么的真的让我很头大。于是决定摆烂，直接在程序中套用UI框架，这样做的好处是省事且美观，缺点是程序打包后的文件体积会变大。挑选了半天，我最后选择了<a href="https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit">Material Design In XAML</a></p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>在<code>App.xaml</code>中添加一个新的命名空间引用：<code>xmlns:materialDesign=&quot;http://materialdesigninxaml.net/winfx/xaml/themes&quot;</code>，然后再添加几个<code>ResourceDictionary</code>。</p>
<details class="note success"><summary><p>App.xaml</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">&quot;[PackageName].App&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">&quot;clr-namespace:[PackageName]&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:materialDesign</span>=<span class="string">&quot;http://materialdesigninxaml.net/winfx/xaml/themes&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">StartupUri</span>=<span class="string">&quot;MainWindow.xaml&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ResourceDictionary</span> <span class="attr">Source</span>=<span class="string">&quot;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>然后在每个窗口对应的xaml文件的Window Tag中添加命名空间引用和相关属性(可选)。</p>
<details class="note success"><summary><p>Window Tag</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span></span></span><br><span class="line"><span class="tag">    //<span class="attr">已经存在的内容</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:materialDesign</span>=<span class="string">&quot;http://materialdesigninxaml.net/winfx/xaml/themes&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">TextElement.Foreground</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignBody&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource MaterialDesignPaper&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">TextElement.FontWeight</span>=<span class="string">&quot;Medium&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">TextElement.FontSize</span>=<span class="string">&quot;14&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">FontFamily</span>=<span class="string">&quot;&#123;materialDesign:MaterialDesignFont&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    //<span class="attr">其他内容</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h2 id="窗口样式"><a href="#窗口样式" class="headerlink" title="窗口样式"></a>窗口样式</h2><p>因为我想实现无边框的窗口（又菜又爱玩），就在Window Tag中将<code>WindowStyle</code>设置成<code>None</code>了。这么做的好处是很自由，能够随心所欲的设计窗口样式，缺点就是太自由了，关闭、最小化等功能按钮都需要自己重新实现，Windows原生的动画效果也全部没有了。</p>
<h3 id="功能按钮"><a href="#功能按钮" class="headerlink" title="功能按钮"></a>功能按钮</h3><p>首先在<code>MainWindow.xaml</code>文件中重绘顶栏，左侧是应用标题，右侧是功能按钮，功能按钮共有三个，分别为设置、最小化以及关闭应用。然后在按钮中绑定<code>Click</code>事件。</p>
<details class="note success"><summary><p>关闭按钮示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--MainWindow.xaml 关闭按钮示例--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Name</span>=<span class="string">&quot;CloseButton&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Width</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Height</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Click</span>=<span class="string">&quot;CloseButton_Click&quot;</span> //<span class="attr">绑定关闭事件</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignFloatingActionMiniButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">WindowChrome.IsHitTestVisibleInChrome</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">materialDesign:PackIcon</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Width</span>=<span class="string">&quot;25&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Height</span>=<span class="string">&quot;25&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Kind</span>=<span class="string">&quot;Close&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>最后在<code>MainWindow.xaml.cs</code>中重新实现按钮的功能。</p>
<ul>
<li>关闭窗口：<code>Close()</code>；</li>
<li>最小化：<code>this.WindowState = WindowState.Minimized</code>；</li>
<li>拖拽窗口：<code>DragMove()</code>;</li>
</ul>
<details class="note success"><summary><p>关闭窗口示例</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//MainWindow.xaml.cs 关闭窗口示例</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CloseButton_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Close(); <span class="comment">//关闭窗口</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h3 id="窗口阴影"><a href="#窗口阴影" class="headerlink" title="窗口阴影"></a>窗口阴影</h3><p>实现阴影效果需要允许窗口透明，并将窗口背景设置为空值</p>
<details class="note success"><summary><p>MainWindow.xaml相关Tag示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span></span></span><br><span class="line"><span class="tag">    //<span class="attr">其他内容</span></span></span><br><span class="line"><span class="tag">    <span class="attr">AllowsTransparency</span>=<span class="string">&quot;True&quot;</span> //<span class="attr">允许透明</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;x:Null&#125;&quot;</span> //<span class="attr">背景设置为空值</span></span></span><br><span class="line"><span class="tag">    <span class="attr">WindowStyle</span>=<span class="string">&quot;None&quot;</span> //<span class="attr">不使用Windows默认窗口样式</span></span></span><br><span class="line"><span class="tag">    //<span class="attr">其他内容</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>下面是两个错误示例，左边的图片没有设置允许窗口透明，窗口的边框会显示黑色。右边的图片将背景设置为了红色。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/G7k3ueC45sLVzPF.png" alt="bpc_shadow2.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/GuCkMH4gx7ldKPZ.png" alt="bpc_shadow1.png"></div></div></div>

<p>阴影效果我使用了Grid中的<code>DropShadowEffect</code>实现。</p>
<details class="note success"><summary><p>DropShadowEffect示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Grid.Effect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DropShadowEffect</span></span></span><br><span class="line"><span class="tag">        <span class="attr">BlurRadius</span>=<span class="string">&quot;15&quot;</span> //<span class="attr">表示阴影模糊效果半径的值</span>，<span class="attr">默认值为5</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Opacity</span>=<span class="string">&quot;0.8&quot;</span> //<span class="attr">数值越大阴影越明显</span></span></span><br><span class="line"><span class="tag">        <span class="attr">ShadowDepth</span>=<span class="string">&quot;0&quot;</span> //<span class="attr">设置阴影与窗口的距离</span>，<span class="attr">阴影会随着数值增大向窗口右下方移动</span></span></span><br><span class="line"><span class="tag">        <span class="attr">Color</span>=<span class="string">&quot;#666666&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid.Effect</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>此时是看不到窗口的阴影的，因为阴影是环绕在Grid的外围的，而当前的Grid已经占用了全部的窗口空间，阴影自然就不可见了。所以需要通过<code>Margin</code>属性为Grid设置外边距，Margin具体的数值要根据阴影的宽度设置。</p>
<h3 id="窗口圆角"><a href="#窗口圆角" class="headerlink" title="窗口圆角"></a>窗口圆角</h3><p>圆角效果有多种实现方式，可以使用Card中的<code>UniformCornerRadius=&quot;半径&quot;</code>统一设置4个圆角的半径，也可以使用Border中的<code>CornerRadius=&quot;左上半径,右上半径,右下半径,左下半径&quot;</code>分别设置每个圆角的半径。我使用了Card，并将圆角半径设置为15。</p>
<details class="note success"><summary><p>窗口圆角示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">materialDesign:Card</span> <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource CardBackgroundColor&#125;&quot;</span> <span class="attr">UniformCornerRadius</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h3 id="窗口动画"><a href="#窗口动画" class="headerlink" title="窗口动画"></a>窗口动画</h3><p>需要重新实现的动画有窗口启动、窗口关闭、最小化、从最小化恢复窗口四个。</p>
<ul>
<li>窗口启动：模仿Windows原生动画</li>
<li>窗口关闭：模仿Windows原生动画</li>
<li>最小化：窗口向下滑动，同时透明度逐渐降低</li>
<li>恢复窗口：窗口从底部滑动出现，同时透明度逐渐增加</li>
</ul>
<h4 id="创建动画"><a href="#创建动画" class="headerlink" title="创建动画"></a>创建动画</h4><p>Windows原生启动动画的效果是窗口透明度逐渐增加，窗口从0.7-0.8倍尺寸向四周逐渐扩大至正常尺寸，窗口关闭动画则相反，我这里以加载窗口的动画为例。为实现近似的效果，需要创建一个<code>Storyboard</code>，并向其中添加三个<code>DoubleAnimation</code>，分别是透明度变化、横向拉伸和竖向拉伸。</p>
<h5 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h5><p>透明度变化的动画很简单，下面的代码实现的是窗口启动时透明度由0到1的变化。注意其中的<code>FillBehavior</code>属性，它的默认值是<code>HoldEnd</code>，意味着动画中To的值会覆写程序原本的值，这在某些情况下会造成问题，解决方法是将它设置为<code>Stop</code>。</p>
<details class="note success"><summary><p>透明度动画</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">DoubleAnimation</span></span></span><br><span class="line"><span class="tag">    <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">From</span>=<span class="string">&quot;0&quot;</span> //<span class="attr">初始透明度</span></span></span><br><span class="line"><span class="tag">    <span class="attr">To</span>=<span class="string">&quot;1&quot;</span> //<span class="attr">最终透明度</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.2&quot;</span> //<span class="attr">动画播放时间0.2秒</span> /&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h5 id="窗口拉伸"><a href="#窗口拉伸" class="headerlink" title="窗口拉伸"></a>窗口拉伸</h5><p>首先在主Grid中设置<code>x:Name</code>和<code>RenderTransformOrigin</code>属性。<code>x:Name</code>用于拉伸动画寻找对应的Grid，<code>RenderTransformOrigin</code>用于设置动画的起点，取值范围是0-1，设置为<code>0,0</code>时动画的起点是窗口的左上角，设置为<code>1,1</code>时动画的起点是窗口的右下角。我这里设置为<code>0.5,0.5</code>，即窗口的中心。</p>
<p>然后向Grid中添加<code>RenderTransform</code>属性，<code>RenderTransform</code>是一个用于控制元素呈现时的变换的属性。它允许你对元素应用平移、缩放、旋转和倾斜等变换效果，以改变元素的呈现位置、大小和方向。这里我为了方便后续添加其他效果使用了<code>TransformGroup</code>类，它是 WPF 中的一个用于组合多个变换效果的容器类，它允许你将多个平移、缩放、旋转、倾斜等变换组合在一起，从而可以同时应用这些变换效果到一个元素上。</p>
<p>下一步是在上面创建的<code>Storyboard</code>中添加横向拉伸和竖向拉伸的动画DoubleAnimation<code>，使用</code>Storyboard.TargetName<code>指定拉伸对象，使用</code>Storyboard.TargetProperty&#96;指定变形类型。</p>
<details class="note success"><summary><p>窗口拉伸动画</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--加载窗口动画的Storyboard--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Storyboard</span> <span class="attr">x:Key</span>=<span class="string">&quot;ShowWindow&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--透明度动画--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DoubleAnimation</span></span></span><br><span class="line"><span class="tag">                <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;Opacity&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">From</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">To</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.2&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--横向拉伸--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DoubleAnimation</span></span></span><br><span class="line"><span class="tag">                <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;MainGrid&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">From</span>=<span class="string">&quot;0.8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">To</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.2&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--纵向拉伸--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">DoubleAnimation</span></span></span><br><span class="line"><span class="tag">                <span class="attr">FillBehavior</span>=<span class="string">&quot;Stop&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Storyboard.TargetName</span>=<span class="string">&quot;MainGrid&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Storyboard.TargetProperty</span>=<span class="string">&quot;(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">From</span>=<span class="string">&quot;0.8&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">To</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">Duration</span>=<span class="string">&quot;0:0:0.2&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Storyboard</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window.Resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--目标网格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Grid</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Name</span>=<span class="string">&quot;MainGrid&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Margin</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">RenderTransformOrigin</span>=<span class="string">&quot;0.5,0.5&quot;</span>&gt;</span> <span class="comment">&lt;!--动画的起点--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid.RenderTransform</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">TransformGroup</span>&gt;</span> <span class="comment">&lt;!--容器类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ScaleTransform</span> <span class="attr">ScaleX</span>=<span class="string">&quot;1&quot;</span> <span class="attr">ScaleY</span>=<span class="string">&quot;1&quot;</span> /&gt;</span> <span class="comment">&lt;!--缩放--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SkewTransform</span> /&gt;</span> <span class="comment">&lt;!--扭曲--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RotateTransform</span> /&gt;</span> <span class="comment">&lt;!--旋转--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TranslateTransform</span> /&gt;</span> <span class="comment">&lt;!--平移--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">TransformGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid.RenderTransform</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--其他内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h4 id="触发动画"><a href="#触发动画" class="headerlink" title="触发动画"></a>触发动画</h4><p>窗口加载动画的触发很简单，在xaml文件中添加一个<code>Window.Triggers</code>即可。</p>
<details class="note success"><summary><p>Window.Triggers示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window.Triggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EventTrigger</span> <span class="attr">RoutedEvent</span>=<span class="string">&quot;Loaded&quot;</span>&gt;</span> <span class="comment">&lt;!--窗口加载时触发--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">BeginStoryboard</span> <span class="attr">Storyboard</span>=<span class="string">&quot;&#123;StaticResource ShowWindow&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">EventTrigger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>但是最小化窗口等动画不太适合直接使用<code>Window.Triggers</code>，因为有一些特殊情况需要判定是否播放动画，所以我还是在代码中触发这些动画。下面是用于触发窗口从最小化恢复的动画的代码，需要先在xaml文件的Window Tag中添加一行<code>StateChanged=&quot;Window_StateChanged&quot;</code>来绑定窗口状态改变事件。</p>
<details class="note success"><summary><p>窗口状态改变代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Window_StateChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//当窗口透明度为0且尺寸恢复正常时，执行从最小化恢复的动画</span></span><br><span class="line">    <span class="comment">//因为我的最小化动画最终会将窗口的透明度设置为0，也方便了这里进行判定</span></span><br><span class="line">    <span class="comment">//如果不判定窗口的透明度，窗口在失去焦点但并没有最小化的情况下重新获得焦点时，动画也会被触发</span></span><br><span class="line">    <span class="keyword">if</span> (WindowState == WindowState.Normal &amp;&amp; <span class="keyword">this</span>.Opacity==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> story = (Storyboard)<span class="keyword">this</span>.Resources[<span class="string">&quot;MaximizeWindow&quot;</span>];</span><br><span class="line">        story.Begin(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h1 id="图像与音频"><a href="#图像与音频" class="headerlink" title="图像与音频"></a>图像与音频</h1><p>我在根目录下新建了一个Asset文件夹来存放图像、音频等媒体资源。</p>
<h2 id="应用图标"><a href="#应用图标" class="headerlink" title="应用图标"></a>应用图标</h2><p>我的图标设计的很简单粗暴，一只Bongo Cat抱着一个鼠标光标，PS里几步操作就完成了。添加图标的步骤为打开项目<code>属性</code>，在<code>应用程序</code>菜单的<code>资源</code>选项中点选<code>图标和清单</code>，然后单击<code>浏览</code>按钮并找到自己的图标即可。图标文件仅支持<code>ico</code>格式<br><img data-src="https://s2.loli.net/2023/08/18/ilZkBTWVf9gUxLO.png" alt="bpc_icon.png"></p>
<h2 id="Bongo-Cat"><a href="#Bongo-Cat" class="headerlink" title="Bongo Cat"></a>Bongo Cat</h2><p>我通过切换4张不同状态下的Bongo Cat的图片来实现Bongo Cat的爪子随着鼠标点击同步拍桌子的效果。</p>
<ul>
<li>默认状态：两只猫爪都是抬起来的</li>
<li>鼠标左键单击：左侧猫爪拍下</li>
<li>鼠标左键双击：两只猫爪同时拍下</li>
<li>鼠标右键单击：右侧猫爪拍下</li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/ISOCrNd46uhEwtx.png" alt="nonePaw.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/HGk9cCoqEwtledn.png" alt="leftPaw.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/F364xwoDMdYuNEA.png" alt="rightPaw.png"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/HVnKk74vDx6oQZW.png" alt="bothPaw.png"></div></div></div>

<p>首先提前在PS中处理四张图片，对齐Bongo Cat的身体轮廓，导出为相同大小的文件。然后放置在同一个Canvas下并设置相同的尺寸与对齐方式，除默认状态下的图片，其他三张图片的<code>Visibility</code>属性都设置为<code>&quot;Collapsed&quot;</code>。</p>
<details class="note primary"><summary><p>Visibility属性</p>
</summary>
<blockquote>
<p>以下内容由ChatGPT生成</p>
</blockquote>
<p><code>Visibility</code> 属性用于控制一个元素在界面上的可见性。在 WPF 中，<code>Visibility</code> 属性有三个可能的值：<code>Visible</code>、<code>Collapsed</code> 和 <code>Hidden</code>。</p>
<ol>
<li><strong>Visible</strong>：元素是可见的，并且占据布局空间。它会显示在界面上，并响应用户交互。</li>
<li><strong>Collapsed</strong>：元素是不可见的，并且不占据布局空间。它不会显示在界面上，也不会占用任何空间。与 <code>Visible</code> 不同，使用 <code>Collapsed</code> 后该元素不会留下空白，周围的布局会紧凑起来。</li>
<li><strong>Hidden</strong>：元素是不可见的，但它仍然占据布局空间。与 <code>Visible</code> 相似，只是元素不会显示出来，但它会占用空间，导致周围的布局不会紧凑。</li>
</ol>
<p>一般来说，如果你想要完全隐藏一个元素，并且希望周围的布局重新排列以填补它的位置，你可以使用 <code>Collapsed</code>。如果你希望元素不显示，但仍然占用空间，你可以使用 <code>Hidden</code>。。</p>

</details>

<p>然后在代码中进行处理，以左键单击为例，当模拟鼠标左键单击事件时，将左边爪子拍下的图片设置为可见，并折叠默认状态下的图片，等待100毫秒后恢复原样。</p>
<details class="note success"><summary><p>左键单击示例</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (clickType == <span class="number">0</span>)<span class="comment">//左键单击</span></span><br><span class="line">&#123;</span><br><span class="line">    Dispatcher.InvokeAsync((Action)(<span class="keyword">async</span> () =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        LeftPaw.Visibility = Visibility.Visible;</span><br><span class="line">        NonePaw.Visibility = Visibility.Collapsed;</span><br><span class="line">        <span class="keyword">await</span> Task.Delay(<span class="number">100</span>);</span><br><span class="line">        LeftPaw.Visibility = Visibility.Collapsed;</span><br><span class="line">        NonePaw.Visibility = Visibility.Visible;</span><br><span class="line">    &#125;));</span><br><span class="line">    User32API.ClickOnScreen(<span class="number">0</span>, xCoord, yCoord);<span class="comment">//模拟点击</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<p>用户中断点击事件的执行时，图片的切换也会被中断，当前显示的图片可能不是默认状态下的图片，所以在模拟点击命令中断或结束后还需要将图片恢复默认状态。</p>
<h2 id="播放音频"><a href="#播放音频" class="headerlink" title="播放音频"></a>播放音频</h2><p>我在添加音频时遇到了一个很奇怪的问题，如果直接在xaml中使用MediaPlayer，就必须在代码中使用绝对路径调用音频文件，使用相对路径就会提示找不到资源，最后我是把音频文件加入到了<code>Resources.resx</code>中，然后通过<code>Properties.Resources.[FileName]</code>调用成功的。</p>
<details class="note success"><summary><p>播放音频代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//音频播放器</span></span><br><span class="line">    System.Media.SoundPlayer meowAudio;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//窗口加载时载入音频</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Window_Loaded</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        meowAudio = <span class="keyword">new</span> System.Media.SoundPlayer(Properties.Resources.meow);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行模拟点击完成后播放音频</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClickLuncher</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Dispatcher.InvokeAsync((Action)(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            meowAudio.Play();</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<p>这里还有一个比较坑的地方，<code>Resources.resx</code>中默认显示的资源类型是字符串，需要通过左上角的下拉菜单切换到音频，而且只有点击到一个非常小非常不明显的小箭头才能打开下拉菜单，如下图所示。</p>
<p><img data-src="https://s2.loli.net/2023/08/18/G1knqmbt7juEM2x.png" alt="bpc_audio.png"></p>
<details class="note primary"><summary><p>UI线程与Dispatcher</p>
</summary>
<blockquote>
<p>部分内容来自ChatGPT</p>
</blockquote>
<p>你可能已经注意到了，在代码中切换猫爪图片需要使用到<code>Dispatcher</code>，因为这里涉及到了UI线程的问题。</p>
<h2 id="UI线程"><a href="#UI线程" class="headerlink" title="UI线程"></a>UI线程</h2><p>UI线程是负责处理用户界面交互和更新的线程。在WPF应用程序中，UI线程负责处理用户界面元素（如窗口、按钮、文本框等）的创建、显示、交互和更新操作。UI线程负责绘制界面、响应用户输入以及处理各种UI事件。</p>
<p>UI线程的重要性在于它的线程上下文。大多数UI框架，包括WPF，要求所有与UI相关的操作都在同一个线程上进行，以确保线程安全。这就意味着你不能在非UI线程上直接更新UI元素，否则可能会引发跨线程问题。</p>
<p>UI线程通常有以下特点：</p>
<ul>
<li>单线程模型： 在大多数UI框架中，包括WPF，UI线程是单线程模型。这意味着所有UI元素的创建、修改和交互都必须在同一个UI线程上进行。</li>
<li>用户界面操作： UI线程负责处理用户界面的各种操作，包括响应用户输入、处理鼠标和键盘事件、处理窗口状态变化（最大化、最小化等）等。</li>
<li>渲染绘制： UI线程负责渲染和绘制用户界面元素，确保它们正确地显示在屏幕上。</li>
<li>响应性： 为了保持应用程序的响应性，UI线程应该保持轻量级，以便能够及时响应用户的操作。</li>
<li>线程安全： UI线程的操作必须是线程安全的，以避免并发和同步问题。</li>
</ul>
<p>当进行长时间运算或涉及耗时操作时，应该将这些操作分离到非UI线程，以保持用户界面的流畅性。但在更新UI元素时，你仍然需要使用<code>Dispatcher</code>将操作发送到UI线程，以确保线程安全。</p>
<h2 id="Dispatcher"><a href="#Dispatcher" class="headerlink" title="Dispatcher"></a>Dispatcher</h2><p><code>Dispatcher</code> 是WPF中的一个机制，允许你在非UI线程上将操作调度到UI线程上执行。通过使用<code>Dispatcher</code>，你可以确保UI元素的更新和操作都发生在正确的线程上，避免了线程安全问题。</p>
<p>例如，如果你在一个后台线程上计算某些值，并希望将计算结果显示在UI界面上，你需要通过<code>Dispatcher</code>将更新操作发送到UI线程。这样做可以保证UI元素的更新不会导致跨线程问题。</p>
<p><code>Dispatcher</code>中含有三个常用方法，即<code>Invoke</code>，<code>BeginInvoke</code>和<code>InvokeAsync</code>。</p>
<ul>
<li><code>Invoke</code>是同步方法，意味着调用线程将会被阻塞，直到操作在UI线程上完成为止。</li>
<li><code>BeginInvoke</code>和<code>InvokeAsync</code>都是异步方法，它会将操作加入到UI线程的消息队列中，然后立即返回，不会阻塞调用线程，可以继续执行后续代码。InvokeAsync是在<code>.NET Framework 4.5</code>中新引入的，两者的主要区别是对异常的处理方式，建议首选InvokeAsync，特别是需要使用<code>await</code>方法的时候。</li>
</ul>

</details>

<h1 id="设置面板"><a href="#设置面板" class="headerlink" title="设置面板"></a>设置面板</h1><p>我在程序中单独创建了设置面板的窗口，设置面板的功能有：</p>
<ul>
<li>切换程序的明&#x2F;暗主题</li>
<li>设置程序是否始终置顶</li>
<li>设置热键</li>
<li>设置点击完成后的提醒</li>
</ul>
<h2 id="创建窗口"><a href="#创建窗口" class="headerlink" title="创建窗口"></a>创建窗口</h2><p>首先在主窗口的xaml文件中添加一个按钮并绑定点击事件<code>Click=&quot;SettingButton_Click&quot;</code>，然后在项目中添加一个新的窗口并命名为<code>SettingPanel</code>。随后打开主窗口的代码文件，找到并编辑自动生成的方法代码。<br><img data-src="https://s2.loli.net/2023/08/18/iVex1vswbLakocI.png" alt="bpc_sp1.png"></p>
<details class="note success"><summary><p>创建设置窗口</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SettingButton_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    SettingPanel settingPanel = <span class="keyword">new</span> SettingPanel(); <span class="comment">//创建设置窗口</span></span><br><span class="line">    settingPanel.WindowStartupLocation = WindowStartupLocation.CenterOwner;<span class="comment">//设置窗口启动时的位置，这里设置为在主窗口的中心</span></span><br><span class="line">    settingPanel.Owner = <span class="keyword">this</span>; <span class="comment">//将主窗口设为设置窗口的拥有者</span></span><br><span class="line">    settingPanel.ShowDialog(); <span class="comment">//显示设置窗口</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>


<details class="note primary"><summary><p>ShowDialog与Show</p>
</summary>
<blockquote>
<p>以下内容来自ChatGPT</p>
</blockquote>
<h2 id="ShowDialog与Show"><a href="#ShowDialog与Show" class="headerlink" title="ShowDialog与Show"></a>ShowDialog与Show</h2><p>在WPF中，Show和ShowDialog是两种不同的方式来显示窗口</p>
<h3 id="Show"><a href="#Show" class="headerlink" title="Show"></a>Show</h3><ul>
<li>使用Show方法显示的窗口是非模态的，即它不会阻止用户与应用程序的其他部分进行交互。</li>
<li>用户可以在打开的窗口之间自由切换，甚至可以在主窗口和其他打开的窗口之间进行交互。</li>
<li>Show方法会立即返回，而不会等待打开的窗口关闭。</li>
</ul>
<h3 id="ShowDialog"><a href="#ShowDialog" class="headerlink" title="ShowDialog"></a>ShowDialog</h3><ul>
<li>使用ShowDialog方法显示的窗口是模态的，即它会阻止用户与应用程序的其他部分进行交互，直到该窗口被关闭。</li>
<li>用户必须先关闭模态窗口，才能回到主窗口或其他已打开的窗口。</li>
<li>ShowDialog方法会在打开的窗口关闭后才返回，因此它可以用于实现需要用户响应的对话框。</li>
</ul>

</details>

<h1 id="主题切换"><a href="#主题切换" class="headerlink" title="主题切换"></a>主题切换</h1><p>在深夜测试的时候感觉默认的亮色主题有些刺眼，于是决定增加一个暗色的主题，并在设置窗口中添加一个按钮用于主题的切换。</p>
<p><code>Material Design</code>已经内置了亮色和暗色主题，也内置了几套<code>Primary Color</code>配色方案，而<code>Primary Color</code>又分为Light、Normal和Dark三种颜色，TextBox、ToggleButton等组件使用的是Light配色，Button使用的是Dark配色。我对它的Light配色不太满意，就通过资源字典增加了一套配色，在程序的背景、Toggle按钮等组件上使用自己的颜色方案，在普通按钮上沿用<code>Material Design</code>的配色。</p>
<p>首先在<code>App.xaml</code>中添加两个<code>SolidColorBrush</code>属性，其中<code>CardBackgroundColor</code>是窗口的背景颜色，<code>IndicatorColor</code>是各个控件的主题颜色，这里默认是亮色主题。</p>
<details class="note success"><summary><p>SolidColorBrush示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;CardBackgroundColor&quot;</span>&gt;</span>#f8f8ff<span class="tag">&lt;/<span class="name">SolidColorBrush</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SolidColorBrush</span> <span class="attr">x:Key</span>=<span class="string">&quot;IndicatorColor&quot;</span>&gt;</span>#b39ddb<span class="tag">&lt;/<span class="name">SolidColorBrush</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--其他资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ResourceDictionary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>然后在<code>SettingPanel.xaml</code>中添加一个开关按钮，使用<code>Checked</code>和<code>Unchecked</code>绑定打开和关闭开关的两个事件。</p>
<details class="note success"><summary><p>开关按钮示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ToggleButton</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Name</span>=<span class="string">&quot;DarkModeToggleButton&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Margin</span>=<span class="string">&quot;10,0,0,0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;DynamicResource IndicatorColor&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Checked</span>=<span class="string">&quot;DarkModeToggleButton_Checked&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Effect</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignElevationShadow2&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource MaterialDesignSwitchLightToggleButton&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Unchecked</span>=<span class="string">&quot;DarkModeToggleButton_Unchecked&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<p>然后编辑<code>SettingPanel.xaml.cs</code>中对应的方法。起初我把切换主题的所有代码都放在了设置窗口中，但是我在点击开关时发现，只有设置窗口自己的主题颜色改变了，主窗口只是切换成了Material Design的内置暗色主题，我自定义的颜色并没有改变，后来发现需要在主窗口中强制刷新<code>Dynamic Resources</code>才能更改自定义的颜色，索性直接把切换主题的代码放到了主窗口里。</p>
<details class="note success"><summary><p>设置窗口的代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//SettingPanel.xaml.cs</span></span><br><span class="line"><span class="comment">//仅强制当前窗口刷新Dynamic Resources</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//切换暗色主题</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DarkModeToggleButton_Checked</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Owner <span class="keyword">is</span> MainWindow mainWindow)</span><br><span class="line">    &#123;</span><br><span class="line">        mainWindow.SwitchToDarkMode();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//强制当前窗口刷新Dynamic Resources</span></span><br><span class="line">    Resources[<span class="string">&quot;CardBackgroundColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#3d3d3d&quot;</span>));</span><br><span class="line">    Resources[<span class="string">&quot;IndicatorColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#ffb330&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//切换亮色主题</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DarkModeToggleButton_Unchecked</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Owner <span class="keyword">is</span> MainWindow mainWindow)</span><br><span class="line">    &#123;</span><br><span class="line">        mainWindow.SwitchToLightMode();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//强制当前窗口刷新Dynamic Resources</span></span><br><span class="line">    Resources[<span class="string">&quot;CardBackgroundColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#f8f8ff&quot;</span>));</span><br><span class="line">    Resources[<span class="string">&quot;IndicatorColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#b39ddb&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>

<details class="note success"><summary><p>主窗口中的代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//MainWindow.xaml.cs</span></span><br><span class="line"><span class="comment">//切换主题的主要代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//切换至深色模式</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SwitchToDarkMode</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> paletteHelper = <span class="keyword">new</span> PaletteHelper();</span><br><span class="line">    <span class="comment">//获取主题自带配色琥珀色</span></span><br><span class="line">    PrimaryColor primary = PrimaryColor.Amber;</span><br><span class="line">    Color primaryColor = SwatchHelper.Lookup[(MaterialDesignColor)primary];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//切换自定义配色，背景颜色为深灰色，组件颜色为金黄色</span></span><br><span class="line">    Resources[<span class="string">&quot;CardBackgroundColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#3d3d3d&quot;</span>));</span><br><span class="line">    Resources[<span class="string">&quot;IndicatorColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#ffb330&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//切换至Material Design自带的深色主题</span></span><br><span class="line">    ITheme theme = paletteHelper.GetTheme();</span><br><span class="line">    theme.SetBaseTheme(Theme.Dark);</span><br><span class="line">    theme.SetPrimaryColor(primaryColor);</span><br><span class="line">    paletteHelper.SetTheme(theme);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SwitchToLightMode</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> paletteHelper = <span class="keyword">new</span> PaletteHelper();</span><br><span class="line">    <span class="comment">//获取主题自带配色深紫色</span></span><br><span class="line">    PrimaryColor primary = PrimaryColor.DeepPurple;</span><br><span class="line">    Color primaryColor = SwatchHelper.Lookup[(MaterialDesignColor)primary];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//切换自定义配色，背景颜色为烟灰色，组件颜色为淡紫色</span></span><br><span class="line">    Resources[<span class="string">&quot;CardBackgroundColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#f8f8ff&quot;</span>));</span><br><span class="line">    Resources[<span class="string">&quot;IndicatorColor&quot;</span>] = <span class="keyword">new</span> SolidColorBrush((Color)ColorConverter.ConvertFromString(<span class="string">&quot;#b39ddb&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//切换至Material Design自带的亮色主题</span></span><br><span class="line">    ITheme theme = paletteHelper.GetTheme();</span><br><span class="line">    theme.SetBaseTheme(Theme.Light);</span><br><span class="line">    theme.SetPrimaryColor(primaryColor);</span><br><span class="line">    paletteHelper.SetTheme(theme);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<p>最后给需要应用自定义配色的组件设置<code>Background=&quot;&#123;DynamicResource IndicatorColor&#125;&quot;</code>或者<code>BorderBrush=&quot;&#123;DynamicResource IndicatorColor&#125;&quot;</code>属性，不再使用Material Design的<code>Primary Color</code>。</p>
<h1 id="模拟点击"><a href="#模拟点击" class="headerlink" title="模拟点击"></a>模拟点击</h1><p>模拟鼠标点击需要调用<code>user32.dll</code>，<code>user32.dll</code>是 Windows 操作系统的一个核心 DLL，包含了很多用户界面相关的函数，如创建窗口、显示消息框、处理输入等等。user32.dll需要通过<a href="https://learn.microsoft.com/zh-cn/dotnet/standard/native-interop/pinvoke">P&#x2F;Invoke（Platform Invocation Services）</a>在.NET程序中进行调用，代码为<code>[DllImport(&quot;user32.dll&quot;)]</code>，相应托管方法的声明中需要添加<code>extern</code>关键字来说明这是一个外部方法。</p>
<p>我新建了一个名为User32API.cs的类来存放与<code>user32.dll</code>相关的代码。具体的点击分为两步，第一步是通过<code>SetCursorPos</code>函数将光标移动到用户设定的屏幕坐标点，第二步是通过<code>mouse_event</code>函数根据用户输入的点击类型进行点击。</p>
<h2 id="SetCursorPos"><a href="#SetCursorPos" class="headerlink" title="SetCursorPos"></a>SetCursorPos</h2><p>SetCursorPos 函数用于将鼠标光标移动到指定的屏幕坐标位置。函数原型如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">BOOL <span class="title function_">SetCursorPos</span><span class="params">(<span class="type">int</span> X, <span class="type">int</span> Y)</span>;</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>X：目标屏幕像素坐标的 X 值，即水平位置。</li>
<li>Y：目标屏幕像素坐标的 Y 值，即垂直位置。</li>
</ul>
<p>该函数调用后会将鼠标光标移动到指定的坐标位置，无论此时鼠标是否在活动窗口内。另外这个函数不会显示移动的过程。</p>
<p>如果提供的 X 或 Y 值超出了屏幕的边界，系统会将鼠标位置限制在屏幕的可见区域内。例如，如果你将 X 设置为一个负数，系统会将其限制在左边界上，而如果你将 X 设置为一个大于屏幕宽度的值，系统会将其限制在右边界上。同样的逻辑也适用于 Y 值。</p>
<details class="note success"><summary><p>SetCursorPos引用示例</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">SetCursorPos</span>(<span class="params"><span class="built_in">int</span> x, <span class="built_in">int</span> y</span>)</span>;</span><br></pre></td></tr></table></figure>
</details>

<h2 id="mouse-event"><a href="#mouse-event" class="headerlink" title="mouse_event"></a>mouse_event</h2><p>mouse_event 函数用于模拟鼠标操作，如鼠标的点击、移动、滚动等。函数原型如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">VOID <span class="title function_">mouse_event</span><span class="params">(</span></span><br><span class="line"><span class="params">  DWORD     dwFlags,</span></span><br><span class="line"><span class="params">  DWORD     dx,</span></span><br><span class="line"><span class="params">  DWORD     dy,</span></span><br><span class="line"><span class="params">  DWORD     dwData,</span></span><br><span class="line"><span class="params">  ULONG_PTR dwExtraInfo</span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure>
<p>参数解释：</p>
<ul>
<li>dwFlags是表示鼠标操作的标志位，指定了<a href="https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mouse_event">操作类型</a>（如点击、移动、滚动等）<ul>
<li><details class="note success"><summary><p>常用操作类型</p>
</summary>
<table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">数值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">MOUSEEVENTF_ABSOLUTE</td>
<td align="left">0x8000</td>
<td align="left">绝对坐标标志</td>
</tr>
<tr>
<td align="left">MOUSEEVENTF_LEFTDOWN</td>
<td align="left">0x0002</td>
<td align="left">按下左键</td>
</tr>
<tr>
<td align="left">MOUSEEVENTF_LEFTUP</td>
<td align="left">0x0004</td>
<td align="left">抬起左键</td>
</tr>
<tr>
<td align="left">MOUSEEVENTF_RIGHTDOWN</td>
<td align="left">0x0008</td>
<td align="left">按下右键</td>
</tr>
<tr>
<td align="left">MOUSEEVENTF_RIGHTUP</td>
<td align="left">0x0010</td>
<td align="left">抬起右键</td>
</tr>
</tbody></table>

</details></li>
</ul>
</li>
<li>dx和dy有两种用法<ul>
<li>如果使用 <code>MOUSEEVENTF_ABSOLUTE</code> 标志，那么 <code>dx</code> 和 <code>dy</code> 就被解释为绝对的屏幕坐标。这时候，它们的取值范围通常是从 0 到 65535。这是因为屏幕坐标系统通常是一个0到65535的范围，其中 (0, 0) 表示屏幕的左上角，(65535, 65535) 表示屏幕的右下角。如果你想要模拟鼠标在屏幕上的绝对移动，需要使用绝对坐标值。<ul>
<li><details class="note success"><summary><p>示例：将鼠标移动到屏幕中心</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> screenWidth = <span class="number">1920</span>;</span><br><span class="line"><span class="built_in">int</span> screenHeight = <span class="number">1080</span>;</span><br><span class="line"><span class="built_in">int</span> centerX = (screenWidth * <span class="number">65535</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">int</span> centerY = (screenHeight * <span class="number">65535</span>) / <span class="number">2</span>;</span><br><span class="line">mouse_event(MOUSEEVENTF_MOVE | MOUSEEVENTF_ABSOLUTE, centerX, centerY, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</details></li>
</ul>
</li>
<li>如果不使用 <code>MOUSEEVENTF_ABSOLUTE</code> 标志，<code>dx</code> 和 <code>dy</code> 就被解释为相对移动的像素数。这时候，它们的取值范围通常是一个有符号的16位整数，负值表示向左或向上移动，正值表示向右或向下移动。</li>
</ul>
</li>
<li>dwData用于标识滚轮滚动距离，大于零表示向上移动，小于零表示向下移动。如果dwFlags中不包含鼠标滚动事件，则设置为0</li>
<li>dwExtraInfo表示额外的信息，通常设置为0</li>
</ul>
<details class="note success"><summary><p>模拟点击示例</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MOUSEEVENT_LEFTDOWN = <span class="number">0x0002</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MOUSEEVENTF_LEFTUP = <span class="number">0x0004</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MOUSEEVENTF_RIGHTDOWN = <span class="number">0x0008</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MOUSEEVENTF_RIGHTUP = <span class="number">0x0010</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MOUSEEVENTF_ABSOLUTE = <span class="number">0x8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//右键单击</span></span><br><span class="line">mouse_event(MOUSEEVENTF_RIGHTDOWN | MOUSEEVENTF_RIGHTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//左键单击</span></span><br><span class="line">mouse_event(MOUSEEVENT_LEFTDOWN | MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//左键双击（也就是两次左键单击）</span></span><br><span class="line">mouse_event(MOUSEEVENT_LEFTDOWN | MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mouse_event(MOUSEEVENT_LEFTDOWN | MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</details>

<h1 id="捕获鼠标坐标"><a href="#捕获鼠标坐标" class="headerlink" title="捕获鼠标坐标"></a>捕获鼠标坐标</h1><p>让用户直接输入要点击的坐标并不现实，因为屏幕上并没有像素标尺告诉用户光标目前在哪里，所以需要设计一个能够实时显示光标坐标，并且在用户按下鼠标左键后捕获当前光标像素坐标的窗口。另外因为我在程序中增加了区域内随机点击的支持，所以这个窗口也需要支持通过框选获像素坐标。</p>
<h2 id="创建窗口-1"><a href="#创建窗口-1" class="headerlink" title="创建窗口"></a>创建窗口</h2><ol>
<li>首先新建一个窗口</li>
<li>将窗口状态设置为最大化并置顶窗口，且不使用默认的窗口样式</li>
<li>允许窗口透明并将透明度设置为0.5，用户可以透过半透明的窗口看到原本显示的内容。</li>
<li>绑定键盘输入事件<code>KeyDown</code>，实现当用户按下<code>Esc</code>键时关闭窗口的功能</li>
<li>绑定鼠标移动事件<code>MouseMove</code>，实现实时更新光标的像素坐标</li>
<li>绑定鼠标左键的按下和抬起事件，实现点选获取坐标，框选获取坐标范围</li>
<li>添加两个Label，随鼠标移动更新像素坐标</li>
<li>添加一个Rectangle，用于框选范围预览</li>
</ol>
<details class="note success"><summary><p>捕获鼠标坐标窗口Window Tag示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span></span></span><br><span class="line"><span class="tag">    <span class="attr">AllowsTransparency</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;Gray&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">KeyDown</span>=<span class="string">&quot;PositionSelector_KeyDown&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">MouseLeftButtonDown</span>=<span class="string">&quot;PositionSelectorCanvas_MouseLeftButtonDown&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">MouseLeftButtonUp</span>=<span class="string">&quot;PositionSelectorCanvas_MouseLeftButtonUp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">MouseMove</span>=<span class="string">&quot;PositionSelectorCanvas_MouseMove&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Opacity</span>=<span class="string">&quot;0.5&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Topmost</span>=<span class="string">&quot;True&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">WindowState</span>=<span class="string">&quot;Maximized&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">WindowStyle</span>=<span class="string">&quot;None&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h2 id="获取光标坐标"><a href="#获取光标坐标" class="headerlink" title="获取光标坐标"></a>获取光标坐标</h2><p>我们可以使用<code>e.GetPosition(this)</code>来获取坐标，<code>GetPosition</code>是在 WPF 中用于获取鼠标或者触摸操作相对于一个指定元素的本地坐标的方法。它返回的是<code>Point</code>对象，<code>Point</code> 是一个表示二维坐标点的结构。它具有两个属性：<code>X</code> 和 <code>Y</code>，分别表示点的水平和垂直坐标，<code>Point.X</code>与<code>Point.Y</code>都是<code>double</code>类型。</p>
<p>注意这里获取到的是窗口内地本地坐标，并不是屏幕的绝对像素坐标，需要通过<code>PointToScreen</code>方法将它转化为屏幕坐标。<code>PointToScreen</code>方法接受一个 <code>Point</code> 对象，这个 <code>Point</code> 对象代表了相对于调用这个方法的元素的坐标。方法会返回一个 <code>Point</code> 对象，表示该坐标在屏幕上的绝对位置。</p>
<h2 id="框选范围预览与捕获"><a href="#框选范围预览与捕获" class="headerlink" title="框选范围预览与捕获"></a>框选范围预览与捕获</h2><p>预览框需要随着光标的移动而实时变化，每次触发鼠标移动事件<code>MouseMove</code>时都要重新设定矩形的长宽。由于预览框是在窗口内绘制的，所以这里直接使用窗口本地坐标。另外还需要考虑到用户反向框选的可能性，即从右下角向左上角框选，所以矩形的长度和宽度需要取两个点位坐标差的绝对值。</p>
<p>如果用户开启了在随机范围内点击，那么程序需要捕获两个屏幕坐标：框选的起始点与结束点，也就是鼠标左键按下和抬起的点位。我使用了变量w表示矩形的宽度，变量h表示矩形的高度，w与h的值就是两个点位的水平和垂直坐标的差的绝对值。</p>
<details class="note success"><summary><p>框选相关代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//屏幕像素坐标</span></span><br><span class="line"><span class="keyword">private</span> Point mouseDownPoint;</span><br><span class="line"><span class="keyword">private</span> Point mouseUpPoint;</span><br><span class="line"><span class="keyword">private</span> Point currentPoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> randomAreaSelection = <span class="literal">false</span>;<span class="comment">//开启随机点击</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> isDragging = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//框选范围参数</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> w = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//本地窗口坐标</span></span><br><span class="line"><span class="keyword">private</span> Point previewRectangleStartPoint;</span><br><span class="line"><span class="keyword">private</span> Point previewRectangleEndPoint;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标左键按下</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PositionSelectorCanvas_MouseLeftButtonDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseButtonEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//框选的起始点</span></span><br><span class="line">    mouseDownPoint = PointToScreen(e.GetPosition(<span class="keyword">this</span>));</span><br><span class="line">    x = (<span class="built_in">int</span>)mouseDownPoint.X;</span><br><span class="line">    y = (<span class="built_in">int</span>)mouseDownPoint.Y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果开启范围内随机点击</span></span><br><span class="line">    <span class="keyword">if</span> (randomAreaSelection)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//预览框的起始点</span></span><br><span class="line">        previewRectangleStartPoint = e.GetPosition(<span class="keyword">this</span>);</span><br><span class="line">        isDragging = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//显示预览框</span></span><br><span class="line">        SelectedAreaPreview.Visibility = Visibility.Visible;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标左键抬起</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PositionSelectorCanvas_MouseLeftButtonUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseButtonEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//如果开启范围内随机点击</span></span><br><span class="line">    <span class="keyword">if</span> (randomAreaSelection)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//框选的结束点</span></span><br><span class="line">        mouseUpPoint = PointToScreen(e.GetPosition(<span class="keyword">this</span>));</span><br><span class="line">        w = (<span class="built_in">int</span>)mouseUpPoint.X - x;</span><br><span class="line">        h = (<span class="built_in">int</span>)mouseUpPoint.Y - y;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果用户反向框选，则转化相关参数</span></span><br><span class="line">        <span class="keyword">if</span> (w &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            x += w;</span><br><span class="line">            w *= <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            y += h;</span><br><span class="line">            h *= <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        isDragging = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//隐藏预览框</span></span><br><span class="line">        SelectedAreaPreview.Visibility = Visibility.Hidden;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鼠标移动</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PositionSelectorCanvas_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//获取光标的实时屏幕坐标并更新Label中的内容</span></span><br><span class="line">    currentPoint = PointToScreen(e.GetPosition(<span class="keyword">this</span>));</span><br><span class="line">    XCoordsPreview.Content = (<span class="built_in">int</span>)currentPoint.X;</span><br><span class="line">    YCoordsPreview.Content = (<span class="built_in">int</span>)currentPoint.Y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//预览框拖拽点</span></span><br><span class="line">    previewRectangleEndPoint = e.GetPosition(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (randomAreaSelection &amp;&amp; isDragging)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//更新代表预览框的矩形</span></span><br><span class="line">        SelectedAreaPreview.Margin = <span class="keyword">new</span> Thickness(</span><br><span class="line">            Math.Min((<span class="built_in">int</span>)previewRectangleStartPoint.X, (<span class="built_in">int</span>)previewRectangleEndPoint.X),</span><br><span class="line">            Math.Min((<span class="built_in">int</span>)previewRectangleStartPoint.Y, (<span class="built_in">int</span>)previewRectangleEndPoint.Y),</span><br><span class="line">            <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        SelectedAreaPreview.Width = Math.Abs((<span class="built_in">int</span>)previewRectangleEndPoint.X - (<span class="built_in">int</span>)previewRectangleStartPoint.X);</span><br><span class="line">        SelectedAreaPreview.Height = Math.Abs((<span class="built_in">int</span>)previewRectangleEndPoint.Y - (<span class="built_in">int</span>)previewRectangleStartPoint.Y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h1 id="存储用户配置"><a href="#存储用户配置" class="headerlink" title="存储用户配置"></a>存储用户配置</h1><p>存储用户的自定义配置，当程序启动时自动加载并恢复用户配置，当程序关闭时刷新并保存用户配置。</p>
<p>首先打开<code>./Properties/Settings.settings</code>，添加需要保存的属性，设置它们的初始值与类型。然后在主窗口的<code>Window Tag</code>中绑定窗口加载事件<code>Loaded=&quot;Window_Loaded&quot;</code>。最后在代码中使用<code>Properties.Settings.Default.[属性名称]</code>来读取相关属性。</p>
<p>在窗口关闭事件<code>Close()</code>前使用<code>Properties.Settings.Default.Save();</code>来保存相关属性。</p>
<h1 id="热键设置"><a href="#热键设置" class="headerlink" title="热键设置"></a>热键设置</h1><p>如果用户将点击的间隔设置的比较小，将无法通过点击停止按钮来提前结束模拟点击，因为程序会一直将光标移动到预设的点位，所以必须实现使用热键来停止点击的功能。另外由于本程序的热键可能与用户使用的其他程序的热键产生冲突，所以需要实现允许用户自定义热键的功能。</p>
<h2 id="录入热键"><a href="#录入热键" class="headerlink" title="录入热键"></a>录入热键</h2><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><p>我在设置窗口中添加了一个文本框来记录用户按下的键位，然后添加了一个完成按钮来触发后续操作。</p>
<p>文本框需要设置为只读，并绑定<code>PreviewKeyDown</code>事件。与普通的<code>KeyDown</code>事件不同，<code>PreviewKeyDown</code>事件是一个隧道事件，它从父元素沿着视觉树向下传递，然后再从目标元素冒泡回来。这个事件的作用是允许在按下键之后，但还没有释放键之前，对键盘事件进行预处理或拦截。</p>
<details class="note success"><summary><p>文本框示例</p>
</summary>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextBox</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Name</span>=<span class="string">&quot;HotKeyTextBox&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">VerticalContentAlignment</span>=<span class="string">&quot;Center&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">IsReadOnly</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">PreviewKeyDown</span>=<span class="string">&quot;HotKeyTextBox_PreviewKeyDown&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">TextWrapping</span>=<span class="string">&quot;NoWrap&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">VerticalScrollBarVisibility</span>=<span class="string">&quot;Hidden&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h3 id="键盘事件预处理"><a href="#键盘事件预处理" class="headerlink" title="键盘事件预处理"></a>键盘事件预处理</h3><p>当<code>PreviewKeyDown</code>事件被触发后，程序会判断用户按下的键位是否合法，因为有一些特殊的键位不能用作热键，需要排除掉它们。处理完成后再将用户按下的键位以字符串的形式返回到文本框中。</p>
<p>用户按下的键位分为两类，一类是Key，另一类是ModifierKeys，它们都是用于处理键盘输入的枚举类型。</p>
<ul>
<li>Key：Key定义了所有可能的键盘按键，包括字母、数字、功能键、控制键等。通过这个枚举可以判断用户按下了哪个键。以下是一些 Key 枚举的示例：<ul>
<li>Key.A: 表示字母 A 键</li>
<li>Key.Escape: 表示 Esc 键</li>
<li>Key.Enter: 表示 Enter 键</li>
<li>Key.Space: 表示空格键</li>
<li>完整的枚举详见<a href="https://learn.microsoft.com/en-us/dotnet/api/system.windows.input.key?view=windowsdesktop-7.0">微软官方文档</a></li>
</ul>
</li>
<li>ModifierKeys：ModifierKeys定义了一组修饰键，这些键通常与其他键一起使用，以执行某些特定操作。这些修饰键包括 Shift、Ctrl、Alt 和 Windows 键。以下是 ModifierKeys 枚举的一些示例：<ul>
<li>ModifierKeys.None: 无修饰键被按下</li>
<li>ModifierKeys.Shift: Shift 键被按下</li>
<li>ModifierKeys.Control: Ctrl 键被按下</li>
<li>ModifierKeys.Alt: Alt 键被按下</li>
</ul>
</li>
</ul>
<p>由于Key枚举中部分键位与ModifierKeys中的修饰键是同一个键位，所以要将这些键位排除掉。</p>
<details class="note success"><summary><p>键盘事件预处理代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Key hotKey;</span><br><span class="line"><span class="keyword">private</span> ModifierKeys hotKeyModifiers;</span><br><span class="line"></span><br><span class="line"><span class="comment">//键盘预处理事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HotKeyTextBox_PreviewKeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断Key是否合法</span></span><br><span class="line">        <span class="keyword">if</span> (IsForbiddenKey(e.Key))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果按键非法则阻止按键事件继续传播</span></span><br><span class="line">            e.Handled = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将用户输入的键位赋值到变量中</span></span><br><span class="line">        hotKey = e.Key;</span><br><span class="line">        hotKeyModifiers = Keyboard.Modifiers;</span><br><span class="line">        UpdateHotKeyText();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(ex.ToString(), <span class="string">&quot;Error!&quot;</span>, MessageBoxButton.OK, MessageBoxImage.Error);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新文本框</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateHotKeyText</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    HotKeyTextBox.Text = <span class="string">$&quot;<span class="subst">&#123;hotKeyModifiers&#125;</span> + <span class="subst">&#123;hotKey&#125;</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsForbiddenKey</span>(<span class="params">Key key</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> Enum.IsDefined(<span class="keyword">typeof</span>(ForbiddenKeys), key.ToString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//非法Key枚举</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> ForbiddenKeys</span><br><span class="line">&#123;</span><br><span class="line">    Back,</span><br><span class="line">    Capital, CapsLock,</span><br><span class="line">    Delete, Down,</span><br><span class="line">    End, Enter, Escape,</span><br><span class="line">    Home,</span><br><span class="line">    Insert,</span><br><span class="line">    Left, LeftAlt, LeftCtrl, LeftShift, LWin,</span><br><span class="line">    Next, NumLock,</span><br><span class="line">    PageDown, PageUp, Pause, PrintScreen,</span><br><span class="line">    Return, Right, RightAlt, RightCtrl, RightShift, RWin,</span><br><span class="line">    System,</span><br><span class="line">    Tab,</span><br><span class="line">    Up,</span><br><span class="line">    VolumeDown, VolumeMute, VolumeUp</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>

<h2 id="注册-注销全局热键"><a href="#注册-注销全局热键" class="headerlink" title="注册&#x2F;注销全局热键"></a>注册&#x2F;注销全局热键</h2><p>全局热键的注册与注销也会使用到<code>user32.dll</code>，注册使用的函数是<code>RegisterHotKey</code>。注销使用的函数是<code>UnregisterHotKey</code>。建议在程序启动时注册全局热键，并在退出时注销，以免与其他程序的热键产生冲突。</p>
<h3 id="RegisterHotKey-函数"><a href="#RegisterHotKey-函数" class="headerlink" title="RegisterHotKey 函数"></a>RegisterHotKey 函数</h3><p>用途：在操作系统中注册一个全局热键，该热键可以由用户定义，并且在应用程序处于后台运行或没有焦点时也可以触发。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">return: MarshalAs(UnmanagedType.Bool)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">RegisterHotKey</span>(<span class="params">IntPtr hWnd, <span class="built_in">int</span> id, ModifierKeys fsModifiers, <span class="built_in">uint</span> vk</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>hWnd: 要接收热键通知的窗口的句柄,通常是主窗口的句柄。</li>
<li>id: 热键的标识符。用于标识不同的热键。</li>
<li>fsModifiers: 热键修饰符，如 Ctrl、Alt、Shift 等。</li>
<li>vk: 要与热键一起使用的虚拟键码，可通过Key转化。</li>
</ul>
<p>默认情况下，如果成功注册热键，则返回非零值；如果失败，则返回零。但是为了后续处理方便，这里使用了<code>MarshalAs</code>将返回值转换为布尔类型。</p>
<h3 id="UnregisterHotKey-函数："><a href="#UnregisterHotKey-函数：" class="headerlink" title="UnregisterHotKey 函数："></a>UnregisterHotKey 函数：</h3><p>用途：取消先前注册的全局热键。</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">UnregisterHotKey</span>(<span class="params">IntPtr hWnd, <span class="built_in">int</span> id</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>参数：</p>
<ul>
<li>hWnd: 先前注册热键时提供的窗口句柄。</li>
<li>id: 先前注册热键时提供的热键标识符。</li>
</ul>
<h3 id="绑定热键功能"><a href="#绑定热键功能" class="headerlink" title="绑定热键功能"></a>绑定热键功能</h3><p>在<code>User32API.cs</code>创建一个新的方法<code>Regist</code>用来绑定热键的功能。当程序启动时，主窗口会从用户配置中读取并传入Key与ModifierKeys，然后通过回调函数传入需要绑定热键的命令。</p>
<details class="note success"><summary><p>主窗口代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重写窗口初始化函数</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnSourceInitialized</span>(<span class="params">EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">base</span>.OnSourceInitialized(e);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向User32API.cs中的Regist方法传递相关参数</span></span><br><span class="line">    Regist(<span class="keyword">this</span>, hotKeyModifiers, hotKey, () =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (StopButton.IsEnabled) &#123; StopButton.RaiseEvent(<span class="keyword">new</span> RoutedEventArgs(System.Windows.Controls.Primitives.ButtonBase.ClickEvent)); &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; StartButton.RaiseEvent(<span class="keyword">new</span> RoutedEventArgs(System.Windows.Controls.Primitives.ButtonBase.ClickEvent)); &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<p>此外我还在这里定义了一个委托类型<code>HotKeyCallBackHanlder</code>，它是一个指向函数的指针，用于定义在全局热键被触发时要执行的操作。</p>
<p>委托 <code>delegate</code> 是存有对某个方法的引用的一种引用类型变量，它允许我们定义方法的签名，然后可以将这个签名用作方法参数，或者将其赋值给其他方法变量，以便在运行时动态调用方法。</p>
<details class="note success"><summary><p>注册热键代码及说明</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">HotKeyCallBackHanlder</span>()</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> HotKeyCallBackHanlder hotKeyCallBackHanlder = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Regist</span>(<span class="params">Window window, ModifierKeys fsModifiers, Key key, HotKeyCallBackHanlder callBack</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//获取窗口的句柄</span></span><br><span class="line">    <span class="keyword">var</span> hwnd = <span class="keyword">new</span> WindowInteropHelper(window).Handle;</span><br><span class="line">    <span class="comment">//使用窗口句柄创建一个 HwndSource 对象</span></span><br><span class="line">    <span class="keyword">var</span> _hwndSource = HwndSource.FromHwnd(hwnd);</span><br><span class="line">    <span class="comment">//将消息处理委托 WndProc 添加到窗口的消息处理链中，窗口收到消息后会先传递给 WndProc 方法进行处理</span></span><br><span class="line">    _hwndSource.AddHook(WndProc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将传入的Key转化为虚拟键码vk</span></span><br><span class="line">    <span class="keyword">var</span> vk = KeyInterop.VirtualKeyFromKey(key);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果注册失败则弹窗报错</span></span><br><span class="line">    <span class="keyword">if</span> (!RegisterHotKey(hwnd, HOTKEY_ID, fsModifiers, (<span class="built_in">uint</span>)vk))</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;Failed to register global hotkey!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将回调函数赋值给了 hotKeyCallBackHanlder 变量。这个回调函数就是在注册时由主窗口传入的 callBack 参数</span></span><br><span class="line">    hotKeyCallBackHanlder = callBack;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h3 id="处理热键消息"><a href="#处理热键消息" class="headerlink" title="处理热键消息"></a>处理热键消息</h3><p>在 Windows 中，<code>WndProc</code> 是用于处理窗口消息的函数。当注册的热键被触发时，系统会发送一个窗口消息给指定的窗口句柄，然后我们就可以在 WndProc 函数中处理这个消息。</p>
<details class="note success"><summary><p>处理窗口消息 WndProc</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> IntPtr <span class="title">WndProc</span>(<span class="params">IntPtr hwnd, <span class="built_in">int</span> msg, IntPtr wParam, IntPtr lParam, <span class="keyword">ref</span> <span class="built_in">bool</span> handled</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//当收到 WM_HOTKEY 消息并且热键 ID 匹配时，会调用 hotKeyCallBackHanlder()，即执行了预先设置的回调函数。</span></span><br><span class="line">    <span class="keyword">if</span> (msg == WM_HOTKEY &amp;&amp; wParam.ToInt32() == HOTKEY_ID)</span><br><span class="line">    &#123;</span><br><span class="line">        hotKeyCallBackHanlder();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> IntPtr.Zero;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h2 id="更改热键"><a href="#更改热键" class="headerlink" title="更改热键"></a>更改热键</h2><p>在<code>User32API.cs</code>中创建一个新的方法<code>ModifyGlobalHotKey</code>。当用户在设置窗口中录入热键并点击完成按钮后，程序会更新存储热键的变量值，并将更新后热键的值传递给<code>User32API.cs</code>。</p>
<p><code>ModifyGlobalHotKey</code>会先注销先前的热键，然后尝试注册新的热键，如果注册失败则弹窗报错。</p>
<details class="note success"><summary><p>更改热键 ModifyGlobalHotKey</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ModifyGlobalHotKey</span>(<span class="params">WindowInteropHelper windowInteropHelper, Key key, ModifierKeys modifiers</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//注销先前的热键</span></span><br><span class="line">    UnregisterHotKey(windowInteropHelper.Handle, HOTKEY_ID);</span><br><span class="line">    <span class="comment">//尝试注册新的热键</span></span><br><span class="line">    <span class="keyword">if</span> (!RegisterHotKey(windowInteropHelper.Handle, HOTKEY_ID, modifiers, (<span class="built_in">uint</span>)KeyInterop.VirtualKeyFromKey(key)))</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;Failed to register global hotkey!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h2 id="读取和保存热键"><a href="#读取和保存热键" class="headerlink" title="读取和保存热键"></a>读取和保存热键</h2><p>由于组成热键的Key与ModifierKeys都是枚举类型，而<code>./Properties/Settings.settings</code>并不支持存储枚举类型，所以保存时要使用<code>ToString()</code>先将它们转化为字符串类型。</p>
<details class="note success"><summary><p>保存热键代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Key hotKey;</span><br><span class="line"><span class="keyword">private</span> ModifierKeys hotKeyModifiers;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CloseButton_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Properties.Settings.Default.HotKey = hotKey.ToString();</span><br><span class="line">    Properties.Settings.Default.Modifiers = hotKeyModifiers.ToString();</span><br><span class="line">    Properties.Settings.Default.Save();</span><br><span class="line">    <span class="comment">//Close();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<p>在程序启动时再通过<code>Enum.Parse()</code>来将字符串转换为枚举类型。这里需要将相关代码放在窗口初始化的代码中，如果放在窗口加载的代码中这段代码好像不会被执行，很迷惑。</p>
<details class="note success"><summary><p>读取热键代码</p>
</summary>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Key hotKey;</span><br><span class="line"><span class="keyword">private</span> ModifierKeys hotKeyModifiers;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取热键并转换类型</span></span><br><span class="line">    hotKey = (Key)Enum.Parse(<span class="keyword">typeof</span>(Key), Properties.Settings.Default.HotKey);</span><br><span class="line">    hotKeyModifiers = (ModifierKeys)Enum.Parse(<span class="keyword">typeof</span>(ModifierKeys), Properties.Settings.Default.Modifiers);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h1 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h1><p>WPF程序的本地化有多种实现方法，例如使用资源字典，使用NuGet包，使用<code>.resx</code>资源文件等，我用的是比较方便的<code>.resx</code>资源文件。</p>
<h2 id="创建资源文件"><a href="#创建资源文件" class="headerlink" title="创建资源文件"></a>创建资源文件</h2><ol>
<li>在VS的解决方案资源管理器中打开<code>./Properties/Resources.resx</code>，这里的结构类似于c#中的<code>Dictionary&lt;string, string&gt;</code>，名称相当于<code>Key</code>，值就是<code>Value</code>。</li>
<li>填写默认语言资源键值</li>
<li>将<code>访问修饰符</code>从<code>Internal</code>更改为<code>Public</code></li>
<li>添加一个新的资源文件，并命名为<code>Resources.[LCID].resx</code>，这里的<code>[LCID]</code>是Windows语言代码标识符，例如简体中文的资源文件应该被命名为<code>Resources.zh-CN.resx</code>，完整的语言代码标识符详见<a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c?redirectedfrom=MSDN">MS-LCID</a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/qV8WgfKp1siz3he.png" alt="bpc_resx1.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/08/18/Ym1iJnjEg9TUR8x.png" alt="bpc_resx2.png"></div></div></div></li>
<li>将<code>Resources.resx</code>中的内容复制到新建的资源文件中，然后根据语言修改对应的值<br><img data-src="https://s2.loli.net/2023/08/18/xZBtpjzkPunINsb.png" alt="bpc_resx3.png"></li>
</ol>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="XAML"><a href="#XAML" class="headerlink" title="XAML"></a>XAML</h3><p>在xaml文件中添加新的命名空间引用，将<code>PackageName</code>替换为你的项目名称</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">xmlns:lang=<span class="string">&quot;clr-namespace:[PackageName].Properties&quot;</span></span><br></pre></td></tr></table></figure>

<p>在文本的内容中使用<code>x:Static</code>来引用资源，下面的示例中<code>KeyName</code>就是语言资源文件中的键值<code>Name</code></p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Text=<span class="string">&quot;&#123;x:Static lang:Resources.KeyName&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>代码中可以直接引用</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example = Properties.Resources.KeyName;</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>我实现的功能是程序启动时，根据当前系统的语言标识自动切换至对应的语言，目前仅支持简体中文与英文。在代码中可以使用<code>CultureInfo.CurrentUICulture.Name</code>来获取当前系统的语言标识。实现此功能需要修改<code>App.xaml.cs</code>，完整代码如下</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStartup</span>(<span class="params">StartupEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">base</span>.OnStartup(e);</span><br><span class="line">    <span class="keyword">if</span> (CultureInfo.CurrentUICulture.Name == <span class="string">&quot;zh-CN&quot;</span>)<span class="comment">//如果当前系统语言标识为`zh-CN`简体中文</span></span><br><span class="line">    &#123;</span><br><span class="line">        Thread.CurrentThread.CurrentUICulture = <span class="keyword">new</span> CultureInfo(<span class="string">&quot;zh-CN&quot;</span>);<span class="comment">//将程序语言设置为简体中文，使用./Properties/Resources.zh-CN.resx</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//否则使用./Properties/Resources.resx中设置的默认语言</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="打包程序"><a href="#打包程序" class="headerlink" title="打包程序"></a>打包程序</h1><p>VS生成的解决方案文件夹中有很多文件，包括图片、音频等资源文件以及所需的DLL运行库，这些都是程序运行所需的文件，也被称为依赖项。如果尝试单独将其中的exe文件拷贝到其他的目录，它是无法运行的，因为缺少了依赖项。由此带来的问题是：用户需要下载包含依赖项的整个文件夹才能使用这个软件，这非常的不方便。所以这里需要解决的问题就是如何将所需要的文件全部打包到一个单一的exe中，让用户能够开箱即用。解决方案是安装两个NuGet包：<code>Costura.Fody</code>与<code>Resource.Embedder</code></p>
<h2 id="Costura-Fody"><a href="#Costura-Fody" class="headerlink" title="Costura.Fody"></a>Costura.Fody</h2><p><a href="https://github.com/Fody/Costura">Costura.Fody</a> 是Fody的一个开源附加程序，它的主要功能是将程序集中的依赖项嵌入到主程序集中，以减少发布和部署时的外部依赖。它通过在编译时修改 IL（Intermediate Language）代码来实现这一点，因此我们无需担心在运行时缺少外部依赖的问题。</p>
<h3 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h3><p>在VS的NuGet管理器中搜索并找到Costura.Fody就能够安装。由于它是Fody的附加程序，在安装的时候会同时安装Fody与很多的依赖项，大概有40个（两眼一黑.jpg）</p>
<p>安装完成后，新建一个名为<code>FodyWeavers.xml</code>的文件，并添加到解决方案资源管理器的根目录中。然后将下面的内容粘贴到文件中并保存就可以了。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Weavers</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;FodyWeavers.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Costura</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Weavers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时在VS中重新生成解决方案，可以看到生成的exe文件的体积比原来大了很多，将它单独拷贝到其他的目录也能够正常使用。</p>
<h3 id="新的问题"><a href="#新的问题" class="headerlink" title="新的问题"></a>新的问题</h3><p>我在为程序添加本地化支持的时候遇到了新的问题，新创建的<code>.resx</code>语言文件没有被Costura.Fody正确的添加到exe中，导致程序运行时始终只能显示英语。如果只是在VS中调试，程序是能够以新添加的语言显示的，但是将exe文件单独拷贝出来后，就变回了默认语言。</p>
<p>此时<code>./bin/Debug</code>目录中的文件结构为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">./Debug</span><br><span class="line">    │  </span><br><span class="line">    ├──ProjectName.exe</span><br><span class="line">    │</span><br><span class="line">    └──./zh-CN</span><br><span class="line">            │</span><br><span class="line">            └──xxxxx.dll</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>根据查阅到的资料，我推断这是因为本地化相关的资源属于<a href="https://learn.microsoft.com/zh-cn/dotnet/core/extensions/create-satellite-assemblies">附属程序集</a>（Satellite Assembly），附属程序集的资源在特定区域中是可用的，只有当用户选择了相应的区域设置时，相关资源才会被加载。而当Costura.Fody运行时，因为新的语言文件并没有被选择并加载，所以只有默认的语言文件被嵌入，在打包完成后新的语言文件才会被加载到解决方案的目录中。</p>
<div class="note primary"><p>相关的问题在GitHub中已有讨论：<a href="https://github.com/Fody/Costura/issues/61">Costura doesn’t embed resource satellite assemblies</a>，并且有人给出了解决方案：安装Resource.Embedder，与Costura.Fody搭配使用。</p>
</div>

<details class="note success"><summary><p>附属程序集</p>
</summary>
<h3 id="附属程序集"><a href="#附属程序集" class="headerlink" title="附属程序集"></a>附属程序集</h3><blockquote>
<p>以下是来自ChatGPT的说明</p>
</blockquote>
<p>在 WPF中，主程序集和附属程序集是两种不同的程序集概念，它们在应用程序的组织、部署和访问资源方面有一些不同之处。</p>
<h4 id="主程序集（Primary-Assembly）"><a href="#主程序集（Primary-Assembly）" class="headerlink" title="主程序集（Primary Assembly）"></a>主程序集（Primary Assembly）</h4><p>主程序集是应用程序的核心程序集，它通常包含应用程序的启动代码、主要逻辑和主窗口等。主程序集可以包含各种资源，如 XAML 文件、图像、样式、模板等。这些资源在应用程序的整个生命周期内都可以被访问和使用。主程序集一般具有以下特点：</p>
<ul>
<li>包含启动点： 主程序集包含应用程序的入口点，这是应用程序启动时执行的代码。</li>
<li>全局资源： 主程序集中的资源可以被整个应用程序访问，无需特定的引用。</li>
<li>常驻内存： 主程序集中的资源在应用程序运行期间一直保持在内存中，除非显式释放。</li>
</ul>
<h4 id="附属程序集（Satellite-Assembly）"><a href="#附属程序集（Satellite-Assembly）" class="headerlink" title="附属程序集（Satellite Assembly）"></a>附属程序集（Satellite Assembly）</h4><p>附属程序集是用于本地化和资源管理的辅助程序集。它们包含应用程序的本地化文本、图像和其他资源的翻译或本地化版本。附属程序集使应用程序能够根据用户的语言和地区选择正确的资源。附属程序集一般具有以下特点：</p>
<ul>
<li>本地化资源： 附属程序集包含本地化或不同语言版本的资源，用于适应不同的语言和地区。</li>
<li>随需加载： 附属程序集在需要时才会被加载到内存中，以减少内存占用。</li>
<li>命名规则： 附属程序集的命名通常基于语言和区域设置，如AssemblyName.resources.dll。</li>
<li>特定于区域： 附属程序集的资源在特定区域中是可用的，只有当用户选择了相应的区域设置时，相关资源才会被加载。</li>
</ul>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>主程序集包含应用程序的主要逻辑和资源，附属程序集用于本地化和资源管理。主程序集包含应用程序的核心代码和全局资源，而附属程序集包含特定语言和地区的本地化资源。通过将资源分为主程序集和附属程序集，WPF 应用程序可以实现多语言支持、资源管理和更好的内存利用。</p>

</details>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>在使用Costura.Fody重新生成解决方案后，VS中xaml文件的预览会报错，这是因为Costura.Fody将资源全部嵌入了exe文件，导致VS的设计环境无法根据原有的相对路径找到资源，从而产生预览报错。在设计与预览时将<code>FodyWeavers.xml</code>中的<code>&lt;Costura /&gt;</code>暂时注释掉就可以解决。</p>
<h2 id="Resource-Embedder"><a href="#Resource-Embedder" class="headerlink" title="Resource.Embedder"></a>Resource.Embedder</h2><p><a href="https://www.nuget.org/packages/Resource.Embedder/">Resource.Embedder</a> 是一个用于将资源文件嵌入到 .NET 程序集中的工具。它的工作原理是通过创建一个虚拟的文件系统，将资源文件嵌入到其中，然后由 Costura.Fody 将这个虚拟文件系统嵌入到主程序集中，从而实现了附属程序集的嵌入。</p>
<p>安装方法同上，直接在VS的NuGet管理器中搜索并安装，安装完成后不需要进行任何的设置。此时在VS中重新生成解决方案，此时exe文件已经能够以新的语言显示并单独运行。</p>
<h1 id="Net-Framework"><a href="#Net-Framework" class="headerlink" title=".Net Framework"></a>.Net Framework</h1><p><code>.NET Framework</code> 是微软开发的一种用于在 Windows 操作系统上构建和运行应用程序的开发框架。程序使用了<code>.Net Framework 4.8</code> 作为目标框架。</p>
<p>Windows系统从 <code>Windows 10 May 2019 Update（版本号 1903）</code>后开始预装<code>.Net Framework 4.8</code>，所以如果在更早版本的Windows上运行此程序需要额外安装<code>.Net Framework 4.8</code></p>
<h2 id="NET-Framework-版本与-Windows-版本的关系"><a href="#NET-Framework-版本与-Windows-版本的关系" class="headerlink" title=".NET Framework 版本与 Windows 版本的关系"></a>.NET Framework 版本与 Windows 版本的关系</h2><ul>
<li>.NET Framework 1.0 和 1.1： 首次发布时与 Windows XP 兼容。</li>
<li>.NET Framework 2.0： 兼容 Windows XP、Windows Server 2003 和 Windows Vista。</li>
<li>.NET Framework 3.0 和 3.5： 内置于 Windows Vista 和 Windows Server 2008 中，也可以通过更新包安装在 Windows XP 和 Windows Server 2003 上。</li>
<li>.NET Framework 4.0： 兼容 Windows XP、Windows Server 2003、Windows Vista、Windows 7、Windows Server 2008 和 Windows Server 2008 R2。</li>
<li>.NET Framework 4.5 到 4.8： 兼容 Windows 7、Windows 8、Windows 8.1、Windows 10，以及相应的 Windows Server 版本。</li>
</ul>
<h2 id="Net-Core-与-Net-Framework"><a href="#Net-Core-与-Net-Framework" class="headerlink" title=".Net Core 与 .Net Framework"></a>.Net Core 与 .Net Framework</h2><p>.NET Core 和 .NET Framework 都是由 Microsoft 开发的跨平台开发框架，这里简单记录下.Net Core 与 .Net Framework的区别。</p>
<ol>
<li>跨平台支持<ul>
<li>.NET Core：设计初衷就是跨平台的，可以在 Windows、Linux 和 macOS 上运行。</li>
<li>.NET Framework 主要面向 Windows 平台，不能直接在其他操作系统上运行。</li>
</ul>
</li>
<li>开源性质<ul>
<li>.NET Core：是完全开源的，其源代码托管在 GitHub 上。</li>
<li>.NET Framework：虽然有一些开源的组件和工具，但整体不是完全开源的。</li>
</ul>
</li>
<li>依赖关系和部署<ul>
<li>.NET Core：采用 NuGet 管理依赖，应用程序可以自包含地部署所需的运行时库。</li>
<li>.NET Framework：应用程序依赖于 GAC（全局程序集缓存），开发人员需要确保目标计算机上存在所需的 .NET Framework 版本。</li>
</ul>
</li>
<li>版本和更新<ul>
<li>.NET Core：发布周期相对较短，更新频繁，每次更新都有新的功能和改进。</li>
<li>.NET Framework：发布周期较长，更新相对较慢，以 Service Pack 或更大的版本形式发布。</li>
</ul>
</li>
<li>API 支持<ul>
<li>.NET Core：提供了更现代和精简的 API 集，一些 Windows 特定的功能可能在 .NET Core 中不支持。</li>
<li>.NET Framework：提供了丰富的 Windows API 支持，可以访问广泛的 Windows 功能。</li>
</ul>
</li>
<li>WPF 和 WinForms<ul>
<li>.NET Core：目前不支持原生的 WPF 和 WinForms 应用程序开发，但可以通过一些工具和库实现。</li>
<li>.NET Framework：提供完整的 WPF 和 WinForms 支持。</li>
</ul>
</li>
<li>性能<ul>
<li>.NET Core：由于设计轻量，跨平台特性，通常比 .NET Framework 在性能方面更优。</li>
<li>.NET Framework：针对 Windows 平台进行了优化，但在跨平台和性能方面可能相对较弱。</li>
</ul>
</li>
</ol>
<p><strong>吐槽</strong>：怎么写文档比做UI还累。。。。。。</p>
]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>WPF</tag>
        <tag>Bongo Paw Clicker</tag>
        <tag>Log</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash for Windows:从入门到摆烂</title>
    <url>/Clash%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%91%86%E7%83%82.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">最近俺滴V2RayN不知道出了什么问题，经常断流，去GitHub的issue里扒拉了半天，找到不少断流的问题，可惜并没有解决方案，索性换成了Clash，不过Clash的配置比V2RayN要麻烦不少，最近事情又有点多，搞到后面直接摆烂了，能用就行，于是就有了这篇从入门到摆烂的记录</blockquote>

<span id="more"></span>

<div class="note danger"><p>2023.11.3：Clash for Windows 由于未知原因已经删库，然后删库的消息被人顶上了微博热搜，搞不懂这些发微博的人是蠢还是坏了……很多Clash系的GitHub Repo暂时Archive了，总之出于安全考虑，请换用其他客户端。</p>
</div>

<h1 id="Clash-for-Windows-下载"><a href="#Clash-for-Windows-下载" class="headerlink" title="Clash for Windows 下载"></a>Clash for Windows 下载</h1><p><strong>Clash</strong>是一个由Go语言开发的多平台代理客户端，支持VMess, Shadowsocks, Trojan等协议。而<strong>Clash for Windows</strong>就是Clash的一个图形客户端，虽然名字叫for Windows，它在Win、macOS和Linux上都能用🐶。更多信息请参阅<a href="https://docs.cfw.lbyczf.com/">Clash for Windows文档</a>。下载链接如下，Win系统下载<strong>Clash.for.Windows.Setup.x.xx.xx.exe</strong></p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Clash for Windows</p><p>A Windows/macOS/Linux GUI based on Clash and Electron.</p>
<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases"></a>
</div></div>

<h1 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h1><p>安装完打开，你会发现语言默认是英文，而且设置里不能更换语言，好在有大佬做了汉化补丁，链接如下</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Clash_Chinese_Patch</p><p>此版本为Clash for Windows原版汉化页面</p>
<a href="https://github.com/BoyceLig/Clash_Chinese_Patch/releases"></a>
</div></div>

<p>注意下载的汉化补丁版本要和Clash for Windows版本对应。先退出Clash，然后将解压得到的<code>app.asar</code>文件复制到Clash目录并替换原有文件，默认路径为<code>C:\Users\[你的用户名]\AppData\Local\Programs\Clash for Windows\resources</code></p>
<p><img data-src="https://s2.loli.net/2022/07/13/79siOZ3pRkyKEmS.png" alt="汉化.png"></p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在Clash中打开<code>配置</code>界面，可以看到已经存在一个名为<code>config.yaml</code>的基础配置文件，这是Clash的启动文件，一般不要改动这个文件，如果此文件有错，则 Clash 核心将无法启动。所以我们需要导入新的用户配置文件，这些文件可以不完整，通常只需要有：proxies&#x2F;proxy-groups&#x2F;rules三个字段组成即可。导入用户配置文件有两种方法：URL下载与本地文件导入。</p>
<blockquote>
<p>参考：<a href="https://docs.cfw.lbyczf.com/contents/configfile.html#%E6%A0%BC%E5%BC%8F">配置文件</a></p>
</blockquote>
<p><img data-src="https://s2.loli.net/2022/07/13/JMKrOELYRVu6P3c.png" alt="配置文件.png"></p>
<h2 id="URL下载"><a href="#URL下载" class="headerlink" title="URL下载"></a>URL下载</h2><p>如果你的机场支持Clash的话就很简单了，把Clash链接粘贴到文本框然后点击下载就OK了。但是Just My Socks并没有Clash的订阅链接，强行下载的话只会得到一个没有卵用的<code>getsub.php</code>。想用订阅链接的话需要转换一下。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Subscription Converter</p><p>订阅链接在线转换</p>
<a href="https://sub.ssplife.pw/"></a>
</div></div>

<p><img data-src="https://s2.loli.net/2022/07/13/o1kzIMctABQaGKE.png" alt="订阅链接转换.png"></p>
<p>上面是我找到的一个在线转换工具，不过我担心隐私问题就没有用它，而是用了下面的本地文件导入，手动敲进去🐶</p>
<div class="note success"><p>更：刚刚在GitHub新发现了一个转换工具，有兴趣的朋友可以尝试一下</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>convert2clash</p><p>解析ss/ssr/v2ray/clashR/clash订阅链接为Clash配置文件的自动化脚本</p>
<a href="https://github.com/celetor/convert2clash"></a>
</div></div>
</div>

<h2 id="本地文件导入"><a href="#本地文件导入" class="headerlink" title="本地文件导入"></a>本地文件导入</h2><p>这里我用Just My Socks为例，谷歌到了一个配置文件的模板，来源是<a href="https://v2xtls.org/">v2xtls</a>，下面两个链接都可以下载，第二个是我放在Google Drive里面的备份</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>模板文件</p><p>clash_jms2.yaml</p>
<a href="https://v2xtls.org/clash_jms2.yaml"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>模板文件备份</p><p>clash_jms.yaml</p>
<a href="https://drive.google.com/file/d/1YBokn9RvwS5LvEDDqN1NbENW4XcQ40hA/view?usp=sharing"></a>
</div></div>

<p>打开Just My Socks的Service Configuration，然后在配置模板文件中找到<code>proxies:</code>，根据Just My Socks服务器的配置修改</p>
<ul>
<li>proxies中的6个节点与Just My Socks的一一对应</li>
<li>修改server、port、password、uuid等信息</li>
<li>name不要改</li>
<li>V2Ray的cipher建议设置为auto</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/07/13/TiXqeIQ6oW2acb9.png" alt="JSM 配置信息.png"><br><img data-src="https://s2.loli.net/2022/07/13/cuNnlEK4m2bUTxw.png" alt="本地文件配置.png"></p>
<p>修改完成后保存并回到Clash，将模板导入或者直接拖拽到Clash的<code>配置</code>里，然后双击启用导入的配置。</p>
<div class="note success"><p>下载的配置模板放在哪里都可以，导入之后也可以删掉。因为导入之后Clash会在<code>C:\Users\[你的用户名]\.config\clash\profiles</code>文件夹中生成对应的配置文件，命名格式为时间戳</p>
</div>

<details class="note primary"><summary><p>关于YAML文件</p>
</summary>
<h2 id="关于YAML文件"><a href="#关于YAML文件" class="headerlink" title="关于YAML文件"></a>关于YAML文件</h2><p>YAML 是 “YAML Ain’t a Markup Language”（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）。</p>
<p>YAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和YAML非常接近）。</p>
<p>YAML 的配置文件后缀为<code>.yml</code>或者<code>.yaml</code>。</p>
<p>基本语法</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进不允许使用tab，只允许空格</li>
<li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li>
<li>‘#’表示注释</li>
</ul>
<p>引用：<a href="https://www.runoob.com/w3cnote/yaml-intro.html">YAML 入门教程</a></p>

</details>

<h1 id="规则设置"><a href="#规则设置" class="headerlink" title="规则设置"></a>规则设置</h1><p>打开<code>代理</code>页面，可以看到有全局、规则、直连以及脚本四种模式，一般使用<code>规则</code>，相当于常用的PAC模式。代理页面主要的作用就是切换代理模式和切换节点。</p>
<p>如果你使用的是上面的模板配置文件，那么在<code>规则</code>界面应该可以看到出现了很多规则，都是上面导入的模板文件中包含的，可以直接使用。</p>
<ul>
<li>在<code>PROXY</code>中选择要使用的节点</li>
<li><code>Final</code>控制的是规则中未被收录的网址的连接模式，如果服务器流量和速度尚可的话，建议选择<code>PROXY</code>代理模式，避免一些网站打不开。为了节省流量的话就设置为<code>DIRECT</code>直连模式。</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/07/13/BaYPr2FuqWCm3Kp.png" alt="模板规则.png"></p>
<details class="note warning"><summary><p>规则组成</p>
</summary>
<h2 id="规则组成"><a href="#规则组成" class="headerlink" title="规则组成"></a>规则组成</h2><p>一个代理规则主要由三部分组成：</p>
<ul>
<li>应用对象，包括完整域名(DOMAIN)、域名后缀(DOMAIN-SUFFIX)、域名关键字(DOMAIN-KEYWORD)、IP地址&#x2F;段(IP-CIDR)以及GEOIP；</li>
<li>作用的IP或者域名；</li>
<li>采取的规则，包括直连(DIRECT)、屏蔽(REJECT)，走某个代理组(上一步定义的PROXY、Apple等代理组)</li>
</ul>
<p>引用：<a href="https://ssrvps.org/archives/5718">深入理解Clash配置文件</a></p>

</details>

<details class="note primary"><summary><p>规则类型</p>
</summary>
<h2 id="规则类型"><a href="#规则类型" class="headerlink" title="规则类型"></a>规则类型</h2><p>目前 Clash 支持的规则类型如下：</p>
<ul>
<li>DOMAIN-SUFFIX：域名后缀匹配</li>
<li>DOMAIN：域名匹配</li>
<li>DOMAIN-KEYWORD：域名关键字匹配</li>
<li>IP-CIDR：IP 段匹配</li>
<li>SRC-IP-CIDR：源 IP 段匹配</li>
<li>GEOIP：GEOIP 数据库（国家代码）匹配</li>
<li>DST-PORT：目标端口匹配</li>
<li>SRC-PORT：源端口匹配</li>
<li>PROCESS-NAME：源进程名匹配</li>
<li>RULE-SET：Rule Provider 规则匹配</li>
<li>MATCH：全匹配</li>
</ul>
<p>另外模板文件最后的<code>cfw-bypass</code>控制的是需要绕过的IP和域名设置</p>
<p>引用：<a href="https://docs.cfw.lbyczf.com/contents/ui/profiles/rules.html">规则编辑</a></p>

</details>

<details class="note success"><summary><p>策略组</p>
</summary>
<h2 id="策略组"><a href="#策略组" class="headerlink" title="策略组"></a>策略组</h2><p>策略组在这里指的是配置文件中的<code>proxy-groups</code>，策略组的作用，就是根据不同策略分发规则传递过来的请求。</p>
<p>策略组有如下特性：</p>
<ul>
<li>可以包含节点或其他策略组</li>
<li>具有多种不同的策略类型</li>
<li>服务于规则</li>
</ul>
<p>所有策略组都是服务规则的，如果规则里没有直接或间接使用这个策略组，则策略组就是多余的。</p>
<p>Clash内置了2个策略组，分别是<code>DIRECT</code>直连和<code>REJECT</code>拒绝</p>
<ul>
<li>DIRECT: 顾名思义，不进行代理，直接连接，适用于国内网站和未被墙的网站</li>
<li>REJECT: 阻止请求进行，适用于屏蔽恶意网站等</li>
</ul>
<p>另外在模板文件中，我们还创建了<code>自动选择快速节点</code>、<code>PROXY</code>等策略组，可以在<code>代理</code>界面设置对应的策略。</p>
<p>策略组类型包括<code>select</code>、<code>url-test</code>、<code>fallback</code>、<code>relay</code>以及<code>load-balance</code>，对应配置文件中的<code>type</code>。</p>
<ul>
<li>select 手动选择，在节点列表手动选择节点或策略组</li>
<li>url-test 延迟测试，选择延迟低的节点</li>
<li>fallback 可用性测试，按照节点顺序选择第一个可用节点</li>
<li>load-balance 负载均衡，对同一 eTLD+1 的请求将使用相同的代理</li>
<li>relay 转发中继，发送到此代理组的请求将依次通过指定的代理服务器进行中继。目前没有 UDP 对此的支持。指定的代理服务器不应包含其他中继。</li>
</ul>
<p>参考：<a href="https://github.com/Fndroid/jsbox_script/wiki/%E5%85%B3%E4%BA%8E%E7%AD%96%E7%95%A5%E7%BB%84%E7%9A%84%E7%90%86%E8%A7%A3">关于策略组的理解</a></p>

</details>

<h2 id="更多规则集"><a href="#更多规则集" class="headerlink" title="更多规则集"></a>更多规则集</h2><p>上面模板里的规则可以满足日常使用需求，但是缺点是不方便更新，好在GitHub上有大佬做了每天6：30更新的规则集，传送门如下</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>clash-rules</p><p>规则集（RULE-SET）</p>
<a href="https://github.com/Loyalsoldier/clash-rules"></a>
</div></div>

<p>将<code>README</code>里面提供的rule-providers和rules添加到配置文件中即可，如果在上面的配置文件中直接修改的话建议删除原有的<code>rules</code>，注意保留<code>PROXY</code>策略组</p>
<details class="note warning"><summary><p>配置文件不完整示例</p>
</summary>
<p>下面是配置文件策略组与规则部分的示例</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 代理组策略</span></span><br><span class="line"><span class="comment"># 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md</span></span><br><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># url-test 通过指定的 URL 测试并选择延迟最低的节点</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;自动选择快速节点&quot;</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">url-test</span></span><br><span class="line">  <span class="attr">proxies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s1&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s2&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s3&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s4&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s5&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s801&quot;</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">&#x27;http://www.gstatic.com/generate_204&#x27;</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理节点选择</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;PROXY&quot;</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">  <span class="attr">proxies:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;自动选择快速节点&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s1&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s2&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s3&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s4&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s5&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;jms-s801&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理规则文件地址</span></span><br><span class="line"><span class="attr">rule-providers:</span></span><br><span class="line">  <span class="attr">reject:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/reject.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">icloud:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/icloud.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">apple:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/apple.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">google:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/google.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/proxy.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">direct:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/direct.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">private:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/private.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">gfw:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/gfw.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">greatfire:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/greatfire.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/greatfire.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tld-not-cn:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/tld-not-cn.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">telegramcidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/telegramcidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cncidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/cncidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lancidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/lancidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">applications:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/applications.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 规则</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,applications,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN,clash.razord.top,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN,yacd.haishan.me,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,private,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,reject,REJECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,icloud,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,apple,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,google,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,proxy,PROXY</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,direct,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,lancidr,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,cncidr,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,telegramcidr,PROXY</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GEOIP,LAN,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GEOIP,CN,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MATCH,PROXY</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clash for Windows</span></span><br><span class="line"><span class="attr">cfw-bypass:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">qq.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">music.163.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*.music.126.net&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">localhost</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">127</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.16</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.17</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.18</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.19</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.20</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.21</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.22</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.23</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.24</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.25</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.26</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.27</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.28</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.29</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.30</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">172.31</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">192.168</span><span class="string">.*</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;local&gt;</span></span><br><span class="line"><span class="attr">cfw-latency-timeout:</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure>

</details>

<p>启用这个配置后Clash的侧边栏会多出一个<code>服务商</code>，在这个页面就可以轻松的更新规则集了<br><img data-src="https://s2.loli.net/2022/07/13/3Au85hyxpItLDqo.png" alt="服务商.png"></p>
<h1 id="Link-Start！"><a href="#Link-Start！" class="headerlink" title="Link Start！"></a>Link Start！</h1><p>配置完成后回到<code>常规</code>界面，开启<code>系统代理</code>就可以愉快的上网了~<br><img data-src="https://s2.loli.net/2022/07/13/8airctIXkeZQTBu.png" alt="系统代理.png"></p>
<h1 id="UWP"><a href="#UWP" class="headerlink" title="UWP"></a>UWP</h1><p>巨硬出于安全考虑，在UWP应用中使用了沙盒机制，默认情况下无法访问回环地址（localhost)，导致应用商店等UWP应用无法走代理，需要用<code>EnableLoopback</code>程序进行修改。此程序已经内置在Clash for Windows 中，通过<code>常规</code>页面的<code>UWP应用网络回环</code>-<code>启动助手</code>打开，然后勾选需要解除限制的应用，并点击右上方的Save Changes保存。</p>
<p><img data-src="https://s2.loli.net/2022/07/13/P6QzndhAIFsqtUe.png" alt="应用回环助手.png"><br><img data-src="https://s2.loli.net/2022/07/13/D7Eile6fbHWLVFK.png" alt="解除回环限制.png"></p>
]]></content>
      <categories>
        <category>Free Internet</category>
      </categories>
      <tags>
        <tag>Clash</tag>
        <tag>GFW</tag>
        <tag>Win11</tag>
      </tags>
  </entry>
  <entry>
    <title>Github无法加载图片解决方法</title>
    <url>/Github%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">昨天上 Github 添加图片的时候发现图片不能正常加载了，访问全球最大的同性交友网站没有图片怎么能行（滑稽）。查了一下发现IP又挂了，修改 Hosts 后成功解决，此方法同样适用于 Github 无法访问的问题</blockquote>

<span id="more"></span>

<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>当我们通过网址访问网站的时候，需要通过 <strong>DNS 解析</strong>来把网址转换成 <strong>IP 地址</strong>，而Github上不去的原因之一就是 GFW 的 DNS 污染大法，这会导致 DNS 服务器返回的 IP 地址是错误的，自然也就无法连接网站，加载图片等资源了。另一个原因就是直接的IP封锁，GFW 会拦截带有相关 IP 的数据头，数据依然无法传输。</p>
<p>在因特网规模还小的时候，DNS 还没有诞生，域名映射到 IP 地址的工作是由 <code>Hosts</code> 来完成的，后来网络规模迅速扩大，仅靠 <code>Hosts</code> 已经不能满足需要了，此时 DNS 服务器才登上历史舞台。</p>
<p>虽然 DNS 抢了 Hosts 的饭碗，但是 Hosts 的优先级依然比 DNS 要高，计算机在请求 DNS 解析之前会先检查本机的 Hosts 中是否有要访问的域名和 IP 的映射关系，有的话就不需要使用 DNS 服务器，直接访问映射的IP地址即可。这就使得添加 Hosts 文件映射记录来避免 GFW 的 DNS 污染成为可能。</p>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>下面是<code>Windows 系统</code>上的解决方案</p>
<ul>
<li>在开始菜单 Windows 图标处右键单击</li>
<li>选择 Windows PowerShell （管理员）</li>
<li>输入<code>notepad.exe</code>并回车，打开记事本<ul>
<li>这么做的原因是修改 Hosts 文件需要管理员权限，直接用记事本的话无法保存</li>
</ul>
</li>
<li>在记事本菜单栏依次点击<code>文件</code>，<code>打开</code></li>
<li>在<code>C:\Windows\System32\drivers\etc</code>路径中找到 Hosts 文件并打开（<code>Ubuntu</code>和<code>Macos</code>的文件路径一般为<code>/etc/hosts</code>，先复制出来，替换完成后再粘贴回去替换）</li>
<li>在最下面添加下面的映射  <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># Github</span><br><span class="line"><span class="number">192</span>.<span class="number">30</span>.<span class="number">253</span>.<span class="number">112</span> github.com</span><br><span class="line"><span class="number">140</span>.<span class="number">82</span>.<span class="number">113</span>.<span class="number">19</span> gist.github.com</span><br><span class="line"><span class="number">185</span>.<span class="number">199</span>.<span class="number">108</span>.<span class="number">153</span> assets-cdn.github.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> raw.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> gist.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">28</span>.<span class="number">133</span> cloud.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">28</span>.<span class="number">133</span> camo.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars0.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars1.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars2.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars3.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">28</span>.<span class="number">133</span> avatars4.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">28</span>.<span class="number">133</span> avatars5.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars6.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">68</span>.<span class="number">133</span> avatars7.githubusercontent.com</span><br><span class="line"><span class="number">199</span>.<span class="number">232</span>.<span class="number">28</span>.<span class="number">133</span> avatars8.githubusercontent.com</span><br></pre></td></tr></table></figure></li>
<li><code>ctrl+s</code>保存，刷新网页一下就能正常访问了</li>
<li>如果依然不能访问，需要刷新 DN S缓存 + 重启浏览器<ul>
<li>Windows：<code>ipconfig /flushdns</code></li>
<li>Ubuntu：<code>sudo systemctl restart nscd</code></li>
<li>Macos：<code>sudo killall -HUP mDNSResponder</code></li>
</ul>
</li>
</ul>
<h1 id="更新-Hosts"><a href="#更新-Hosts" class="headerlink" title="更新 Hosts"></a>更新 Hosts</h1><p>由于 GFW 孜孜不倦的工作，这些 IP 隔一段时间就会被干掉，所以我们隔一段时间按就需要修改 Hosts 文件来访问被干掉的网站</p>
<ul>
<li>打开 <a href="https://www.ipaddress.com/">ipaddress</a></li>
<li>逐条输入 Hosts 中的相关域名</li>
<li>用返回的新 IP 地址替换掉原来的地址</li>
<li>保存</li>
</ul>
]]></content>
      <categories>
        <category>Free Internet</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Grasshopper</title>
    <url>/Grasshopper.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">把大二到现在攒下来的用来画（shui）分析图的Grasshopper电池做一下汇总，并记录一下简易使用方法供建筑狗使用，感兴趣的话为何不尝试一下转行程序猿呢（~~劝退~~）</blockquote>

<h1 id="Grasshopper简介"><a href="#Grasshopper简介" class="headerlink" title="Grasshopper简介"></a>Grasshopper简介</h1><p>Grasshopper是Rhino中的一款参数化工具，可以看作一种可视化编程语言，目前已经内置在Rhino6中，Rhino5需要单独安装，建议使用Rhino6，下载地址为<a href="https://www.rhino3d.com/download">Rhino官网</a>。grasshopper虽然是Rhino的一款插件，但它自身也有很多插件可用，如Ladybug、ELK等分析工具，可以去<a href="https://www.food4rhino.com/">Food4Rhino</a>搜索并下载相应插件</p>
<span id="more"></span>

<p>所有在本文中出现的电池文件我都会上传到我的<a href="https://github.com/Siriusq/Grasshopper">Github</a></p>
<h1 id="人流模拟"><a href="#人流模拟" class="headerlink" title="人流模拟"></a>人流模拟</h1><p>人流模拟真的只是模拟，因为建筑狗们并不能找到准确的数据，首先放上下载链接 <a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E4%BA%BA%E6%B5%81%E6%A8%A1%E6%8B%9F.gh">人流模拟.gh</a><br>然后是我做的菜的抠脚的预览（以青岛为例）,通过不同深浅的颜色与不同粗细的线条来表示人流量的多少</p>
<p><img data-src="https://s2.loli.net/2022/05/13/hqiuYeVgJIr5fyH.jpg" alt="人流模拟预览"></p>
<h2 id="获取城市路网"><a href="#获取城市路网" class="headerlink" title="获取城市路网"></a>获取城市路网</h2><ol>
<li>城市路网的获取需要用到ELK插件 <a class="btn" href="https://www.food4rhino.com/app/elk">ELK下载地址</a> ，自行下载安装，可能需要梯子，建议安装最新版2.2.2。</li>
<li>然后需要获取OSM文件，前往<a href="https://www.openstreetmap.org/">OpenStreetMap</a>，点击左上角的<code>导出</code>按钮，在左边栏选择<code>手动选择不同的区域</code>，如果选择的区域很大请使用<code>Ov二pass API</code>进行导出</li>
<li>点击<code>导出</code>按钮，选择好文件路径与文件名称，下一步要用</li>
<li>打开先前下载的grasshopper文件，右键单击左侧的<code>OSM文件</code>电池，选择<code>Select one existing file</code>,选择刚才下载的OSM文件，等待加载完成</li>
<li>右键单击左侧的<code>Bake路网</code>电池并选择<code>bake</code>,就能获得路网了</li>
</ol>
<h2 id="模拟人流出发点"><a href="#模拟人流出发点" class="headerlink" title="模拟人流出发点"></a>模拟人流出发点</h2><ol>
<li>右键单击<code>人流出发点</code>电池，选择<code>Select multiple point</code>,选取人口较为密集的点</li>
<li>调整<code>距离</code>和<code>层次</code>滑块模拟人流的密集程度</li>
<li>右键单击<code>陆地范围</code>框选出陆地的范围，没有海岸线的框选大致范围就行</li>
</ol>
<h2 id="生成模拟流线"><a href="#生成模拟流线" class="headerlink" title="生成模拟流线"></a>生成模拟流线</h2><ol>
<li>选择刚才<code>bake</code>出来的路网，输入命令<code>ungroup</code>,然后输入命令<code>explode</code>将其分解成小段</li>
<li>右键单击<code>分解路网</code>，选择<code>Set multiple curves</code>,框选分解出来的路网</li>
<li>通过<code>宽容度</code>和<code>线条粗细</code>滑块对线条进行微调</li>
<li>右键单击<code>流线</code>电池并选择<code>Bake</code>选项，勾选<code>Group</code>后面的<code>Yes，please</code>选项</li>
<li>在Rhino中选择<code>Bake</code>出来的流线，点击<code>File</code>并选择<code>Export Selected</code>,导出为<code>Adobe Illustrator</code>文件</li>
</ol>
<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><ol>
<li>在<code>Adobe Illustrator</code>中打开导出的文件</li>
<li>调节描边颜色及粗细</li>
<li>设置70%左右的透明度，并将<code>混合模式</code>选择为<code>正片叠底</code></li>
<li>去<a href="https://www.mapbox.com/">Mapbox</a>下载相应地区的地图底图，叠加到流线图下</li>
</ol>
<h1 id="综合气象信息"><a href="#综合气象信息" class="headerlink" title="综合气象信息"></a>综合气象信息</h1><p>气象信息图可以在一张图中表示风速、温度、湿度、降水等信息，依旧是下载链接<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E7%BB%BC%E5%90%88%E6%B0%94%E8%B1%A1%E4%BF%A1%E6%81%AF.gh">综合气象信息.gh</a><br>然后是预览（以青岛为例）压缩的比较厉害</p>
<p><img data-src="https://s2.loli.net/2022/05/13/jWPYQNdHpZsrR2L.jpg" alt="气象信息预览"></p>
<h2 id="获取气象信息文件"><a href="#获取气象信息文件" class="headerlink" title="获取气象信息文件"></a>获取气象信息文件</h2><p>气象信息需要使用<code>epw</code>文件进行导入，目前<code>epw</code>文件有两种获取途径，一种是通过<a href="https://www.energyplus.net/weather">energyplus网站</a>下载，但是国内信息较少（青岛的就没有，最近的是莒县），另一种方法是使用<code>ecotect</code>的<code>wea</code>文件转换，国内城市的<code>wea</code>可自行百度下载，使用<code>ecotect</code>的<code>weather tool</code>打开后点击左上角<code>File</code>，选择<code>Save as</code>另存为<code>epw</code>文件即可。<br>这里是青岛地区的气象文件的链接 <a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/CHN_Qingdao.epw">青岛epw文件</a> ，有需要其他地区文件的可以发邮件给我</p>
<h2 id="分析图调节"><a href="#分析图调节" class="headerlink" title="分析图调节"></a>分析图调节</h2><p>图表描述的信息包括：</p>
<ul>
<li>最高温度</li>
<li>最低温度</li>
<li>平均温度</li>
<li>相对湿度</li>
<li>风速</li>
<li>太阳辐射</li>
</ul>
<p>调节选项在电池文件的左侧有标注，根据选择调整即可</p>
<h2 id="美化-1"><a href="#美化-1" class="headerlink" title="美化"></a>美化</h2><p>把图表中的不同选项依次<code>bake</code>并分组，导出<code>Adobe Illustrator</code>文件，在<code>Adobe Illustrator</code>中可以继续调整颜色和线形，再加入单位、地点等相关说明</p>
<h1 id="风玫瑰"><a href="#风玫瑰" class="headerlink" title="风玫瑰"></a>风玫瑰</h1><p>风玫瑰图电池，可以提取<code>epw</code>文件中风环境信息，下载链接为<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E9%A3%8E%E7%8E%AB%E7%91%B0.gh">风玫瑰.gh</a></p>
<p>下面是预览图</p>
<p><img data-src="https://s2.loli.net/2022/05/13/MYquka5h8Bx3GKz.jpg" alt="风玫瑰预览"></p>
<h2 id="获取气象文件"><a href="#获取气象文件" class="headerlink" title="获取气象文件"></a>获取气象文件</h2><p>风玫瑰图的气象文件建议只使用<a href="https://www.energyplus.net/weather">energyplus网站</a>下载，因为<code>ecotect</code>转换的文件可能会有问题</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>风玫瑰电池的使用方法及原理较为简单，步骤如下</p>
<ol>
<li>双击<code>导入epw文件</code>电池的<code>false</code>按钮，激活为<code>true</code></li>
<li>在弹出的文件管理器中选择要使用的<code>epw</code>文件</li>
<li><code>起始月份</code>和<code>最后月份</code>滑块可以调整要显示的月份的风玫瑰</li>
<li>通过<code>缩放比例</code>、<code>格子尺寸</code>以及<code>半径</code>滑块调整风玫瑰的大小，建议不要设置太高，会卡到爆</li>
<li>通过<code>X轴数量</code>和<code>Y轴数量</code>可以调整风玫瑰图的排列方式</li>
<li>通过<code>配色</code>滑块可以选择<code>Ladybug</code>自带的配色集</li>
<li>通过<code>Swatch</code>电池调节风玫瑰背景颜色</li>
<li>双击<code>开始运算</code>电池上的<code>false</code>按钮，激活为<code>true</code>，等待一段时间就可以在犀牛中看到生成的风玫瑰了</li>
</ol>
<h1 id="场地高程图1"><a href="#场地高程图1" class="headerlink" title="场地高程图1"></a>场地高程图1</h1><p>第一种场地高程图原理很简单（<del>所以也不怎么好看</del>），生成网格点落在地形曲面上，根据网格点z轴坐标的大小确定高程并赋予不同的颜色，下载链接为<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E5%9C%BA%E5%9C%B0%E9%AB%98%E7%A8%8B1.gh">场地高程1.gh</a><br>下面是预览图</p>
<p><img data-src="https://s2.loli.net/2022/05/13/mHkdxL24bNJqygC.jpg" alt="场地高程1预览"></p>
<h2 id="地形获取"><a href="#地形获取" class="headerlink" title="地形获取"></a>地形获取</h2><p>地形获取较为简单，使用<code>Sketch Up</code>添加位置信息然后抓取地图，保存低版本并导入犀牛即可，缺点是精度比较低，但也够用</p>
<h2 id="电池使用方法"><a href="#电池使用方法" class="headerlink" title="电池使用方法"></a>电池使用方法</h2><ol>
<li>右键单击左侧<code>地形曲面</code>电池并选择<code>Set one surface</code>,在犀牛中点选导入的地形曲面</li>
<li>通过<code>X轴格子数量</code>和<code>Y轴格子数量</code>以及<code>格子大小</code>滑块可以对高程点密度进行调整</li>
<li>将<code>边线粗细</code>滑块调整为0显示的是完整色块</li>
<li>在犀牛中使用命令<code>ViewCapturetoFile</code>保存高程图片</li>
</ol>
<h1 id="热点图"><a href="#热点图" class="headerlink" title="热点图"></a>热点图</h1><p>热点图，通过elk插件提取地图中的信息，并根据距离远近生成不同颜色和大小的热点，热点图电池需要下载安装<code>LunchBox</code>和<code>ELK</code>插件，前往<code>food4rhino</code>搜索下载安装即可，下载链接为<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E7%83%AD%E7%82%B9.gh">热点.gh</a></p>
<p>下面是预览图</p>
<p><img data-src="https://s2.loli.net/2022/05/13/8kBfAyEvHJ13hF2.jpg" alt="热点预览"></p>
<h2 id="电池使用方法-1"><a href="#电池使用方法-1" class="headerlink" title="电池使用方法"></a>电池使用方法</h2><ol>
<li>右键单击<code>文件路径</code>电池，选择<code>Select one existing file</code>并找到对应的<code>osm</code>地图文件</li>
<li>右键单击右侧的<code>OSM Data</code>电池，在<code>Feature type</code>中选择需要生成热点的类型</li>
<li>右键单击<code>范围</code>电池，在犀牛中框选需要分析的范围</li>
<li>通过<code>X轴数量</code>和<code>Y轴数量</code>调整热点密度</li>
<li>通过<code>圆圈宽度</code>调整热点圆圈的线条粗细</li>
<li>通过<code>缩放</code>调整圆圈的大小，配合上面的两个电池使用</li>
<li>使用<code>Gardient</code>电池调节颜色</li>
<li>在犀牛中使用<code>ViewCapturetoFile</code>命令导出图片进入PS调整即可</li>
</ol>
<blockquote class="blockquote-center">建筑狗表示终于把图出完了，不出意外的话这是毕设前的最后一次画图了哈哈哈哈哈哈哈哈哈哈，先来补一波地形</blockquote>

<h1 id="场地雨水径流"><a href="#场地雨水径流" class="headerlink" title="场地雨水径流"></a>场地雨水径流</h1><p>场地雨水径流主要是用到了Mosquito蚊子插件，通过模拟不同的点投影的场地地形曲面后的运动轨迹来模拟雨水的流动情况<br>下载链接为<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E6%B1%87%E6%B0%B4.gh">汇水.gh</a></p>
<p>下面是预览图</p>
<p><img data-src="https://s2.loli.net/2022/05/13/ylqKvhpCk6sFc8b.jpg" alt="汇水预览"></p>
<h2 id="电池使用方法-2"><a href="#电池使用方法-2" class="headerlink" title="电池使用方法"></a>电池使用方法</h2><ol>
<li>把用地形曲面导入到犀牛中并选中</li>
<li>打开gh文件，右键单击<code>Surface</code>电池并选择<code>Set one surface</code></li>
<li>通过下面两个电池调整模拟的准确程度，当然数值越高越慢</li>
<li>通过<code>U Count</code>和<code>V Count</code>两个滑块调整降雨点的密集程度，模拟的是降雨的大小</li>
<li>调整参数的时候记得把<code>SDivide</code>电池保持关闭状态，要不然会卡到怀疑人生，调整完再打开</li>
<li>通过<code>ViewCapturetoFile</code>命令导出图片进行后期调整</li>
</ol>
<h1 id="日照分析"><a href="#日照分析" class="headerlink" title="日照分析"></a>日照分析</h1><p>做技术图纸的时候可以作为天正日照的替代品，分析日照时间</p>
<a class="btn" href="https://github.com/Siriusq/Grasshopper/raw/master/%E6%97%A5%E7%85%A7.gh">日照分析</a>

<h2 id="电池使用方法-3"><a href="#电池使用方法-3" class="headerlink" title="电池使用方法"></a>电池使用方法</h2><ol>
<li>双击导入，在弹出的窗口中选择<code>epw</code>文件</li>
<li><code>指北</code>，通过向量设置方向</li>
<li>日期月份一般选择大寒日或者冬至日，地方标准有差异</li>
<li>计算物体和遮挡物可以有重合</li>
<li><code>gridSize</code>和<code>disFromBase</code>设置计算精度，不要设置太高不然会卡死，如果结果是一大块相同颜色的图，说明设置的精度太低</li>
<li>左下四个按钮用来调整输出的细节</li>
<li>双击开始运算，等待一段时间（具体时间由精度以及模型大小决定）得到结果</li>
</ol>
<h1 id="一些表皮"><a href="#一些表皮" class="headerlink" title="一些表皮"></a>一些表皮</h1><ul>
<li>垂直的潮汐</li>
<li>碎片表皮</li>
</ul>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>2020.6.24</p>
<p>下面没有了。。。。。。</p>
<p>由于交完毕设太兴奋，一不小心把建筑的资料全删了，忘记上传了，今天刚想起来好像有篇博客没写完。。。。。。</p>
<p>（逃。。。ε&#x3D;ε&#x3D;ε&#x3D;┏(゜ロ゜;)┛</p>
]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>Grasshopper</tag>
        <tag>建筑</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO部署</title>
    <url>/HEXO%E9%83%A8%E7%BD%B2.html</url>
    <content><![CDATA[<p>博客已经搭建成功了，下一步是用Hexo配合Markdown写博客了</p>
<h1 id="Hexo写作流程"><a href="#Hexo写作流程" class="headerlink" title="Hexo写作流程"></a>Hexo写作流程</h1><p>博客写作流程相对于搭建要简单太多了，只需要以下几步：</p>
<ul>
<li>创建新博客文件</li>
<li>生成新网页</li>
<li>部署到Github Page</li>
</ul>
<span id="more"></span>

<h2 id="创建新博客文件"><a href="#创建新博客文件" class="headerlink" title="创建新博客文件"></a>创建新博客文件</h2><ol>
<li><p>在博客文件夹中右键打开Git bash</p>
</li>
<li><p>输入<code>hexo new &quot;博客标题&quot;</code> 新建一个md文件，双引号内的名字就是文章标题</p>
</li>
<li><p>进入<code>博客根目录/source/_posts</code> 文件夹，可以看到新创建的文件<code>博客标题.md</code>,md后缀代表Markdown文件</p>
</li>
<li><p>双击使用安装的Markdown编辑器打开进行编辑</p>
<ul>
<li>文件内会默认生成以下内容(以本博客为例）：  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   ---`</span><br><span class="line">   title: HEXO&amp;Markdown</span><br><span class="line">date: 2019-04-04 10:50:41</span><br><span class="line">tags: [Hexo,Markdown]</span><br><span class="line">   ---`</span><br></pre></td></tr></table></figure>

<ul>
<li>其中<code>title</code>就是博客标题</li>
<li><code>date</code>是博客的创建时间，不用修改</li>
<li><code>tags</code>是博客的标签</li>
</ul>
</li>
</ul>
<blockquote>
<p>踩坑：<br>此处注意冒号后面的空格</p>
</blockquote>
<ul>
<li>在<code>---</code>分割线后就是我们写博文的地方了，按照Markdown语法规则编写即可</li>
</ul>
</li>
<li><p>编写完成后保存</p>
</li>
</ol>
<h2 id="生成新网页并部署"><a href="#生成新网页并部署" class="headerlink" title="生成新网页并部署"></a>生成新网页并部署</h2><ol>
<li>打开Git bash</li>
<li>输入命令<code>hexo clean</code>清除网页缓存</li>
<li>输入命令<code>hexo g</code>生成新的网页文件</li>
<li>（可选）输入命令<code>hexo s</code>生成本地服务并前往返回的网址预览网页<blockquote>
<p>踩坑：<br>Git bash内的复制命令并不是熟悉的<code>ctrl c</code>，而是<code>ctrl ins</code>，使用<code>ctrl c</code>复制预览网址会结束本地服务进程，所以预览网页会没反应</p>
</blockquote>
</li>
<li>输入命令<code>hexo d</code>将网页部署到Github Page</li>
</ol>
<hr>
<p><strong>以上是完整流程，每次更新博客的时候都要重复一遍上述流程</strong><br>省事的话可以合并命令，直接用<code>hexo cl</code>和<code>hexo g -d</code>即可更新</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next 7.7 双语切换</title>
    <url>/Hexo-Next-7-7-%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">一年前通过在Google的疯狂查找和尝试，实现了在7.1版本的Next主题上进行中英双语的切换。但是Bug多多（切换到英文界面后点击关于、归档等标签还会跳转回中文界面），而我本人又是拖延症+懒癌晚期，一直没有尝试修复。最近借着给Next主题升级的机会顺便解决这个问题。折腾了两天，终于成功实现了理想中的中英双语切换效果，搞得毕设都没怎么做。</blockquote>

<span id="more"></span>

<div class="note danger"><h1 id="时效提醒"><a href="#时效提醒" class="headerlink" title="时效提醒"></a>时效提醒</h1><p>本文写于2020年3月！请注意时效，部分内容可能已过期！新方案请见<a class="btn" href="https://siriusq.top/Hexo-Next-8-双语切换.html"><i class="fa fa-link fa-fw"></i>Hexo Next 8 双语切换</a></p>
</div>

<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>我最初的想法是：在Github上新建一个仓库，然后开启新仓库的 Github Pages 作为英文网站使用，这样中英文的网站就可以相互独立，互不干扰，只需要在两个网站上添加一个切换按钮就可以了。但是查询后发现每个 Github 账号只能拥有一个个人主页，这就很尴尬了，难不成要再注册一个账号来作为英文网站使用吗？未免太过麻烦。就在我一筹莫展的时候，发现了<strong>chitanda</strong>大佬的文章<a href="https://segmentfault.com/a/1190000003946969">单个GitHub帐号下添加多个GitHub Pages的相关问题</a>。</p>
<blockquote>
<p>根据官方文档，GitHub Pages分为两类:个人&#x2F;组织主页以及项目主页，两者基本上没啥区别，但是有以下几点不同:（该文场景下个人和组织帐号没什么区别，所以下文为了行文方便将统一用个人主页代指）</p>
<ul>
<li>个人主页必须要和用户的GitHub帐号同名，所以每个用户有且只能有一个repo作为个人主页，且必须是<username>&#x2F;<username>.github.io的形式；而项目主页的命名则没有这种限制，且数量有任意多个。</li>
<li>不考虑绑定的自定义域名的前提下，个人主页的GitHub二级域名为<username>.github.io;项目主页的GitHub二级域名为<username>.github.io&#x2F;<projectname>,没有<projectname>.<username>.github.io这种方式</li>
<li>个人主页的展示内容以master分支里的文件为准；而项目主页的展示内容以gh-pages分支内的文件为准</li>
</ul>
</blockquote>
<p>这样的话，如果在Github里新建一个仓库，用项目主页的方式来部署英文网站，中英文网站应该还是相互独立的，英文网站的的域名格式是<code>中文域名/仓库名/</code>，也就不用再单独配置新的域名，听起来好像能行？那就试一下吧</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>这里以我自己的域名<code>siriusq.top</code>和英文网站仓库名<code>en</code>为例</p>
<h2 id="创建项目主页"><a href="#创建项目主页" class="headerlink" title="创建项目主页"></a>创建项目主页</h2><ul>
<li>在 Github 新建一个名为<code>en</code>的<code>Repositories</code></li>
<li>进入新建的<code>Repositories</code>，点击<code>Settings</code></li>
<li>下拉到<code>Pages</code>选项</li>
<li>点击<code>Choose a theme</code>，然后随便选一个主题</li>
<li>成功建立项目主页后<code>Pages</code>选项会显示<code>Your site is published at https://siriusq.top/en/</code></li>
<li>至此英文网站的项目主页创建成功</li>
</ul>
<h2 id="建立本地英文网站目录"><a href="#建立本地英文网站目录" class="headerlink" title="建立本地英文网站目录"></a>建立本地英文网站目录</h2><p>复制现在的中文博客文件夹并重命名，名字随意，这里以我自己的中文文件夹名<code>Hexo</code>和复制出来的英文文件夹名<code>Hexoen</code>为例</p>
<ul>
<li>打开<code>./Hexoen/_config.yml</code>文件，依次修改配置如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">language: en</span><br><span class="line">url: https://siriusq.top/en/ # 用自己的 域名/仓库名/ 替换 siriusq.top/en/</span><br><span class="line">root: /en/ # 用自己的仓库名替换 en</span><br><span class="line">repo: git@github.com:Siriusq/en.git # 用自己的 用户名/仓库名 替换 Siriusq/en</span><br></pre></td></tr></table></figure></li>
<li>删除<code>./Hexoen/source</code>下的<code>CNAME</code>文件（如果有的话）</li>
</ul>
<h2 id="加入中文切换按钮"><a href="#加入中文切换按钮" class="headerlink" title="加入中文切换按钮"></a>加入中文切换按钮</h2><ul>
<li>打开<code>./Hexoen/source/_data/next.yml</code>文件<ul>
<li>在<code>Menu Settings</code>下的<code>menu：</code>中加入<code>switch_lang</code>，样式如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">home: / || home</span><br><span class="line">about: /about/ || user</span><br><span class="line">tags: /tags/ || tags</span><br><span class="line">categories: /categories/ || th</span><br><span class="line">archives: /archives/ || archive</span><br><span class="line">switch_lang: https://siriusq.top || language # 将siriusq.top替换成你的中文网站域名</span><br><span class="line">#schedule: /schedule/ || calendar</span><br><span class="line">#sitemap: /sitemap.xml || sitemap</span><br><span class="line">#commonweal: /<span class="number">404</span>/ || heartbeat</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>打开<code>./Hexoen/themes/next/languages/en.yml</code>文件<ul>
<li>在<code>menu:</code>下添加<code> switch_lang: 简体中文</code>，样式如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">home: Home</span><br><span class="line">archives: Archives</span><br><span class="line">categories: Categories</span><br><span class="line">tags: Tags</span><br><span class="line">about: About</span><br><span class="line">switch_lang: 简体中文</span><br><span class="line">search: Search</span><br><span class="line">schedule: Schedule</span><br><span class="line">sitemap: Sitemap</span><br><span class="line">commonweal: Commonweal <span class="number">404</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="加入英文切换按钮"><a href="#加入英文切换按钮" class="headerlink" title="加入英文切换按钮"></a>加入英文切换按钮</h2><ul>
<li>打开<code>./Hexo/source/_data/next.yml</code>文件<ul>
<li>在<code>Menu Settings</code>下的<code>menu：</code>中加入<code>switch_lang</code>，样式如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">home: / || home</span><br><span class="line">about: /about/ || user</span><br><span class="line">tags: /tags/ || tags</span><br><span class="line">categories: /categories/ || th</span><br><span class="line">archives: /archives/ || archive</span><br><span class="line">switch_lang: https://siriusq.top/en/ || language # 将siriusq.top/en/替换成你的英文网站域名</span><br><span class="line">#schedule: /schedule/ || calendar</span><br><span class="line">#sitemap: /sitemap.xml || sitemap</span><br><span class="line">#commonweal: /<span class="number">404</span>/ || heartbeat</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>打开<code>./Hexoen/themes/next/languages/en.yml</code>文件<ul>
<li>在<code>menu:</code>下添加<code> switch_lang: 简体中文</code>，样式如下<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">home: 首页</span><br><span class="line">archives: 归档</span><br><span class="line">categories: 分类</span><br><span class="line">tags: 标签</span><br><span class="line">about: 关于</span><br><span class="line">switch_lang: English</span><br><span class="line">search: 搜索</span><br><span class="line">schedule: 日程表</span><br><span class="line">sitemap: 站点地图</span><br><span class="line">commonweal: 公益 <span class="number">404</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="添加切换判断条件"><a href="#添加切换判断条件" class="headerlink" title="添加切换判断条件"></a>添加切换判断条件</h2><p><strong>中文网站</strong><br>打开<code>./Hexo/themes/next/layout/_partials/head/head-unique.swig</code>，在最下方粘贴代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="comment">// Wait for the page to load first</span></span><br><span class="line">  <span class="keyword">var</span> _prevOnload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> switchLang = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;menu-item menu-item-switch_lang&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">      switchLang.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">var</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">          <span class="keyword">var</span> indexOfEn = href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;/en/&#x27;</span>);</span><br><span class="line">          <span class="keyword">if</span>(indexOfEn !== -<span class="number">1</span>) &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="string">&#x27;/en/&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="regexp">/(^http[s]?:\/\/[a-z0-9.]*[:?0-9]*\/)(.*)/i</span>, <span class="string">&#x27;$1en/$2&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(<span class="title function_">typeof</span>(_prevOnload) === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">              <span class="title function_">_prevOnload</span>();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;j</span><br></pre></td></tr></table></figure>

<p><strong>英文网站</strong><br>打开<code>./Hexoen/themes/next/layout/_partials/head/head-unique.swig</code>，在最下方粘贴代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="comment">// Wait for the page to load first</span></span><br><span class="line">  <span class="keyword">var</span> _prevOnload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> switchLang = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;menu-item menu-item-switch_lang&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">      switchLang.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">var</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">          <span class="keyword">var</span> indexOfEn = href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;/en/&#x27;</span>);</span><br><span class="line">          <span class="keyword">if</span>(indexOfEn !== -<span class="number">1</span>) &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="string">&#x27;/en/&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="regexp">/(^http[s]?:\/\/[a-z0-9.]*[:?0-9]*\/)(.*)/i</span>, <span class="string">&#x27;$1en/$2&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>(<span class="title function_">typeof</span>(_prevOnload) === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">              <span class="title function_">_prevOnload</span>();</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>分别在两个文件夹执行hexo三连操作，将网站部署到Github，过一会就能访问了</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><ul>
<li>由于两个网站是相互独立的，所以给两个网站用不同的主题在理论上也是可行的，我只给英文网站修改了下404页面</li>
<li>一点瑕疵：开启PJAX的话，在页面完全加载之前点击切换按钮的话会卡一下才跳转</li>
<li>二点瑕疵：网站相互独立，所以跳转的时候网页是完全重新加载的，PJAX无效</li>
<li>注意事项：写博客的时候，中英文目录下的markdown文件名请保持一致，否则切换的时候会跳转到404页面</li>
</ul>
<p>折腾这些东西真的太费时间了，毕设一点没动，现在很慌张。有问题欢迎评论区留言，最近可能回复不及时。</p>
<p>不多说了，我要滚去做毕设了</p>
<p>ε&#x3D;ε&#x3D;ε&#x3D;ε&#x3D;ε&#x3D;ε&#x3D;┌(;￣◇￣)┘</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next 8 双语切换</title>
    <url>/Hexo-Next-8-%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">关于我终于想起我还有个英文站这件事🐶，离开了DeepL和Grammarly就是一只废狗的我，到现在也没写过几篇英语博客，导致原来很多中文页面切换到英文后都会404，而且一些国内专供的文章也没必要写英文版（嗯绝对不是因为我懒）。另外原来的方案需要中文和英文网站的markdown文件名相同，导致英语博文的URL也全是中文，对老外不友好（虽然也没人看🐶），于是就借着升级版本的机会把这个问题一起解决了。</blockquote>

<span id="more"></span>

<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>在开始折腾之前，请确认本方案是否适合你~😊</p>
<ol>
<li>本方案对原来Next7版本的双语切换做了些修改，新的切换按钮只会将首页、关于、归档、标签以及目录切换到对应的英文页面，在文章页面中点击切换的话会跳转到另一种语言的首页。如果想要所有页面都能切换的话请见<a class="btn" href="https://siriusq.top/Hexo-Next-7-7-双语切换.html"><i class="fa fa-link fa-fw"></i>Hexo Next 7.7 双语切换</a></li>
<li>本方案中文与英文站仍然是独立的，在GitHub中使用不同的仓库，因为我觉得这样两个站点可以互相做备份，一个崩了的话可以靠另一个的文件快速恢复。</li>
<li>本方案适用于Next8版本，需要中英文站点大版本相同</li>
<li>看板娘说的话暂时没有翻译成英文，可能将来有时间会慢慢改，咕咕咕预警🕊️</li>
</ol>
<p>没问题的话就开始咯。前面的步骤和老方案基本一样。这里以我自己的域名<code>siriusq.top</code>和英文网站仓库名<code>en</code>为例</p>
<h1 id="创建英文Pages"><a href="#创建英文Pages" class="headerlink" title="创建英文Pages"></a>创建英文Pages</h1><ol>
<li>在 Github 新建一个名为<code>en</code>的仓库</li>
<li>进入新建的仓库，点击<code>Settings</code></li>
<li>进入侧边栏的到<code>Pages</code>选项</li>
<li>在<code>Source</code>中将分支设为主分支<code>Master</code>或者<code>Main</code></li>
<li>点击<code>Choose a theme</code>，然后随便选一个主题，反正后面都要改</li>
<li>成功建立项目主页后<code>Github Pages</code>选项会显示<code>Your site is published at https://siriusq.top/en/</code></li>
</ol>
<p><img data-src="https://s2.loli.net/2022/06/08/ToAdWHgVDkRIpOU.png" alt="创建英文Pages"></p>
<h1 id="本地文件配置"><a href="#本地文件配置" class="headerlink" title="本地文件配置"></a>本地文件配置</h1><ol>
<li>取消<code>_config.next.yml</code>中<code>sidebar: source/_data/sidebar.njk</code>前面的注释</li>
<li>在<code>./source/js/</code>目录下新建文件，重命名为<code>switch_language.js</code></li>
<li>在<code>./source/_data/</code>目录下新建<code>sidebar.njk</code></li>
</ol>
<h1 id="建立英文网站本地目录"><a href="#建立英文网站本地目录" class="headerlink" title="建立英文网站本地目录"></a>建立英文网站本地目录</h1><p>复制现在的中文博客文件夹并重命名，名字随意，这里以中文文件夹名<code>cn</code>和复制出来的英文文件夹名<code>en</code>为例</p>
<ol>
<li>删除<code>en/source/</code>下的<code>CNAME</code>文件（如果有的话）</li>
<li>打开<code>en/_config.yml</code>文件，依次修改配置如下  <figure class="highlight yml"><figcaption><span>en/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://siriusq.top/en/</span> <span class="comment"># 用自己的 域名/仓库名/ 替换 siriusq.top/en/</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:Siriusq/en.git</span> <span class="comment"># 用自己的 用户名/仓库名 替换 Siriusq/en</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="加入语言切换按钮"><a href="#加入语言切换按钮" class="headerlink" title="加入语言切换按钮"></a>加入语言切换按钮</h1><h2 id="中转英"><a href="#中转英" class="headerlink" title="中转英"></a>中转英</h2><p>打开<code>cn/_config.next.yml</code>，定位到<code>menu:</code>，加入<code>Switch to English</code>一栏，如下所示，将<code>https://siriusq.top/en/</code>替换为你的英文网站链接</p>
<figure class="highlight yml"><figcaption><span>cn/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Switch to English:</span> <span class="string">https://siriusq.top/en/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-language</span></span><br></pre></td></tr></table></figure>

<h2 id="英转中"><a href="#英转中" class="headerlink" title="英转中"></a>英转中</h2><p>差不多的操作，打开<code>en/_config.next.yml</code>，定位到<code>menu:</code>，加入<code>Switch to Chinese</code>一栏，如下所示，将<code>https://siriusq.top</code>替换为你的中文网站链接</p>
<figure class="highlight yml"><figcaption><span>en/_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Switch to Chinese:</span> <span class="string">https://siriusq.top</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-language</span></span><br></pre></td></tr></table></figure>

<h1 id="切换代码"><a href="#切换代码" class="headerlink" title="切换代码"></a>切换代码</h1><p>两边的操作大同小异</p>
<h2 id="中文网站"><a href="#中文网站" class="headerlink" title="中文网站"></a>中文网站</h2><ol>
<li>打开前面创建的<code>cn/source/js/switch_language.js</code>文件，粘贴下面的代码，根据自己的域名调整<figure class="highlight js"><figcaption><span>cn/source/js/switch_language.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _prevOnload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> switchLang = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;menu-item menu-item-switch-to-english&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    switchLang.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">        <span class="keyword">var</span> includesKeywords = href.<span class="title function_">includes</span>(<span class="string">&quot;/about/&quot;</span>) || href.<span class="title function_">includes</span>(<span class="string">&quot;/tags/&quot;</span>)|| href.<span class="title function_">includes</span>(<span class="string">&quot;/categories/&quot;</span>) || href.<span class="title function_">includes</span>(<span class="string">&quot;/archives/&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (includesKeywords) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="string">&#x27;.top/&#x27;</span>, <span class="string">&#x27;.top/en/&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://siriusq.top/en/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> (_prevOnload) === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_">_prevOnload</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>打开前面创建的<code>cn/source/_data/sidebar.njk</code>文件，粘贴下面的代码<figure class="highlight html"><figcaption><span>cn/source/_data/sidebar.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/switch_language.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="英文网站"><a href="#英文网站" class="headerlink" title="英文网站"></a>英文网站</h2><ol>
<li>打开前面创建的<code>en/source/js/switch_language.js</code>文件，粘贴下面的代码，根据自己的域名调整<figure class="highlight js"><figcaption><span>en/source/js/switch_language.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _prevOnload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> switchLang = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;menu-item menu-item-switch-to-chinese&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    switchLang.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">        <span class="keyword">var</span> includesKeywords = href.<span class="title function_">includes</span>(<span class="string">&quot;/en/about/&quot;</span>) || href.<span class="title function_">includes</span>(<span class="string">&quot;/en/tags/&quot;</span>)|| href.<span class="title function_">includes</span>(<span class="string">&quot;/en/categories/&quot;</span>) || href.<span class="title function_">includes</span>(<span class="string">&quot;/en/archives/&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(includesKeywords) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="string">&#x27;/en/&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;https://siriusq.top&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">typeof</span>(_prevOnload) === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_">_prevOnload</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>打开前面创建的<code>en/source/_data/sidebar.njk</code>文件，粘贴下面的代码<figure class="highlight html"><figcaption><span>en/source/_data/sidebar.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/en/js/switch_language.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>分别hexo三连部署两个网站</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g <span class="literal">-d</span></span><br></pre></td></tr></table></figure>

<h1 id="一点微小的工作"><a href="#一点微小的工作" class="headerlink" title="一点微小的工作"></a>一点微小的工作</h1><p>英文网站本地目录还有一些插件和页面需要手动设置语言</p>
<ol>
<li><code>_config.next.yml</code>中的creative_commons插件的<code>language: deed.en</code></li>
<li><code>_config.next.yml</code>中subtitle、description等的文本</li>
<li><code>_config.next.yml</code>中的<code># Font Settings</code>字体设置</li>
<li>about、tags、categories、archives等页面</li>
<li>404页面</li>
</ol>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next JSDelivr 被墙解决方案</title>
    <url>/Hexo-Next-JSDelivr-%E8%A2%AB%E5%A2%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">GFW坏事做尽，又玩DNS污染，我上一篇记录JSDelivr使用方法的博客还没写完，JSDelivr就没了😭</blockquote>

<span id="more"></span>

<div class="note success"><h1 id="更新Next主题即可"><a href="#更新Next主题即可" class="headerlink" title="更新Next主题即可"></a>更新Next主题即可</h1><p>最新的Next主题已经将第三方插件使用的CDN切换到了<code>cdnjs</code>，直接升级主题就好了</p>
</div>

<p>今天更新网站的时候突然发现加载速度巨慢，开控制台一看一片报错，和JSDelivr有关的资源全部不能加载，经确认JSDelivr已经被墙😭。因为Next主题默认使用JSDelivr作为第三方插件（如Gitalk、FancyBox）的CDN提供方，所以JSDelivr被墙后网站基本瘫痪。</p>
<p><img data-src="https://s2.loli.net/2022/05/23/DZbmI2lfGTpoRNy.png" alt="ping"></p>
<p>emmm估计用不了太久就会全图变红了。其实JSDelivr被墙已经有过预兆了，因为滥用的太多，去年年底JSDelivr在国内的ICP备案就被吊销了，抽风了一段时间后又恢复了正常，强撑了半年之后还是被疯掉了，令人惋惜。</p>
<h1 id="主题第三方插件修复"><a href="#主题第三方插件修复" class="headerlink" title="主题第三方插件修复"></a>主题第三方插件修复</h1><p>有三种解决方案，第一种解决方案是更换CDN提供方，第二种方案是把第三方插件全部部署到自己的网站上，第三种方案是使用自己的CDN，但是过于麻烦，就不写了🐶。</p>
<h2 id="更换CDN提供方"><a href="#更换CDN提供方" class="headerlink" title="更换CDN提供方"></a>更换CDN提供方</h2><p>Next官方提供了<code>jsdelivr</code>、<code>unpkg</code>和<code>cdnjs</code>三家CDN供应商，经实测<code>unpkg</code>和<code>cdnjs</code>目前仍能正常访问，所以把第三方插件的CDN切换过去就好了</p>
<ul>
<li>打开<code>_config.next.yml</code></li>
<li>定位到到<code>CDN Settings</code></li>
<li>修改<code>plugins: jsdelivr</code>为<code>plugins: unpkg</code>或者<code>plugins: cdnjs</code></li>
</ul>
<h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><p>Next官方也有一个集合了主题中使用到的第三方插件的仓库</p>
<div class="note info"><p><a class="btn" href="https://github.com/next-theme/plugins"><i class="fa fa-torii-gate fa-fw"></i>Next第三方插件库</a></p></div>

<ul>
<li>首先安装第三方插件库，报错的话检查<code>@next-theme/plugins</code>和<code>hexo-theme-next</code>两者版本号是否相同<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install @next-theme/plugins</span><br></pre></td></tr></table></figure></li>
<li>修改<code>plugins: jsdelivr</code>为<code>plugins: local</code></li>
</ul>
<h1 id="自己的资源"><a href="#自己的资源" class="headerlink" title="自己的资源"></a>自己的资源</h1><p>自己的资源就没办法咯，毕竟JSDelivr这么好用的仅此一家，<code>unpkg</code>和<code>cdnjs</code>都没法上自己的资源。能想到的只有把资源部署到自己的网站和自己找托管两种方法了。我就只能吭哧吭哧的把自己的资源搬回到网站上了😭</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客踩坑指北</title>
    <url>/Hexo%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97.html</url>
    <content><![CDATA[<p>记录总结用HEXO和Github Page搭建博客时踩过的坑，主要包括以下</p>
<ul>
<li>Github Page 配置过程</li>
<li>本地软件配置</li>
<li>HEXO  配置过程</li>
<li>主题美化</li>
<li>部署网站</li>
</ul>
<span id="more"></span>

<h1 id="Github-Page-配置过程"><a href="#Github-Page-配置过程" class="headerlink" title="Github Page 配置过程"></a>Github Page 配置过程</h1><p>搭建博客的时候纠结了很久，现成的博客也有很多也比较方便，但总感觉东西在别人手里不放心，万一哪一天被删了就哭了。所以在浏览了很多大佬的教程之后决定用Github Page 搞一个，关于Github Page 的介绍可以看<a href="https://pages.github.com/">Github Page</a>官方介绍。</p>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><ol>
<li>注册Github账号 这个不多说了</li>
<li>创建一个以你的用户名命名的<code>Respository</code>， 命名方式：<code>用户名.github.io</code> <blockquote>
<p>踩坑：<br>这个地方一定要用自己的用户名，否则不会生成网页</p>
</blockquote>
</li>
<li><code>README.md</code>随便写</li>
<li>点击<code>Create Respository</code></li>
<li>进入<code>Settings</code>，找到<code>Github Pages</code>，点击<code>Choose a theme</code></li>
<li>主题随便选一个，后面会更换</li>
<li>现在打开 <code>用户名.github.io</code> 就可以看到你的网页了</li>
</ol>
<h1 id="本地软件配置"><a href="#本地软件配置" class="headerlink" title="本地软件配置"></a>本地软件配置</h1><p>本地需要安装的软件有：</p>
<ul>
<li>git</li>
<li>node.js</li>
<li>Mrarkdown编辑器（个人使用Haroopad）</li>
</ul>
<p>以上直接百度官网下载<br>安装完成后前两个软件分别在终端输入</p>
<ul>
<li><code>git --version</code></li>
<li><code>node -v</code></li>
</ul>
<p>检测是否安装成功，安装成功会返回以下值，版本可能有差别，不影响使用</p>
<ul>
<li><code>git version 2.21.0.windows.1</code></li>
<li><code>v10.15.3</code></li>
</ul>
<p>最后一个软件一般不会出问题，正常安装exe即可</p>
<h1 id="HEXO配置过程"><a href="#HEXO配置过程" class="headerlink" title="HEXO配置过程"></a>HEXO配置过程</h1><p>HEXO是一款博客框架，步骤如下</p>
<ol>
<li>建一个文件夹用来存放网页信息</li>
<li>在文件夹中右键单击打开Git bash</li>
<li>输入<code>npm install hexo -g</code> 安装hexo</li>
<li>输入<code>hexo -v</code> 检测是否安装成功，安装成功会返回一串版本信息</li>
<li>输入<code>hexo init</code> 初始化hexo<blockquote>
<p>踩坑：<br>由于某种神秘力量的影响，这个过程会非常漫长，可以百度设置淘宝源加速，等待过程中不要看到没反应以为卡了关掉进程，不然就得清空博客目录文件夹重新下载了，因为结束进程再重新下会一直报错</p>
</blockquote>
</li>
<li>输入<code>npm install</code> 安装其他文件</li>
<li>输入<code>npm install hexo-deployer-git --save</code> 安装部署插件</li>
<li>输入<code>hexo g</code> 生成网页</li>
<li>输入<code>hexo s</code> 启动本地服务，此时会返回网址，一般是 <code>http://localhost:4000</code></li>
<li>复制网址并在浏览器中打开就可以看到网页预览</li>
<li>输入<code>hexo d</code> 即可部署到Github Page</li>
<li>在浏览器中输入 <code>用户名.github.io</code> 即可访问网站，部署不成功Github会发邮件提醒</li>
</ol>
<h1 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h1><p>HEXO有很多可选的模板主题，在Github内搜索Hexo主题或前往HEXO官网浏览，这里以我选择的<a href="https://github.com/blinkfox/hexo-theme-matery">闪烁之狐</a>为例,在此感谢大佬blinkfox</p>
<h2 id="具体操作步骤"><a href="#具体操作步骤" class="headerlink" title="具体操作步骤"></a>具体操作步骤</h2><ol>
<li>进入先前的博客文件夹，邮件打开Git Bash</li>
<li>输入 <code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code><blockquote>
<p>踩坑：<br>同样由于某种神秘力量的影响，Github在国内的下载速度感人，峰值20kb&#x2F;s，4kb&#x2F;s是日常，下载个主题真的会等到天荒地老的，所以这里需要修改host文件，步骤如下</p>
<ul>
<li><p>需要前往 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 使用<code>IP Lookup</code> 工具获得下面两个github域名的ip地址，该网站可能需要另一种神秘力量才能上</p>
</li>
<li><p>github.com</p>
</li>
<li><p>github.global.ssl.fastly.net</p>
</li>
<li><p>ip格式在国内一般为192.30.xx.xx和151.101.xx.xx。</p>
</li>
<li><p>准备工作做完之后，打开的hosts文件中添加如下格式，IP修改为自己查询到的IP：</p>
</li>
<li><p>192.30.xx.xx github.com</p>
</li>
<li><p>151.101.xx.xx github.global.ssl.fastly.net</p>
</li>
<li><p>执行ipconfig &#x2F;flushdns命令，刷新 DNS 缓存。</p>
</li>
</ul>
<p>完成后速度能达到几百kb</p>
</blockquote>
</li>
<li>切换主题文件，修改博客根目录下的<code>_config.yml</code>的<code>theme</code>的值为<code>theme: hexo-theme-matery</code> <blockquote>
<p>踩坑：<br>theme后面有一个空格！一定不要漏掉！否则修改无效，这个文件中的所有配置冒号后都有空格，语法很严格，在这找错误找了好久</p>
</blockquote>
</li>
<li>关于闪烁之狐主题的其他详细配置请移步<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">闪烁之狐</a></li>
</ol>
<h1 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h1><p>网站主题选好后就可以部署到网站上了</p>
<h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><ul>
<li>设置ssh配对</li>
<li>购买设置域名</li>
<li>部署网站</li>
</ul>
<h3 id="设置ssh配对"><a href="#设置ssh配对" class="headerlink" title="设置ssh配对"></a>设置ssh配对</h3><p>为了保证网站的安全，我们需要设置ssh，毕竟设立个人博客的初衷之一就是安全嘛，步骤如下</p>
<ol>
<li>打开Git bash</li>
<li>输入<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code> 然后回车三连</li>
<li>此时在c盘用户目录下会生成两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，，我们需要的是后者</li>
<li>用记事本打开后复制里面的所有内容</li>
<li>打开Github，在右上角个人头像下拉菜单中找到<code>Settings</code></li>
<li>打开<code>SSH and GPG keys</code>,点击右上角<code>New SSH key</code></li>
<li><code>Title</code>随便填,然后在<code>Key</code>中粘贴</li>
<li>点击<code>Add SSH key</code></li>
<li>回到Git bash，输入<code>ssh -T git@github.com</code>回车</li>
<li>首次输入可能会有提醒，输入<code>yes</code>回车即可</li>
<li>成功返回<code>Hi 用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>就代表成功了</li>
<li>输入<code>git config --global user.name &quot;用户名&quot;</code></li>
<li>输入<code>git config --global user.email  &quot;邮箱地址&quot;</code></li>
</ol>
<h3 id="购买设置域名"><a href="#购买设置域名" class="headerlink" title="购买设置域名"></a>购买设置域名</h3><p>github提供的域名太长了，逼格也不够高，所以要自己设置一个好记的域名<br>国内提供域名服务的网站不少，我选择的是阿里云，步骤如下</p>
<ol>
<li>去阿里云注册一个账号<blockquote>
<p>踩坑：<br>这里注意阿里云推荐中文用户名，我一开始用英文怎么都通不过，最后改成中文的才注册成功</p>
</blockquote>
</li>
<li>购买一个自己喜欢的域名，流程和淘宝差不多</li>
<li>完成域名的实名认证，虽然阿里云说审核要几个工作日，但是我的只用了十分钟就通过了</li>
<li>在管理控制台上找到自己购买的域名，点击<code>解析</code></li>
<li>点击<code>添加记录</code>这里我添加了两条记录<ul>
<li>记录类型选择<code>A</code>记录，主机记录填写<code>@</code>，记录值需要用win控制台<code>ping 用户名.github.io</code>得到ip并填写，其他保持默认</li>
<li>记录类型选择<code>CNAME</code>，主机记录填写<code>www</code>，记录值填写<code>用户名.github.io</code>其他保持默认</li>
</ul>
</li>
<li>完成后回到Githuib，在存放网页的<code>Repository</code>中选择<code>Settings</code>，在<code>Github Pages</code>一栏中找到<code>Custom domain</code>，填入购买的域名就可以访问了</li>
<li>为了方便，我们需要在HEXO的根目录新建一个<code>CNAME</code>文件，在里面填入购买的域名，因为每次部署<code>Settings</code>中的域名都会被覆盖掉，每次重新输入会很麻烦，设置CNAME文件后就不用重复输入了<blockquote>
<p>踩坑：<br>CNAME文件不要带任何后缀，否则会无效，我一开始用的是<code>CNAME.md</code>,结果每次部署域名都会被覆盖掉</p>
</blockquote>
</li>
</ol>
<h3 id="部署网站-1"><a href="#部署网站-1" class="headerlink" title="部署网站"></a>部署网站</h3><p>终于到最后一步了，在成功部署网站前还需要做一些微小的工作</p>
<ol>
<li>修改<code>—config.yml</code>文件中的<code>deploy</code> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/用户名/用户名.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
<blockquote>
<p>踩坑：<br>这里同样需要注意冒号后面的空格，此处<code>自闭++</code></p>
</blockquote>
</li>
<li>打开Git bash</li>
<li>输入<code>hexo clean</code>命令清除本地浏览器缓存</li>
<li>输入<code>hexo g</code>命令重新生成网站</li>
<li>输入<code>hexo s</code>命令生成本地预览</li>
<li>本地预览无误后输入<code>hexo d</code>命令将网站部署到Github Page</li>
<li>如果返回值是<code>git</code>，那么恭喜，大功告成，此时可以输入先前绑定的域名访问网站了~</li>
</ol>
<h1 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h1><p>坑填的差不多了，后续会更新HEXO的基本用法和Markdown语法，如果记起来其他的坑也会补充的，由于这是搭完博客几天后才写完的，一些细节记不太清了，有问题欢迎骚扰~</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next 双语切换(7.1版本)</title>
    <url>/Hexo%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html</url>
    <content><![CDATA[<p>2020年更新：本方法bug太多，已弃坑，只针对7.1版本的Next主题。新方法请看<a href="https://siriusq.top/Hexo-Next-7-7-%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html">Hexo Next 7.7 双语切换</a></p>
<p><strong>以下为原内容</strong></p>
<hr>
<p>有英语版网站的需要，所以需要加一个双语切换功能，Hexo有对网站国际化的支持，即<a href="https://hexo.io/zh-cn/docs/internationalization.html">i18n</a>，但存在缺陷，各种语言的文章会混杂在一起显得很混乱，需要稍加改造，步骤如下：</p>
<h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>安装Hexo国际化插件i18n，在博客根目录执行下列命令</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-i18n</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>需要确保 <strong>i18n</strong> 插件位于根目录<code>package.json</code>中的所有插件的最后，每次安装新的插件时都要手动调整一次，因为每次安装新插件都会将插件按照字母顺序重新排列，目前没有发现好的方法,格式如下，注意最后一项没有逗号</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;bookmark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;clipboard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;gitment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-asset-image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-search&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-helper-live2d&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-prism-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-symbols-count-time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.4.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-wordcount&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;live2d-widget-model-tororo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;live2d-widget-model-z16&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;hexo-generator-i18n&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.7&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h1><p>打开博客根目录中的配置文件<code>_config.yml</code>,在<code>language</code>栏作如下修改</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="attr">language</span>:</span><br><span class="line"># - zh-<span class="variable constant_">CN</span></span><br><span class="line"># - en</span><br><span class="line"><span class="attr">language</span>: [zh-<span class="variable constant_">CN</span>,en]</span><br><span class="line"><span class="attr">i18n</span>:</span><br><span class="line">  <span class="attr">type</span>: [page, post]</span><br><span class="line">  <span class="attr">generator</span>: [index, archive, categorie, tag]</span><br></pre></td></tr></table></figure>
<p>完成后执行<code>hexo cl</code>和<code>hexo g</code>二连重新生成<code>public</code>文件夹，此时会生成新目录<code>/en</code>用来存放英文站点文件,但此时不同语言的网站还是混合在一起的，需要添加生成条件让不同语言的页面出现在对的位置。</p>
<h1 id="添加生成条件"><a href="#添加生成条件" class="headerlink" title="添加生成条件"></a>添加生成条件</h1><p>打开<code>.\themes\next\layout\index.swig</code>并在末尾添加如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">  &lt;section id=<span class="string">&quot;posts&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;posts-expand&quot;</span>&gt;</span><br><span class="line">    &#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.<span class="property">posts</span> %&#125;  </span><br><span class="line">      &#123;% <span class="keyword">if</span> page.<span class="property">lang</span> === post.<span class="property">lang</span> %&#125;</span><br><span class="line">        &#123;&#123; post_template.<span class="title function_">render</span>(post, <span class="literal">true</span>) &#125;&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">  &#123;% include <span class="string">&#x27;_partials/pagination.swig&#x27;</span> %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>

<p>此时只有页面语言与文章完全一致时文章才会被生成，同理，在<code>tag.swig</code>、<code>category.swig</code>、<code>archive.swig</code>等文件中搜索设置<code>post_template.render(post)</code>判断条件即可隐藏其他语言的文章,示例如下：<br><strong>tag</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.<span class="property">posts</span> %&#125;</span><br><span class="line"> &#123;% <span class="keyword">if</span> page.<span class="property">lang</span> === post.<span class="property">lang</span> %&#125;</span><br><span class="line">   &#123;&#123; post_template.<span class="title function_">render</span>(post) &#125;&#125;</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>archive</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.<span class="property">lang</span> === post.<span class="property">lang</span> %&#125;</span><br><span class="line">  &#123;&#123; post_template.<span class="title function_">render</span>(post) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>category</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> post <span class="keyword">in</span> page.<span class="property">posts</span> %&#125;</span><br><span class="line"> &#123;% <span class="keyword">if</span> page.<span class="property">lang</span> === post.<span class="property">lang</span> %&#125;</span><br><span class="line">  &#123;&#123; post_template.<span class="title function_">render</span>(post) &#125;&#125;</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<h1 id="文章写作格式"><a href="#文章写作格式" class="headerlink" title="文章写作格式"></a>文章写作格式</h1><p>在博文标题栏加上<code>lang: </code>表示用来区分不同语言文章，中文为<code>lang: zh-CN</code>，英文为<code>lang: en</code>，示例如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: Hexo双语切换</span><br><span class="line">date: 2019-04-09 17:12:53</span><br><span class="line">lang: zh-CN</span><br><span class="line">tags: [HEXO]</span><br><span class="line">categories: Blog</span><br></pre></td></tr></table></figure>

<h1 id="添加切换按钮"><a href="#添加切换按钮" class="headerlink" title="添加切换按钮"></a>添加切换按钮</h1><p>打开Next主题配置文件<code>.\themes\next\_config.yml</code>并在<code>Menu: </code>下添加<code>switch_lang: </code>，示例如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu</span>:</span><br><span class="line">  <span class="attr">home</span>: / || home</span><br><span class="line">  <span class="attr">about</span>: <span class="regexp">/about/</span> || user</span><br><span class="line">  <span class="attr">tags</span>: <span class="regexp">/tags/</span> || tags</span><br><span class="line">  <span class="attr">categories</span>: <span class="regexp">/categories/</span> || th</span><br><span class="line">  <span class="attr">archives</span>: <span class="regexp">/archives/</span> || archive</span><br><span class="line">  <span class="attr">switch_lang</span>: /en || language</span><br><span class="line">  #<span class="attr">schedule</span>: <span class="regexp">/schedule/</span> || calendar</span><br><span class="line">  #<span class="attr">sitemap</span>: /sitemap.<span class="property">xml</span> || sitemap</span><br><span class="line">  #<span class="attr">commonweal</span>: <span class="regexp">/404/</span> || heartbeat</span><br></pre></td></tr></table></figure>

<p>打开<code>.\themes\next\languages</code>下的<code>zh-CN.yml</code>和<code>en.yml</code>文件，分别在<code>menu: </code>下添加<code>switch_lang:</code>，示例如下</p>
<p><strong>zh-CN</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu</span>:</span><br><span class="line">  <span class="attr">home</span>: 首页</span><br><span class="line">  <span class="attr">archives</span>: 归档</span><br><span class="line">  <span class="attr">categories</span>: 分类</span><br><span class="line">  <span class="attr">tags</span>: 标签</span><br><span class="line">  <span class="attr">switch_lang</span>: <span class="title class_">English</span></span><br><span class="line">  <span class="attr">about</span>: 关于</span><br><span class="line">  <span class="attr">search</span>: 搜索</span><br><span class="line">  <span class="attr">schedule</span>: 日程表</span><br><span class="line">  <span class="attr">sitemap</span>: 站点地图</span><br><span class="line">  <span class="attr">commonweal</span>: 公益 <span class="number">404</span></span><br></pre></td></tr></table></figure>

<p><strong>en</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu</span>:</span><br><span class="line">  <span class="attr">home</span>: <span class="title class_">Home</span></span><br><span class="line">  <span class="attr">archives</span>: <span class="title class_">Archives</span></span><br><span class="line">  <span class="attr">categories</span>: <span class="title class_">Categories</span></span><br><span class="line">  <span class="attr">tags</span>: <span class="title class_">Tags</span></span><br><span class="line">  <span class="attr">switch_lang</span>: zh-<span class="variable constant_">CN</span></span><br><span class="line">  <span class="attr">about</span>: <span class="title class_">About</span></span><br><span class="line">  <span class="attr">search</span>: <span class="title class_">Search</span></span><br><span class="line">  <span class="attr">schedule</span>: <span class="title class_">Schedule</span></span><br><span class="line">  <span class="attr">sitemap</span>: <span class="title class_">Sitemap</span></span><br><span class="line">  <span class="attr">commonweal</span>: <span class="title class_">Commonweal</span> <span class="number">404</span></span><br></pre></td></tr></table></figure>

<h1 id="添加判断条件"><a href="#添加判断条件" class="headerlink" title="添加判断条件"></a>添加判断条件</h1><p>此时链接仍然是单项可用的，只能跳转到英文页面但是不能跳转回中文页面，因此需要添加判断条件<br>在<code>.\themes\next\layout\_partials\head\head-unique.swig</code>中添加以下代码，在加载完英文页面后将页面切换按钮重定向到中文</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="comment">// Wait for the page to load first</span></span><br><span class="line">    <span class="keyword">var</span> _prevOnload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> switchLang = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;menu-item menu-item-switch_lang&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">        switchLang.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">            <span class="keyword">var</span> indexOfEn = href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;/en&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(indexOfEn !== -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="string">&#x27;/en/&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = href.<span class="title function_">replace</span>(<span class="regexp">/(^http[s]?:\/\/[a-z0-9.]*[:?0-9]*\/)(.*)/i</span>, <span class="string">&#x27;$1en/$2&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_">typeof</span>(_prevOnload) === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                <span class="title function_">_prevOnload</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>JavaScript萌新表示在这里卡了好久，<code>document.getElementsByClassName</code>返回的数值是数组，调试的时候一直报错，在后面加上了<code>[0]</code>才能返回<code>Class</code>的名称</p>
<h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><p>虽然上述方法可以实现切换，但是在英文页面点击Tags、Archives、Categories等标签时会跳转中文页面，需要再跳转后的页面再点击一次英文切换按钮才能切换到相应页面的中文，如果大佬们有什么好的办法欢迎评论区留言</p>
<blockquote>
<p>参考<a href="https://wm4n.github.io/Hexo-NexT-%E5%90%8C%E6%99%82%E6%94%AF%E6%8F%B4%E5%A4%9A%E8%AA%9E%E7%B3%BB/">wm4n</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo添加Google收录与SEO</title>
    <url>/Hexo%E6%B7%BB%E5%8A%A0Google%E6%94%B6%E5%BD%95.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">刚给网站做了SEO，顺道来更新一篇4年前的老博文。本文内容包括：安装插件并生成网站地图，通过配置插件来剔除不需要收录的页面或文件，向谷歌搜索提交网站地图并添加收录，以及使用robots.txt来进行搜索引擎优化（SEO）</blockquote>

<h1 id="插件安装与配置"><a href="#插件安装与配置" class="headerlink" title="插件安装与配置"></a>插件安装与配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先，我们需要安装<a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a>插件来为网站生成网站地图（Sitemap），命令如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>安装完成后打开Hexo框架的配置文件<code>./_config.yml</code>，向其中添加下面的配置：</p>
<figure class="highlight yml"><figcaption><span>./_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sitemap Generator</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<ul>
<li><code>path</code>是生成的网站地图的路径，例如我的网站URL是<code>https://siriusq.top/</code>，那么生成的网站地图的路径就是<code>https://siriusq.top/sitemap.xml</code></li>
<li><code>tags</code>用于设置是否收录标签相关页面，我关闭了这个选项，因为我的标签数量比博文还多🐶，而每个条标签都会生成一条索引，喧宾夺主</li>
<li><code>categories</code>用于设置是否收录分类相关页面，按需开启</li>
<li>更多选项可以到<a href="https://github.com/hexojs/hexo-generator-sitemap#readme">插件README页面</a>查看</li>
</ul>
<h2 id="排除特定页面"><a href="#排除特定页面" class="headerlink" title="排除特定页面"></a>排除特定页面</h2><p>如果你不想让特定的页面（例如404页面）出现在网站地图中，可以在相关页面的MarkDown文件最上方以<code>---</code>分隔的区域（Front-matter）中添加一行<code>sitemap: false</code>，示例如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&quot;404&quot;</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;404&quot;</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">/404</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-04-12 20:38:42</span></span><br><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">sitemap:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">页面内容</span></span><br></pre></td></tr></table></figure>

<h2 id="排除特定格式文件"><a href="#排除特定格式文件" class="headerlink" title="排除特定格式文件"></a>排除特定格式文件</h2><p>插件默认会排除<code>js</code>和<code>css</code>格式的文件，但是我的网站有很多<code>json</code>格式的Live2D模型配置文件，它们在页面生成过程中都会被添加到网站地图中，数量达到了恐怖的93条，我的博文索引还不到60条🐶。</p>
<p>但是插件并没有提供排除特定格式文件的配置选项，谷歌查到的在<code>./_config.yml</code>的插件配置中添加<code>exclude: &#39;/**/*.json&#39;</code>语句也是无效的，不知道这个设置是怎么传出来的，我看了一下插件源码，根本就没有这个选项。</p>
<p>解决方案非常的简单粗暴，直接改插件代码🐶。打开博客目录下的<code>./node_modules/hexo-generator-sitemap/lib/generator.js</code>，找到<code>const skipRenderList</code>，像其中添加一行<code>&#39;**/*.json&#39;</code>，改完之后是下面这个样子，注意不要漏掉上一行结尾处的逗号。</p>
<figure class="highlight js"><figcaption><span>generator.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> skipRenderList = [</span><br><span class="line">    <span class="string">&#x27;**/*.js&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;**/*.css&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;**/*.json&#x27;</span></span><br><span class="line">  ];</span><br></pre></td></tr></table></figure>

<h1 id="添加到谷歌收录"><a href="#添加到谷歌收录" class="headerlink" title="添加到谷歌收录"></a>添加到谷歌收录</h1><p>目前网站还不能够通过搜索引擎搜索到，想要被搜到的话需要添加搜索引擎收录，这里以我添加的Google为例。</p>
<ol>
<li>打开<a href="https://search.google.com/search-console/">Google Search Console</a>,点击立即使用并登录谷歌账号</li>
<li>选择网址前缀并输入站点网址，如<code>https://siriusq.top</code>，点击继续<br><img data-src="https://s2.loli.net/2023/10/21/JlYdBIWN8f5FMmZ.webp" alt="01.webp"></li>
<li>验证方法选择HTML标记，然后复制Google提供的元标记，如：  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;google-site-verification&quot;</span> <span class="attr">content</span>=<span class="string">&quot;tcRYfdvRwh-85F9TY63_0TZ4O56GfhgyNGZhgfzsdfgghfg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
  <img data-src="https://s2.loli.net/2023/10/21/cTFnJe1AtoBkKaU.webp" alt="02.webp"></li>
<li>打开Next主题配置文件<code>_config.next.yml</code>，通过搜索找到<code>google_site_verification: </code>，在后面粘贴上一步复制的元标记中的<code>content</code>部分，如：  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">google_site_verification:</span> <span class="string">tcRYfdvRwh-85F9TY63_0TZ4O56GfhgyNGZhgfzsdfgghfg</span></span><br></pre></td></tr></table></figure></li>
<li>执行<code>hexo cl</code>与<code>hexo g -d</code>命令，重新生成网站资源并推送到GitHub，在博客仓库的Actions中查看网站是否完成部署</li>
<li>完成部署后回到第3步的网页，点击<code>验证</code>即可</li>
<li>过一段时间（最长可能要1个月），等待Google的爬虫完成对网站的索引，然后在Google中搜索<code>site：域名</code>就可以看到自己的网站了</li>
<li>建议在验证完成后手动提交一份网站地图<ul>
<li>点击Google Search Console左边栏中<code>站点地图</code></li>
<li>网站地图的默认URL是<code>https://[你的博客域名]/sitemap.xml</code></li>
<li>粘贴URL并点击<code>提交</code>即可</li>
</ul>
</li>
</ol>
<h1 id="设置robots-txt"><a href="#设置robots-txt" class="headerlink" title="设置robots.txt"></a>设置robots.txt</h1><p><code>robots.txt</code> 是一个文本文件，用于控制搜索引擎爬虫访问网站的权限。我们可以在网站的根目录中放置这个文件，以指定哪些页面或目录可以被搜索引擎的爬虫访问，哪些不可以。</p>
<p>以下是 robots.txt 的一些常用元素和规则：</p>
<ol>
<li><code>User-agent</code>：指定要应用规则的搜索引擎爬虫的名称。例如，”User-agent: Googlebot” 表示以下规则适用于 Googlebot 爬虫。常见爬虫名称如下<ul>
<li><code>Googlebot</code> - Google 的搜索引擎爬虫。</li>
<li><code>Bingbot</code> - Microsoft Bing 的搜索引擎爬虫。</li>
<li><code>Slurp</code> - 雅虎的搜索引擎爬虫。</li>
<li><code>DuckDuckBot</code> - DuckDuckGo 的搜索引擎爬虫。</li>
<li><code>Baiduspider</code> - 百度的搜索引擎爬虫。</li>
<li><code>YandexBot</code> - Yandex 的搜索引擎爬虫。</li>
</ul>
</li>
<li><code>Disallow</code>：指定不允许爬虫访问的页面或目录。例如，”Disallow: &#x2F;private&#x2F;“ 表示不允许爬虫访问网站中的 “&#x2F;private&#x2F;“ 目录。</li>
<li><code>Allow</code>：用于取消 <code>Disallow</code> 规则的限制。如果一个目录被 <code>Disallow</code>，但其中的某些文件或子目录需要被爬取，可以使用 <code>Allow</code> 来解除限制。</li>
<li><code>Crawl-delay</code>：指定爬虫爬取网站的速度。这个规则通常用于控制爬虫的爬取速度，以避免对服务器造成过大的负载。</li>
<li><code>Sitemap</code>：告诉搜索引擎关于网站地图（Sitemap）的位置，这通常用于帮助搜索引擎更好地理解网站结构。</li>
</ol>
<details class="note primary"><summary><p>robots.txt示例</p>
</summary>
<p>一个简单的 robots.txt 文件的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: Googlebot</span><br><span class="line">Disallow: /private/</span><br><span class="line">Allow: /public/</span><br><span class="line">Crawl-delay: 10</span><br><span class="line"></span><br><span class="line">User-agent: Bingbot</span><br><span class="line">Disallow: /admin/</span><br></pre></td></tr></table></figure>

<p>在这个示例中，对 Googlebot 的规则是不允许访问 “&#x2F;private&#x2F;“ 目录，但允许访问 “&#x2F;public&#x2F;“ 目录，而且限制它的爬取速度。对于 Bingbot，不允许访问 “&#x2F;admin&#x2F;“ 目录。</p>
<blockquote>
<p>来自 ChatGPT</p>
</blockquote>

</details>

<p>下面是我的robots.txt，它禁止百度爬虫爬取网站（垃圾百度你不配），然后阻止其他爬虫爬取无关的目录与404页面。</p>
<figure class="highlight yml"><figcaption><span>robots.txt</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">User-agent:</span> <span class="string">Baiduspider</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">User-agent:</span> <span class="string">*</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/about/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/archives/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/categories/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/css/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/images/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/js/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/lib/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/live2d-widget/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/live2d_api/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/page/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/tags/</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/404.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Sitemap:</span> <span class="string">https://siriusq.top/sitemap.xml</span></span><br></pre></td></tr></table></figure>

<p>关于robots.txt的更多信息请参阅<a href="https://developers.google.com/search/docs/crawling-indexing/robots/create-robots-txt?hl=zh-cn">Google搜索中心</a></p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>ITX装机日记</title>
    <url>/ITX%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">本鸽子毕业了，熬过了毕业设计，虽然做的很垃圾，但是终于和建筑学永别了，来装一台ITX庆祝一下（手动狗头）</blockquote>

<p><img data-src="https://s2.loli.net/2022/05/13/xaY62s4ujwMT1FL.png" alt="ITX"></p>
<span id="more"></span>

<p>因为要去英国了，老电脑体积太大没法带，笔记本用起来又太难受，一台ITX就是目前的最佳选择了。小机箱可以直接装到书包里，说走就走。不过整个攒机的过程充满了纠结，ITX的便携性是通过性能牺牲和高价配件换来的，如何在性能、价格和便携性中间取得平衡就很让人头大。</p>
<h1 id="配置单"><a href="#配置单" class="headerlink" title="配置单"></a>配置单</h1><p>国际惯例，先上配置单</p>
<table>
<thead>
<tr>
<th align="left">硬件</th>
<th>型号</th>
<th>价格</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CPU</td>
<td>英特尔 酷睿 i5-10500 @ 3.10GHz 六核十二线程</td>
<td>1269</td>
<td>淘宝散片</td>
</tr>
<tr>
<td align="left">主板</td>
<td>华硕 ROG STRIX B460-I GAMING</td>
<td>1064</td>
<td>天猫</td>
</tr>
<tr>
<td align="left">内存</td>
<td>芝奇幻光戟 16GB*2 DDR4 3000MHz</td>
<td>1158</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">显卡</td>
<td>英特尔 UHD Graphics 630</td>
<td>0</td>
<td>核显</td>
</tr>
<tr>
<td align="left">固态硬盘</td>
<td>三星 SM961 ( 256GB )</td>
<td>0</td>
<td>老电脑拆的MLC传家宝</td>
</tr>
<tr>
<td align="left">机械硬盘</td>
<td>西数蓝盘2.5寸 ( 500GB )</td>
<td>0</td>
<td>上次笔记本拆的</td>
</tr>
<tr>
<td align="left">无线网卡</td>
<td>Intel(R) Wi-Fi 6 AX200 160MHz</td>
<td>0</td>
<td>主板自带</td>
</tr>
<tr>
<td align="left">电源</td>
<td>海盗船SF450白金</td>
<td>585</td>
<td>天猫</td>
</tr>
<tr>
<td align="left">机箱</td>
<td>C24小方糖（氧化黄+定制硅胶线）</td>
<td>688</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">侧板</td>
<td>黑透磁吸亚克力</td>
<td>50</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">散热器</td>
<td>乔思伯CR1400</td>
<td>69</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">风扇</td>
<td>Arctic F8 PWM *4</td>
<td>122.4</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">显示器</td>
<td>DELL P2418D 2K</td>
<td>1349</td>
<td>京东</td>
</tr>
<tr>
<td align="left">乱七八槽</td>
<td>皮卡丘贴纸模型balabala</td>
<td>47</td>
<td>淘宝</td>
</tr>
<tr>
<td align="left">合计</td>
<td></td>
<td>6401.4</td>
<td>有点败家</td>
</tr>
</tbody></table>
<h1 id="攒机过程"><a href="#攒机过程" class="headerlink" title="攒机过程"></a>攒机过程</h1><p>本来想全套在狗东上买，奈何东哥觉得我不配和他做兄弟，618买啥啥没货，唯一在京东买的显示器还是五月买的，618还涨到了1599。惹不起惹不起，还是去隔壁的首富家里买吧，反正带到国外去京东淘宝都不能保修。</p>
<h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>嘤特尔最近被AMD打的有点惨，十代酷睿还是14nm++++++艹的工艺，就差把牙膏管剪开然后把里面的牙膏全刮下来了。不过为了以后装黑苹果，也只能用牙膏了，AMD的黑苹果还是不好用。十代酷睿恢复了九代砍掉的超线程，看起来就像八代酷睿的集体降级，八代i7变十代i5，10500本质就是8700的换壳，i5的价格买i7（手动狗头）。</p>
<p>10500的规格是默频3.1，全核心睿频4.2，单核心最高睿频4.5，PL1功耗65w，PL2功耗134W，Tau为28s。其实十代最有性价比的CPU应该是10600K，默频4.1，单核最该4.8，而且用的是钎焊，不超频用都很香。但是牙膏厂为了清九代的库存，一直不上架。好在i5的功耗还不高，四热管的塔式散热器压的很轻松，所以最后还是选择了硅脂填充的10500.对钎焊有执念的朋友可以考虑买10400盒装摸奖，10400有两种型号，一种是Q0步进，编号SRH79，推测是10核心的i9屏蔽来的，钎焊导热；另一种G1步进，编号SRH3D,原生6核心，硅脂导热，京东的买家秀里只有几个Q0步进，概率很低，本非酋自动放弃了。</p>
<h2 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h2><p>虽然英特尔CPU的价格还算合理，但是主板的价格全都上天了，ITX主板的价格本来就贵，这就很容易出现主板比CPU还贵的尴尬情况。B460I目前只有华硕和华擎铺货了，华擎那款算是丐版，狗东749，然鹅只有四个USB口，属实不够用，直接PASS。华硕的狗东1299，Strix系列，虽然带着眼睛，但是眼睛不会亮，整个板子也没有自带的RGB,只在装甲上贴了点反光贴，实属鸡贼。H470I目前技嘉和华擎铺货，但是技嘉卖到了1898，有点尴尬，华擎的可以考虑。Z490I就是神仙打架了，除了华擎有一款入门级别的买1599，别的都是2000+。据说H470与Z490芯片组可以上11代酷睿，但是一般人装好机用到报废也不会去换CPU，所以我还是选择了眼睛。</p>
<p>华硕的B460I的无线网卡免驱，开机即用，这点好评。开机后主板会提醒安装Armoury Crate，需要注意这个软件可以控制AURA灯效了，但是非常难用，BUG很多，我折腾了好久才能正常的控制灯效。</p>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>B460配i5内存最高支持2666，配i7才支持2933，所以也就没啥纠结的了，找个支持AURA灯效的就完事了。不过幻光戟的灯控和主板的灯控有冲突，一开始没装幻光戟的灯控软件，主板就识别不到内存的RGB；装上幻光戟的灯控软件之后出现了主板灯控软件控制一根灯效，内存灯控软件控制另一根的尴尬场面；好在退出幻光戟的灯控软件后恢复正常，主板能够控制两根内存的灯效了。不够选择灯条有一个痛点，win10睡眠的时候内存是通电状态的，灯会保持常亮状态，要关闭的话得手动去Armoury Crate里把灯效调成夜幕，有点麻烦。</p>
<h2 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h2><p>显卡方面我直接用了CPU自带的核显，日常带2K屏没有压力。此外核显还能大幅度提高学习效率（因为没法打游戏hhh）。用核显配双通道的内存的话，性能能提高20%-30%，虽然也没什么用就是了（<del>臭写代码的要什么独显</del>）。</p>
<h2 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h2><p>电源选用的是贼船的，贼船家好像是几家SFX电源里唯一一款用9CM风扇的，但是需要注意批次，1944-2011批次的有问题，贴吧里炸了很多，而且大多数还是在关机状态下炸掉的，贼船刚刚发了召回通知。我在淘宝上找了一家卖去年年初库存货的店，批次1902，价格很香。买回来到现在风扇都没有转过。。。。。。</p>
<h2 id="机箱"><a href="#机箱" class="headerlink" title="机箱"></a>机箱</h2><p>机箱是ITX攒机过程中的核心了，装机首先要确定的就是机箱的型号，机箱决定了电源的规格（SFX还是1U）、散热器的高度（下压还是侧吹）、显卡的安装方式（直插还是转接）等等。显卡直插的产品一般能够支持更高的散热器高度，但是代价是宽度有所增加，比如C24的宽度就是155mm，而采用主板显卡背靠背转接方案的水冷快乐盒宽度为130mm。决定机箱能否装进背包的一般就是这个宽度，C24塞进我的双肩包就稍微有点难度，需要左摇右摆才能进去。另外目前市面上的大部分产品都是小作坊自己设计加工生产的，品控难以保证，有些瑕疵还需要自己手工打磨。大厂量产的型号很少，只有乔斯伯的几款，但是都不太符合我的要求。最后纠结了一个多月下单了C24，金黄色的正好拿来搞一个皮卡丘主题。机箱默认带的侧板是钢化玻璃的，不适合移动，所以我又单独做了一块亚克力的侧板，淘宝价格大约在50元。</p>
<h2 id="散热器"><a href="#散热器" class="headerlink" title="散热器"></a>散热器</h2><p>散热器我选的是乔斯伯的CR1400，主要还是它的价格太香了，69块钱的四热管小塔，顶盖和风扇都支持ARGB，要什么自行车。这款散热器压10500以下的问题不大，夏天待机状态CPU在40°C左右（室温26.5°C），烤鸡的时候温度88°C，此时CPU全核4.19GHz，功耗110W，核心电压1.22V左右。如果是10700的话估计会降频了，可能得上银箭130了。</p>
<h2 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h2><p>SSD直接用了祖传的SM961，被建筑折磨了3年之后总写入量才15TB，估计真能传家宝了。。。。。。</p>
<p>准备等双十一再屯一个1T的固态，用来装黑果。因为这块主板的第二个M.2插槽在背部，散热比较差，上性能级的固态压力比较大，所以准备挑一个温度表现较好的固态，性能差点就差点吧。目前正在观望的固态有西数的SN550、闪迪的至尊高速（和西数的差不多，估计是换壳产品）、铠侠（东芝）的RC10，看双十一哪一个更香。</p>
<h2 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h2><p>显示器选用了24寸的，为了方便塞进行李箱，原来的带鱼屏是肯定进不去的，27寸的也很难放下。因为戴尔的P系列和U系列都带旋转升降支架，而且手感不错，写代码的时候竖起来比较香，所以就入手了这款P2418D。win10对于高分辨率屏幕的支持已经比较好了，默认开启125%缩放，常用的软件都不会出现字体模糊的情况。这款显示器貌似是中国特供，在国外的网站上没找到有卖的。</p>
<h1 id="装机注意事项"><a href="#装机注意事项" class="headerlink" title="装机注意事项"></a>装机注意事项</h1><ul>
<li>最好把散热器、内存、固态都安装到主板上之后再往机箱里放，ITX的空间太狭小，手根本放不进去</li>
<li>大部分的线也建议提前插到主板上</li>
<li>注意散热器和内存的兼容性，我这个散热器如果风扇向下安装，在风扇对齐散热器主体顶部的时候会顶到内存的马甲，内存有一丢丢歪，不过不影响使用，但是强迫症还是把风扇向上面抬起来一丢丢，和RGB顶盖对齐了，这样内存就不歪了</li>
<li>预算充足的最好上定制硅胶线或者镀银线，电源原装的蛇皮网线材太硬了，走线是地狱难度</li>
<li>如果有SATA设备的话最好用材质软的SATA线，C24侧板上的两个硬盘位很难走线，普通的SATA线会把侧板顶住</li>
<li>用C24机箱的话一定要注意螺丝刀的选择，C24的螺丝数量太多而且很容易滑丝，建议使用PH2刀头的（我一度怀疑老板有亲戚在卖螺丝）</li>
<li>拧螺丝的时候用力轻一些，C24很容易掉漆</li>
<li>主板固定螺丝不要拧太紧，防止变形</li>
</ul>
<p>大概就是这些，下一步打算装个黑苹果用hhh。</p>
<h1 id="后续升级"><a href="#后续升级" class="headerlink" title="后续升级"></a>后续升级</h1><div class="note success"><p>2020.9更新：机械硬盘再见！</p>
<p>机械硬盘的运转噪音实在是太吵了，忍不了拆掉了，换装了铠侠的RC10 512G</p>
</div>

<div class="note success"><p>2022.12更新：独显真香</p>
<p>做了好久等等党，这显卡他就是不降价，最后摆烂买了一张蓝宝石的6500xt。至于为什么不买6600，一是因为矿卡和摸摸党太多，二是这个机箱太挑显卡尺寸了，不是超长就是超宽。</p>
<p>6500xt里面最香的是华硕的卡，但是它的宽度是132mm，高了2mm，而且是凸出来的是热管，如果把侧板垫起来倒是能塞进去，但是我担心热管离钢化玻璃太近，钢化玻璃受热不均可能会炸，最后挑了120mm宽的蓝宝石。</p>
<p><img data-src="https://s2.loli.net/2023/06/28/MCqh89UcuiD1PvV.jpg" alt="rx6500xt.jpg"></p>
</div>

<div class="note success"><p>2022.12更新：风道调整</p>
<p>装上独显之后就没办法用原来的垂直风道方案了，因为CPU会吸显卡的尾气。而且25mm高的风扇离显卡风扇太近，会影响气流产生风噪，就换成了15mm高的乔思伯HF1215，顺便搞点光污染，这个12015的风扇风量（62CFM）和2个8025的风扇（31CFM*2）一模一样。</p>
<p>此外顶部的两个8025风扇由2出风改成了1进1出，靠前的风扇为CPU和电源提供新鲜空气，靠后的把CPU尾气吸出去。</p>
<p>CPU的风扇也从原装换成了风压更大的利民TL-C9B，原装风扇移到了后出风口继续服役。</p>
<p><img data-src="https://s2.loli.net/2023/06/28/AeoUFyvSKj5Tc7O.jpg" alt="RGBYES.jpg"></p>
</div>

<div class="note success"><p>2023.12更新：踩坑与改造</p>
<p>德瑞斯利民水军是真多啊，去年听了它们的鬼话，买了个利民的扇子，不到一年就坏轴了，低转速下有哒哒哒的轴噪，像拖拉机一样，烦得很，高转速的时候轴承就像脱缰的野狗，摆动幅度非常大，手摸上去的感觉就和摸冲击钻一样，甚至带的桌子都在震动，真怕它把我主板给我震废了。拆下来之后发现电机背面还渗油了，于是直接扔垃圾桶了。</p>
<p>然后就是乔思伯的HF1215，买之前看评测评论啥的都说不错，买回来发现风量确实也挺足，灯也够亮，而且配备了磁辅，吊装工况也能用。但是用了没几个月也变成了拖拉机，并且后续轴噪越来越大，渐渐超过了利民，去论坛找到了不少类似问题的帖子，估计是后续的品控放水了。在我把它拆下来的前几个周还出现了更神奇的现象：盖上侧板之后它的噪音会超级加倍，而且非常尖锐，拆掉侧板就恢复成原来的拖拉机声。把侧板垫起来也没有用，排除掉风切声，最后猜测是在机箱内形成了音腔。。。。。。</p>
<p>借着拆除上述两个大聪明的机会，稍微改造了一下机箱（钱都花在刀把上）：</p>
<ul>
<li>拆除PVC防尘网，更换为60目的锦纶网</li>
<li>使用对锁螺丝+硅胶垫片代替自攻螺丝来固定风扇</li>
<li>CPU散热器更换为更容易拆装的乔思伯CR1400EVO</li>
<li>加了一块闲置的SATA固态</li>
<li>取消了机箱底部的进风扇</li>
<li>USB3.0接口处加了个90度弯头</li>
</ul>
<p>改造总结：</p>
<ul>
<li>更换防尘网后双烤温度降低了8度，充分证明PVC防尘网就是屑。</li>
<li>CR1400EVO扣具与主板的正面的M.2散热装甲冲突，大力出奇迹也能装上，后来拆机才发现扣具是翘着的。。。。。。</li>
<li>奇怪的噪音消失了，看网页看视频时听不到任何噪音</li>
<li>拆掉底部风扇后显卡温度基本没有变化</li>
<li>前置USB3.0线真的是ITX的一生之敌，又长又硬，怎么理线都别扭，某宝上的线最短也是30cm，比我机箱都长</li>
</ul>
<p><img data-src="https://s2.loli.net/2024/03/25/8olB1kKRbHcahEd.webp" alt="IMG_1116.webp"></p>
</div>

<h2 id="最新配置"><a href="#最新配置" class="headerlink" title="最新配置"></a>最新配置</h2><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th>型号</th>
<th>数量</th>
<th>总价</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td><strong>CPU</strong></td>
<td>Intel i5 10500</td>
<td>1</td>
<td>1269</td>
<td>散片</td>
</tr>
<tr>
<td><strong>主板</strong></td>
<td>华硕 ROG Strix B460i</td>
<td>1</td>
<td>1064.86</td>
<td></td>
</tr>
<tr>
<td><strong>内存</strong></td>
<td>芝奇幻光戟 16G DDR4 3000MHz</td>
<td>2</td>
<td>1158</td>
<td>共32G</td>
</tr>
<tr>
<td><strong>显卡</strong></td>
<td>蓝宝石 RX6500XT 4GB</td>
<td>1</td>
<td>1100</td>
<td></td>
</tr>
<tr>
<td><strong>固态硬盘</strong></td>
<td>三星 SM961 256GB</td>
<td>1</td>
<td>0</td>
<td>MLC传家宝</td>
</tr>
<tr>
<td></td>
<td>铠侠 RC10 512GB</td>
<td>1</td>
<td>399</td>
<td></td>
</tr>
<tr>
<td></td>
<td>三星 860EVO 512GB</td>
<td>1</td>
<td>0</td>
<td>拆机后吃灰好久的</td>
</tr>
<tr>
<td><strong>散热器</strong></td>
<td>乔思伯 CR1400 EVO</td>
<td>1</td>
<td>58.9</td>
<td></td>
</tr>
<tr>
<td><strong>电源</strong></td>
<td>海盗船 SF450 白金</td>
<td>1</td>
<td>584.59</td>
<td></td>
</tr>
<tr>
<td><strong>机箱</strong></td>
<td>C24</td>
<td>1</td>
<td>687.88</td>
<td>氧化黄 + 海盗船软硅胶定制线</td>
</tr>
<tr>
<td><strong>风扇</strong></td>
<td>Arctic F8 PWM</td>
<td>2</td>
<td>61.2</td>
<td>只保留了顶部的2个</td>
</tr>
<tr>
<td><strong>显示器</strong></td>
<td>戴尔P2418D</td>
<td>1</td>
<td>1349</td>
<td>2K IPS 23.8寸</td>
</tr>
<tr>
<td><strong>其他</strong></td>
<td>皮卡丘贴纸</td>
<td>1</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td></td>
<td>PCI挡板</td>
<td>5</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td></td>
<td>皮卡丘手办</td>
<td>7</td>
<td>31.68</td>
<td></td>
</tr>
<tr>
<td></td>
<td>亚克力磁吸侧板</td>
<td>1</td>
<td>50</td>
<td></td>
</tr>
<tr>
<td></td>
<td>软磁片</td>
<td>1</td>
<td>9.5</td>
<td>挡住后出风口的空隙，防虫</td>
</tr>
<tr>
<td></td>
<td>增高垫块</td>
<td>4</td>
<td>19.52</td>
<td>把机箱垫高</td>
</tr>
<tr>
<td></td>
<td>RGB灯条</td>
<td>1</td>
<td>24.25</td>
<td>长度142mm</td>
</tr>
<tr>
<td></td>
<td>乔思伯显卡支架 VC-20mini</td>
<td>1</td>
<td>17.9</td>
<td>高度范围15.5mm-50mm</td>
</tr>
<tr>
<td></td>
<td>软磁条</td>
<td>1</td>
<td>9.5</td>
<td>宽10mm 厚2mm 长10米</td>
</tr>
<tr>
<td></td>
<td>指纹识别器</td>
<td>1</td>
<td>69</td>
<td></td>
</tr>
<tr>
<td></td>
<td>风扇对锁螺丝</td>
<td>n</td>
<td>38.28</td>
<td>垫片+子母钉+几百个各种型号的螺丝</td>
</tr>
<tr>
<td></td>
<td>3M双面胶</td>
<td>1</td>
<td>3.91</td>
<td>300LSE 2mm宽 55米长</td>
</tr>
<tr>
<td></td>
<td>锦纶网</td>
<td>1</td>
<td>6.17</td>
<td>60目 1米长宽 白色</td>
</tr>
<tr>
<td></td>
<td>风扇减震框</td>
<td>5</td>
<td>12.04</td>
<td>3mm厚 9cm*2 12cm*1 8cm*2</td>
</tr>
<tr>
<td></td>
<td>Arctic MX4 硅脂</td>
<td>1</td>
<td>34.9</td>
<td>4g 导热系数8.5W</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>总花费</strong></td>
<td></td>
<td></td>
<td>8074.08</td>
<td></td>
</tr>
<tr>
<td><strong>仅主机</strong></td>
<td></td>
<td></td>
<td>6383.43</td>
<td></td>
</tr>
</tbody></table>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>2024.3：更换了新的机箱：Rider R2 5.0，此文终结。</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>ITX</tag>
        <tag>搞机</tag>
      </tags>
  </entry>
  <entry>
    <title>Java与C的环境变量配置</title>
    <url>/Java%E4%B8%8EC%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">昨天又把系统重装了，升级到了2004，本以为能凭借记忆配置好Java和C的环境变量，然鹅最后还是找了百度，所以就再记录一遍吧</blockquote>

<span id="more"></span>

<h1 id="Java环境变量配置"><a href="#Java环境变量配置" class="headerlink" title="Java环境变量配置"></a>Java环境变量配置</h1><ol>
<li>直接在任务栏搜索框搜索<code>环境变量</code>，会出现<code>编辑系统环境变量</code></li>
<li>在弹出的窗口中点击右下角的<code>环境变量</code></li>
<li>在下面的<code>系统变量</code>中新建系统变量，变量名<code>JAVA_HOME</code>，变量值为JDK的安装路径，默认是<code>C:\Program Files\Java\jdk-14.0.2</code></li>
<li>再新建一个系统变量<code>CLASSPATH</code>，变量值为<code>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code></li>
<li>双击系统变量中的<code>path</code>，点击右上角的<code>新建</code></li>
<li>分别加入<code>%JAVA_HOME%\bin</code>与<code>%JAVA_HOME%\jre\bin</code></li>
<li>确定三连回到桌面</li>
<li>打开终端，输入<code>java -version</code>检查是否成功，成功的话会显示java版本号</li>
<li>不成功的话重启一遍，并检查一下变量是否输入正确</li>
</ol>
<h1 id="C环境变量配置"><a href="#C环境变量配置" class="headerlink" title="C环境变量配置"></a>C环境变量配置</h1><ol>
<li>在mingw中勾选<code>mingw32-base</code>和<code>mingw-gcc-g++</code>就行，选择多了会装到天荒地老。。。勾选方式是<code>右键 - Mark for Installation</code></li>
<li>点击右上角的<code>Installation - Apply Changes</code></li>
<li>在弹出的窗口中点击<code>Apply</code>确认</li>
<li>漫长的等待。。。。。。土豆服务器经常会报错安装失败</li>
<li>安装完成后同上打开系统变量</li>
<li>双击系统变量中的<code>path</code>，点击右上角的<code>新建</code></li>
<li>加入mingw的安装路径，默认是<code>C:\MinGW\bin</code></li>
<li>打开终端，输入<code>gcc -v</code>检查是否成功</li>
<li>不成功同样重启试试</li>
</ol>
<p>设置完成后的环境变量大概是这个亚子<br><img data-src="https://s2.loli.net/2022/05/13/O49gVDEHBFZ2kzm.png" alt="1"><br><img data-src="https://s2.loli.net/2022/05/13/uLJnsPYEIiHSA1t.png" alt="2"></p>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>环境变量</tag>
        <tag>Java</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Jupyter Notebook 食用指南</title>
    <url>/Jupyter-Notebook-%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">延期开学的咸鱼在家无事可做，打算刷刷 MOOC 掉点头发，记笔记的时候发现 OneNote 没法记录代码，缩进高亮行号都没有，于是就想到了一直在电脑里躺尸的 Jupyter Notebook，记录下安装及食用的方法</blockquote>

<span id="more"></span>

<h1 id="安装-Jupyter-Notebook"><a href="#安装-Jupyter-Notebook" class="headerlink" title="安装 Jupyter Notebook"></a>安装 Jupyter Notebook</h1><p>安装 Jupyter Notebook 之前需要先安装好 Python 或 Anaconda，可以使用 <code>conda</code>（Anaconda） 和 <code>pip</code> 两种方式安装</p>
<p>Jupyter 官方推荐按使用 <code>conda</code>（Anaconda） 来安装，安装 Anaconda 的时候一般会默认安装 Jupyter Notebook，但如果没有安装的话就使用下面的命令</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">conda install jupyter notebook</span><br></pre></td></tr></table></figure>

<p>不用 Anaconda 的话就用 pip 安装，命令为</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">pip install jupyter notebook</span><br></pre></td></tr></table></figure>

<h2 id="关于-Anaconda-和-Python-的关系"><a href="#关于-Anaconda-和-Python-的关系" class="headerlink" title="关于 Anaconda 和 Python 的关系"></a>关于 Anaconda 和 Python 的关系</h2><p>这里顺带解释一波 Anaconda 和 Python 的关系，众所周知，Python 是一门编程语言（手动狗头），而 Anaconda 相当于 Python 的发行版，带有很多科学计算类的库以及包管理器 conda。可以用 Ubuntu 和 Linux 的关系来类比。</p>
<p>此外安装 Anaconda 后也要手动添加系统环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\ProgramData\Anaconda3\Scripts</span><br><span class="line">C:\ProgramData\Anaconda3</span><br><span class="line">C:\ProgramData\Anaconda3\Library\bin</span><br></pre></td></tr></table></figure>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="安装-Java-扩展"><a href="#安装-Java-扩展" class="headerlink" title="安装 Java 扩展"></a>安装 Java 扩展</h2><p>我用的Java插件是 <a href="https://github.com/SpencerPark/IJava">IJava</a>，支持代码运行、自动联想、错误提示等功能，安装方式为</p>
<ol>
<li>在 <a href="https://github.com/SpencerPark/IJava/releases">release</a> 页面下载压缩包</li>
<li>解压缩并打开解压后的文件夹</li>
<li>在解压后的文件夹以管理员身份运行终端</li>
<li>输入 <code>python install.py -h</code></li>
<li>输入 <code>jupyter kernelspec list</code> 检查是否安装成功，成功的话会返回<code>java  C:\ProgramData\jupyter\kernels\java</code></li>
</ol>
<h2 id="安装-Nbextensions"><a href="#安装-Nbextensions" class="headerlink" title="安装 Nbextensions"></a>安装 Nbextensions</h2><p>这是一个扩展的集合，有诸如设置自动保存的时间间隔、支持更多的 Latex 元素、设置代码字体大小等功能，我就不列举了，插件中的每个功能都带有详细的介绍。我主要用它来显示 Markdown 的目录。安装方式为</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span><br></pre></td></tr></table></figure>

<p>安装完会在 Jupyter 的状态栏显示，如果没有的话使用这个命令</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">jupyter contrib nbextension install --user --skip-running-check</span><br></pre></td></tr></table></figure>

<p>在里面勾选 <code>Table of Contents(2)</code> 就可以启用目录功能了</p>
<h2 id="安装-nb-conda"><a href="#安装-nb-conda" class="headerlink" title="安装 nb_conda"></a>安装 nb_conda</h2><p>nb_conda 主要用于多种运行环境的切换，安装命令为</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">conda install nb_conda</span><br></pre></td></tr></table></figure>

<h2 id="修改默认存储位置"><a href="#修改默认存储位置" class="headerlink" title="修改默认存储位置"></a>修改默认存储位置</h2><p>Jupyter Notebook 默认的存储位置已经有很多文件了，非常杂乱，下面要做的就是换一个指定的文件夹存储笔记</p>
<ol>
<li>首先需要创建 Jupyter 的配置文件 <code>C:\Users\Sun\.jupyter\jupyter_notebook_config.py</code> ，命令为 <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure></li>
<li>打开 <code>C:\Users\Sun\.jupyter\jupyter_notebook_config.py</code> ，搜索 <code>c.NotebookApp.notebook_dir</code>，删掉前面的<code>#</code>，然后把指定文件夹的目录复制到单引号之间，修改完是这个亚子 <figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">## The directory to use for notebooks and kernels.</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">&#x27;E:\Jupyter&#x27;</span></span><br></pre></td></tr></table></figure></li>
<li>保存文件并打开 Jupyter Notebook 查看是否成功</li>
</ol>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><ul>
<li>安装完成后在终端输入 <code>jupyter notebook</code> 就可以在浏览器中打开，默认地址为 <code>http://localhost:8888</code></li>
<li>使用<code>jupyter notebook --port port_number</code>可以指定端口(port_number)启动</li>
<li>使用<code>jupyter notebook notebook_name.ipynb</code>可以启动对应名称(notebook_name)的笔记</li>
<li>使用<code>jupyter notebook --no-browser</code>可以只启动服务而不启动浏览器</li>
</ul>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>结束的方法有两种</p>
<ul>
<li>在浏览器页面点击 Quit</li>
<li>在终端中使用 <code>ctrl + c</code> 结束运行</li>
</ul>
<h2 id="主页操作"><a href="#主页操作" class="headerlink" title="主页操作"></a>主页操作</h2><p><img data-src="https://s2.loli.net/2022/05/13/Oy5mb7ZerDd4V2I.png" alt="主页操作"></p>
<h2 id="笔记操作"><a href="#笔记操作" class="headerlink" title="笔记操作"></a>笔记操作</h2><p><img data-src="https://s2.loli.net/2022/05/13/qxvI6sUtpoETQOw.png" alt="笔记操作"></p>
<p>另外点击笔记标题（Untitled）那里可以重命名</p>
<h2 id="Markdown-内部跳转"><a href="#Markdown-内部跳转" class="headerlink" title="Markdown 内部跳转"></a>Markdown 内部跳转</h2><p>Jupyter Notebook 在 Markdown 模式下可以实现内部跳转，示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[示例]</span>(<span class="selector-id">#link</span>)</span><br><span class="line">跳转中间的内容</span><br><span class="line">&lt;<span class="selector-tag">a</span> id=link&gt;跳转提示语&lt;/<span class="selector-tag">a</span>&gt;</span><br></pre></td></tr></table></figure>

<p>跳转提示语可以不加，不加的话跳转到的地方没有提示</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>在 Python 内核下可以使用Shell命令，在命令前加 <code>%</code>即可</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">%pwd <span class="comment"># 获取文件夹绝对路径</span></span><br><span class="line">%ls  <span class="comment"># 获取当前文件夹文件信息</span></span><br><span class="line">%run 文件路径 <span class="comment">#直接运行本地文件</span></span><br><span class="line">%load 文件路径 <span class="comment">#加载本地文件</span></span><br><span class="line">%load URL <span class="comment">#加载指定网站的源代码，如https://www.baidu.com/</span></span><br></pre></td></tr></table></figure>

<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>Jupyter Notebook 有两种不同的键盘输入模式. 编辑模式可以将代码或文本输入到一个单元格中，并通过一个绿色的单元格来表示。命令模式将键盘与笔记本级命令绑定在一起，并通过一个灰色的单元格边界显示，该边框为蓝色的左边框。</p>
<h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p><img data-src="https://s2.loli.net/2022/05/13/jdkRQwH8mcMhgyr.png" alt="编辑模式"></p>
<h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p><img data-src="https://s2.loli.net/2022/05/13/fskpXI5jeJir2b7.png" alt="命令模式"></p>
<h3 id="自定义快捷键"><a href="#自定义快捷键" class="headerlink" title="自定义快捷键"></a>自定义快捷键</h3><p>Jupyter Notebook 中原有的快捷键数量不是很多，但是预留了自定义快捷键的空间，在 <code>Help - Edit Keyboard Shortcuts</code> 中可以进行设置，在 <code>add shortcut</code> 中填入对应的按键然后点击右侧的 <code>+</code> 即可。这里注意 </p>
<ul>
<li><code>Ctrl、Shift、Alt</code> 等要输入完整字母，不能直接识别</li>
<li>两个按键中间用 <code>-</code> 来连接</li>
<li>设置完成记得点击右下角的确定</li>
</ul>
<p>在这里我设置了两个快捷键</p>
<ul>
<li>clear cell output，清除单元格的输出结果，快捷键 <code>Alt-Shif-D</code></li>
<li>clear all cells output，清除当前笔记所有单元格的输出结果，快捷键 <code>Alt-Ctrl-D</code></li>
</ul>
<blockquote>
<p>参考：<br><a href="https://zhuanlan.zhihu.com/p/33105153">https://zhuanlan.zhihu.com/p/33105153</a><br><a href="https://www.zhihu.com/question/380990243">https://www.zhihu.com/question/380990243</a><br><a href="https://blog.csdn.net/qq_34992030/article/details/89175633">https://blog.csdn.net/qq_34992030/article/details/89175633</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>MacBook Pro 路易十六联名款</title>
    <url>/MacBookProHeadless.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">论如何用最少的钱买一台mac</blockquote>

<p><img data-src="https://s2.loli.net/2023/07/01/m29rQx1G8WTtO3A.jpg" alt="MBPHeadless.jpg"></p>
<span id="more"></span>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于黑苹果的升级维护实在是麻烦，我开始盘算怎么整一台便宜的Mac(果然一切黑苹果的尽头都是白苹果)。目前官网最便宜的白苹果是M2芯片的Mac Mini，起售价4499元，配置上还是苹果祖传的8G内存和256G硬盘，16G内存的需要5999，超预算太多。然后又跑到了闲鱼，不得不感慨苹果的产品是真的保值啊，8G内存M1芯片的Mac Mini二手售价仍然在3000元左右，16G内存的在4000元左右。二手Macbook的价格基本都在5000元以上，哪怕是最低配的8G内存128G硬盘的17款MBP也要2000多元。不过闲鱼神奇的推荐算法让我发现了一个好东西：MacBook Mini，又称Macbook无头骑士，讲人话就是没有屏幕的二手Macbook，售价1000多元。因为我的使用场景就是写代码，所以刚需就是16G及以上的内存。此外我的笔记本一般都是外接显示器使用，所以有没有屏幕并不重要。这么一想，1000多就能拥有白苹果+大号触摸板+音响+Touch Bar，好像有点香。</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>便宜，这是最大的优点</li>
<li>相较于黑苹果，它不需要折腾</li>
<li>自带触控板、键盘、音响、指纹识别</li>
</ul>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul>
<li>二手产品，肯定会有瑕疵</li>
<li>肯定被拆过机，因为要取下屏幕，零件也有可能被更换过</li>
<li>键盘、电池出问题的可能性较高</li>
<li>保修约等于不存在</li>
<li>需要外接显示器才能使用</li>
<li>型号较老，大部分都是16-19款使用Intel处理器的，M1的基本没有，性能一般</li>
<li>重装系统很麻烦</li>
</ul>
<h2 id="适用人群与场景"><a href="#适用人群与场景" class="headerlink" title="适用人群与场景"></a>适用人群与场景</h2><ul>
<li>入门iOS开发</li>
<li>想尝试MacOS，不想花太多钱也不想折腾</li>
<li>使用位置相对固定，没有移动性需求</li>
<li>最好有4K显示器，当然2K和1080p也不是不能用，我用的就是2K</li>
</ul>
<h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>关于这种神奇Mac的来源众说纷纭，主流的说法有两种，一种可能是屏幕坏掉，但是屏幕维修成本太高，放弃维修直接卖给回收商家，回收商家再把屏幕拆掉单独卖下半身；另一种说是原来海外用作服务器的MBP，为了节约空间多在机柜里塞几台，就把屏幕拆掉，再然后就是洋垃圾大船靠岸的故事了。</p>
<h1 id="购买途径"><a href="#购买途径" class="headerlink" title="购买途径"></a>购买途径</h1><p>我在知乎和b站搜索这种MBP的使用感受的时候意外发现了组织，@<a href="https://www.zhihu.com/people/xiaoming-22-24">江sir爱数码</a>已经对这种产品做了详细的研究，并且根据群友的经验总结出两家比较靠谱的闲鱼卖家，MacBook和苹果尊选，我就是在其中一家购买的，没有翻车。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>MacBook下半身经验分享</p><p>江sir爱数码</p>
<a href="https://zhuanlan.zhihu.com/p/599745126"></a>
</div></div>

<h1 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h1><p>我购买的机型是2017款的MacBook Pro 15（A1707），处理器是4C8T的7700HQ，显卡是Radeon Pro 555 2G，16G内存，512G固态硬盘，花了我1600大洋。</p>
<h2 id="到手成色"><a href="#到手成色" class="headerlink" title="到手成色"></a>到手成色</h2><p>我这台路易十六的成色还不错，外壳没有明显的刮擦、磕碰，只有键盘的P键和0键的边缘被磕掉了一丢丢。除了没有摄像头和屏幕，其他部件都能正常工作。电池应该被卖家更换过，循环数是0。序列号什么的也都能对的上。</p>
<h2 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h2><p>我个人有点赛博洁癖，电子产品到手的第一件事就是重装。但是我的无头本无法进入恢复模式，据说需要外接Type-C直连的4K显示器才能进入。如果以后出问题的话还要找个4K显示器才能重装，比较麻烦。</p>
<h2 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h2><p>建议搭配4K显示器使用，最好支持Type-C直连，原因如下：</p>
<ul>
<li>MBP只有Type-C接口，没有HDMI和DP等常用视频输出接口，显示器不支持Type-C的话需要转接线或转接头，我买的转接线发热很严重。</li>
<li>2023年10月更新：发现了一款可以为2K显示器开启HiDPI的软件 <a href="https://github.com/waydabber/BetterDisplay">BetterDisplay</a>，快乐起来了！</li>
<li><del>2K显示器显示的字体非常小，虽然可以通过软件内缩放字体解决，但还是不如HiDPI舒服</del></li>
<li><del>非4K显示器无法正常开启HiDPI，GitHub上有<a href="https://github.com/xzhih/one-key-hidpi/blob/master/README-zh.md">强制开启HiDPI的插件</a>，但是风险较高，强制开启失败的话可能要进入恢复模式来修复，而我又不能进入恢复模式，于是就被卡住了</del></li>
<li>显示器的亮度不能通过软件调节，可能是我用的转接线不支持DDC&#x2F;CI协议</li>
</ul>
<p>此外选择显示器分辨率的时候千万要小心，我这台2K显示器在MBP的设置里能选择4K输出，我好奇的点了一下，然后显示器就黑屏了，提示分辨率不符。我最后只能在啥也看不见的情况下盲点碰运气，点了半分钟终于点到了2K输出的选项😭😭😭</p>
<p>不过MacOS的字体渲染还是比Windows强了不少的，感官上更加细腻，现在看PDF都用Mac看了。</p>
<h2 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h2><p>MBP的蝴蝶键盘手感非常差劲，键程太短，最好还是外接键盘使用。淘宝上有卖键盘盖板的，如下图所示，可以节省桌面空间。</p>
<p><img data-src="https://s2.loli.net/2023/07/01/Cx2HZ7vzSEIQpFy.jpg" alt="MBP键盘盖板.jpg"></p>
<p>另外如果使用蓝牙键盘+2.4G无线鼠标的话会有干扰，鼠标经常掉帧，这也算苹果的老毛病了</p>
<h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>MBP的指纹识别体验很棒，比我在WIN上用指纹模块的识别率高不少，不过它的材质容易留下指纹印</p>
<h2 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h2><p>Mac的触控板比其他的不知道高到哪里去了，压感触控，面积巨大，划起来很爽，就是划时间长了指尖磨得难受。</p>
<h2 id="性能与噪音"><a href="#性能与噪音" class="headerlink" title="性能与噪音"></a>性能与噪音</h2><p>5年前的老机型了，拿来跑点小项目性能还是够用的，但是软件的启动速度比较慢。跑Xcode编译的时候风扇会满速运转，但是噪音并不算大，不过C面靠后的位置会很烫手</p>
<h2 id="Facetime"><a href="#Facetime" class="headerlink" title="Facetime"></a>Facetime</h2><p>由于拆掉了屏幕，而MBP的摄像头又在屏幕上面，所以要使用Facetime只能用外接摄像头或者用iPhone连续互通相机功能。</p>
<p>我把iPhone用线连接到MBP上之后并没有出现连续互通相机的提示，Facetime里面也没有相应的选项。然后我插入了外接摄像头，刚插入就有了使用连续互通相机的提示，就很迷惑，把外接摄像头拔掉也能继续用连续互通相机。猜测应该是要初始化一下摄像头才能激活连续互通相机。</p>
<div class="note success"><p>新方法<br>在<a href="https://zhuanlan.zhihu.com/p/599745126">江Sir的知乎专栏</a>里发现了更简单的激活办法</p>
<ul>
<li>用数据线连接iPhone和Mac</li>
<li>打开QuickTime Player，点击左上角新建影片录制</li>
<li>Mac弹出连续互通功能的介绍，点击继续</li>
<li>iPhone也会弹出提示</li>
<li>然后就能用了，拔掉线也可以继续用</li>
</ul>
</div>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img data-src="https://s2.loli.net/2023/07/01/ROkL7QVCsFayBJv.jpg" alt="真香.jpg"></p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>macOS</tag>
        <tag>macBook Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown写作语法</title>
    <url>/Markdown%E5%86%99%E4%BD%9C%E8%AF%AD%E6%B3%95.html</url>
    <content><![CDATA[<p>编写博客需要使用Markdown，因此需要熟记语法规则，虽然Markdown语法比较少，但是一个一个查起来也是很蛋疼的（<del>目录被标题的预览搞乱了。。。</del>）</p>
<p><strong>常用的Markdown语法规则有：</strong></p>
<span id="more"></span>

<ul>
<li>标题（我把标题扔到网页最后面了，目录被打乱了。。。）</li>
<li>字体加粗倾斜</li>
<li>引用</li>
<li>分割线</li>
<li>图片</li>
<li>超链接</li>
<li>列表</li>
<li>表格</li>
<li>代码</li>
<li>小文本</li>
<li>特殊字符转义</li>
<li>字体颜色大小</li>
<li>文本居中</li>
<li>勾选框</li>
<li>首行缩进</li>
<li>链接到其他文章</li>
<li>文字背景色</li>
<li>标签</li>
<li>选项卡</li>
<li>按钮</li>
</ul>
<h1 id="字体加粗倾斜"><a href="#字体加粗倾斜" class="headerlink" title="字体加粗倾斜"></a>字体加粗倾斜</h1><p>字体倾斜需要在文本两端各加一个<code>*</code>号<br>字体加粗需要在文本两端各加两个<code>*</code>号<br>字体同时倾斜加粗需要在文本两端各加三个<code>*</code>号<br>字体加入删除线需要在文本两端各加两个<code>~~</code><br>Markdown不支持下划线，需要用html的<code>&lt;u&gt;</code>标签实现</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*倾斜的文字*</span><br><span class="line">**加粗的文字**</span><br><span class="line">***倾斜加粗的文字***</span><br><span class="line">~~加删除线的文字~~</span><br><span class="line">&lt;u&gt;加下划线的文字&lt;/u&gt;</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<p><em>倾斜的文字</em><br><strong>加粗的文字</strong><br><em><strong>倾斜加粗的文字</strong></em><br><del>加删除线的文字</del><br><u>加下划线的文字</u></p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>引用需要在文本前加一个<code>&gt;</code>,引用可以嵌套，比如两个<code>&gt;&gt;</code>或三个<code>&gt;&gt;&gt;</code></p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 引用的文本</span><br><span class="line">&gt;&gt; 嵌套的引用文本</span><br><span class="line">&gt;&gt;&gt; 再次嵌套的文本</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<blockquote>
<p>引用的文本</p>
<blockquote>
<p>嵌套的引用文本</p>
<blockquote>
<p>再次嵌套的文本</p>
</blockquote>
</blockquote>
</blockquote>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>分割线使用连续三个及以上的<code>*</code>或<code>-</code>实现，前后都有段落时各空出一行</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">-----</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<hr>
<hr>
<hr>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p><strong>语法</strong></p>
<p><strong>语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[超链接名称](超链接地址)</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Github](https://github.com)</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<p><a href="https://github.com/">Github</a></p>
<details class="note danger"><summary><p>已废弃的老用法</p>
</summary>
<h2 id="普通链接方法"><a href="#普通链接方法" class="headerlink" title="普通链接方法"></a>普通链接方法</h2><p><strong>语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[超链接名称](超链接地址 超链接title)</span><br></pre></td></tr></table></figure>
<p><code>超链接title</code>选填，鼠标悬浮时显示</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Github](https://github.com github)</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<p>[Github](<a href="https://github.com/">https://github.com</a> Github)</p>
<h2 id="高级链接方法"><a href="#高级链接方法" class="headerlink" title="高级链接方法"></a>高级链接方法</h2><p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用1作为变量 [Github][1]</span><br><span class="line">	在末尾为1赋值</span><br><span class="line">[1]:https://github.com github</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<p>使用1作为变量 [Github][1]<br>    在末尾为1赋值<br>[1]:<a href="https://github.com/">https://github.com</a></p>

</details>

<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>列表分为有序列表和无序列表,都可以嵌套，嵌套时在下一个列表前加<code>Tab</code>或加三个空格<br>其中有序列表使用符号<code>*</code>或<code>+</code>或<code>-</code>即可</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- C</span><br><span class="line">+ C++</span><br><span class="line">* Java</span><br><span class="line"></span><br><span class="line">- 嵌套1</span><br><span class="line">	- 嵌套2</span><br><span class="line">		- 嵌套3</span><br><span class="line"></span><br><span class="line">1. C</span><br><span class="line">2. C++</span><br><span class="line">3. Java</span><br><span class="line"></span><br><span class="line">1. 嵌套1</span><br><span class="line">	1. 嵌套2</span><br><span class="line">	2. 嵌套2（1）</span><br><span class="line">	3. 嵌套2（2）</span><br><span class="line">		1. 嵌套3</span><br><span class="line">		2. 嵌套3（1）</span><br><span class="line">	2. 嵌套2（3）</span><br><span class="line">2. 嵌套1（1）</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<ul>
<li>C</li>
</ul>
<ul>
<li>C++</li>
</ul>
<ul>
<li>Java</li>
</ul>
<ul>
<li>嵌套1<ul>
<li>嵌套1<ul>
<li>嵌套3</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li><p>C</p>
</li>
<li><p>C++</p>
</li>
<li><p>Java</p>
</li>
<li><p>嵌套1</p>
<ol>
<li>嵌套2</li>
<li>嵌套2（1）</li>
<li>嵌套2（2）<ol>
<li>嵌套3</li>
<li>嵌套3（1）</li>
</ol>
</li>
<li>嵌套2（3）</li>
</ol>
</li>
<li><p>嵌套1（1）</p>
</li>
</ol>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">-|:-:|-:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br></pre></td></tr></table></figure>
<p>其中第二行表示对齐方式</p>
<ul>
<li>默认为左对齐，只写<code>-</code></li>
<li>居中为<code>:-:</code></li>
<li>右对齐为<code>-:</code></li>
</ul>
<p><strong>预览效果</strong></p>
<table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>代码使用反引号 ` 表示，反引号是键盘左上角的<code>~</code>键输入，而不是键盘右边的引号<br>连续三个反引号可以生成代码块，如果想要在代码块里再嵌套代码块的话，外围的代码块要比里面的多打3个反引号，以此类推。代码块后面的字符表示不同的语言类型，示例中多打了中括号</p>
<h2 id="简单语法"><a href="#简单语法" class="headerlink" title="简单语法"></a>简单语法</h2><p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[```cpp]</span><br><span class="line">  #include &lt;stdio.h&gt;</span><br><span class="line">  int main(void)&#123;</span><br><span class="line">    printf(&quot;Hello World!&quot;);</span><br><span class="line">      return 0;</span><br><span class="line">  &#125;</span><br><span class="line">[```]</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h2><p>注意这里链接和链接文本必须同时存在，且链接格式正确，否则都会被看作是标题<br><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```[语言] [标题] [链接] [链接文本]</span><br><span class="line">  #include &lt;stdio.h&gt;</span><br><span class="line">  int main(void)&#123;</span><br><span class="line">    printf(&quot;Hello World!&quot;);</span><br><span class="line">      return 0;</span><br><span class="line">  &#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<figure class="highlight cpp"><figcaption><span>我是标题</span><a href="https://siriusq.top/">我是链接文本</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="代码块语言说明"><a href="#代码块语言说明" class="headerlink" title="代码块语言说明"></a>代码块语言说明</h2><p>Hexo默认使用highlight.js实现代码高亮，下面的是常用的语言样式写法，更多样式请移步<a href="https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md">官网</a></p>
<p>三个反引号后面的语言格式说明</p>
<table>
<thead>
<tr>
<th align="center">语言</th>
<th align="center">格式</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Bash</td>
<td align="center">bash, sh, zsh</td>
</tr>
<tr>
<td align="center">C#</td>
<td align="center">csharp, cs</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">c,h</td>
</tr>
<tr>
<td align="center">C++</td>
<td align="center">cpp, hpp, cc, hh, c++, h++, cxx, hxx</td>
</tr>
<tr>
<td align="center">CSS</td>
<td align="center">css</td>
</tr>
<tr>
<td align="center">Django</td>
<td align="center">django, jinja</td>
</tr>
<tr>
<td align="center">DOS</td>
<td align="center">dos, bat, cmd</td>
</tr>
<tr>
<td align="center">Excel</td>
<td align="center">excel, xls, xlsx</td>
</tr>
<tr>
<td align="center">Go</td>
<td align="center">go, golang</td>
</tr>
<tr>
<td align="center">HTML</td>
<td align="center">xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg</td>
</tr>
<tr>
<td align="center">ini</td>
<td align="center">ini</td>
</tr>
<tr>
<td align="center">JSON</td>
<td align="center">json</td>
</tr>
<tr>
<td align="center">Java</td>
<td align="center">java, jsp</td>
</tr>
<tr>
<td align="center">JavaScript</td>
<td align="center">javascript, js, jsx</td>
</tr>
<tr>
<td align="center">LaTeX</td>
<td align="center">tex</td>
</tr>
<tr>
<td align="center">Matlab</td>
<td align="center">matlab</td>
</tr>
<tr>
<td align="center">Markdown</td>
<td align="center">markdown, md, mkdown, mkd</td>
</tr>
<tr>
<td align="center">Makefile</td>
<td align="center">makefile, mk, mak, make</td>
</tr>
<tr>
<td align="center">Nginx</td>
<td align="center">nginx, nginxconf</td>
</tr>
<tr>
<td align="center">Objective-C</td>
<td align="center">objectivec, mm, objc, obj-c, obj-c++, objective-c++</td>
</tr>
<tr>
<td align="center">PHP</td>
<td align="center">php</td>
</tr>
<tr>
<td align="center">PostgreSQL &amp; PL&#x2F;pgSQL</td>
<td align="center">pgsql, postgres, postgresql</td>
</tr>
<tr>
<td align="center">PowerShell</td>
<td align="center">powershell, ps, ps1</td>
</tr>
<tr>
<td align="center">Processing</td>
<td align="center">processing</td>
</tr>
<tr>
<td align="center">Python</td>
<td align="center">python, py, gyp</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">r</td>
</tr>
<tr>
<td align="center">Ruby</td>
<td align="center">ruby, rb, gemspec, podspec, thor, irb</td>
</tr>
<tr>
<td align="center">SQL</td>
<td align="center">sql</td>
</tr>
<tr>
<td align="center">Shell</td>
<td align="center">shell, console</td>
</tr>
<tr>
<td align="center">Stylus</td>
<td align="center">stylus, styl</td>
</tr>
<tr>
<td align="center">Swift</td>
<td align="center">swift</td>
</tr>
<tr>
<td align="center">TypeScript</td>
<td align="center">typescript, ts</td>
</tr>
<tr>
<td align="center">VBScript</td>
<td align="center">vbscript, vbs, vb</td>
</tr>
<tr>
<td align="center">VB.Net</td>
<td align="center">vbnet</td>
</tr>
<tr>
<td align="center">Vim Script</td>
<td align="center">vim</td>
</tr>
<tr>
<td align="center">x86 Assembly</td>
<td align="center">x86asm</td>
</tr>
<tr>
<td align="center">YAML</td>
<td align="center">yml, yaml</td>
</tr>
</tbody></table>
<h1 id="小文本"><a href="#小文本" class="headerlink" title="小文本"></a>小文本</h1><p>在文本两端分别加入<code>&lt;small&gt;</code>和<code>&lt;/small&gt;</code>即可生成小文本</p>
<p><strong>示例</strong><br><code>&lt;small&gt;小文本&lt;/small&gt;</code></p>
<p><strong>预览效果</strong></p>
<p><small>小文本</small></p>
<h1 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h1><p>在使用一些特殊符号(如<code>#</code>)时需要在符号前加<code>\</code>进行转义，否则符号不会正确显示</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\#</span><br><span class="line">\*</span><br><span class="line">\!</span><br><span class="line">\+</span><br><span class="line">\-</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<p>#<br>*<br>!<br>+<br>-</p>
<h2 id="特殊转义"><a href="#特殊转义" class="headerlink" title="特殊转义"></a>特殊转义</h2><p>部分特殊字符需要使用字符串转义，下面是参考表，并不是所有的地方都需要转义，仅供参考</p>
<table>
<thead>
<tr>
<th align="center">特殊字符</th>
<th align="center">转义符号</th>
<th align="center">中文名称</th>
<th align="center">英文名称</th>
</tr>
</thead>
<tbody><tr>
<td align="center">“&#33;”</td>
<td align="center"><code>&amp;#33;</code></td>
<td align="center">感叹号</td>
<td align="center">Exclamation mark</td>
</tr>
<tr>
<td align="center">&#34;</td>
<td align="center"><code>&amp;#34;</code> <code>&amp;quot;</code></td>
<td align="center">双引号</td>
<td align="center">Quotation mark</td>
</tr>
<tr>
<td align="center">&#35;</td>
<td align="center"><code>&amp;#35;</code></td>
<td align="center">数字标志</td>
<td align="center">Number sign</td>
</tr>
<tr>
<td align="center">&#36;</td>
<td align="center"><code>&amp;#36;</code></td>
<td align="center">美元标志</td>
<td align="center">Dollar sign</td>
</tr>
<tr>
<td align="center">&#37;</td>
<td align="center"><code>&amp;#37;</code></td>
<td align="center">百分号</td>
<td align="center">Percent sign</td>
</tr>
<tr>
<td align="center">&#38;</td>
<td align="center"><code>&amp;#38;</code> <code>&amp;amp;</code></td>
<td align="center">与</td>
<td align="center">Ampersand</td>
</tr>
<tr>
<td align="center">&#39;</td>
<td align="center"><code>&amp;#39;</code></td>
<td align="center">单引号</td>
<td align="center">Apostrophe</td>
</tr>
<tr>
<td align="center">&#40;</td>
<td align="center"><code>&amp;#40;</code></td>
<td align="center">小括号左边部分</td>
<td align="center">Left parenthesis</td>
</tr>
<tr>
<td align="center">&#41;</td>
<td align="center"><code>&amp;#41;</code></td>
<td align="center">小括号右边部分</td>
<td align="center">Right parenthesis</td>
</tr>
<tr>
<td align="center">&#42;</td>
<td align="center"><code>&amp;#42;</code></td>
<td align="center">星号</td>
<td align="center">Asterisk</td>
</tr>
<tr>
<td align="center">&#43;</td>
<td align="center"><code>&amp;#43;</code></td>
<td align="center">加号</td>
<td align="center">Plus sign</td>
</tr>
<tr>
<td align="center">&#60;</td>
<td align="center"><code>&amp;#60;</code> <code>&amp;lt;</code></td>
<td align="center">小于号</td>
<td align="center">Less than</td>
</tr>
<tr>
<td align="center">&#61;</td>
<td align="center"><code>&amp;#61;</code></td>
<td align="center">等于符号</td>
<td align="center">Equals sign</td>
</tr>
<tr>
<td align="center">&#45;</td>
<td align="center"><code>&amp;#45;</code> <code>&amp;minus;</code></td>
<td align="center">减号</td>
<td align="center">Minus</td>
</tr>
<tr>
<td align="center">&#62;</td>
<td align="center"><code>&amp;#62;</code> <code>&amp;gt;</code></td>
<td align="center">大于号</td>
<td align="center">Greater than</td>
</tr>
<tr>
<td align="center">&#63;</td>
<td align="center"><code>&amp;#63;</code></td>
<td align="center">问号</td>
<td align="center">Question mark</td>
</tr>
<tr>
<td align="center">&#64;</td>
<td align="center"><code>&amp;#64;</code></td>
<td align="center">艾特</td>
<td align="center">Commercial at</td>
</tr>
<tr>
<td align="center">&#91;</td>
<td align="center"><code>&amp;#91;</code></td>
<td align="center">中括号左边部分</td>
<td align="center">Left square bracket</td>
</tr>
<tr>
<td align="center">&#92;</td>
<td align="center"><code>&amp;#92;</code></td>
<td align="center">反斜杠</td>
<td align="center">Reverse solidus (backslash)</td>
</tr>
<tr>
<td align="center">&#93;</td>
<td align="center"><code>&amp;#93;</code></td>
<td align="center">— 中括号右边部分</td>
<td align="center">Right square bracket</td>
</tr>
<tr>
<td align="center">&#123;</td>
<td align="center"><code>&amp;#123;</code></td>
<td align="center">大括号左边部分</td>
<td align="center">Left curly brace</td>
</tr>
<tr>
<td align="center">&#124;</td>
<td align="center"><code>&amp;#124;</code></td>
<td align="center">竖线</td>
<td align="center">Vertical bar</td>
</tr>
<tr>
<td align="center">&#125;</td>
<td align="center"><code>&amp;#125;</code></td>
<td align="center">大括号右边部分</td>
<td align="center">Right curly brace</td>
</tr>
<tr>
<td align="center">&emsp;</td>
<td align="center"><code>&amp;emsp;</code></td>
<td align="center">空格</td>
<td align="center">Space</td>
</tr>
</tbody></table>
<h1 id="字体颜色大小"><a href="#字体颜色大小" class="headerlink" title="字体颜色大小"></a>字体颜色大小</h1><ul>
<li>Hexo只支持黑色字体，可以使用Html语言调整颜色，使用<code>&lt;font color=&quot;ff0000&quot;&gt;</code>和<code>&lt;/font&gt;</code>包裹需要变色的字体，<code>ff0000</code>可以替换为其他颜色代码。</li>
<li>字号同样使用Html语言调整，使用<code>&lt;font size=12&gt;</code>和<code>&lt;/font&gt;</code>包裹需要改变大小的字体，<code>font size=</code>后是调整的字号。</li>
<li>字体同样使用Html语言调整，使用<code>&lt;font face=&quot;华文彩云&quot;&gt;</code>和<code>&lt;/font&gt;</code>包裹需要改变的字体，<code>font face=</code>后是调整的字体名称。</li>
<li>颜色字号字体三者可以叠加使用</li>
</ul>
<p><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;ff0000&quot;</span>&gt;</span>这是红色字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">2</span>&gt;</span>这是2号字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;华文彩云&quot;</span>&gt;</span>这是华文彩云字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;华文彩云&quot;</span> <span class="attr">size</span>=<span class="string">2</span> <span class="attr">color</span>=<span class="string">&quot;ff0000&quot;</span>&gt;</span>这是2号红色华文彩云字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览</strong><br><font color="ff0000">这是红色字</font><br><font size=2>这是2号字</font><br><font face="华文彩云">这是华文彩云字</font><br><font face="华文彩云" size=2 color="ff0000">这是2号红色华文彩云字</font></p>
<h1 id="字体居中"><a href="#字体居中" class="headerlink" title="字体居中"></a>字体居中</h1><p>字体居中同样使用Html标记包裹<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>这是居中字体<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure>

<center>这是居中字体</center>

<details class="note danger"><summary><p>已废弃的老用法</p>
</summary>
<p><strong>示例</strong></p>
<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">centerquote</span> %&#125;</span><span class="language-xml">这是居中字体</span><span class="template-tag">&#123;% <span class="name">endcenterquote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">&quot;blockquote-center&quot;</span>&gt;</span>这是居中字体<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">cq</span> %&#125;</span><span class="language-xml">这是居中字体</span><span class="template-tag">&#123;% <span class="name">endcq</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<blockquote class="blockquote-center">
<p>这是居中字体</p>

</blockquote>
 <blockquote class="blockquote-center">这是居中字体</blockquote>
<blockquote class="blockquote-center">
<p>这是居中字体</p>

</blockquote>
</details>

<h1 id="勾选框"><a href="#勾选框" class="headerlink" title="勾选框"></a>勾选框</h1><p>一种类似todo list的东西，注意这里不能点击交互，只能做展示用<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">- [ ] 这是没勾的勾选框</span><br><span class="line">- [x] 这是勾上的勾选框</span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<ul>
<li><input disabled="" type="checkbox"> 这是没勾的勾选框</li>
<li><input checked="" disabled="" type="checkbox"> 这是勾选框</li>
</ul>
<details class="note danger"><summary><p>已失效的首行缩进</p>
</summary>
<h1 id="首行缩进（已失效）"><a href="#首行缩进（已失效）" class="headerlink" title="首行缩进（已失效）"></a>首行缩进（已失效）</h1><p>Hexo会把缩进的空格忽略掉，所以需要使用转义来进行首行缩进</p>
<p><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>这是首行缩进的文本</span><br></pre></td></tr></table></figure>

<p><strong>预览</strong><br>&emsp;&emsp;这是首行缩进的文本</p>

</details>

<h1 id="链接到其他文章"><a href="#链接到其他文章" class="headerlink" title="链接到其他文章"></a>链接到其他文章</h1><p>Hexo支持引入其他文章链接，语法为<code>&#123;% post_path slug %&#125;</code>和<code>&#123;% post_link slug [title] %&#125;</code>,其中<code>slug</code>是要引用markdown的文件名，title是引用文章的标题</p>
<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">post_link</span> Hexo博客踩坑指北 [Hexo博客指北] %&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<a href="/Hexo%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8C%97.html" title="Hexo博客踩坑指北">[Hexo博客指北]</a>

<h1 id="文字背景色"><a href="#文字背景色" class="headerlink" title="文字背景色"></a>文字背景色</h1><p>文字背景色需要使用Html表格设置，在<code>bgcolor</code>后设置文字背景色，使用颜色英文名<br><strong>预览</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">lightblue</span>&gt;</span>背景色yellow<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>示例</strong></p>
<table><tr><td bgcolor=lightblue>亮蓝色背景色</td></tr></table>

<h1 id="Note标签"><a href="#Note标签" class="headerlink" title="Note标签"></a>Note标签</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>需要在Next主题配置文件中选择样式，打开<code>_config.next.yml</code>并搜索<code>Note tag (bs-callout)</code>,下面是我的配置,<code>style</code>共有4种，预览可以在<a href="https://github.com/iissnan/hexo-theme-next/pull/1697">这里</a>查看，<code>icon</code>用于设置是否显示图标。Note中的标题同样会显示在目录中。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Note tag (bootstrap callout)</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bootstrap callout old alert style. Default.</span><br><span class="line">  #  - modern    bootstrap callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -<span class="number">12</span> | <span class="number">12</span>; flat: -<span class="number">18</span> | <span class="number">6</span>).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> [class] [no-icon] [summary] %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Any content (support inline tags too).</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>[class] : 可选参数，控制Note的种类，一共有6种<ul>
<li>default</li>
<li>primary</li>
<li>success</li>
<li>info</li>
<li>warning</li>
<li>danger.</li>
</ul>
</li>
<li>[no-icon] : 可选参数，开启后会不显示Note的图标.</li>
<li>[summary] : 可选参数，作为对Note内容的总结概括，开启后剩余内容将被折叠。</li>
</ul>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### 啥都没有的默认样式</span></span><br><span class="line"><span class="language-xml">我是啥都没有的默认样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="note "><h3 id="啥都没有的默认样式"><a href="#啥都没有的默认样式" class="headerlink" title="啥都没有的默认样式"></a>啥都没有的默认样式</h3><p>我是啥都没有的默认样式</p>
</div>

</br>

<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> default %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### 默认样式</span></span><br><span class="line"><span class="language-xml">我是默认样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> primary %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### primary样式</span></span><br><span class="line"><span class="language-xml">我是primary样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> info %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### info样式</span></span><br><span class="line"><span class="language-xml">我是info样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> success %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### success样式</span></span><br><span class="line"><span class="language-xml">我是success样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> warning %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### warning样式</span></span><br><span class="line"><span class="language-xml">我是warning样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> danger %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### danger样式</span></span><br><span class="line"><span class="language-xml">我是danger样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="note default"><h3 id="默认样式"><a href="#默认样式" class="headerlink" title="默认样式"></a>默认样式</h3><p>我是默认样式</p>
</div>

<div class="note primary"><h3 id="primary样式"><a href="#primary样式" class="headerlink" title="primary样式"></a>primary样式</h3><p>我是primary样式</p>
</div>

<div class="note info"><h3 id="info样式"><a href="#info样式" class="headerlink" title="info样式"></a>info样式</h3><p>我是info样式</p>
</div>

<div class="note success"><h3 id="success样式"><a href="#success样式" class="headerlink" title="success样式"></a>success样式</h3><p>我是success样式</p>
</div>

<div class="note warning"><h3 id="warning样式"><a href="#warning样式" class="headerlink" title="warning样式"></a>warning样式</h3><p>我是warning样式</p>
</div>

<div class="note danger"><h3 id="danger样式"><a href="#danger样式" class="headerlink" title="danger样式"></a>danger样式</h3><p>我是danger样式</p>
</div>

</br>

<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> info no-icon %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### 无图标的info样式</span></span><br><span class="line"><span class="language-xml">我是无图标的info样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="note info no-icon"><h3 id="无图标的info样式"><a href="#无图标的info样式" class="headerlink" title="无图标的info样式"></a>无图标的info样式</h3><p>我是无图标的info样式</p>
</div>

</br>

<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> info 带summary的样式 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">### 带summary的样式</span></span><br><span class="line"><span class="language-xml">我是带summary的样式</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<details class="note info"><summary><p>带summary的样式</p>
</summary>
<h3 id="带summary的样式"><a href="#带summary的样式" class="headerlink" title="带summary的样式"></a>带summary的样式</h3><p>我是带summary的样式</p>

</details>

</br>

<details class="note danger"><summary><p>老方法（不推荐）</p>
</summary>
<h2 id="老方法（不推荐）"><a href="#老方法（不推荐）" class="headerlink" title="老方法（不推荐）"></a>老方法（不推荐）</h2><p>使用<code>&lt;div&gt;</code>包裹需要显示的内容，<code>class</code>后面显示note的风格，加上<code>no-icon</code>可以隐藏图标<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note default&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>default<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note primary&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note success&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>success<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>info<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note warning&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note danger&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>danger<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;note default no-icon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>danger no-icon<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<div class="note default"><p>default</p></div>
<div class="note primary"><p>primary</p></div>
<div class="note success"><p>success</p></div>
<div class="note info"><p>info</p></div>
<div class="note warning"><p>warning</p></div>
<div class="note danger"><p>danger</p></div>
<div class="note default no-icon"><p>danger no-icon</p></div>
</details>



<h1 id="Label标签"><a href="#Label标签" class="headerlink" title="Label标签"></a>Label标签</h1><p>在<code>@</code>前调整label的风格，<code>@</code>后输入显示的内容<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;% label default@这是default %&#125;</span><br><span class="line">&#123;% label primary@这是primary %&#125;</span><br><span class="line">&#123;% label success@这是success %&#125;</span><br><span class="line">&#123;% label info@这是info %&#125;</span><br><span class="line">&#123;% label warning@这是warning %&#125;</span><br><span class="line">&#123;% label danger@这是danger %&#125;</span><br></pre></td></tr></table></figure>

<p>**预览</p>
<mark class="label default">这是default</mark>
<mark class="label primary">这是primary</mark>
<mark class="label success">这是success</mark>
<mark class="label info">这是info</mark>
<mark class="label warning">这是warning</mark>
<mark class="label danger">这是danger</mark>

<h1 id="Tab-tag选项卡"><a href="#Tab-tag选项卡" class="headerlink" title="Tab tag选项卡"></a>Tab tag选项卡</h1><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>在Next主题文件中搜索<code>Tabs tag</code>，然后将<code>enable</code>设置为<code>true</code>，下面是我的配置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Tabs tag</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: true</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>自定义的选项较多<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 1.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 2.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 3.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<p><strong>示例</strong><br>第一行的数字3表示默认显示的Tabs,设置为-1时表示不显示默认Tabs</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Second unique name, 3 %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 1.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 2.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab --&gt;</span></span><br><span class="line">**This is Tab 3.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<div class="tabs" id="second-unique-name"><ul class="nav-tabs"><li class="tab"><a href="#second-unique-name-1">Second unique name 1</a></li><li class="tab"><a href="#second-unique-name-2">Second unique name 2</a></li><li class="tab active"><a href="#second-unique-name-3">Second unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="second-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="second-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane active" id="second-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<p><strong>示例</strong><br>选项的名称和图标可以自定义，在<code>&lt;!-- tab 自定义名称@自定义图标 --&gt;</code>中调整</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Third unique name %&#125;</span><br><span class="line"><span class="comment">&lt;!-- tab Solution 1@text-width --&gt;</span></span><br><span class="line">**This is Tab 1.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab Solution 2@code --&gt;</span></span><br><span class="line">**This is Tab 2.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- tab Solution 3@bold --&gt;</span></span><br><span class="line">**This is Tab 3.**</span><br><span class="line"><span class="comment">&lt;!-- endtab --&gt;</span></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>预览</strong></p>
<div class="tabs" id="third-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#third-unique-name-1"><i class="fa fa-text-width"></i>Solution 1</a></li><li class="tab"><a href="#third-unique-name-2"><i class="fa fa-code"></i>Solution 2</a></li><li class="tab"><a href="#third-unique-name-3"><i class="fa fa-bold"></i>Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="third-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="third-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="third-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>

<h1 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h1><p><strong>示例</strong><br>使用<code>button</code>或者<code>btn</code>，在两者后面加入要跳转的链接，不加链接的话默认跳转到当前页面</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//只显示文字，Text是文字内容</span><br><span class="line">&#123;% button https://siriusq.top/, 主页 %&#125;</span><br><span class="line"></span><br><span class="line">//多个按钮并列</span><br><span class="line">&#123;% btn https://siriusq.top/, 主页 %&#125; &#123;% btn #, Text &amp; Title,, Title %&#125;</span><br><span class="line"></span><br><span class="line">//只显示图标</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;% btn https://siriusq.top/,, home fa-5x %&#125;</span><br><span class="line">&#123;% btn #,, home fa-4x %&#125;</span><br><span class="line">&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home %&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//显示文字和图标</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;% btn #, Text &amp; Icon (buggy), home %&#125;</span><br><span class="line">&#123;% btn #, Text &amp; Icon (fixed width), home fa-fw %&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览</strong><br>只显示文字</p>
<a class="btn" href="https://siriusq.top/">主页</a>

<p>多个按钮并列</p>
<a class="btn" href="https://siriusq.top/">主页</a> <a class="btn" href="#" title="Title">Text & Title</a>

<p>只显示图标</p>
<p><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a>
<a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a>
<a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a><a class="btn" href="#"><i class="fa fa-home"></i></a></p>

<p>显示文字和图标</p>
<p><a class="btn" href="#"><i class="fa fa-home"></i>Text & Icon (buggy)</a>
<a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text & Icon (fixed width)</a></p>

<h1 id="Link-Grid-链接格网"><a href="#Link-Grid-链接格网" class="headerlink" title="Link Grid 链接格网"></a>Link Grid 链接格网</h1><p>可以单个用，也可以组合成格网。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">linkgrid</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Siriusq | https://siriusq.top/ | May the Force be with you. | /images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endlinkgrid</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/apple-touch-icon-next.png"></object>
<p>Siriusq</p><p>May the Force be with you.</p>
<a href="https://siriusq.top/"></a>
</div></div>

</br>

<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">linkgrid</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Siriusq | https://siriusq.top/ | May the Force be with you. | /images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="language-xml">Siriusq | https://siriusq.top/ | May the Force be with you. | /images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="language-xml">Siriusq | https://siriusq.top/ | May the Force be with you. | /images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="language-xml">Siriusq | https://siriusq.top/ | May the Force be with you. | /images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endlinkgrid</span> %&#125;</span></span><br></pre></td></tr></table></figure>

<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/apple-touch-icon-next.png"></object>
<p>Siriusq</p><p>May the Force be with you.</p>
<a href="https://siriusq.top/"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/apple-touch-icon-next.png"></object>
<p>Siriusq</p><p>May the Force be with you.</p>
<a href="https://siriusq.top/"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/apple-touch-icon-next.png"></object>
<p>Siriusq</p><p>May the Force be with you.</p>
<a href="https://siriusq.top/"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/apple-touch-icon-next.png"></object>
<p>Siriusq</p><p>May the Force be with you.</p>
<a href="https://siriusq.top/"></a>
</div></div>

<h1 id="插入音乐-视频"><a href="#插入音乐-视频" class="headerlink" title="插入音乐&#x2F;视频"></a>插入音乐&#x2F;视频</h1><p>因为Github Page提供的空间有限，音乐和视频建议上传到B站或Youtube等平台，通过Html语言嵌入，直接复制网页提供的分享链接即可，使用<code>width</code>设置宽度，<code>height</code>设置高度</p>
<h2 id="标签"><a href="#标签" class="headerlink" title="&lt;video&gt;标签"></a><code>&lt;video&gt;</code>标签</h2><p>使用<code>source src</code>设置视频路径<br><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;320&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.mp4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>预览（并没有视频）</strong><br><video width="480" height="320" controls></p>
<source src="movie.mp4">
</video>

<h2 id="标签-1"><a href="#标签-1" class="headerlink" title="&lt;embed&gt;标签"></a><code>&lt;embed&gt;</code>标签</h2><p><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&#x27;http://player.youku.com/player.php/sid/XMzUzNjg1OTQzNg==/v.swf&#x27;</span> <span class="attr">allowFullScreen</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">quality</span>=<span class="string">&#x27;high&#x27;</span> <span class="attr">width</span>=<span class="string">&#x27;480&#x27;</span> <span class="attr">height</span>=<span class="string">&#x27;400&#x27;</span> <span class="attr">align</span>=<span class="string">&#x27;middle&#x27;</span> <span class="attr">allowScriptAccess</span>=<span class="string">&#x27;always&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;application/x-shockwave-flash&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览（随便放的）</strong><br><embed src='http://player.youku.com/player.php/sid/XMzUzNjg1OTQzNg==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p>
<h2 id="标签-2"><a href="#标签-2" class="headerlink" title="&lt;iframe&gt;标签"></a><code>&lt;iframe&gt;</code>标签</h2><p><strong>示例</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">400</span> <span class="attr">width</span>=<span class="string">600</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=14176961&amp;cid=23141262&amp;page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>预览（自己的B站软广）</strong><br>下面的链接是通过网页端的分享 - 嵌入代码获取的，直接复制就行</p>
<iframe height=400 width=600 src="//player.bilibili.com/player.html?aid=14176961&cid=23141262&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><h2 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h2><ul>
<li>安装图片插件<ul>
<li>在博客根目录中运行Git bash</li>
<li>输入命令<code>npm install hexo-asset-image</code>等待安装完成</li>
</ul>
</li>
<li>修改配置文件<ul>
<li>打开博客根目录的<code>_config.yml</code></li>
<li>搜索<code>psot_asset_folder</code>并将其设置为<code>true</code></li>
</ul>
</li>
<li>使用方法<ul>
<li>使用命令<code>hexo new &quot;title&quot;</code>创建新博文时会生成一个同名文件夹</li>
<li>将要插入的图片放入同名文件夹中</li>
<li>使用markdown格式引入图片，下面三种都可以,最后一种可以通过后面的数字控制大小<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![替代文字](博客标题/图片名.JPG)</span><br><span class="line">![替代文字](/博客标题/图片名.JPG)</span><br><span class="line">&#123;% img full-image /博客标题/图片名.JPG 180 180 图片名 %&#125;</span><br></pre></td></tr></table></figure></li>
<li>运行<code>hexo s</code>即可本地查看效果</li>
</ul>
</li>
</ul>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![替代文字](Markdown写作语法/201904133.JPG)</span><br><span class="line">![替代文字](/Markdown写作语法/201904133.JPG)</span><br><span class="line">&#123;% img full-image /Markdown写作语法/201904133.JPG 180 180 图片名 %&#125;</span><br></pre></td></tr></table></figure>
<p><strong>预览</strong></p>
<p><img data-src="https://s2.loli.net/2022/05/13/xUltoBvL9pO1SGE.jpg" alt="替代文字"><br><img data-src="https://s2.loli.net/2022/05/13/xUltoBvL9pO1SGE.jpg" alt="替代文字"></p>
<img data-src="https://s2.loli.net/2022/05/13/xUltoBvL9pO1SGE.jpg" class="full-image" width="180" height="180" title="图片名">

<details class="note danger"><summary><p>已废弃的老用法</p>
</summary>
<h2 id="Next-8-已废弃的老用法"><a href="#Next-8-已废弃的老用法" class="headerlink" title="Next 8 已废弃的老用法"></a>Next 8 已废弃的老用法</h2><p>使用链接形式插入图片</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![图片alt](图片url 图片title)</span><br></pre></td></tr></table></figure>
<p>其中<code>图片alt</code>为图片下面的文字，相当于注释，<code>图片url</code>为图片的地址，<code>图片title</code>为鼠标悬浮到图片上显示的内容，此项选填</p>
<h2 id="一点微小的工作"><a href="#一点微小的工作" class="headerlink" title="一点微小的工作"></a>一点微小的工作</h2><p>Next主题默认会在图片四周生成一圈灰色边框影响美观，对此需要修改<code>博客目录\themes\next\source\css\_common\components\post</code>中的<code>post-expand.styl</code>文件。<br>在文件中搜索<code>img</code>，并将其修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    margin: 0 auto 25px;</span><br><span class="line">    padding: 3px;</span><br><span class="line">    border: none;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>重新部署后灰色边框就会消失</p>

</details>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>图片后缀大小写要匹配</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>在文字前加<code>#</code>和空格，支持六级标题和大小标题，一定不要漏了 <strong>空格</strong>，空格漏掉的话会和普通字符一样显示</p>
<p><strong>示例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br><span class="line">大标题</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">小标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><strong>预览效果</strong></p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><h2 id="小标题"><a href="#小标题" class="headerlink" title="小标题"></a>小标题</h2><h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>Hexo中常用的Markdown语法大概就这些了，填坑结束~</p>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>开站纪念</title>
    <url>/New.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">第一篇博客，搭网站踩坑踩到自闭，留下当作开站纪念了</blockquote>

<span id="more"></span>

<p>我是一个默默无闻的纪念碑hhh</p>
<p>评论区可以当作留言板哦</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>Next 8.10 升级日志</title>
    <url>/Next-8-0-%E5%8D%87%E7%BA%A7%E6%97%A5%E5%BF%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">2022年5月我将博客主题Next升级到了8.10版本，然后这一年多的时间里一直有些小的改动，索性就把这篇博文作为我自己的更新日志了，目前我的Next主题已经更新到了8.18.2</blockquote>

<span id="more"></span>

<h1 id="升级log"><a href="#升级log" class="headerlink" title="升级log"></a>升级log</h1><p>Next主题的官网又双叒叕更换了，谷歌搜出来靠前的都是老版本的网站，害得我找了半天。建议挂梯子访问，直接访问巨慢。</p>
<div class="note info"><p><a class="btn" href="https://theme-next.js.org/docs/"><i class="fa fa-torii-gate fa-fw"></i>Next8.0 官方文档传送门</a></p></div>

<p>8.0版本又整合了不少东西进去，比起老版本配置起来更方便了。因为网站源文件前一阵子被我折腾崩了，所以这次又是重新手动配置（😭）。不过文档内容很全，基本上跟着文档走一遍就差不多了。这次更新的内容有：</p>
<ul>
<li>更换了custom files的格式，从<code>swig</code>更换成了<code>njk</code>，语法没啥变化</li>
<li>代码块主题更换为<code>github-dark</code>与<code>github-dark-dimmed</code></li>
<li>图片查看工具从<code>mediumzoom</code>切换为<code>fancybox</code></li>
<li>开启<code>pangu</code>，自动在汉字和单词之间添加空格</li>
<li>开启<code>quicklink</code>预读取，提高加载速度</li>
<li>字体更换为<code>思源宋体</code>与<code>Fira Code</code></li>
<li>图片全部转移到图床 sm.ms</li>
<li>必应搜索收录</li>
<li>新的看板娘</li>
<li>自定义鼠标样式</li>
<li>移动端渐变背景</li>
<li>自定义滚动条</li>
<li>自定义代码块样式</li>
<li>关于页面增加Github贡献墙</li>
<li>内容不满一屏footer也置底</li>
<li>归档标签目录单独分页控制</li>
<li>文章结束提醒</li>
<li>加密&#x2F;隐藏文章</li>
<li><del>部分js、css文件通过JSDelivr分发</del></li>
<li>船新的404页面</li>
<li>自定义博文模板</li>
<li>网站崩溃欺骗更新</li>
</ul>
<h1 id="JSDelivr"><a href="#JSDelivr" class="headerlink" title="JSDelivr"></a>JSDelivr</h1><details class="note danger"><summary><p>得嘞，JSDelivr被墙了，这一段不用看了，GFW你坏事做尽。</p>
</summary>
<p>原来扔给JSDelivr的文件放到了<code>./source/</code>里面</p>
<p>这次升级把一些自定义的js和css文件放到了JSDelivr来加速，JSDelivr是一个CDN服务商，可以为Github、npm等提供镜像加速，Next主题自身的一些文件也是使用JSDelivr来加速的。</p>
<div class="note info"><p><a class="btn" href="https://www.jsdelivr.com/"><i class="fa fa-torii-gate fa-fw"></i>JSDelivr 官网传送门</a></p></div>

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h3><ol>
<li>在GitHub创建一个仓库，然后<code>clone</code>到本地</li>
<li>把自己要用的文件丢进去，然后<code>push</code>到GitHub</li>
<li>回到仓库，添加<code>release</code></li>
<li>自定义一个版本号<code>tag</code>，如下图所示</li>
<li><code>Publish release</code>发布</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/05/15/mxAPTqov2UVQL9d.png" alt="tag"></p>
<h3 id="JSDelivr"><a href="#JSDelivr" class="headerlink" title="JSDelivr"></a>JSDelivr</h3><p>引用规则为<code>https://cdn.jsdelivr.net/gh/GitHub用户名/GitHub仓库名@发布的tag/文件路径</code>，例如下面我的文件<code>cursor.css</code>的引用路径就是<code>https://cdn.jsdelivr.net/gh/Siriusq/CDN@6.0/cursor.min.css</code>，其中</p>
<ul>
<li><code>Siriusq</code>是我的用户名</li>
<li><code>CDN</code>是我的仓库名</li>
<li><code>6.0</code>是我的tag，这里也可以用<code>latest</code>代替，表示使用最新版</li>
<li><code>cursor.min.css</code>是我的文件路径，其中<code>.min</code>表示请求JSDelivr进行压缩，不想压缩可以去掉</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/05/15/tmeGD8vOcCZxky2.png" alt="举个栗子🌰"></p>
<p>然后把链接粘贴到对应位置即可</p>

</details>

<h1 id="字体更换"><a href="#字体更换" class="headerlink" title="字体更换"></a>字体更换</h1><p>默认的字体在高分屏上有点糊，就换成了很多博客都在用<code>思源宋体</code>，代码字体也换成了<code>Fira Code</code>与<code>思源宋体</code>。Next现在支持按优先级选用字体，如果排在前面的字体中找不到需要的字符，就会使用下一个字体，如果所有指定字体都没有需要的字符，则会使用默认字体，在Windows下为微软雅黑。更多字体可以去<code>Google Fonts</code>找</p>
<div class="note info"><p><a class="btn" href="https://fonts.google.com/"><i class="fa fa-torii-gate fa-fw"></i>Google Fonts 传送门</a></p></div>

<p>打开Next主题的配置文件<code>_config.next.yml</code>，定位到<code># Font Settings</code>，更改下面几个选项，<code>Noto Serif SC</code>即<code>思源宋体</code></p>
<figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Noto</span> <span class="string">Serif</span> <span class="string">SC</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Fira</span> <span class="string">Code,</span> <span class="string">Noto</span> <span class="string">Serif</span> <span class="string">SC</span></span><br></pre></td></tr></table></figure>


<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>图床我选用的是<code>sm.ms</code>，免费版有5GB容量，而且它在国内的访问速度和稳定性都不错，足够我的博客使用了。单次上传图片上限是10张，支持jpg、png、gif等常用格式，并且在上传后会自动生成Markdown使用的图片链接。</p>
<div class="note info"><p><a class="btn" href="https://sm.ms/"><i class="fa fa-torii-gate fa-fw"></i>SM.MS 官网传送门</a></p></div>

<h1 id="必应搜索收录"><a href="#必应搜索收录" class="headerlink" title="必应搜索收录"></a>必应搜索收录</h1><p>首先前往Bing Webmasters，登录并添加自己的网站。</p>
<div class="note info"><p><a class="btn" href="https://www.bing.com/webmasters/"><i class="fa fa-torii-gate fa-fw"></i>Bing Webmasters 传送门</a></p></div>

<p><img data-src="https://s2.loli.net/2022/05/14/CgEhTziQwpZqbNc.png" alt="添加网站"></p>
<p>如果以前已经在谷歌收录的话可以选择直接从Google Search Console导入，但是需要授权，我懒得搞，就还是选择了手动添加hhh。手动添加有三种方式，我选择的是第二种，向网页添加HTML Meta标签，这也是Next官方内置的方法。</p>
<p><img data-src="https://s2.loli.net/2022/05/14/MDxcUdybVQORf2B.png" alt="验证方式"></p>
<p>复制content后面的内容，然后打开Next主题的配置文件，找到<code>bing_site_verification</code>，粘贴到后面并保存，然后<code>hexo cl &amp;&amp; hexo g -d</code>一键三连，再返回Bing Webmasters点击验证就大功告成了。</p>
<h1 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h1><div class="note primary"><p>鼠标样式我是按照<a class="btn" href="https://akilar.top/posts/ebf20e02/#%E9%BC%A0%E6%A0%87%E6%8C%87%E9%92%88%E6%A0%B7%E5%BC%8F%E6%9B%BF%E6%8D%A2"><i class="fa fa-blog fa-fw"></i>akilar</a>的文章配置的，特此感谢</p></div>

<ul>
<li>在<code>./node_modules/hexo-theme-next/source/css/</code>中新建文件夹<code>cursor</code></li>
<li>将收集到的鼠标样式文件扔到新建的文件夹中</li>
<li>打开<code>_config.next.yml</code></li>
<li>定位到到<code>custom_file_path:</code></li>
<li>取消<code>style: source/_data/styles.styl</code>的注释</li>
<li>打开<code>./source/_data/styles.styl</code>，粘贴并修改下面的代码<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 鼠标样式 */</span></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/arrow.cur&#x27;</span>),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停图片时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/btn.cur&#x27;</span>),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择链接标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/link.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选中输入框时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/input.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停按钮时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/btn.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停列表标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">i</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/link.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/hf.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停页码时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> <span class="selector-class">.page-number</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/i.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停菜单栏时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.site-page</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&#x27;/css/cursor/hf.cur&#x27;</span>),auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>目前只支持<code>.cur</code>格式的文件，如果下载的是<code>.ani</code>格式的文件可以用<a href="https://www.axialis.com/cursorworkshop/">CursorWorkshop</a>修改，有免费试用版，快乐白嫖</p>
<h1 id="移动端渐变背景"><a href="#移动端渐变背景" class="headerlink" title="移动端渐变背景"></a>移动端渐变背景</h1><div class="note primary"><p>背景部分参考了 <a class="btn" href="https://seikasahara.com/p/1578.html"><i class="fa fa-blog fa-fw"></i>卡尔霍恩的小屋</a> 的文章，特此感谢</p></div>

<p>因为Safari这个笨蛋浏览器不支持<code>background-attachment:fixed</code>和<code>background-size:cover</code>的同时使用，所以用原来的方法设置的背景图片会被竖向拉长到和整个网页一样长。而且考虑到移动端的加载速度比较慢，背景图片对加载速度影响很大，所以干脆把图片改成了CSS渐变背景。</p>
<p>同鼠标样式一样，背景也是在<code>./source/_data/styles.styl</code>中配置的，代码如下</p>
<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">https://s2.loli.net/2022/05/05/rfhuq7tG9jbB1wc.jpg</span>);//图片路径</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;//是否随着网页上下滚动而滚动，fixed为固定</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;//图片位置</span><br><span class="line">    <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">    -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.95</span>;//透明度</span><br><span class="line">    <span class="selector-tag">footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#727272</span>;//底部文字颜色</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">990px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to bottom, <span class="number">#1F1C2C</span> <span class="number">0%</span>, <span class="number">#928DAB</span> <span class="number">50%</span>, <span class="number">#D7DDE8</span> <span class="number">100%</span>);//图片路径</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;//图片位置</span><br><span class="line">    <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">    -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.90</span>;</span><br><span class="line">    <span class="selector-tag">footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#727272</span>;//底部文字颜色</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上半段是原来使用的桌面端配置，下面的是移动端配置，使用<code>@media</code>规则。</p>
<blockquote>
<p><code>@media</code>规则在媒体查询中用于为不同的媒体类型&#x2F;设备应用不同的样式。媒体查询可用于检查许多事情，诸如：</p>
<ul>
<li>视口的宽度和高度</li>
<li>设备的宽度和高度</li>
<li>方向（手机或平板电脑处于横屏还是竖屏模式？）</li>
<li>分辨率</li>
</ul>
<p>引自 “CSS @media 规则,” Com.cn. [Online]. Available: <a href="https://www.w3school.com.cn/cssref/pr_mediaquery.asp">https://www.w3school.com.cn/cssref/pr_mediaquery.asp</a>. [Accessed: 21-May-2022].</p>
</blockquote>
<p>其中<code>max-width:</code>表示当浏览器窗口小于990px时，将背景调整为线性渐变样式<code>linear-gradient</code>，<code>to bottom</code>表示渐变方向为从上到下，颜色后面的<code>%</code>表示颜色的中止位置，如果只有两种颜色的话可以忽略掉。关于渐变样式的详细配置请参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Images/Using_CSS_gradients">使用 CSS 渐变</a>。另外渐变样式可以参考<a href="https://uigradients.com/">uiGradients</a>和<a href="https://color.oulu.me/index.html">oulu</a>两个网站</p>
<h1 id="自定义滚动条"><a href="#自定义滚动条" class="headerlink" title="自定义滚动条"></a>自定义滚动条</h1><div class="note primary"><p>滚动条是按照 <a class="btn" href="https://226yzy.com/2022/010948485.html#%E6%BB%9A%E5%8A%A8%E6%9D%A1"><i class="fa fa-blog fa-fw"></i>星空下的YZY</a> 的文章配置的，特此感谢</p></div>

<p>同上，打开<code>./source/_data/styles.styl</code>，代码如下</p>
<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#7d7d7d</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>你可以使用以下伪元素选择器去修改基于 webkit 的浏览器的滚动条样式：</p>
<ul>
<li><code>::-webkit-scrollbar</code> —— 整个滚动条</li>
<li><code>::-webkit-scrollbar-button</code> —— 滚动条上的按钮（上下箭头）</li>
<li><code>::-webkit-scrollbar-thumb</code> —— 滚动条上的滚动滑块</li>
<li><code>::-webkit-scrollbar-track</code> —— 滚动条轨道</li>
<li><code>::-webkit-scrollbar-track-piece</code> —— 滚动条没有滑块的轨道部分</li>
<li><code>::-webkit-scrollbar-corner</code> —— 当同时有垂直滚动条和水平滚动条时交汇的部分,通常是浏览器窗口的右下角</li>
<li><code>::-webkit-resizer</code> —— 出现在某些元素底角的可拖动调整大小的滑块。</li>
</ul>
<p>引自 :“-webkit-scrollbar,” Mozilla.org. [Online]. Available: <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::-webkit-scrollbar">https://developer.mozilla.org/zh-CN/docs/Web/CSS/::-webkit-scrollbar</a>. [Accessed: 21-May-2022].</p>
</blockquote>
<h1 id="自定义代码块样式"><a href="#自定义代码块样式" class="headerlink" title="自定义代码块样式"></a>自定义代码块样式</h1><p>同上，打开<code>./source/_data/styles.styl</code>，代码如下</p>
<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7f50</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.05</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">figure</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="selector-class">.gutter</span> &#123;</span><br><span class="line">    pre &#123;</span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">var</span>(--highlight-background);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">figcaption</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--highlight-background);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#c7ecee</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Fira Code, Noto Serif SC;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5rem</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">1.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">1.53rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中<code>code</code>控制的是单行的代码块样式，<code>figure.highlight</code>控制的是多行代码块的样式，多行代码块调整了行号与标题的背景颜色（调整成了和代码一样的背景）、标题的文字颜色以及位置（移动到了最顶部）。</p>
<h1 id="GitHub贡献墙"><a href="#GitHub贡献墙" class="headerlink" title="GitHub贡献墙"></a>GitHub贡献墙</h1><div class="note primary"><p>GitHub贡献墙使用的是 <a class="btn" href="https://github.com/2016rshah/githubchart-api"><i class="fa fa-code-branch fa-fw"></i>Github Chart API</a> ，特此感谢</p></div>

<p>使用方法非常简单，插入下面的代码就完事了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/你的GitHub用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Github chart&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果想要修改色块颜色的话可以修改为，把<code>6c5ce7</code>替换为想使用的HEX基准色，其他颜色会自动生成，不需要加#</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/6c5ce7/你的GitHub用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Github chart&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="FancyBox隐藏caption"><a href="#FancyBox隐藏caption" class="headerlink" title="FancyBox隐藏caption"></a>FancyBox隐藏caption</h1><p>FancyBox的caption不太美观，所以要消灭它！（其实是隐藏了）<br>打开<code>./source/_data/styles.styl</code>，代码如下</p>
<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">// 隐藏图片名</span><br><span class="line"><span class="selector-class">.fancybox</span> <span class="selector-class">.image-caption</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="footer置底"><a href="#footer置底" class="headerlink" title="footer置底"></a>footer置底</h1><div class="note primary"><p>参考了 <a class="btn" href="https://www.jianshu.com/p/a8f72005e9c0"><i class="fa fa-blog fa-fw"></i>smilv</a> 的文章，特此感谢</p></div>

<p>在标签页和目录页中，当页面的内容不满一屏时，footer会很突兀的跑到页面中间，下面的样式可以让footer始终在底部。<br>打开<code>./source/_data/styles.styl</code>，代码如下</p>
<figure class="highlight css"><figcaption><span>styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">// <span class="selector-tag">footer</span>置底</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="comment">/* 与.footer的高度对应 */</span></span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">112px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">112px</span>;</span><br><span class="line">    <span class="comment">/* 与.footer的高度对应 */</span></span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">112px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="归档标签目录单独分页控制"><a href="#归档标签目录单独分页控制" class="headerlink" title="归档标签目录单独分页控制"></a>归档标签目录单独分页控制</h1><p>打开<code>./config.yml</code>，找到<code># Pagination</code>，在下面添加下面的代码</p>
<figure class="highlight yml"><figcaption><span>./config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Archive Pagination</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tag Pagination</span></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category Pagination</span></span><br><span class="line"><span class="attr">category_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure>

<h1 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h1><p>原来的404页面移动端适配做的不好，就换了个新的</p>
<ul>
<li>首先打开<code>_config.yml</code>，注意不是next主题的</li>
<li>定位到<code>relative_link: </code>并设置为<code>false</code></li>
<li>在根目录执行<code>hexo new page 404</code>创建<code>./source/404</code>文件夹</li>
<li>打开生成的<code>index.md</code>文件，在<code>title</code>下面加上这些：<figure class="highlight css"><figcaption><span>404/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">type: <span class="string">&quot;404&quot;</span></span><br><span class="line">permalink: /<span class="number">404</span></span><br><span class="line">layout: false</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li>
<li>然后找个顺眼的模板套上就行了，注意<strong>缩进不要超过4个空格</strong>，会不识别</li>
</ul>
<p>下面是我的代码</p>
<figure class="highlight html"><figcaption><span>404/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">title</span>&gt;</span>Sirius - 404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/404font/404fonts.css&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/404cat.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial:index.partial.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-wrapper&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">data-content</span>=<span class="string">&quot;404&quot;</span>&gt;</span></span><br><span class="line">  404</span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;subtitle&quot;</span>&gt;</span></span><br><span class="line">  诶？页面走丢了喵~</span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buttons&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>回主页看看吧~<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- partial --&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后是两个<code>css</code>文件</p>
<div class="note info"><p><a class="btn" href="/css/404cat.css"><i class="fa fa-download fa-fw"></i>404cat.css</a>
<a class="btn" href="/css/404font/404fonts.css"><i class="fa fa-download fa-fw"></i>404fonts.css</a></p></div>

<h1 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h1><div class="note primary"><p>看板娘的配置参考了<a class="btn" href="https://akilar.top/posts/5b8f515f/"><i class="fa fa-blog fa-fw"></i>akilar</a>的文章，特此感谢</p></div>

<div class="note warning"><p>前排提醒，看板娘对网站加载速度影响很大喔，但是吧，没有看板娘的网站莫得灵魂🐶</p></div>

<p>原来使用的看板娘插件是<code>hexo-helper-live2d</code>，但是已经几年没有更新过了，<code>npm</code>安装的时候报了8项风险，于是更换成了<a href="https://github.com/stevenjoezhang/live2d-widget">张书樵</a>大佬的<code>live2d-widget</code>。</p>
<div class="note info"><p><a class="btn" href="https://github.com/stevenjoezhang/live2d-widget"><i class="fa fa-torii-gate fa-fw"></i>live2d-widget</a></p></div>

<p>然后模型调用的API使用了<a href="https://github.com/fghrsh/live2d_api">fghrsh</a>大佬的<code>live2d_api</code>。</p>
<div class="note info"><p><a class="btn" href="https://github.com/fghrsh/live2d_api"><i class="fa fa-torii-gate fa-fw"></i>live2d_api</a></p></div>

<h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="live2d-api配置"><a href="#live2d-api配置" class="headerlink" title="live2d_api配置"></a>live2d_api配置</h3><ol>
<li>把<code>live2d_api</code>项目的压缩包下载到本地，移动到<code>./source/</code>目录下<div class="note info"><p><a class="btn" href="https://github.com/fghrsh/live2d_api/archive/refs/heads/master.zip"><i class="fa fa-download fa-fw"></i>live2d_api下载</a></p></div></li>
<li>解压后把文件夹重命名为<code>live2d_api</code></li>
<li>模型文件都在<code>model</code>文件夹中<ul>
<li>注意每一个模型文件夹内都有<code>index.json</code>文件，用来确定模型信息。从别处下载的模型文件里一般不是这种命名，可能叫做<code>模型名.json</code>或者<code>模型名.model.json</code>，记得修改，不然读取不到模型信息的</li>
<li>采用<code>单模型 多组皮肤</code>目录结构的模型会出现无法换装的问题，解决方案是调整为<code>同分组 多个模型</code>的目录结构。目录结构细节详见<a href="https://github.com/fghrsh/live2d_api#%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9E%8B">README.md</a></li>
<li>调整完目录结构记得修改<code>model_list.json</code></li>
<li><code>model_list.json</code>中的<code>message</code>用于控制模型出场时说的话，与上面模型的顺序一一对应</li>
</ul>
</li>
</ol>
<h3 id="live2d-widget配置"><a href="#live2d-widget配置" class="headerlink" title="live2d-widget配置"></a>live2d-widget配置</h3><ol>
<li>把<code>live2d-widget</code>项目的压缩包下载到本地，移动到<code>./source/</code>目录下<div class="note info"><p><a class="btn" href="https://github.com/stevenjoezhang/live2d-widget/archive/refs/heads/master.zip"><i class="fa fa-download fa-fw"></i>live2d-widget下载</a></p></div></li>
<li>解压后把文件夹重命名为<code>live2d-widget</code></li>
<li>打开<code>./source/live2d-widget/autoload.js</code>，修改下列参数<ul>
<li><code>const live2d_path = &quot;xxxx&quot;;</code>，将<code>xxxx</code>修改为<code>/live2d-widget/</code></li>
<li>将<code>initWidget</code>中的<code>cdnPath</code>修改为<code>/live2d_api/</code></li>
<li><code>if (screen.width &gt;= 768)</code>里面可以调整显示看板娘的最小屏幕横向分辨率，这里表示在分辨率小于<code>768</code>的设备上看板娘不会显示</li>
</ul>
</li>
<li>打开<code>waifu.css</code>，修改看板娘配置<ul>
<li><code>#waifu</code>中的参数可以调整看板娘位置。其中<code>left: 0;</code>表示看板娘显示在屏幕左边，修改为<code>right: 0;</code>则会显示在右侧</li>
<li><code>#waifu-tool</code>中的参数可以调整看板娘旁边工具栏样式</li>
<li><code>#waifu-tips</code>中的参数可以调整看板娘对话框样式，添加color可以调整字体颜色</li>
</ul>
</li>
</ol>
<h3 id="引入js"><a href="#引入js" class="headerlink" title="引入js"></a>引入js</h3><p>打开<code>source/_data/head.njk</code>，粘贴下面的代码</p>
<figure class="highlight html"><figcaption><span>head.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后<code>hexo s</code>就能去浏览器里<del>调戏</del>自己的看板娘啦~</p>
<h1 id="文章结束提醒"><a href="#文章结束提醒" class="headerlink" title="文章结束提醒"></a>文章结束提醒</h1><ul>
<li>打开<code>_config.next.yml</code></li>
<li>定位到到<code>custom_file_path:</code></li>
<li>取消<code>postBodyEnd: source/_data/post-body-end.njk</code>的注释</li>
<li>新建<code>./source/_data/post-body-end.njk</code>，粘贴下面的代码<figure class="highlight html"><figcaption><span>head.njk</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;</span></span><br><span class="line">          ---------- 我是有底线哒 <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-dice-d20&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 感谢您的阅读 ----------</span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h1><p>hexo-hide-posts插件可以实现在博客中隐藏指定的文章，并使它们仅可通过链接访问。当一篇文章被设置为「隐藏」时，它不会出现在任何列表中（包括首页、存档、分类页面、标签页面、Feed、站点地图等），也不会被搜索引擎索引（前提是搜索引擎遵守 noindex 标签）。只有知道文章链接的人才可以访问被隐藏的文章。</p>
<div class="note info"><p><a class="btn" href="https://github.com/prinsss/hexo-hide-posts/blob/master/README_ZH.md"><i class="fa fa-torii-gate fa-fw"></i>hexo-hide-posts</a></p></div>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-hide-posts</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在文章的<code>front-matter</code>中添加<code>hidden: true</code>即可隐藏文章，例如</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x27;我是标题&#x27;</span><br><span class="line"><span class="section">hidden: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>虽然首页上被隐藏了，但你仍然可以通过<code>https://hexo.test/我是标题/</code>链接访问它，当然这个链接只有你自己知道咯。</p>
<p>使用下面的命令可以列出所有已经隐藏的文章</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">hidden</span>:list</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在Hexo的配置文件<code>_config.yml</code>中添加如下配置</p>
<figure class="highlight md"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="section"># hexo-hide-posts</span></span><br><span class="line">hide<span class="emphasis">_posts:</span></span><br><span class="line"><span class="emphasis">  enable: true</span></span><br><span class="line"><span class="emphasis">  # 可以改成其他你喜欢的名字</span></span><br><span class="line"><span class="emphasis">  filter: hidden</span></span><br><span class="line"><span class="emphasis">  # 指定你想要传递隐藏文章的 generator，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line"><span class="emphasis">  # 常见的 generators 有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line"><span class="emphasis">  public_</span>generators: []</span><br><span class="line">  # 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span><br><span class="line">  noindex: true</span><br></pre></td></tr></table></figure>

<h1 id="加密文章"><a href="#加密文章" class="headerlink" title="加密文章"></a>加密文章</h1><p>虽然前面隐藏了文章，但还是不够安全，毕竟有被猜到文章标题的可能，然后就是大型社死现场了~</p>
<p>加密文章可以通过<code>hexo-blog-encrypt</code>插件实现</p>
<div class="note info"><p><a class="btn" href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md"><i class="fa fa-torii-gate fa-fw"></i>hexo-blog-encrypt</a></p></div>

<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> hexo<span class="literal">-blog-encrypt</span></span><br></pre></td></tr></table></figure>

<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>在文章的<code>front-matter</code>中添加<code>password: 你的密码</code>即可隐藏文章，<code>password</code>后面的都是选填内容。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: 有东西被加密了诶.</span><br><span class="line">message: 请输入密码吧.</span><br><span class="line">wrong<span class="emphasis">_pass_</span>message: 错咯错咯，不给看哟.</span><br><span class="line"><span class="section">wrong<span class="emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p>在Hexo的配置文件<code>_config.yml</code>中添加如下配置，这里是全局配置，就不需要每个加密的文章都设置一遍了。另外插件预设了8款主题，可以在这里设置，预览请到GitHub看</p>
<figure class="highlight md"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 有东西被加密了诶.</span><br><span class="line">  message: 请输入密码吧.</span><br><span class="line">  theme: blink</span><br><span class="line">  wrong<span class="emphasis">_pass_</span>message: 错咯错咯，不给看哟.</span><br><span class="line">  wrong<span class="emphasis">_hash_</span>message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure>

<h2 id="目录bug"><a href="#目录bug" class="headerlink" title="目录bug"></a>目录bug</h2><p>插件没有支持next的目录，默认情况下不会显示目录。我试了好久也没能成功，摆烂了。感兴趣的可以参考下面的issue。</p>
<div class="note info"><p><a class="btn" href="https://github.com/D0n9X1n/hexo-blog-encrypt/issues/58"><i class="fa fa-code-branch fa-fw"></i>How to encrypt TOC under NexT theme</a></p></div>

<p>而且据说文章加密后，目录还是能够从html中看到，依旧有泄密风险。如果对加密实在是刚需的话，建议更换原生支持加密的主题，如<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">blinkfox</a></p>
<h1 id="自定义博文模板"><a href="#自定义博文模板" class="headerlink" title="自定义博文模板"></a>自定义博文模板</h1><p>每次执行<code>hexo new</code>命令创建新博文时，总会有一些固定的内容（如<code>lang: zh-CN</code>）需要手动粘贴进去，为了偷懒，我这次直接把这些内容添加到了博文的模板中，这样每次创建新博文时都会自带这些内容。</p>
<p>博文的模板文件是博客根目录下的<code>./scaffolds/post.md</code>，修改完成后是这个样子：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">lang: zh-cn</span><br><span class="line">tags: []</span><br><span class="line"><span class="section">categories: </span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">&quot;blockquote-center&quot;</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">样式</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% grouppicture 6-3 %&#125;</span><br><span class="line">图片组</span><br><span class="line">&#123;% endgrouppicture %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% linkgrid %&#125;</span><br><span class="line">名称 | https://siriusq.top | 简介 | /images/link/link.webp</span><br><span class="line">&#123;% endlinkgrid %&#125;</span><br></pre></td></tr></table></figure>

<h1 id="新版崩溃欺骗"><a href="#新版崩溃欺骗" class="headerlink" title="新版崩溃欺骗"></a>新版崩溃欺骗</h1><div class="note warning"><p>提醒：新方法仅支持8.18.0及以后的版本</p>
</div>

<p>原来的崩溃欺骗功能需要用到jQuery，而 Next 8.18.0 更新了fancybox 5，彻底移除了对jQuery的依赖，继续使用老版本就需要手动添加jQuery的引用。再加上jQuery对网页加载速度的影响比较大，于是我就借此机会让ChatGPT帮我转换了原来的代码，也移除了对jQuery的依赖。此外，我还添加了根据浏览器主题是亮色或暗色来使用不同的崩溃图标的功能。</p>
<p>同老方法一样，在<code>./source/js</code>中新建<code>crash_cheat.js</code>，向文件中粘贴下面的代码：</p>
<figure class="highlight js"><figcaption><span>crash_cheat.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitle</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="keyword">var</span> crashedIcon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="title function_">matchMedia</span>(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>).<span class="property">matches</span>) &#123;</span><br><span class="line">    crashedIcon = <span class="string">&quot;/images/crashed-dark.png&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    crashedIcon = <span class="string">&quot;/images/crashed.png&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> icons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;link[rel=&#x27;icon&#x27;]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; icons.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            icons[i].<span class="property">href</span> = crashedIcon;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦~&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> icons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;link[rel=&#x27;icon&#x27;]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; icons.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            icons[i].<span class="property">href</span> = <span class="string">&quot;/images/favicon.png&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 诶嘿，又好了~ &#x27;</span> + <span class="title class_">OriginTitle</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitle</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>然后在<code>./source/_data/body-end.swig</code>中添加下面的代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--崩溃欺骗--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/crash_cheat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>图标文件需要放在<code>./source/images</code>路径下，可以直接用我做好的图标：</p>
<ul>
<li><a href="https://github.com/Siriusq/Siriusq.github.io/blob/master/images/crashed.png">亮色图标下载</a></li>
<li><a href="https://github.com/Siriusq/Siriusq.github.io/blob/master/images/crashed-dark.png">暗色图标下载</a></li>
</ul>
<p>完结撒花~</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题美化(仅7.1版本)</title>
    <url>/Next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96.html</url>
    <content><![CDATA[<p>博客主题更换为<a href="https://github.com/theme-next/hexo-theme-next">Next</a>，本博文仅适用于Next7.10主题<br><img data-src="https://s2.loli.net/2022/05/13/wn7zegYd1hSMAqQ.jpg" alt="201904121"></p>
<p>为了节省空间，图片我就不放了（<del>才不是因为懒</del>）</p>
<hr>
<p>本篇内容包括：</p>
<ul>
<li>Next 主题的安装</li>
<li>Next 主题的配置</li>
<li>Next 主题深度美化</li>
</ul>
<span id="more"></span>

<div class="note danger"><p>注意：此方法不适用于新版本Next主题</p>
</div>

<h1 id="Next-主题的安装"><a href="#Next-主题的安装" class="headerlink" title="Next 主题的安装"></a>Next 主题的安装</h1><p>Next主题安装和闪烁之狐一样，直接将克隆到博客文件夹即可，命令如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>由于Next主题比较简洁，所以等待数秒即可安装完成</p>
<p>由于Next主题一直在更新，所以此处加一个更新命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>安装完成后到根目录下的<code>_config.yml</code>在<code>theme：</code>后添加<code>next</code>即可</p>
<h1 id="Next-主题的配置"><a href="#Next-主题的配置" class="headerlink" title="Next 主题的配置"></a>Next 主题的配置</h1><p>安装完成后还需要进一步配置主题</p>
<h2 id="根目录下-config-yml的配置"><a href="#根目录下-config-yml的配置" class="headerlink" title="根目录下_config.yml的配置"></a>根目录下<code>_config.yml</code>的配置</h2><h3 id="Site设置"><a href="#Site设置" class="headerlink" title="Site设置"></a>Site设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Siriusq</span><br><span class="line">subtitle: Hello World!</span><br><span class="line">description: 一只想变成程序猿的建筑狗</span><br><span class="line">keywords:</span><br><span class="line">author: Sirius</span><br><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure>
<p><code>title:</code> 填写标题<br><code>subtitle:</code> 填写副标题<br><code>description:</code> 简介<br><code>keywords:</code> 关键词<br><code>author:</code> 作者，文章中显示的作者名称<br><code>language:</code> 设置语言，zh-CN是简体中文，en是英语，默认是德语</p>
<h3 id="URL栏设置"><a href="#URL栏设置" class="headerlink" title="URL栏设置"></a>URL栏设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in <span class="selector-tag">a</span> subdirectory, set url as &#x27;http://yoursite.com/child<span class="string">&#x27; and root as &#x27;</span>/child/<span class="string">&#x27;</span></span><br><span class="line"><span class="string">url: https://Siriusq.github.io</span></span><br><span class="line"><span class="string">root: /</span></span><br><span class="line"><span class="string">permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="string">permalink_defaults:</span></span><br></pre></td></tr></table></figure>

<p><code>url:</code>填写博客在Github的二级域名，如 <code>https://Siriusq.github.io</code><br><code>permalink:</code>是生成博客页面时的路径名，一般是<code>:year/:month/:day/:title/</code></p>
<h3 id="翻页设置"><a href="#翻页设置" class="headerlink" title="翻页设置"></a>翻页设置</h3><p>共有两处，用于控制每一页显示多少篇博文</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"># per_page: Posts displayed per page. (<span class="number">0</span> = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  per_page: <span class="number">12</span></span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to <span class="number">0</span> to disable pagination</span><br><span class="line">per_page: <span class="number">12</span></span><br><span class="line">pagination_dir: page</span><br></pre></td></tr></table></figure>

<p><code>per_page:</code>后设置博文数量，0代表不翻页全部平铺显示</p>
<h3 id="Deployment设置"><a href="#Deployment设置" class="headerlink" title="Deployment设置"></a>Deployment设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>branch:</code>分支填写<code>master</code></p>
<p><code>repo:</code>后把<code>username</code>换成自己的用户名</p>
<h2 id="主题目录下-config-yml的配置"><a href="#主题目录下-config-yml的配置" class="headerlink" title="主题目录下_config.yml的配置"></a>主题目录下<code>_config.yml</code>的配置</h2><p><strong>文件中很多配置前面都带有<code>#</code>，删掉它就可以激活选项</strong></p>
<h3 id="网站Logo设置"><a href="#网站Logo设置" class="headerlink" title="网站Logo设置"></a>网站Logo设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-<span class="number">16</span>x16-next.png</span><br><span class="line">  medium: /images/favicon-<span class="number">32</span>x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  #safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br></pre></td></tr></table></figure>

<p>把选好的图标放入<code>\themes\next\source\images</code>目录中并改成上面的文件名即可，注意图片尺寸</p>
<h3 id="页脚设置"><a href="#页脚设置" class="headerlink" title="页脚设置"></a>页脚设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">footer</span>:</span><br><span class="line">  # Specify the date when the site was setup. If not defined, current year will be used.</span><br><span class="line">  since: <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon:</span><br><span class="line">    # Icon name in fontawesome, see: https://fontawesome.com/v4.<span class="number">7.0</span>/icons/</span><br><span class="line">    # `heart` is recommended with animation in red (<span class="number">#ff0000</span>).</span><br><span class="line">    name: heart</span><br><span class="line">    # If you want to animate the icon, set it to true.</span><br><span class="line">    animated: true</span><br><span class="line">    # Change the color of icon, using Hex Code.</span><br><span class="line">    color: <span class="string">&quot;#f08080&quot;</span></span><br><span class="line"></span><br><span class="line">  # If not defined, `author` from Hexo main config will be used.</span><br><span class="line">  copyright: Siriusq</span><br><span class="line"></span><br><span class="line">  powered:</span><br><span class="line">    # Hexo link (Powered by Hexo).</span><br><span class="line">    enable: false</span><br><span class="line">    # Version info of Hexo after Hexo link (vX.X.X).</span><br><span class="line">    version: false</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: false</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: false</span><br></pre></td></tr></table></figure>
<p><code>since:</code> 表示网站成立的年份，不设置的话默认是当前年份，显示为<code>© 2019</code><br><code>icon:</code> 中设置年份后面的图标，默认是心形，想修改的话去<a href="https://fontawesome.com/">Fontawesome</a>选择图标，然后再<code>name</code>栏修改<br><code>animated:</code> 用于设置心形是否跳动<br><code>color:</code> 用于设置图标颜色，百度对照色表查就好<br><code>copyright:</code> 显示图标后面的版权所属，也就是作者名，不设置的话默认显示根目录配置文件中的作者名<br><code>powered:</code> 后面的栏目用于设定是否显示<code>Powered by Hexo</code>以及当前主题的版本信息，显示的话设为<code>true</code><br><code>theme:</code> 后面的栏目用于设定是否显示当前主题的版本信息，显示的话将设为<code>true</code></p>
<h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language: en</span><br></pre></td></tr></table></figure>

<p><code>license:</code>用于设置版权标准，具体可以去<a href="https://creativecommons.org/share-your-work/licensing-types-examples">Creative Commons</a>查看<br><code>sidebar:</code>用于设置是否在侧边栏显示版权标准<br><code>post:</code>用于设置是否在文章底部显示版权信息<br><code>language:</code>用于设置语言</p>
<h3 id="Github角标"><a href="#Github角标" class="headerlink" title="Github角标"></a>Github角标</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># `Follow me on GitHub` banner in the <span class="attribute">top</span>-<span class="attribute">right</span> corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/Siriusq</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure>

<p><code>enable:</code>用于设置是否在页面右上角显示Github三角标<br><code>permalink:</code>后面填写你的Github地址<br><code>title:</code>用于设置鼠标移动到图标后显示的文字</p>
<h3 id="侧边栏菜单设置"><a href="#侧边栏菜单设置" class="headerlink" title="侧边栏菜单设置"></a>侧边栏菜单设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  switch_lang: /en || language</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /<span class="number">404</span>/ || heartbeat</span><br></pre></td></tr></table></figure>

<p><code>||</code>前表示页面的地址，后面表示显示的图标名称<br><code>about:</code>用于设置<code>关于</code>页面，没有的话在Git bash中使用<code>hexo new page &quot;about&quot;</code>创建，然后打开<code>\source\about\index.md</code>就可以编写了<br><code>tags:</code>用于设置<code>标签</code>功能，同样使用命令<code>hexo new page &quot;tags&quot;</code>创建，然后打开<code>source\tags\index.md</code>并在日期后面添加一行<code>type: &quot;tags&quot;</code>，写博文时在顶部加上一栏<code>tags: []</code>即可设置标签，多个标签中间使用<code>,</code>分隔<br><code>archieves:</code>用于设置归档页面<br><code>categories:</code>用于设置目录页面，编辑博文时在顶部加上一栏<code>categories: </code>就可以为博文设置所属目录</p>
<h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>Next有四个主题可供选择</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"><span class="selector-id">#scheme</span>: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>把想要的主题前面的<code>#</code>删掉即可</p>
<h3 id="社交网站链接设置"><a href="#社交网站链接设置" class="headerlink" title="社交网站链接设置"></a>社交网站链接设置</h3><p>在侧边栏可以设置显示社交链接，让更多人了解自己</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/Siriusq || github</span><br><span class="line">  E-Mail: mailto:siriuskevin@foxmail.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure>

<p>在<code>||</code>前输入你社交主页的链接即可，后面用于设置图标<br><code>E-mail:</code>栏格式为<code>mailto:邮箱地址</code>，在win10系统可以调用系统邮件服务自动填写收件人</p>
<h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>用于设置是否在侧边栏显示头像</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # In theme directory (source/images): /images/avatar.gif</span><br><span class="line">  # In site directory (source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/avatar.gif</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # The value of opacity should be choose from <span class="number">0</span> to <span class="number">1</span> to set the opacity of the avatar.</span><br><span class="line">  opacity: <span class="number">1</span></span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure>

<p>在<code>url:</code>后填写头像图片的路径，默认在<code>\themes\next\source\images</code>中<br><code>rounded:</code>用于设置是否显示圆形头像<br><code>opacity:</code>用于设置头像透明度，1为不透明<br><code>rotated:</code>用于设置头像鼠标移动到头像上时头像是否旋转</p>
<h3 id="侧边栏目录设置"><a href="#侧边栏目录设置" class="headerlink" title="侧边栏目录设置"></a>侧边栏目录设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># <span class="selector-tag">Table</span> Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: false</span><br><span class="line">  # Maximum heading depth of generated toc. You can set it in one post through `toc_max_depth` in Front Matter.</span><br><span class="line">  max_depth: <span class="number">6</span></span><br></pre></td></tr></table></figure>

<p><code>enable:</code>用于设置是否开启侧边栏目录<br><code>number:</code>用于设置自动编号<br><code>wrap:</code>用于设置当标题长度超过侧边栏长度时是否自动换行<br><code>expand_all:</code>用于设置是否展开全部目录，否的话会自动展开正在看的那部分<br><code>max_depth:</code>用于设置自动生成目录的最大深度，也就是生成到几级标题</p>
<h3 id="侧边栏显示设置"><a href="#侧边栏显示设置" class="headerlink" title="侧边栏显示设置"></a>侧边栏显示设置</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available values: left | right (only for Pisces | Gemini).</span><br><span class="line">  #position: left</span><br><span class="line">  position: right</span><br><span class="line"></span><br><span class="line">  # Manual define the sidebar width. If commented, will be default for:</span><br><span class="line">  # Muse | Mist: <span class="number">320</span></span><br><span class="line">  # Pisces | Gemini: <span class="number">240</span></span><br><span class="line">  width: <span class="number">320</span></span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available values (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically.</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  totally remove sidebar including sidebar toggle.</span><br><span class="line">  display: post</span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: <span class="number">12</span></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: false</span><br><span class="line">  # Click any blank part of the page to close sidebar (only for Muse | Mist).</span><br><span class="line">  dimmer: false</span><br></pre></td></tr></table></figure>

<p><code>position:</code>用于设置侧边栏在左边还是右边，把要选择的位置前面的<code>#</code>去掉再把另一个前面加上<code>#</code>即可，这个选项只对<code>Pisces</code>和<code>Gemini</code>两个主题起作用<br><code>width:</code>用于设置侧边栏的宽度，默认<code>Muse</code>和<code>Mist</code>是320,<code>Pisces</code>和<code>Gemini</code>是240<br><code>display:</code>用于设置侧边栏的显示方式，只对<code>Muse</code>和<code>Mist</code>两个主题起作用，可以挨个试一下<br><code>offset:</code>用于设置侧边栏距离顶部介绍的距离，只对<code>Pisces</code>和<code>Gemini</code>两个主题起作用<br><code>onmobile:</code>用于设置是否在手机等宽度较小的设备上显示侧边栏，只对<code>Muse</code>和<code>Mist</code>两个主题起作用<br><code>dimmer:</code>用于设置点击屏幕空白处是否关闭侧边栏，同样只对<code>Muse</code>和<code>Mist</code>两个主题起作用</p>
<h3 id="返回顶部按钮"><a href="#返回顶部按钮" class="headerlink" title="返回顶部按钮"></a>返回顶部按钮</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: true</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure>

<p><code>enable:</code>用于设置是否开启回到顶部按钮<br><code>sidebar:</code>用于设置是否将按钮放到侧边栏中<br><code>scrollpercent:</code>用于设置是否显示阅读进度百分比</p>
<h3 id="开启阅读全文选项"><a href="#开启阅读全文选项" class="headerlink" title="开启阅读全文选项"></a>开启<code>阅读全文</code>选项</h3><p>用搜索找到这一段并把<code>read_more_btn:</code>设为<code>true</code>即可</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Read more <span class="selector-tag">button</span></span><br><span class="line"># If true, the read more <span class="selector-tag">button</span> would be displayed in excerpt <span class="selector-tag">section</span>.</span><br><span class="line">read_more_btn: true</span><br></pre></td></tr></table></figure>

<p>下面这一段用于设置自动生成<code>阅读全文</code>选项</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Automatically Excerpt (Not recommend).</span><br><span class="line"># Use &lt;!-- more --&gt; in the post <span class="selector-tag">to</span> control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: <span class="number">150</span></span><br></pre></td></tr></table></figure>

<p><code>length</code>表示截止到的字符长度</p>
<p>这一段用于设置自动跳转到<code>阅读全文</code>选项之后的位置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Automatically scroll page <span class="selector-tag">to</span> <span class="selector-tag">section</span> which is under &lt;!-- more --&gt; <span class="selector-tag">mark</span>.</span><br><span class="line">scroll_to_more: true</span><br></pre></td></tr></table></figure>

<p>设置完成后，在文章内加入<code>&lt;!--more--&gt;</code>字段就可以在首页隐去剩下的文字并显示<code>阅读全文</code>按钮了</p>
<h3 id="代码块复制按钮"><a href="#代码块复制按钮" class="headerlink" title="代码块复制按钮"></a>代码块复制按钮</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  # Manual define the border radius in codeblock, leave it blank for the default value: <span class="number">1</span></span><br><span class="line">  border_radius:</span><br><span class="line">  # Add copy button on codeblock</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br><span class="line">    # Show text copy result</span><br><span class="line">    show_result: true</span><br><span class="line">    # Style: only <span class="string">&#x27;flat&#x27;</span> is currently available, leave it blank if you prefer default theme</span><br><span class="line">    style:</span><br></pre></td></tr></table></figure>

<p><code>enable：</code>用于开启代码块右上角的复制按钮<br><code>show_result:</code>用于设置是否显示复制成功提示</p>
<h3 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, reward would be displayed in every article by default.</span><br><span class="line">  # You can show or hide reward in a specific article throuth `reward: true | false` in Front Matter.</span><br><span class="line">  enable: false</span><br><span class="line">  animation: false</span><br><span class="line">  #comment: Donate comment here</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  #wechatpay: /images/wechatpay.png</span><br><span class="line">  #alipay: /images/alipay.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>

<p><code>enable:</code>用于设置是否在文章末尾显示打赏按钮<br><code>animation:</code>用于设置打上按钮是否显示动画<br><code>reward:</code>后面的选项去掉前面的<code>#</code>即可开启对应的打赏，记得替换成自己的图片，路径在<code>\themes\next\source\images</code></p>
<h3 id="代码块高亮主题"><a href="#代码块高亮主题" class="headerlink" title="代码块高亮主题"></a>代码块高亮主题</h3><p>Next主题内置了tomorrow代码高亮主题，一共有五个，可以去<a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow</a>查看预览效果，在下面的<code>highlight_theme:</code>中改成自己想要的即可</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># <span class="selector-tag">Code</span> Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: night</span><br></pre></td></tr></table></figure>

<h3 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h3><p>在左上角显示一个书签按钮可以跳转到上一次设置书签的位置<br>首先执行命令<code>git clone https://github.com/theme-next/theme-next-bookmark.git source/lib/bookmark</code>安装<a href="https://github.com/theme-next/theme-next-bookmark">bookmark</a>插件<br>然后在下面的选项中将<code>enable:</code>设置为<code>true</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Bookmark Support</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-bookmark</span><br><span class="line">bookmark:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, save the reading position when closing the page or clicking the bookmark-icon.</span><br><span class="line">  # If manual, only save it by clicking the bookmark-icon.</span><br><span class="line">  save: auto</span><br></pre></td></tr></table></figure>

<h3 id="开启RSS"><a href="#开启RSS" class="headerlink" title="开启RSS"></a>开启RSS</h3><p>话说RSS好像也没什么人用了。。。。。。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>在博客根目录执行下面的命令安装RSS插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>打开博客根目录的配置文件<code>_config.yml</code>并在末尾添加下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># RSS订阅支持</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"></span><br><span class="line"># Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: <span class="number">20</span></span><br></pre></td></tr></table></figure>

<h3 id="页面搜索功能"><a href="#页面搜索功能" class="headerlink" title="页面搜索功能"></a>页面搜索功能</h3><p>开启站内搜索功能方便快速定位</p>
<h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>执行下列命令安装插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>打开Next主题的配置文件<code>_config.yml</code>并搜索<code>local_search</code>,修改为</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -<span class="number">1</span></span><br><span class="line">  top_n_per_article: <span class="number">1</span></span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br></pre></td></tr></table></figure>


<h1 id="Next主题深度美化"><a href="#Next主题深度美化" class="headerlink" title="Next主题深度美化"></a>Next主题深度美化</h1><p><del>写不动了，慢慢填吧，全都是闲的蛋疼加上的</del></p>
<h2 id="顶部阅读进度条"><a href="#顶部阅读进度条" class="headerlink" title="顶部阅读进度条"></a>顶部阅读进度条</h2><p>在博文页面顶部添加<a href="https://github.com/theme-next/theme-next-reading-progress">Reading Progress</a>进度条，表示阅读进度，Next主题已内置配置文件</p>
<h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>切换到Next主题文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br></pre></td></tr></table></figure>
<p>安装模块到<code>source/lib</code>文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-reading-progress source/lib/reading_progress</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开Next主题路径下的配置文件<code>_config.yml</code>，搜索<code>reading_progress</code>定位到如下代码并将<code>enable: </code>设置为<code>true</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Reading progress bar</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-reading-progress</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line">  color: <span class="string">&quot;#ffc0cb&quot;</span> # 调整线条颜色</span><br><span class="line">  height: <span class="number">2px</span> # 调整线条高度</span><br></pre></td></tr></table></figure>
<p>线条颜色可以在<a href="http://www.atool9.com/colorpicker.php">ATOOL</a>查询颜色代码直接修改，默认颜色是<font color=#37c6c0>青色</font>，我修改的是<font color=#ffc0cb>粉色</font><br>顶部阅读进度条可能会和加载条重合，可以通过修改线条高度覆盖，我的线条高度设置成了<code>3px</code></p>
<h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><p>切换到安装目录</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/source/lib/reading_progress</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="加载条"><a href="#加载条" class="headerlink" title="加载条"></a>加载条</h2><p>用于在网页加载的过程中显示加载进度，Next主题已支持<a href="https://github.com/theme-next/theme-next-pace">PACE</a>功能<br>有多种加载动画可选</p>
<ul>
<li>pace-theme-big-counter</li>
<li>pace-theme-bounce</li>
<li>pace-theme-barber-shop</li>
<li>pace-theme-center-atom</li>
<li>pace-theme-center-circle</li>
<li>pace-theme-center-radar</li>
<li>pace-theme-center-simple</li>
<li>pace-theme-corner-indicator</li>
<li>pace-theme-fill-left</li>
<li>pace-theme-flash</li>
<li>pace-theme-loading-bar</li>
<li>pace-theme-mac-osx</li>
<li>pace-theme-minimal</li>
</ul>
<h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><p>切换到Next主题文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br></pre></td></tr></table></figure>
<p>安装模块到<code>source/lib</code>文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开Next主题路径下的配置文件<code>_config.yml</code>，搜索<code>pace</code>定位到如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Progress</span> bar <span class="keyword">in</span> the top during page loading.</span><br><span class="line"># <span class="title class_">Dependencies</span>: <span class="attr">https</span>:<span class="comment">//github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="attr">pace</span>: <span class="literal">true</span></span><br><span class="line"># <span class="title class_">Themes</span> <span class="attr">list</span>:</span><br><span class="line"># pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom</span><br><span class="line"># pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator</span><br><span class="line"># pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal</span><br><span class="line"><span class="attr">pace_theme</span>: pace-theme-flash</span><br></pre></td></tr></table></figure>

<p>将<code>pace:</code>设置为<code>true</code><br>将<code>pace_theme:</code>设置为上面<code>Themes list:</code>中的一种，主题样式可以在<a href="https://github.hubspot.com/pace/docs/welcome/">PACE</a>查看</p>
<h3 id="调整颜色"><a href="#调整颜色" class="headerlink" title="调整颜色"></a>调整颜色</h3><p>为了让进度条和主题背景相匹配，可以在<code>./themes/next/source/lib/pace</code>中找到相应主题的css文件并修改颜色配置<br>下面代码以<code>pace-theme-flash.min.css</code>示例</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.pace</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  -webkit-user-select: none;</span><br><span class="line">  -moz-user-select: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress-inner</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#ffc0cb</span>, <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1.0</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">3deg</span>) <span class="built_in">translate</span>(<span class="number">0px</span>, -<span class="number">4px</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">3deg</span>) <span class="built_in">translate</span>(<span class="number">0px</span>, -<span class="number">4px</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">3deg</span>) <span class="built_in">translate</span>(<span class="number">0px</span>, -<span class="number">4px</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">3deg</span>) <span class="built_in">translate</span>(<span class="number">0px</span>, -<span class="number">4px</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">3deg</span>) <span class="built_in">translate</span>(<span class="number">0px</span>, -<span class="number">4px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-activity</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">border</span>: solid <span class="number">2px</span> transparent;</span><br><span class="line">  <span class="attribute">border-top-color</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">border-left-color</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: pace-spinner <span class="number">400ms</span> linear infinite;</span><br><span class="line">  -moz-<span class="attribute">animation</span>: pace-spinner <span class="number">400ms</span> linear infinite;</span><br><span class="line">  -ms-<span class="attribute">animation</span>: pace-spinner <span class="number">400ms</span> linear infinite;</span><br><span class="line">  -o-<span class="attribute">animation</span>: pace-spinner <span class="number">400ms</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: pace-spinner <span class="number">400ms</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> pace-spinner &#123;</span><br><span class="line">  <span class="number">0%</span> &#123; -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); &#125;</span><br><span class="line">  <span class="number">100%</span> &#123; -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> pace-spinner &#123;</span><br><span class="line">  <span class="number">0%</span> &#123; -moz-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); &#125;</span><br><span class="line">  <span class="number">100%</span> &#123; -moz-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-o-keyframes</span> pace-spinner &#123;</span><br><span class="line">  <span class="number">0%</span> &#123; -o-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); &#125;</span><br><span class="line">  <span class="number">100%</span> &#123; -o-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-ms-keyframes</span> pace-spinner &#123;</span><br><span class="line">  <span class="number">0%</span> &#123; -ms-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); &#125;</span><br><span class="line">  <span class="number">100%</span> &#123; -ms-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> pace-spinner &#123;</span><br><span class="line">  <span class="number">0%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>); &#125;</span><br><span class="line">  <span class="number">100%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用搜索功能搜索<code>#</code>,定位到颜色设置，上述代码中一共有5处，颜色替换方法如下</p>
<ul>
<li>在<a href="http://www.atool9.com/colorpicker.php">ATOOL</a>查询颜色代码直接修改</li>
<li>使用<code>Visual Studio Code</code>安装css插件直接点击<code>#</code>修改颜色</li>
<li>前往<a href="https://github.hubspot.com/pace/docs/welcome/">PACE</a>选择颜色并复制代码直接替换原文件中的代码</li>
</ul>
<p>默认颜色都是<font color=#29d>蓝色</font>，上述代码修改完后是<font color=#ffc0cb>粉色</font></p>
<h3 id="升级-1"><a href="#升级-1" class="headerlink" title="升级"></a>升级</h3><p>切换到安装目录</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/source/lib/pace</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h2><p>Next主题默认提供了三种动态背景</p>
<ul>
<li><a href="https://github.com/theme-next/theme-next-canvas-nest">Canvas-nest</a></li>
<li><a href="https://github.com/theme-next/theme-next-three">JavaScript 3D library</a></li>
<li><a href="https://github.com/theme-next/theme-next-canvas-ribbon">Canvas-ribbon</a></li>
</ul>
<h3 id="Canvas-nest"><a href="#Canvas-nest" class="headerlink" title="Canvas-nest"></a>Canvas-nest</h3><p>我选用的是这个背景，比较好玩</p>
<h4 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h4><p>切换到Next主题文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br></pre></td></tr></table></figure>
<p>安装模块</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<h4 id="修改配置文件-2"><a href="#修改配置文件-2" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>打开Next主题路径下的配置文件<code>_config.yml</code>修改下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Canvas</span>-nest</span><br><span class="line"># <span class="title class_">Dependencies</span>: <span class="attr">https</span>:<span class="comment">//github.com/theme-next/theme-next-canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">onmobile</span>: <span class="literal">true</span> # 是否在手机上显示</span><br><span class="line">  <span class="attr">color</span>: <span class="string">&quot;255,51,51&quot;</span> # <span class="variable constant_">RGB</span>颜色设置</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0.5</span> # 线条透明度</span><br><span class="line">  <span class="attr">zIndex</span>: -<span class="number">1</span> # 显示级别</span><br><span class="line">  <span class="attr">count</span>: <span class="number">160</span> # 线条的数量，越多越卡</span><br></pre></td></tr></table></figure>

<p>如果想使用CDN加速的话需要设置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors</span>:</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">canvas_nest</span>: <span class="comment">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest.min.js</span></span><br><span class="line">  <span class="attr">canvas_nest_nomobile</span>: <span class="comment">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@1.0.0/canvas-nest-nomobile.min.js</span></span><br></pre></td></tr></table></figure>

<h4 id="升级-2"><a href="#升级-2" class="headerlink" title="升级"></a>升级</h4><p>切换到安装目录</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<h3 id="JavaScript-3D-library"><a href="#JavaScript-3D-library" class="headerlink" title="JavaScript 3D library"></a>JavaScript 3D library</h3><h4 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h4><p>切换到Next主题文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br></pre></td></tr></table></figure>
<p>安装模块</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-three source/lib/three</span><br></pre></td></tr></table></figure>

<h4 id="修改配置文件-3"><a href="#修改配置文件-3" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>打开Next主题路径下的配置文件<code>_config.yml</code>修改下列代码，有三种风格可选，将一种设置为<code>true</code>即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">JavaScript</span> 3D library.</span><br><span class="line"># <span class="title class_">Dependencies</span>: <span class="attr">https</span>:<span class="comment">//github.com/theme-next/theme-next-three</span></span><br><span class="line"># three_waves</span><br><span class="line"><span class="attr">three_waves</span>: <span class="literal">true</span></span><br><span class="line"># canvas_lines</span><br><span class="line"><span class="attr">canvas_lines</span>: <span class="literal">false</span></span><br><span class="line"># canvas_sphere</span><br><span class="line"><span class="attr">canvas_sphere</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="升级-3"><a href="#升级-3" class="headerlink" title="升级"></a>升级</h4><p>切换到安装目录</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/source/lib/three</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<h3 id="Canvas-ribbon"><a href="#Canvas-ribbon" class="headerlink" title="Canvas-ribbon"></a>Canvas-ribbon</h3><h4 id="安装-6"><a href="#安装-6" class="headerlink" title="安装"></a>安装</h4><p>切换到Next主题文件夹</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br></pre></td></tr></table></figure>
<p>安装模块</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon</span><br></pre></td></tr></table></figure>

<h4 id="修改配置文件-4"><a href="#修改配置文件-4" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>打开Next主题路径下的配置文件<code>_config.yml</code>修改下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Canvas</span>-ribbon</span><br><span class="line"># <span class="title class_">Dependencies</span>: <span class="attr">https</span>:<span class="comment">//github.com/theme-next/theme-next-canvas-ribbon</span></span><br><span class="line"># <span class="attr">size</span>: <span class="title class_">The</span> width <span class="keyword">of</span> the ribbon.</span><br><span class="line"># <span class="attr">alpha</span>: <span class="title class_">The</span> transparency <span class="keyword">of</span> the ribbon.</span><br><span class="line"># <span class="attr">zIndex</span>: <span class="title class_">The</span> display level <span class="keyword">of</span> the ribbon.</span><br><span class="line"><span class="attr">canvas_ribbon</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span> # 是否开启</span><br><span class="line">  <span class="attr">size</span>: <span class="number">300</span> # 宽度</span><br><span class="line">  <span class="attr">alpha</span>: <span class="number">0.6</span> # 透明度</span><br><span class="line">  <span class="attr">zIndex</span>: -<span class="number">1</span> # 显示级别</span><br></pre></td></tr></table></figure>

<h4 id="升级-4"><a href="#升级-4" class="headerlink" title="升级"></a>升级</h4><p>切换到安装目录</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/source/lib/canvas-ribbon</span><br></pre></td></tr></table></figure>
<p>更新</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h2><p>在网页中加入鼠标点击特效，目前有心形和爆炸两种特效，两者可以叠加，特效对性能较低的设备非常不友好，尤其是爆炸特效，在平板上卡成PPT，慎用……</p>
<h3 id="心形特效"><a href="#心形特效" class="headerlink" title="心形特效"></a>心形特效</h3><h4 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h4><p>在<code>./themes/next/source/js</code>中新建<code>clicklove.js</code>，并将粘贴下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(<span class="params">e,t,a</span>)&#123;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>)&#123;<span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),<span class="title function_">o</span>(),<span class="title function_">r</span>()&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.<span class="property">length</span>;e++)d[e].<span class="property">alpha</span>&lt;=<span class="number">0</span>?(t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>),d.<span class="title function_">splice</span>(e,<span class="number">1</span>)):(d[e].<span class="property">y</span>--,d[e].<span class="property">scale</span>+=<span class="number">.004</span>,d[e].<span class="property">alpha</span>-=<span class="number">.013</span>,d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span>=<span class="string">&quot;left:&quot;</span>+d[e].<span class="property">x</span>+<span class="string">&quot;px;top:&quot;</span>+d[e].<span class="property">y</span>+<span class="string">&quot;px;opacity:&quot;</span>+d[e].<span class="property">alpha</span>+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;,&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].<span class="property">color</span>+<span class="string">&quot;;z-index:99999&quot;</span>);<span class="title function_">requestAnimationFrame</span>(r)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">onclick</span>&amp;&amp;e.<span class="property">onclick</span>;e.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;t&amp;&amp;<span class="title function_">t</span>(),<span class="title function_">i</span>(e)&#125;&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);a.<span class="property">className</span>=<span class="string">&quot;heart&quot;</span>,d.<span class="title function_">push</span>(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.<span class="property">clientX</span>-<span class="number">5</span>,<span class="attr">y</span>:e.<span class="property">clientY</span>-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="title function_">s</span>()&#125;),t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);a.<span class="property">type</span>=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))&#125;<span class="keyword">catch</span>(t)&#123;a.<span class="property">styleSheet</span>.<span class="property">cssText</span>=e&#125;t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.<span class="property">requestAnimationFrame</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span>||e.<span class="property">webkitRequestAnimationFrame</span>||e.<span class="property">mozRequestAnimationFrame</span>||e.<span class="property">oRequestAnimationFrame</span>||e.<span class="property">msRequestAnimationFrame</span>||<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),<span class="title function_">n</span>()&#125;(<span class="variable language_">window</span>,<span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure>

<h4 id="修改layout文件"><a href="#修改layout文件" class="headerlink" title="修改layout文件"></a>修改layout文件</h4><p>打开<code>./themes/next/layout/_layout.swig</code>并在末尾添加以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击心形 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="爆炸特效"><a href="#爆炸特效" class="headerlink" title="爆炸特效"></a>爆炸特效</h3><h4 id="创建js文件-1"><a href="#创建js文件-1" class="headerlink" title="创建js文件"></a>创建js文件</h4><p>在<code>./themes/next/source/js</code>中新建<code>firework.js</code>，并将粘贴下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>)&#123;pointerX=(e.<span class="property">clientX</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>)-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>,pointerY=e.<span class="property">clientY</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span>-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>&#125;<span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">360</span>)*<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">180</span>,a=anime.<span class="title function_">random</span>(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.<span class="property">x</span>+n*<span class="title class_">Math</span>.<span class="title function_">cos</span>(t),<span class="attr">y</span>:e.<span class="property">y</span>+n*<span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;&#125;<span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=colors[anime.<span class="title function_">random</span>(<span class="number">0</span>,colors.<span class="property">length</span>-<span class="number">1</span>)],a.<span class="property">radius</span>=anime.<span class="title function_">random</span>(<span class="number">16</span>,<span class="number">32</span>),a.<span class="property">endPos</span>=<span class="title function_">setParticuleDirection</span>(a),a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">fillStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">fill</span>()&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=<span class="string">&quot;#F00&quot;</span>,a.<span class="property">radius</span>=<span class="number">0.1</span>,a.<span class="property">alpha</span>=<span class="number">0.5</span>,a.<span class="property">lineWidth</span>=<span class="number">6</span>,a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="property">globalAlpha</span>=a.<span class="property">alpha</span>,ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">lineWidth</span>=a.<span class="property">lineWidth</span>,ctx.<span class="property">strokeStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">stroke</span>(),ctx.<span class="property">globalAlpha</span>=<span class="number">1</span>&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">animatables</span>.<span class="property">length</span>;t++)&#123;e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="title function_">createCircle</span>(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e,t))&#125;anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>&#125;,<span class="attr">y</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.<span class="title function_">random</span>(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,i=<span class="variable language_">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;canvasEl.<span class="property">width</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerWidth</span>,canvasEl.<span class="property">height</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerHeight</span>,canvasEl.<span class="property">style</span>.<span class="property">width</span>=<span class="variable language_">window</span>.<span class="property">innerWidth</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="property">style</span>.<span class="property">height</span>=<span class="variable language_">window</span>.<span class="property">innerHeight</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=<span class="title function_">anime</span>(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,canvasEl.<span class="property">width</span>,canvasEl.<span class="property">height</span>)&#125;&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;(render.<span class="title function_">play</span>(),<span class="title function_">updateCoords</span>(e),<span class="title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="number">1</span>),<span class="title function_">setCanvasSize</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>)&#123;pointerX=(e.<span class="property">clientX</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>)-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>,pointerY=e.<span class="property">clientY</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span>-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>&#125;<span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">360</span>)*<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">180</span>,a=anime.<span class="title function_">random</span>(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.<span class="property">x</span>+n*<span class="title class_">Math</span>.<span class="title function_">cos</span>(t),<span class="attr">y</span>:e.<span class="property">y</span>+n*<span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;&#125;<span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=colors[anime.<span class="title function_">random</span>(<span class="number">0</span>,colors.<span class="property">length</span>-<span class="number">1</span>)],a.<span class="property">radius</span>=anime.<span class="title function_">random</span>(<span class="number">16</span>,<span class="number">32</span>),a.<span class="property">endPos</span>=<span class="title function_">setParticuleDirection</span>(a),a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">fillStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">fill</span>()&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=<span class="string">&quot;#F00&quot;</span>,a.<span class="property">radius</span>=<span class="number">0.1</span>,a.<span class="property">alpha</span>=<span class="number">0.5</span>,a.<span class="property">lineWidth</span>=<span class="number">6</span>,a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="property">globalAlpha</span>=a.<span class="property">alpha</span>,ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">lineWidth</span>=a.<span class="property">lineWidth</span>,ctx.<span class="property">strokeStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">stroke</span>(),ctx.<span class="property">globalAlpha</span>=<span class="number">1</span>&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">animatables</span>.<span class="property">length</span>;t++)&#123;e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="title function_">createCircle</span>(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e,t))&#125;anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>&#125;,<span class="attr">y</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.<span class="title function_">random</span>(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,i=<span class="variable language_">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;canvasEl.<span class="property">width</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerWidth</span>,canvasEl.<span class="property">height</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerHeight</span>,canvasEl.<span class="property">style</span>.<span class="property">width</span>=<span class="variable language_">window</span>.<span class="property">innerWidth</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="property">style</span>.<span class="property">height</span>=<span class="variable language_">window</span>.<span class="property">innerHeight</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=<span class="title function_">anime</span>(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,canvasEl.<span class="property">width</span>,canvasEl.<span class="property">height</span>)&#125;&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;(render.<span class="title function_">play</span>(),<span class="title function_">updateCoords</span>(e),<span class="title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="number">1</span>),<span class="title function_">setCanvasSize</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="修改layout文件-1"><a href="#修改layout文件-1" class="headerlink" title="修改layout文件"></a>修改layout文件</h4><p>打开<code>./themes/next/layout/_layout.swig</code>并在<code>&lt;head&gt;</code>中间添加以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  &lt;!-- 爆炸效果 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">&quot;fireworks&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/firework.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h4 id="配置主题文件"><a href="#配置主题文件" class="headerlink" title="配置主题文件"></a>配置主题文件</h4><p>打开<code>./themes/next</code>路径下的<code>_config.yml</code>文件并在末尾添加以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Fireworks</span></span><br><span class="line"><span class="attr">fireworks</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Live2D看板娘"><a href="#Live2D看板娘" class="headerlink" title="Live2D看板娘"></a>Live2D看板娘</h2><p>在网站角落加一个类似B站2233的看板娘，可以跟着鼠标焦点转，可以查看大佬的<a href="https://github.com/xiazeyu/live2d-widget-models">官方文档</a><br>(<del>把你们的老婆放上去吧</del>)</p>
<h3 id="安装-7"><a href="#安装-7" class="headerlink" title="安装"></a>安装</h3><ul>
<li><p>执行命令<code>npm install --save hexo-helper-live2d</code>安装<code>Live2D</code>模块</p>
</li>
<li><p>挑选自己喜欢的模型样式并执行命令<code>npm install packagename</code>安装模型，把<code>packagename</code>替换成下面模型的名字，模型有：</p>
<ul>
<li>live2d-widget-model-chitose</li>
<li>live2d-widget-model-epsilon2_1</li>
<li>live2d-widget-model-gf</li>
<li>live2d-widget-model-haru&#x2F;01 (使用命令<code>npm install --save live2d-widget-model-haru</code>安装)</li>
<li>live2d-widget-model-haru&#x2F;02 (使用命令<code>npm install --save live2d-widget-model-haru</code>安装)</li>
<li>live2d-widget-model-haruto</li>
<li>live2d-widget-model-hibiki</li>
<li>live2d-widget-model-hijiki</li>
<li>live2d-widget-model-izumi</li>
<li>live2d-widget-model-koharu</li>
<li>live2d-widget-model-miku</li>
<li>live2d-widget-model-ni-j</li>
<li>live2d-widget-model-nico</li>
<li>live2d-widget-model-nietzsche</li>
<li>live2d-widget-model-nipsilon</li>
<li>live2d-widget-model-nito</li>
<li>live2d-widget-model-shizuku</li>
<li>live2d-widget-model-tororo</li>
<li>live2d-widget-model-tsumiki</li>
<li>live2d-widget-model-unitychan</li>
<li>live2d-widget-model-wanko</li>
<li>live2d-widget-model-z16</li>
</ul>
</li>
<li><p>在<a href="https://huaji8.top/post/live2d-plugin-2.0/">这里</a>可以查看部分预览</p>
</li>
</ul>
<h3 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><ul>
<li>打开博客根目录下的配置文件<code>_config.yml</code></li>
<li>添加如下代码<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true 							# 开启Live2D</span><br><span class="line">  scriptFrom: local 					   # 插件来源</span><br><span class="line">  pluginRootPath: live2dw/ 				# 插件根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ 					  # 脚本文件路径(相对于插件根目录路径)</span><br><span class="line">  pluginModelPath: assets/ 				# 模型文件路径(相对于插件根目录)</span><br><span class="line">  tagMode: false 						  # 是否标签模式</span><br><span class="line">  debug: false 							# 是否开启调试模式</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko 		# 选择模型</span><br><span class="line">  display:</span><br><span class="line">    position: right						# 模型在页面上的位置</span><br><span class="line">    width: <span class="number">150</span> 							# 模型宽度</span><br><span class="line">    height: <span class="number">300</span> 		 				  # 模型高度</span><br><span class="line">  mobile:</span><br><span class="line">    show: true 							# 是否在手机端显示</span><br><span class="line">  react:</span><br><span class="line">    opacity: <span class="number">1</span> 							# 设置模型透明度</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="关于标签模式"><a href="#关于标签模式" class="headerlink" title="关于标签模式"></a>关于标签模式</h4><p>在想插入的页面的<code>&lt;/body&gt; </code>前插入&#123;&#123; live2d() &#125;&#125;(swig)，将<code>tagMode</code>设置为<code>true</code>, 然后插件将只会在拥有<code>live2d</code>标签的页面出现.<br>(<del>这选项我没开，老婆当然是要放在所有页面上</del>）</p>
<h4 id="仅供大佬食用"><a href="#仅供大佬食用" class="headerlink" title="仅供大佬食用"></a>仅供大佬食用</h4><p>如果想使用自己制作的模型包，可以参考：</p>
<ul>
<li>新建一个目录, 用你的Node环境执行<code>npm init</code>,推荐使用<code>live2d-widget-model-xxx</code>的包名.</li>
<li>在刚刚创建的目录下创建<code>assets</code>子目录, 把你的模型放进去.</li>
<li>使用<code>npm publish</code>发布</li>
<li>然后使用<code>npm install --save live2d-widget-model-xxx</code>安装</li>
<li>调整配置文件中的模型名称就可以使用了</li>
</ul>
<hr>
<h2 id="网易云音乐挂件"><a href="#网易云音乐挂件" class="headerlink" title="网易云音乐挂件"></a>网易云音乐挂件</h2><p>给博客加入背景音乐，支持网易云歌单，步骤如下：</p>
<ol>
<li>首先登陆<a href="https://music.163.com/">网易云音乐网页版</a></li>
<li>选择自己想要添加的歌单</li>
<li>分享歌单</li>
<li>点击右上角个人头像，进入<code>我的主页</code></li>
<li>点击<code>动态</code></li>
<li>找到自己刚刚分享的歌单</li>
<li>点击<code>生成外链播放器</code></li>
<li>选择<code>iframe</code>界面并调整播放器样式与大小</li>
<li><code>播放模式</code>个人建议不勾选自动播放</li>
<li>复制下方html代码</li>
<li>按照路径<code>Hexo根目录\themes\next\layout\_macro</code>打开<code>sidebar.swig</code></li>
<li>在合适的位置加入以下代码，位置慢慢调整,中间<code>iframe</code>是刚刚复制的代码<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;music163player&quot;</span>&gt;</span><br><span class="line">       <span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">280</span> <span class="attr">height</span>=<span class="string">450</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=0&amp;id=908252389&amp;auto=1&amp;height=430&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line">       &lt;/div&gt; </span><br></pre></td></tr></table></figure></li>
<li>播放器可能由于侧栏宽度不够显示不全，需要在<code>主题配置文件</code>中调整侧栏宽度</li>
<li>打开next主题下的<code>_config.yml</code>文件</li>
<li>搜索width,在下列代码中去掉最后一行width前的<code>#</code>号使其生效<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Manual define the sidebar width. If commented, will be default for:</span><br><span class="line"># Muse | Mist: 320</span><br><span class="line"># Pisces | Gemini: 240</span><br><span class="line"># width: 300</span><br></pre></td></tr></table></figure></li>
<li>根据需要调整侧栏宽度</li>
</ol>
<hr>
<h2 id="折叠代码块功能"><a href="#折叠代码块功能" class="headerlink" title="折叠代码块功能"></a>折叠代码块功能</h2><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>2022.5.13 Next8 已废弃<br>用两个折叠块隐藏大段文字，减少页面占用，针对Next主题，示例如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% fold 折叠内容 %&#125;</span><br><span class="line">something you want to fold, include code block.</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;QAQ！&quot;);</span><br><span class="line">console.log(&quot;QAQ！&quot;);</span><br><span class="line">print(&quot;QAQ！&quot;);</span><br><span class="line">printf(&quot;QAQ！\n&quot;);</span><br><span class="line">cout &lt;&lt; &quot;QAQ！&quot; &lt;&lt; endl;</span><br><span class="line">Console.WriteLine(&quot;QAQ！&quot;);</span><br><span class="line">Response.Write(&quot;QAQ！&quot;);</span><br><span class="line">alert(&quot;QAQ！&quot;)</span><br><span class="line">echo &quot;QAQ！&quot;</span><br><span class="line"></span><br><span class="line">&#123;% endfold %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="编辑main-js"><a href="#编辑main-js" class="headerlink" title="编辑main.js"></a>编辑main.js</h3><p>打开<code>.\themes\next\source\js\post-details.js</code>,在类似<code>$(document).ready(function()</code>的代码块下面插入如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">document</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.fold_hider&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&#x27;&gt;.fold&#x27;</span>, <span class="variable language_">this</span>.<span class="property">parentNode</span>).<span class="title function_">slideToggle</span>();</span><br><span class="line">        $(<span class="string">&#x27;&gt;:first&#x27;</span>, <span class="variable language_">this</span>).<span class="title function_">toggleClass</span>(<span class="string">&#x27;open&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//默认情况下折叠</span></span><br><span class="line">    $(<span class="string">&quot;div.fold&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;display&quot;</span>,<span class="string">&quot;none&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="添加-tag-js"><a href="#添加-tag-js" class="headerlink" title="添加 tag.js"></a>添加 tag.js</h3><p>打开<code>.\themes\next\scripts</code>路径并新建<code>tag.js</code>文件，代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> rEscapeContent = <span class="regexp">/&lt;escape(?:[^&gt;]*)&gt;([\s\S]*?)&lt;\/escape&gt;/g</span>;</span><br><span class="line"><span class="keyword">const</span> placeholder = <span class="string">&#x27;\uFFFD&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> rPlaceholder = <span class="regexp">/(?:&lt;|&amp;lt;)\!--\uFFFD(\d+)--(?:&gt;|&amp;gt;)/g</span>;</span><br><span class="line"><span class="keyword">const</span> cache = [];</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">escapeContent</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;!--&#x27;</span> + placeholder + (cache.<span class="title function_">push</span>(str) - <span class="number">1</span>) + <span class="string">&#x27;--&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;before_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  data.<span class="property">content</span> = data.<span class="property">content</span>.<span class="title function_">replace</span>(rEscapeContent, <span class="keyword">function</span>(<span class="params">match, content</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> escapeContent(content);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  data.<span class="property">content</span> = data.<span class="property">content</span>.<span class="title function_">replace</span>(rPlaceholder, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> cache[<span class="variable language_">arguments</span>[<span class="number">1</span>]];</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="添加-fold-js"><a href="#添加-fold-js" class="headerlink" title="添加 fold.js"></a>添加 fold.js</h3><p>在相同的路径下新建<code>fold.js</code>文件，代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fold</span> (args, content) &#123;</span><br><span class="line">    <span class="keyword">var</span> text = args[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(!text) text = <span class="string">&quot;折叠&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;div&gt;&lt;div class=&quot;fold_hider&quot;&gt;&lt;div class=&quot;close hider_title&quot;&gt;&#x27;</span> + text + <span class="string">&#x27;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;fold&quot;&gt;\n&#x27;</span> + hexo.<span class="property">render</span>.<span class="title function_">renderSync</span>(&#123;<span class="attr">text</span>: content, <span class="attr">engine</span>: <span class="string">&#x27;markdown&#x27;</span>&#125;) + <span class="string">&#x27;\n&lt;/div&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;fold&#x27;</span>, fold, &#123;<span class="attr">ends</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure>


<h3 id="配置custom-styl"><a href="#配置custom-styl" class="headerlink" title="配置custom.styl"></a>配置custom.styl</h3><p>打开<code>.\themes\next\source\css\_custom\custom.styl</code>,在最后插入如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">hider_title</span>&#123;</span><br><span class="line">    font-<span class="attr">family</span>: <span class="string">&quot;Microsoft Yahei&quot;</span>;</span><br><span class="line">    <span class="attr">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">close</span>:after&#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;▼&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="property">open</span>:after&#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;▲&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>在要折叠的段落前后添加标签即可，如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% fold 折叠内容 %&#125;</span><br><span class="line">something you want to fold, include code block.</span><br><span class="line">&amp;#<span class="number">39</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">39</span>;</span><br><span class="line"><span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="string">&quot;QAQ！&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;QAQ！&quot;</span>);</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&quot;QAQ！&quot;</span>);</span><br><span class="line"><span class="title function_">printf</span>(<span class="string">&quot;QAQ！\n&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;QAQ！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="title class_">Console</span>.<span class="title class_">WriteLine</span>(<span class="string">&quot;QAQ！&quot;</span>);</span><br><span class="line"><span class="title class_">Response</span>.<span class="title class_">Write</span>(<span class="string">&quot;QAQ！&quot;</span>);</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;QAQ！&quot;</span>)</span><br><span class="line">echo <span class="string">&quot;QAQ！&quot;</span></span><br><span class="line">&amp;#<span class="number">39</span>;&amp;#<span class="number">39</span>;&amp;#<span class="number">39</span>;</span><br><span class="line">&#123;% endfold %&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码就是上面示例的效果</p>
<blockquote>
<p>感谢大佬<a href="https://www.cnblogs.com/woshimrf/p/hexo-fold-block.html">@Ryan Miao</a></p>
</blockquote>
<hr>
<h2 id="网站标题崩溃欺骗"><a href="#网站标题崩溃欺骗" class="headerlink" title="网站标题崩溃欺骗"></a>网站标题崩溃欺骗</h2><p>在网页标题中添加崩溃欺骗效果，离开页面后标题会更改，切换回来后会恢复正常，用来忽悠人效果不错</p>
<h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><p>在<code>博客根目录\themes\next\source\js</code>中新建<code>crash_cheat</code>文件，复制下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"> <span class="keyword">var</span> <span class="title class_">OriginTitle</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"> <span class="keyword">var</span> titleTime;</span><br><span class="line"> <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">         $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/img/TEP.ico&quot;</span>);</span><br><span class="line">         <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;</span><br><span class="line">         <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span> &#123;</span><br><span class="line">         $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/favicon.ico&quot;</span>);</span><br><span class="line">         <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&#x27;</span> + <span class="title class_">OriginTitle</span>;</span><br><span class="line">         titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">             <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitle</span>;</span><br><span class="line">         &#125;, <span class="number">2000</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>

<p>其中<code>document.title</code>后的内容可以自定义，第一个是页面切出后标题显示的文字，第二个是切回页面后短暂显示的文字，第三个是原网页标题,此外记得把<code>else</code>中的<code>/favicon.ico</code>改为自己在public目录中的logo路径，否则返回仍然是页面崩溃时显示的符号</p>
<h3 id="添加引用"><a href="#添加引用" class="headerlink" title="添加引用"></a>添加引用</h3><p>在<code>博客根目录\themes\next\layout\_layout.swig</code>的末尾添加下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/crash_cheat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="背景及半透明效果"><a href="#背景及半透明效果" class="headerlink" title="背景及半透明效果"></a>背景及半透明效果</h2><p>Emmm…感觉背景太空，需要添点东西，</p>
<h3 id="步骤如下："><a href="#步骤如下：" class="headerlink" title="步骤如下："></a>步骤如下：</h3><ol>
<li>将选好的背景图片放在<code>博客根目录/themes/next/source/images</code>中</li>
<li>打开<code>根目录/themes/next/source/css/_custom</code>中的<code>custom.styl</code>文件</li>
<li>添加如下代码</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background.jpg</span>);//图片路径</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;//是否随着网页上下滚动而滚动，fixed为固定</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;//图片位置</span><br><span class="line">    <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">    -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line"></span><br><span class="line">     <span class="selector-id">#footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#000000</span>;//底部文字颜色</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ffffffe8</span>;//设置侧边栏透明</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;//这里设置为<span class="number">1</span>，否则搜索栏会消失</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">		<span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">		<span class="attribute">opacity</span>: <span class="number">0.9</span>;//设置文章主体透明度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>背景图片不要太大，最好压缩一下，太大网站加载速度会极慢<br>透明度不要调太低，影响阅读</p>
<hr>
<h2 id="修改超链接样式"><a href="#修改超链接样式" class="headerlink" title="修改超链接样式"></a>修改超链接样式</h2><p>打开<code>themes\next\source\css\_common\components\post\post.styl</code>并在末尾一串<code>@import</code>上面添加以下代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="修改文章底部标签样式"><a href="#修改文章底部标签样式" class="headerlink" title="修改文章底部标签样式"></a>修改文章底部标签样式</h2><p>打开文件<code>/themes/next/layout/_macro/post.swig</code><br>搜索<code> rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>替换为<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<hr>
<h2 id="在文章结尾添加本文结束标志"><a href="#在文章结尾添加本文结束标志" class="headerlink" title="在文章结尾添加本文结束标志"></a>在文章结尾添加本文结束标志</h2><h3 id="新建文件-1"><a href="#新建文件-1" class="headerlink" title="新建文件"></a>新建文件</h3><p>在<code>\themes\next\layout\_macro</code>中新建<code>passage-end-tag.swig</code>文件,并复制下列代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &lt;div style=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;-------------本文结束&lt;i <span class="keyword">class</span>=<span class="string">&quot;fa fa-paw&quot;</span>&gt;&lt;<span class="regexp">/i&gt;感谢您的阅读-------------&lt;/</span>div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h3><p>打开<code>\themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前添加下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">    &#123;% include <span class="string">&#x27;passage-end-tag.swig&#x27;</span> %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="修改主题文件"><a href="#修改主题文件" class="headerlink" title="修改主题文件"></a>修改主题文件</h3><p>打开主题配置文件<code>_config.yml</code>,并在末尾添加：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h2><p>md文件转化为html后会有很多空格，js和css文件中也会有许多空格，js中的空格会影响性能</p>
<h3 id="安装-8"><a href="#安装-8" class="headerlink" title="安装"></a>安装</h3><p>执行下列命令安装<code>hexo-neat</code>插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>
<h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><p>打开博客根目录下的配置文件<code> _config.yml</code>并在末尾添加如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line"># 博文压缩</span><br><span class="line"><span class="attr">neat_enable</span>: <span class="literal">true</span></span><br><span class="line"># 压缩html</span><br><span class="line"><span class="attr">neat_html</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude</span>:</span><br><span class="line"># 压缩css</span><br><span class="line"><span class="attr">neat_css</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude</span>:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.css&#x27;</span></span><br><span class="line"># 压缩js</span><br><span class="line"><span class="attr">neat_js</span>:</span><br><span class="line">  <span class="attr">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">output</span>:</span><br><span class="line">  <span class="attr">compress</span>:</span><br><span class="line">  <span class="attr">exclude</span>:</span><br><span class="line">    - <span class="string">&#x27;**/*.min.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/jquery.fancybox.pack.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/index.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/clicklove.js&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;**/firework.js&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><p>可能会有部分插件压缩后报错，在<code>exclude</code>里面添加对应的文件就可以取消压缩了</p>
<hr>
<h2 id="修改代码块颜色"><a href="#修改代码块颜色" class="headerlink" title="修改代码块颜色"></a>修改代码块颜色</h2><p>打开<code>.\themes\next\source\css\_custom\custom.styl</code>文件并添加下列代码,<code>color</code>可以自定义设置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//单行代码块颜色</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line"><span class="selector-class">.highlight</span>, pre &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, pre &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="网站运行时间"><a href="#网站运行时间" class="headerlink" title="网站运行时间"></a>网站运行时间</h2><p>打开<code>.\themes\next\layout\_partials\footer.swig</code>并添加下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span> id=&quot;timeDate&quot;&gt;载入天数...&lt;/<span class="selector-tag">span</span>&gt;&lt;<span class="selector-tag">span</span> id=&quot;times&quot;&gt;载入时分秒...&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="selector-tag">var</span> now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        <span class="selector-tag">var</span> grt= new Date(&quot;<span class="number">03</span>/<span class="number">31</span>/<span class="number">2019</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span><span class="string">&quot;);</span></span><br><span class="line"><span class="string">        now.setTime(now.getTime()+250);</span></span><br><span class="line"><span class="string">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span></span><br><span class="line"><span class="string">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span></span><br><span class="line"><span class="string">        if(String(hnum).length ==1 )&#123;hnum = &quot;</span><span class="number">0</span><span class="string">&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span></span><br><span class="line"><span class="string">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;</span><span class="number">0</span><span class="string">&quot; + mnum;&#125;</span></span><br><span class="line"><span class="string">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span></span><br><span class="line"><span class="string">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;</span><span class="number">0</span><span class="string">&quot; + snum;&#125;</span></span><br><span class="line"><span class="string">        document.getElementById(&quot;</span>timeDate<span class="string">&quot;).innerHTML = &quot;</span>本站已安全运行 <span class="string">&quot;+dnum+&quot;</span> 天 <span class="string">&quot;;</span></span><br><span class="line"><span class="string">        document.getElementById(&quot;</span>times<span class="string">&quot;).innerHTML = hnum + &quot;</span> 小时 <span class="string">&quot; + mnum + &quot;</span> 分 <span class="string">&quot; + snum + &quot;</span> 秒<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">setInterval(&quot;</span><span class="built_in">createtime</span>()<span class="string">&quot;,250);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="访客统计"><a href="#访客统计" class="headerlink" title="访客统计"></a>访客统计</h2><p>Next主题已经内置了不蒜子统计，在Next主题的配置文件<code>_config.yml</code>中搜索<code>busuanzi_count</code>并将<code>enable</code>设置为<code>true</code>，<code>icon</code>可以自定义设置，下面是我的配置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Show Views / Visitors of the website / page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/<span class="number">2015</span>/<span class="number">04</span>/<span class="number">04</span>/busuanzi</span><br><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true # 总访客数量，在页脚显示</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: true # 总阅读数量，在页脚显示</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true # 单篇文章阅读数量，在标题下显示</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="字数统计和阅读时长统计"><a href="#字数统计和阅读时长统计" class="headerlink" title="字数统计和阅读时长统计"></a>字数统计和阅读时长统计</h2><h3 id="安装-9"><a href="#安装-9" class="headerlink" title="安装"></a>安装</h3><p>在博客根目录下执行命令安装统计插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-<span class="built_in">time</span> --save</span><br></pre></td></tr></table></figure>
<h3 id="配置-4"><a href="#配置-4" class="headerlink" title="配置"></a>配置</h3><p>在博客根目录配置文件<code>_config.yaml</code>中加入下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true # 文章字数</span><br><span class="line">  time: true # 阅读时长</span><br><span class="line">  total_symbols: true # 所有文章总字数</span><br><span class="line">  total_time: true # 所有文章阅读中时长</span><br></pre></td></tr></table></figure>

<p>在Next主题配置文件<code>_config.yaml</code>中搜索<code>symbol_count</code>并修改为</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: <span class="number">4</span></span><br><span class="line">  wpm: <span class="number">275</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>文章加密插件目前与字数统计、目录生成功能存在冲突，例如一篇9k字的文章在字数统计中会显示43k字，进入文章后没有目录生成，谨慎使用</p>
<h3 id="安装-10"><a href="#安装-10" class="headerlink" title="安装"></a>安装</h3><p>在博客根目录执行下列命令安装插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>
<h3 id="配置-5"><a href="#配置-5" class="headerlink" title="配置"></a>配置</h3><p>在根目录的<code>_config.yml</code>中使用下列代码启用插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>然后在文章md文件的标头添加相应字段就可以实现加密访问了,如</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo</span><br><span class="line">date: 2019-05-02 19:00:00</span><br><span class="line">categories: Blog</span><br><span class="line">password: 123456</span><br><span class="line">abstract: 文章已加密</span><br><span class="line"><span class="section">message: 请输入密码</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<p>其中<code>password</code>后面输入你想要的密码，<code>abstract</code>后面输入在首页展示的摘要，<code>message</code>后面输入密码输入框显示的信息</p>
<hr>
<h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><h3 id="安装-11"><a href="#安装-11" class="headerlink" title="安装"></a>安装</h3><p>在博客根目录执行下列命令安装插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>

<h3 id="配置-6"><a href="#配置-6" class="headerlink" title="配置"></a>配置</h3><p>打开<code>.\themes\next\layout\_macro\post.swig</code>并搜索<code>&lt;div class=&quot;post-meta&quot;&gt;</code>,在其中添加下列代码以开启标签</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% if post<span class="selector-class">.top</span> %&#125;</span><br><span class="line">	&lt;<span class="selector-tag">i</span> class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/<span class="selector-tag">i</span>&gt;</span><br><span class="line">	&lt;<span class="attribute">font</span> <span class="attribute">color</span>=<span class="number">7</span>D26CD&gt;置顶&lt;/<span class="attribute">font</span>&gt;</span><br><span class="line">	&lt;<span class="selector-tag">span</span> class=&quot;post-meta-divider&quot;&gt;|&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p>在需要置顶的文章中加入<code>top: true</code>即可，如</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo</span><br><span class="line">date: 2019-05-02 19:00:00</span><br><span class="line">categories: Blog</span><br><span class="line"><span class="section">top: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="修改默认字体大小"><a href="#修改默认字体大小" class="headerlink" title="修改默认字体大小"></a>修改默认字体大小</h2><p>Next主题默认的字体大小是14px，可以打开<code>\themes\next\source\css\ _variables\base.styl</code>并搜索<code>$font-size-base</code>，修改后面的数字就可以调整大小</p>
<h2 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h2><p>打开<code>.\themes\next\source\css\_custom\custom.styl</code>并添加下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;图片链接&quot;</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;图片链接&quot;</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>图片链接的文件必须是<code>ico</code>文件</p>
<blockquote>
<p>感谢大佬<a href="https://blog.csdn.net/dataiyangu/article/details/84963491">博客</a></p>
</blockquote>
<hr>
<h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>只在需要的时候加载图片，而不是一次性加载完成，加快速度，适用于图片较多的博客（<del>像我一样懒得放图的就不用看了</del>）</p>
<h3 id="安装-12"><a href="#安装-12" class="headerlink" title="安装"></a>安装</h3><p>在博客根目录执行命令安装插件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload --save</span><br></pre></td></tr></table></figure>

<h3 id="配置-7"><a href="#配置-7" class="headerlink" title="配置"></a>配置</h3><p>在博客根目录的配置文件<code>_config.yml</code>中添加下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  onlypost: false #是否只在文章中开启懒加载</span><br><span class="line">  # className: #可选 e.g. .J-lazyload-img</span><br><span class="line">  # loadingImg: #可选 eg. ./images/loading.png 作为图片未加载时的替代图片</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h2><p><strong>2020年元旦更新：Gitment已经凉了，故换用Gitalk</strong><br>评论系统采用的是<a href="https://github.com/gitalk/gitalk">Gitalk</a>，与原来的Gitment差不多</p>
<h3 id="安装-13"><a href="#安装-13" class="headerlink" title="安装"></a>安装</h3><p>新版本的Next主题已经自带Gitalk了，我们只需要开启即可，下面的安装过程请忽略</p>
<p><del>执行命令安装gitment插件</del></p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm i --save gitment</span><br></pre></td></tr></table></figure>

<h3 id="注册OAuth-application"><a href="#注册OAuth-application" class="headerlink" title="注册OAuth application"></a>注册OAuth application</h3><p>点击<a href="https://github.com/settings/applications/new">这里</a>注册新的<code>OAuth application </code></p>
<ul>
<li>其中<code>Application name</code>随便填就好</li>
<li><code>Homepage URL</code>和<code>Authorization callback URL</code>填写自己的网站首页地址即可</li>
<li><code>Application description</code>选填，记录这个东西是干什么的</li>
</ul>
<p>填写完成后点击<code>Register application</code>，跳转页面会显示<code>Client ID</code>和<code>Client Secret</code>用于以后登录</p>
<h3 id="配置-8"><a href="#配置-8" class="headerlink" title="配置"></a>配置</h3><p>打开Next主题的配置文件<code>.\themes\next\_config.yml</code>并搜索<code>gitalk</code>，将<code>enable</code>设置为<code>true</code>,并配置相关选项</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Gitalk</span><br><span class="line"># Demo: https://gitalk.github.io</span><br><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  github_id: 你的github用户名 # Github repo owner</span><br><span class="line">  repo: 博客的仓库名称 # Repository name to store issues</span><br><span class="line">  client_id: 上一步生成的ID # Github Application Client ID</span><br><span class="line">  client_secret: 上一步生成的 # Github Application Client Secret</span><br><span class="line">  admin_user: 你的github用户名 # GitHub repo owner and collaborators, only these guys can initialize github issues</span><br><span class="line">  distraction_free_mode: true # Facebook-like distraction free mode</span><br><span class="line">  # Gitalk<span class="string">&#x27;s display language depends on user&#x27;</span>s browser or system environment</span><br><span class="line">  # If you want everyone visiting your site to see a uniform language, you can set a force language value</span><br><span class="line">  # Available values: en, es-ES, fr, ru, zh-CN, zh-TW</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>部署到Github Page上之后转到要开启评论的文章的最下方，初始化并登录Github账号就可以评论了</p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><del>某些文章初始化评论时可能会报错<code>Error:Validation Failed</code>，(很迷的是爬梯子之后就好了。。。。。。)据说是issued的label长度溢出造成的，因为中文会被转码，但是issue是支持中文label的，所以解决方案为:<br>打开<code>C:\Users\oo\OneDrive\Hexo\themes\next\layout\_third-party\comments\gitment.swig</code>并搜索<code>id</code>,修改后面的值为<code>decodeURI(window.location.pathname)</code></del></p>
<h2 id="自定义404页面"><a href="#自定义404页面" class="headerlink" title="自定义404页面"></a>自定义404页面</h2><p>因为网页是搭建在Github上的，所以默认的404页面就是Github的页面，可能和主题不太搭，而且也没有任何引导，所以可以添加一个和主题搭配的404页面，这里以我自己的<a href="https://siriusq.top/404">404</a>页面为例，另外自定义404页面必须要有顶级域名才可以，Github的二级域名不支持自定义404页面</p>
<h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>可以自己用Html写一个新的404页面出来，但是我比较懒，所以直接找的模板源码自己修改，节省时间，百度的时候发现<a href="https://404.life/">404模板</a>上有几个不错的模板，我选择的是<a href="https://404.life/acg-moe.html">acg-moe</a>模板，点击下载源码然后解压即可</p>
<h3 id="配置-9"><a href="#配置-9" class="headerlink" title="配置"></a>配置</h3><h4 id="添加标识"><a href="#添加标识" class="headerlink" title="添加标识"></a>添加标识</h4><p>首先将解压后文件中的<code>index.html</code>复制到根目录下的<code>.\source</code>文件夹并重命名为<code>404.html</code>,然后打开文件并在顶部添加下列内容</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">layout: false</span><br><span class="line"><span class="section">title: &quot;404&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h4 id="head部分"><a href="#head部分" class="headerlink" title="head部分"></a>head部分</h4><p>首先是<code>head</code>部分的内容，示例如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=11&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mixia_vpid&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面被噬元兽吃掉了╭( `∀´ )╯<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">keywords</span> <span class="attr">content</span>=<span class="string">&quot;404&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">description</span> <span class="attr">content</span>=<span class="string">&quot;一只想变成程序猿的建筑狗&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/images/favicon.png&quot;</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/lib/font-awesome/css/font-awesome.min.css?v=4.6.2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/404/404.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/clipboard.js/1.7.1/clipboard.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在<code>&lt;title&gt;页面被噬元兽吃掉了╭( </code>∀´ )╯</title>&#96;中间填写网页的标题，会显示在浏览器的标题栏上</li>
<li>在<code>&lt;link rel=&quot;icon&quot; href=&quot;https://siriusq.top/images/favicon.png&quot;&gt;</code>中设置网站图标的地址</li>
</ul>
<h4 id="js及css文件"><a href="#js及css文件" class="headerlink" title="js及css文件"></a>js及css文件</h4><p><code>head</code>中的几个<code>&lt;link rel</code>需要自己设置，源代码指向是原作者的网站，强迫症表示还是放在自己的网站上舒服<br>首先在<code>.\source</code>中新建文件夹并重命名为404，创建<code>404.css</code>、<code>404.js</code>两个文件并复制下列代码保存，然后将<code>herf=</code>后的链接替换成自己的网页，只需要替换<code>/404/</code>前面的部分</p>
<a class="btn" href="https://siriusq.top/404/404.css">404.css</a> <a class="btn" href="https://siriusq.top/404/404.js">404.js</a> 

<h4 id="body部分"><a href="#body部分" class="headerlink" title="body部分"></a>body部分</h4><p>下面是我的配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;mobile btn-mobile-menu&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-list btn-mobile-menu__icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-up btn-mobile-close__icon hidden&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-image:url(https://siriusq.top/images/background.jpg)&quot;</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-main&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-main__inner panel-inverted&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-main__content&quot;</span>&gt;</span></span><br><span class="line">	    </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;前往Siriusq&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://siriusq.top/images/avatar.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Noisky logo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover__logo logo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">     </span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover__divider&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover__description&quot;</span>&gt;</span>对不起，您要找的页面被被噬元兽吃掉了╭( `∀´ )╯<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover__divider panel-cover__divider--secondary&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;panel-cover__description&quot;</span>&gt;</span>也许能在主页找到相关内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>Siriusq © 2019 <span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">		</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navigation-wrapper&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;cover-navigation cover-navigation--primary&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;访问博客&quot;</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/tags/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;标签&quot;</span>&gt;</span>标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  </span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/categories/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;分类&quot;</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/archives/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;归档&quot;</span>&gt;</span>归档<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://siriusq.top/about/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;关于&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;cover-navigation navigation--social&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;navigation&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Github --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/Siriusq&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Github&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;social fa fa-github&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Email --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;navigation__item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:siriuskevin@foxmail.com&quot;</span> <span class="attr">title</span>=<span class="string">&quot;发邮件给我&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;social fa fa-envelope&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://siriusq.top/404/404.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://siriusq.top/lib/jquery/index.js?v=2.1.3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在<code>&lt;a href=&quot;https://siriusq.top/&quot; title=&quot;前往Siriusq&quot;&gt;&lt;img src=&quot;https://siriusq.top/images/avatar.gif&quot; width=&quot;150&quot; alt=&quot;Noisky logo&quot; class=&quot;panel-cover__logo logo&quot;&gt;&lt;/a&gt;</code>中设置自己的头像地址及头像链接的网址，头像同样可以旋转</li>
<li>在<code>&lt;/script&gt;&lt;header class=&quot;panel-cover&quot; style=&quot;background-image:url(https://siriusq.top/images/background.jpg)&quot;&gt;</code>中可以设置网页的背景图片，路径可以在浏览器中按F12查看</li>
<li>在<code>&lt;p class=&quot;panel-cover__description&quot;&gt;对不起，您要找的页面被被噬元兽吃掉了&lt;/p&gt;</code>中可以设置两行文字</li>
<li>在<code>&lt;p class=&quot;footer&quot;&gt;Siriusq © 2019 &lt;/p&gt; </code>中可以设置网页页脚</li>
<li>下面的几个<code>&lt;li class=&quot;navigation__item&quot;&gt;&lt;a href=&quot;https://siriusq.top/&quot; title=&quot;访问博客&quot;&gt;主页&lt;/a&gt;&lt;/li&gt;</code>可以自己设置标签和跳转的超链接，标签在<code>&lt;/a&gt;</code>后填写，跳转的链接在<code>a herf</code>后填写，鼠标移动到标签上显示的文字在<code>title</code>中填写</li>
<li>在<code>&lt;!-- Github --&gt;</code>后面可以设置自己的Github超链接，<code>&lt;!-- Email --&gt;</code>同理，在<code>herf</code>后面输入网页地址，在<code>title</code>中输入当鼠标移到图标上显示的提示，在<code>&lt;i class=&quot;social fa fa-github&quot;&gt;&lt;/i&gt;</code>设置要用的图标</li>
</ul>
<h4 id="结尾部分"><a href="#结尾部分" class="headerlink" title="结尾部分"></a>结尾部分</h4><p>结尾部分的两个js也要替换成自己网站的链接,一个是前面的<code>404.js</code>,另一个是主题文件里的<code>jquery</code>文件，需要去自己的网站查看链接地址，我的是<code>https://siriusq.top/lib/jquery/index.js?v=2.1.3</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://siriusq.top/404/404.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://siriusq.top/lib/jquery/index.js?v=2.1.3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p><strong>差不多就这些东西，美化真的是个大坑</strong><br><img data-src="https://s2.loli.net/2022/05/13/ft5VBOGJjwnbDWc.jpg" alt="201904121"></p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Next升级+Mac迁移 </title>
    <url>/Next%E5%8D%87%E7%BA%A7-Mac%E8%BF%81%E7%A7%BB.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">写博客到现在已经快一年了，Next主题也更新了好多版本，新增的pjax真的是太香了，果断更新。顺便把Hexo迁移到mac上面来</blockquote>

<span id="more"></span>

<h1 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h1><p>Next主题从7.1到7.7.2的变动较大，直接升级的话小问题比较多，所以这次升级采用了重新安装的方式</p>
<h2 id="版本对比"><a href="#版本对比" class="headerlink" title="版本对比"></a>版本对比</h2><p>升级前Hexo版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo: 3.8.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.17763 win32 x64</span><br><span class="line">node: 12.14.1</span><br><span class="line">next: 7.1</span><br></pre></td></tr></table></figure>
<p>升级后Hexo版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Darwin 18.7.0 darwin x64</span><br><span class="line">node: 13.10.1</span><br><span class="line">next: 7.7.2</span><br></pre></td></tr></table></figure>

<h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><ul>
<li>pjax（局部刷新加载页面）</li>
<li>DarkMode夜间模式（支持Mac等的夜间模式）</li>
<li>Gitalk评论（Gitment凉了之后一直没设置评论系统，这次顺路加上）</li>
<li>Mediumzoom（图片插件）</li>
<li>中英切换（新）</li>
<li>CDN</li>
<li>Echarts</li>
</ul>
<h2 id="移除功能"><a href="#移除功能" class="headerlink" title="移除功能"></a>移除功能</h2><ul>
<li>动态背景（占用资源较大，在手机平板等设备上造成卡顿、发热、耗电快等问题）</li>
<li>i18n-generator（一年也没写过英语的博客，而且这个方案缺陷太大）</li>
<li>网易云音乐挂件（使用频率极低，拖慢加载速度）</li>
</ul>
<h2 id="保留功能"><a href="#保留功能" class="headerlink" title="保留功能"></a>保留功能</h2><ul>
<li>站内搜索</li>
<li>字数与阅读时长统计</li>
<li>网站运行时间</li>
<li>加载进度条</li>
<li>崩溃欺骗</li>
<li>背景图片</li>
<li>鼠标点击特效</li>
<li>不蒜子</li>
<li>Live2D看板娘</li>
</ul>
<h1 id="Mac安装过程"><a href="#Mac安装过程" class="headerlink" title="Mac安装过程"></a>Mac安装过程</h1><h2 id="安装软件依赖"><a href="#安装软件依赖" class="headerlink" title="安装软件依赖"></a>安装软件依赖</h2><p>首先下载安装<code>git</code>和<code>node.js</code>,官网如下</p>
<ul>
<li><a href="https://git-scm.com/">git</a></li>
<li><a href="https://nodejs.org/en/">node.js</a></li>
</ul>
<p>安装完成后在终端分别输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>检测是否安装成功，成功的话会返回软件版本号</p>
<h2 id="配置本地目录"><a href="#配置本地目录" class="headerlink" title="配置本地目录"></a>配置本地目录</h2><ul>
<li>新建一个用于存放博客文件的文件夹</li>
<li>新建位于文件夹位置的终端窗口</li>
<li>输入<code>npm install hexo -g</code>安装hexo<ul>
<li>这一步可能会报错，报错的话使用命令<code>sudo npm install --unsafe-perm --verbose -g hexo</code>来安装hexo</li>
</ul>
</li>
<li>输入<code>npm install</code>安装其他依赖</li>
<li>输入<code>npm install hexo-deployer-git --save</code>安装部署插件</li>
<li>输入<code>hexo v</code>查看是否安装成功，成功会返回版本号</li>
</ul>
<h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><ul>
<li>打开终端</li>
<li>输入<code>ls -al ~/.ssh</code>检查是否有以前生成的 SSH Key，没有的话继续</li>
<li>输入<code>ssh-keygen -t rsa -C &quot;Guthub邮箱地址&quot;</code> 然后回车三连</li>
<li>此时终端会显示文件的生成路径，根据路径找到并打开<code>id_rsa.pub</code></li>
<li>复制里面的所有内容</li>
<li>打开Github，在右上角个人头像下拉菜单中找到<code>Settings</code></li>
<li>打开<code>SSH and GPG keys</code>,点击右上角<code>New SSH key</code></li>
<li><code>Title</code>随便填,然后在<code>Key</code>中粘贴</li>
<li>点击<code>Add SSH key</code></li>
<li>回到Git bash，输入<code>ssh -T git@github.com</code>回车</li>
<li>首次输入可能会有提醒，输入<code>yes</code>回车即可</li>
<li>成功返回<code>Hi 用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>就代表成功了</li>
<li>输入<code>git config --global user.name &quot;用户名&quot;</code></li>
<li>输入<code>git config --global user.email  &quot;邮箱地址&quot;</code></li>
</ul>
<h2 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h2><p>在终端输入下面的命令安装最新的Next主题</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h1 id="Next主题自定义"><a href="#Next主题自定义" class="headerlink" title="Next主题自定义"></a>Next主题自定义</h1><p>Hexo的配置过程我就不说了，根据原来的<code>_config.yml</code>配置就行，下面要说的是Next主题的配置</p>
<h2 id="配置文件分离"><a href="#配置文件分离" class="headerlink" title="配置文件分离"></a>配置文件分离</h2><p>Next主题在7.3之后分离了配置文件与主题，详情请见<a href="https://tding.top/archives/2bd6d82.html">小丁的个人博客</a>。</p>
<ul>
<li>新建文件夹<code>hexo/source/_data</code></li>
<li>将<code>./themes/next/_config.yml</code>复制到<code>hexo/source/_data</code>路径下并重命名为<code>next.yml</code></li>
<li>将<code>next.yml</code>中的<code>override</code>设置为<code>true</code>即可作为主题的配置文件使用</li>
<li>在<code>hexo/source/_data</code>中新建<code>body-end.swig</code>和<code>styles.styl</code>文件</li>
<li>然后在<code>next.yml</code>的<code>custom_file_path</code>中删除前面的<code>#</code>来启用<code>bodyEnd</code>和<code>style</code></li>
<li><code>custom_file_path</code>中的其他选项根据需要创建相关文件并启用</li>
</ul>
<h2 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h2><p>Pjax是基于Ajax的插件，能实现网页局部无刷新载入，听起来很香，然而存在一些小问题：</p>
<ul>
<li>使用Mediumzoom时，从归档进入博文不会加载图片，需要刷新网页才能加载</li>
<li>Echarts图表全部需要刷新才能显示，否则只有一片空白</li>
</ul>
<p>安装Pjax</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pjax source/lib/pjax</span><br></pre></td></tr></table></figure>
<p>在<code>next.yml</code>中搜索<code>pjax</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pjax: true</span><br></pre></td></tr></table></figure>

<h2 id="Darkmode"><a href="#Darkmode" class="headerlink" title="Darkmode"></a>Darkmode</h2><p>Next主题新增了暗色模式，能够配合系统的暗色主题使用<br>在<code>next.yml</code>中搜索<code>darkmode</code>并设置为<code>auto</code>即可根据系统主题切换亮色&#x2F;暗色模式</p>
<h2 id="Gitalk评论"><a href="#Gitalk评论" class="headerlink" title="Gitalk评论"></a>Gitalk评论</h2><p>评论系统，一开始想用Valine来着，结果要实名制，果断弃了</p>
<ul>
<li>在Github新建一个仓库<code>gitalk-comment</code>，用来存放评论产生的issues</li>
<li>点击右上角<code>头像 - Setting - Developer settings - OAuth Apps - New OAuth Apps</code></li>
<li><code>Application name</code> 随便填</li>
<li><code>Homepage URL</code>和<code>Authorization callback URL</code>都填自己的博客地址</li>
<li>点击 <code>Register application</code></li>
<li>在<code>next.yml</code>中搜索<code>gitalk</code></li>
<li>复制得到的<code>Cilent ID</code>和<code>Cilent secret</code>到相应位置粘贴</li>
<li>设置<code>enable</code>为<code>true</code></li>
<li><code>github_id</code>和<code>admin_user</code>为你的用户名</li>
<li><code>repo</code>为刚才创建的仓库名<code>gitalk-comment</code></li>
<li><code>distraction_free_mode</code>是类似facobook的评论遮罩功能</li>
</ul>
<p><code>next.yml</code>中的具体配置如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># Gitalk</span><br><span class="line"># For more information: https://gitalk.github.io, https://github.com/gitalk/gitalk</span><br><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  github_id: Siriusq # GitHub repo owner</span><br><span class="line">  repo: gitalk-commnet # Repository name to store issues</span><br><span class="line">  client_id: xxxxxxxx # GitHub Application Client ID</span><br><span class="line">  client_secret: xxxxxxxx # GitHub Application Client Secret</span><br><span class="line">  admin_user: Siriusq # GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span><br><span class="line">  distraction_free_mode: false # Facebook-like distraction free mode</span><br><span class="line">  # Gitalk<span class="string">&#x27;s display language depends on user&#x27;</span>s browser or system environment</span><br><span class="line">  # If you want everyone visiting your site to see a uniform language, you can set a force language value</span><br><span class="line">  # Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<h2 id="Mediumzoom"><a href="#Mediumzoom" class="headerlink" title="Mediumzoom"></a>Mediumzoom</h2><p>模仿Medium图片查看方式的插件<br>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install medium-zoom</span><br></pre></td></tr></table></figure>
<p>在<code>next.yml</code>中搜索<code>mediumzoom</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mediumzoom: true</span><br></pre></td></tr></table></figure>

<h2 id="中英切换"><a href="#中英切换" class="headerlink" title="中英切换"></a>中英切换</h2><p>请移步另一篇博客<a href="https://siriusq.top/Hexo-Next-7-7-%E5%8F%8C%E8%AF%AD%E5%88%87%E6%8D%A2.html">Hexo Next 7.7 双语切换</a></p>
<h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><p>查找博客内的内容<br>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
<p>在<code>next.yml</code>中搜索<code>local_search</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enable: true</span><br></pre></td></tr></table></figure>

<h2 id="字数与阅读时长统计"><a href="#字数与阅读时长统计" class="headerlink" title="字数与阅读时长统计"></a>字数与阅读时长统计</h2><p>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-<span class="built_in">time</span></span><br></pre></td></tr></table></figure>
<p>在根目录的<code>_config.yml</code>中添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>
<p>然后在<code>next.yml</code>中搜索<code>symbols_count_time</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: true</span><br></pre></td></tr></table></figure>

<h2 id="添加jquery"><a href="#添加jquery" class="headerlink" title="添加jquery"></a>添加jquery</h2><ul>
<li>新版的Next主题移除了jquery，导致一些老得自定义设置会失效，我直接从老版本的Next主题复制过来了，路径是<code>./hexo/themes/next/source/libs/jquery/jquert-2.2.0.min.js</code>，也可以到<a href="https://code.jquery.com/jquery/">官网</a>下载</li>
<li>将jquery放置在<code>./hexo/source/js</code>路径下</li>
<li>在<code>./hexo/source/_data/body-end.swig</code>添加，版本不同的话记得改下面的版本<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--jquery--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/jquery-2.2.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="网站运行时间"><a href="#网站运行时间" class="headerlink" title="网站运行时间"></a>网站运行时间</h2><p>打开<code>./hexo/themes/next/layout/_partials/footer.swig</code>并添加下列代码</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span> id=&quot;timeDate&quot;&gt;载入天数...&lt;/<span class="selector-tag">span</span>&gt;&lt;<span class="selector-tag">span</span> id=&quot;times&quot;&gt;载入时分秒...&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="selector-tag">var</span> now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        <span class="selector-tag">var</span> grt= new Date(&quot;<span class="number">03</span>/<span class="number">31</span>/<span class="number">2019</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span><span class="string">&quot;);</span></span><br><span class="line"><span class="string">        now.setTime(now.getTime()+250);</span></span><br><span class="line"><span class="string">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span></span><br><span class="line"><span class="string">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span></span><br><span class="line"><span class="string">        if(String(hnum).length ==1 )&#123;hnum = &quot;</span><span class="number">0</span><span class="string">&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span></span><br><span class="line"><span class="string">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;</span><span class="number">0</span><span class="string">&quot; + mnum;&#125;</span></span><br><span class="line"><span class="string">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span></span><br><span class="line"><span class="string">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;</span><span class="number">0</span><span class="string">&quot; + snum;&#125;</span></span><br><span class="line"><span class="string">        document.getElementById(&quot;</span>timeDate<span class="string">&quot;).innerHTML = &quot;</span>本站已安全运行 <span class="string">&quot;+dnum+&quot;</span> 天 <span class="string">&quot;;</span></span><br><span class="line"><span class="string">        document.getElementById(&quot;</span>times<span class="string">&quot;).innerHTML = hnum + &quot;</span> 小时 <span class="string">&quot; + mnum + &quot;</span> 分 <span class="string">&quot; + snum + &quot;</span> 秒<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">setInterval(&quot;</span><span class="built_in">createtime</span>()<span class="string">&quot;,250);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="加载进度条"><a href="#加载进度条" class="headerlink" title="加载进度条"></a>加载进度条</h2><p>显示当前网页的加载进度<br>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>
<p>在<code>next.yml</code>中搜索<code>Progress bar in the top during page loading</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pace:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h2 id="崩溃欺骗"><a href="#崩溃欺骗" class="headerlink" title="崩溃欺骗"></a>崩溃欺骗</h2><p>在网页标题中添加崩溃欺骗效果，离开页面后标题会更改，切换回来后会恢复正常，需要配合<strong>jquery</strong>使用</p>
<p>在<code>./hexo/source/js</code>中新建<code>crash_cheat</code>文件，复制下列代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"> <span class="keyword">var</span> <span class="title class_">OriginTitle</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"> <span class="keyword">var</span> titleTime;</span><br><span class="line"> <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">         $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/img/TEP.ico&quot;</span>);</span><br><span class="line">         <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;</span><br><span class="line">         <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span> &#123;</span><br><span class="line">         $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/favicon.ico&quot;</span>);</span><br><span class="line">         <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&#x27;</span> + <span class="title class_">OriginTitle</span>;</span><br><span class="line">         titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">             <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitle</span>;</span><br><span class="line">         &#125;, <span class="number">2000</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure>
<p>然后在<code>./hexo/source/_data/body-end.swig</code>中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; <span class="attribute">src</span>=&quot;/js/crash_cheat<span class="selector-class">.js</span>&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>将背景图片放置在<code>./hexo/themes/next/source/images</code>中并命名为<code>background.jpg</code><br>然后在<code>./hexo/source/_data/styles.styl</code>中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background.jpg</span>);//图片路径</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;//是否随着网页上下滚动而滚动，fixed为固定</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">50%</span> <span class="number">50%</span>;//图片位置</span><br><span class="line">    <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">    -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">    <span class="selector-tag">footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#000000</span>;//底部文字颜色</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h2><p>根据<a href="https://tding.top/archives/2bd6d82.html">小丁的个人博客</a>更换了鼠标点击的特效，原来的特效对低性能设备不友好<br>在<code>./hexo/themes/next/source/js/cursor</code>中新建<code>fireworks.js</code>，并添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">class Circle &#123;</span><br><span class="line">  constructor(&#123; origin, speed, <span class="attribute">color</span>, angle, context &#125;) &#123;</span><br><span class="line">    this<span class="selector-class">.origin</span> = origin</span><br><span class="line">    this<span class="selector-class">.position</span> = &#123; ..<span class="selector-class">.this</span><span class="selector-class">.origin</span> &#125;</span><br><span class="line">    this<span class="selector-class">.color</span> = <span class="attribute">color</span></span><br><span class="line">    this<span class="selector-class">.speed</span> = speed</span><br><span class="line">    this<span class="selector-class">.angle</span> = angle</span><br><span class="line">    this<span class="selector-class">.context</span> = context</span><br><span class="line">    this<span class="selector-class">.renderCount</span> = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this<span class="selector-class">.context</span><span class="selector-class">.fillStyle</span> = this<span class="selector-class">.color</span></span><br><span class="line">    this<span class="selector-class">.context</span><span class="selector-class">.beginPath</span>()</span><br><span class="line">    this<span class="selector-class">.context</span><span class="selector-class">.arc</span>(this<span class="selector-class">.position</span><span class="selector-class">.x</span>, this<span class="selector-class">.position</span><span class="selector-class">.y</span>, <span class="number">2</span>, <span class="number">0</span>, Math<span class="selector-class">.PI</span> * <span class="number">2</span>)</span><br><span class="line">    this<span class="selector-class">.context</span><span class="selector-class">.fill</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this<span class="selector-class">.position</span><span class="selector-class">.x</span> = (Math<span class="selector-class">.sin</span>(this<span class="selector-class">.angle</span>) * this<span class="selector-class">.speed</span>) + this<span class="selector-class">.position</span><span class="selector-class">.x</span></span><br><span class="line">    this<span class="selector-class">.position</span><span class="selector-class">.y</span> = (Math<span class="selector-class">.cos</span>(this<span class="selector-class">.angle</span>) * this<span class="selector-class">.speed</span>) + this<span class="selector-class">.position</span><span class="selector-class">.y</span> + (this<span class="selector-class">.renderCount</span> * <span class="number">0.3</span>)</span><br><span class="line">    this<span class="selector-class">.renderCount</span>++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Boom &#123;</span><br><span class="line">  constructor (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">    this<span class="selector-class">.origin</span> = origin</span><br><span class="line">    this<span class="selector-class">.context</span> = context</span><br><span class="line">    this<span class="selector-class">.circleCount</span> = circleCount</span><br><span class="line">    this<span class="selector-class">.area</span> = area</span><br><span class="line">    this<span class="selector-class">.stop</span> = false</span><br><span class="line">    this<span class="selector-class">.circles</span> = <span class="selector-attr">[]</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomArray(range) &#123;</span><br><span class="line">    const length = range<span class="selector-class">.length</span></span><br><span class="line">    const randomIndex = Math<span class="selector-class">.floor</span>(length * Math<span class="selector-class">.random</span>())</span><br><span class="line">    return range<span class="selector-attr">[randomIndex]</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomColor() &#123;</span><br><span class="line">    const range = <span class="selector-attr">[<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span></span><br><span class="line">    return &#x27;#&#x27; + this<span class="selector-class">.randomArray</span>(range) + this<span class="selector-class">.randomArray</span>(range) + this<span class="selector-class">.randomArray</span>(range) + this<span class="selector-class">.randomArray</span>(range) + this<span class="selector-class">.randomArray</span>(range) + this<span class="selector-class">.randomArray</span>(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomRange(start, end) &#123;</span><br><span class="line">    return (end - start) * Math<span class="selector-class">.random</span>() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    for(let <span class="selector-tag">i</span> = <span class="number">0</span>; <span class="selector-tag">i</span> &lt; this<span class="selector-class">.circleCount</span>; <span class="selector-tag">i</span>++) &#123;</span><br><span class="line">      const circle = new Circle(&#123;</span><br><span class="line">        context: this.context,</span><br><span class="line">        origin: this.origin,</span><br><span class="line">        color: this.<span class="built_in">randomColor</span>(),</span><br><span class="line">        angle: this.<span class="built_in">randomRange</span>(Math.PI - <span class="number">1</span>, Math.PI + <span class="number">1</span>),</span><br><span class="line">        speed: this.<span class="built_in">randomRange</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      this<span class="selector-class">.circles</span><span class="selector-class">.push</span>(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this<span class="selector-class">.circles</span><span class="selector-class">.forEach</span>((circle, index) =&gt; &#123;</span><br><span class="line">      if (circle<span class="selector-class">.position</span><span class="selector-class">.x</span> &gt; this<span class="selector-class">.area</span><span class="selector-class">.width</span> || circle<span class="selector-class">.position</span><span class="selector-class">.y</span> &gt; this<span class="selector-class">.area</span><span class="selector-class">.height</span>) &#123;</span><br><span class="line">        return this<span class="selector-class">.circles</span><span class="selector-class">.splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle<span class="selector-class">.move</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    if (this<span class="selector-class">.circles</span><span class="selector-class">.length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      this<span class="selector-class">.stop</span> = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this<span class="selector-class">.circles</span><span class="selector-class">.forEach</span>(circle =&gt; circle<span class="selector-class">.draw</span>())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class CursorSpecialEffects &#123;</span><br><span class="line">  constructor() &#123;</span><br><span class="line">    this<span class="selector-class">.computerCanvas</span> = document<span class="selector-class">.createElement</span>(&#x27;<span class="selector-tag">canvas</span>&#x27;)</span><br><span class="line">    this<span class="selector-class">.renderCanvas</span> = document<span class="selector-class">.createElement</span>(&#x27;<span class="selector-tag">canvas</span>&#x27;)</span><br><span class="line"></span><br><span class="line">    this<span class="selector-class">.computerContext</span> = this<span class="selector-class">.computerCanvas</span><span class="selector-class">.getContext</span>(&#x27;<span class="number">2</span>d&#x27;)</span><br><span class="line">    this<span class="selector-class">.renderContext</span> = this<span class="selector-class">.renderCanvas</span><span class="selector-class">.getContext</span>(&#x27;<span class="number">2</span>d&#x27;)</span><br><span class="line"></span><br><span class="line">    this<span class="selector-class">.globalWidth</span> = window<span class="selector-class">.innerWidth</span></span><br><span class="line">    this<span class="selector-class">.globalHeight</span> = window<span class="selector-class">.innerHeight</span></span><br><span class="line"></span><br><span class="line">    this<span class="selector-class">.booms</span> = <span class="selector-attr">[]</span></span><br><span class="line">    this<span class="selector-class">.running</span> = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleMouseDown(e) &#123;</span><br><span class="line">    const boom = new Boom(&#123;</span><br><span class="line">      origin: &#123; x: e.clientX, y: e.clientY &#125;,</span><br><span class="line">      context: this.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        <span class="attribute">width</span>: this.globalWidth,</span><br><span class="line">        height: this.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom<span class="selector-class">.init</span>()</span><br><span class="line">    this<span class="selector-class">.booms</span><span class="selector-class">.push</span>(boom)</span><br><span class="line">    this<span class="selector-class">.running</span> || this<span class="selector-class">.run</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlePageHide() &#123;</span><br><span class="line">    this<span class="selector-class">.booms</span> = <span class="selector-attr">[]</span></span><br><span class="line">    this<span class="selector-class">.running</span> = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    const style = this<span class="selector-class">.renderCanvas</span><span class="selector-class">.style</span></span><br><span class="line">    style<span class="selector-class">.position</span> = &#x27;fixed&#x27;</span><br><span class="line">    style<span class="selector-class">.top</span> = style<span class="selector-class">.left</span> = <span class="number">0</span></span><br><span class="line">    style<span class="selector-class">.zIndex</span> = &#x27;<span class="number">999999999999999999999999999999999999999999</span>&#x27;</span><br><span class="line">    style<span class="selector-class">.pointerEvents</span> = &#x27;<span class="attribute">none</span>&#x27;</span><br><span class="line"></span><br><span class="line">    style<span class="selector-class">.width</span> = this<span class="selector-class">.renderCanvas</span><span class="selector-class">.width</span> = this<span class="selector-class">.computerCanvas</span><span class="selector-class">.width</span> = this<span class="selector-class">.globalWidth</span></span><br><span class="line">    style<span class="selector-class">.height</span> = this<span class="selector-class">.renderCanvas</span><span class="selector-class">.height</span> = this<span class="selector-class">.computerCanvas</span><span class="selector-class">.height</span> = this<span class="selector-class">.globalHeight</span></span><br><span class="line"></span><br><span class="line">    document<span class="selector-class">.body</span><span class="selector-class">.append</span>(this<span class="selector-class">.renderCanvas</span>)</span><br><span class="line"></span><br><span class="line">    window<span class="selector-class">.addEventListener</span>(&#x27;mousedown&#x27;, this<span class="selector-class">.handleMouseDown</span><span class="selector-class">.bind</span>(this))</span><br><span class="line">    window<span class="selector-class">.addEventListener</span>(&#x27;pagehide&#x27;, this<span class="selector-class">.handlePageHide</span><span class="selector-class">.bind</span>(this))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    this<span class="selector-class">.running</span> = true</span><br><span class="line">    if (this<span class="selector-class">.booms</span><span class="selector-class">.length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      return this<span class="selector-class">.running</span> = false</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(this<span class="selector-class">.run</span><span class="selector-class">.bind</span>(this))</span><br><span class="line"></span><br><span class="line">    this<span class="selector-class">.computerContext</span><span class="selector-class">.clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, this<span class="selector-class">.globalWidth</span>, this<span class="selector-class">.globalHeight</span>)</span><br><span class="line">    this<span class="selector-class">.renderContext</span><span class="selector-class">.clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, this<span class="selector-class">.globalWidth</span>, this<span class="selector-class">.globalHeight</span>)</span><br><span class="line"></span><br><span class="line">    this<span class="selector-class">.booms</span><span class="selector-class">.forEach</span>((boom, index) =&gt; &#123;</span><br><span class="line">      if (boom<span class="selector-class">.stop</span>) &#123;</span><br><span class="line">        return this<span class="selector-class">.booms</span><span class="selector-class">.splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom<span class="selector-class">.move</span>()</span><br><span class="line">      boom<span class="selector-class">.draw</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    this<span class="selector-class">.renderContext</span><span class="selector-class">.drawImage</span>(this<span class="selector-class">.computerCanvas</span>, <span class="number">0</span>, <span class="number">0</span>, this<span class="selector-class">.globalWidth</span>, this<span class="selector-class">.globalHeight</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const cursorSpecialEffects = new CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects<span class="selector-class">.init</span>()</span><br></pre></td></tr></table></figure>

<p>然后在<code>./hexo/source/_data/body-end.swig</code>中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% if theme<span class="selector-class">.cursor_effect</span> == &quot;fireworks&quot; %&#125;</span><br><span class="line">  &lt;script async <span class="attribute">src</span>=&quot;/js/<span class="attribute">cursor</span>/fireworks<span class="selector-class">.js</span>&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>在<code>next.yml</code>中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># 鼠标点击特效</span><br><span class="line">cursor_effect: fireworks</span><br></pre></td></tr></table></figure>

<h2 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h2><p>Next内置了不蒜子统计<br>在<code>next.yml</code>中搜索<code>busuanzi_count</code>并设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enable: true</span><br></pre></td></tr></table></figure>

<h2 id="自定义单行代码颜色"><a href="#自定义单行代码颜色" class="headerlink" title="自定义单行代码颜色"></a>自定义单行代码颜色</h2><p>在<code>./hexo/source/_data/styles.styl</code>中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff511A</span>;</span><br><span class="line">    //<span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Live2D看板娘"><a href="#Live2D看板娘" class="headerlink" title="Live2D看板娘"></a>Live2D看板娘</h2><p>以我安装的<code>tororo</code>为例，其他模型请见<a href="https://github.com/xiazeyu/live2d-widget-models">官方文档</a><br>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line">npm install live2d-widget-model-tororo</span><br></pre></td></tr></table></figure>
<p>在<code>next.yml</code>中搜索<code>Progress bar in the top during page loading</code>并设置为</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true 							# 开启Live2D</span><br><span class="line">  scriptFrom: local 					   # 插件来源</span><br><span class="line">  pluginRootPath: live2dw/ 				# 插件根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ 					  # 脚本文件路径(相对于插件根目录路径)</span><br><span class="line">  pluginModelPath: assets/ 				# 模型文件路径(相对于插件根目录)</span><br><span class="line">  tagMode: false 						  # 是否标签模式</span><br><span class="line">  debug: false 							# 是否开启调试模式</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko 		# 选择模型</span><br><span class="line">  display:</span><br><span class="line">    position: right						# 模型在页面上的位置</span><br><span class="line">    width: <span class="number">150</span> 							# 模型宽度</span><br><span class="line">    height: <span class="number">300</span> 		 				  # 模型高度</span><br><span class="line">  mobile:</span><br><span class="line">    show: true 							# 是否在手机端显示</span><br><span class="line">  react:</span><br><span class="line">    opacity: <span class="number">1</span> 							# 设置模型透明度</span><br></pre></td></tr></table></figure>

<h2 id="Echarts"><a href="#Echarts" class="headerlink" title="Echarts"></a>Echarts</h2><p>熊家的可视化图表，与PJAX有冲突，开启PJAX的情况下需要刷新页面才能成功加载。谷歌搜到说要修改PJAX，但是本人水平有限没能成功</p>
<p>安装的插件使用的是4.3，某些图表不能正常显示，需要手动修改为最新的，这个版本失效的话就到ECharts官网上随便打开一个示例，然后用浏览器控制台找到最新js文件的地址替换。</p>
<p>打开<code>./hexo/node_modules/hexo-tag-echarts4/template.html</code>，修改<code>&lt;script src=&quot;https://cdn.bootcss.com/echarts/4.3.0/echarts.common.min.js&quot;&gt;&lt;/script&gt;</code>为<code>&lt;script src=&quot;https://www.echartsjs.com/examples/vendors/echarts/echarts.min.js?_v_=1584687926098&quot;&gt;&lt;/script&gt;</code></p>
<p>此外，一些地图类的图表需要引入地图的js，也是开控制台找，然后加入到<code>./hexo/node_modules/hexo-tag-echarts4/template.html</code>中，例如中国地图和世界地图的js</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;script <span class="attribute">src</span>=&quot;https://www.echartsjs.com/examples/vendors/echarts/map/js/china.js?_v_=<span class="number">1584687926098</span><span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src=&quot;</span>https://www.echartsjs.com/examples/vendors/echarts/map/js/world.js?_v_=<span class="number">1584687926098</span><span class="string">&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>总之就是缺什么补什么</p>
<p>安装</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-echarts4 --save</span><br></pre></td></tr></table></figure>

<p>使用<br>400代表图表的高度是400px，85%表示相对宽度是85%，不标明的话默认值是高度400px，宽度81%</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% echarts <span class="number">400</span> &#x27;<span class="number">85%</span>&#x27; %&#125;</span><br><span class="line">\\TODO echarts contents goes here</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure>

<p>示例</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;% echarts %&#125;</span><br><span class="line">option = &#123;</span><br><span class="line">    xAxis: &#123;</span><br><span class="line">        type: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">        data: [<span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: &#123;</span><br><span class="line">        type: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        data: [<span class="number">820</span>, <span class="number">932</span>, <span class="number">901</span>, <span class="number">934</span>, <span class="number">1290</span>, <span class="number">1330</span>, <span class="number">1320</span>],</span><br><span class="line">        type: <span class="string">&#x27;line&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br><span class="line">&#123;% endecharts %&#125;</span><br></pre></td></tr></table></figure>

<p>2022.5.13 已废弃</p>
<h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>Github的服务器在境外，网站加载时间巨长，而使用CDN加速可以有效缓解这一问题</p>
<ul>
<li>登陆<a href="https://www.cloudflare.com/">Cloudflare</a></li>
<li>输入你的域名并点击点击<code>Add site</code></li>
<li>选择套餐，选<code>free</code>就好</li>
<li>点击<code>Confirm plan</code></li>
<li>Cloudflare会先扫描你的DNS记录，稍等一会会出现你域名现在的解析记录</li>
<li>点击<code>Continue</code></li>
<li>打开你域名服务商的网站，用Cloudflare给的两个DNS服务器替换掉原来的服务器</li>
<li>完成后回到Cloudflare，点击<code>Done, check nameservers</code></li>
<li>然后慢慢等待生效，生效后会有邮件提醒</li>
<li>等待的时候可以做一些设置</li>
<li>SSL&#x2F;TLS选项<ul>
<li>Mode使用默认的Full</li>
<li>Always Use HTTPS设置为On</li>
<li>Opportunistic Encryption设置为On</li>
<li>Authenticated Origin Pills设置为On</li>
</ul>
</li>
</ul>
<p>填坑完成，毕设期间估计要咕咕咕3个月了┏(＾0＾)┛</p>
<blockquote>
<p>参考: <a href="https://tding.top/archives/2bd6d82.html">小丁的个人博客</a></p>
</blockquote>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>OneDrive同步本地任意文件夹</title>
    <url>/OneDrive%E5%90%8C%E6%AD%A5%E6%9C%AC%E5%9C%B0%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%A4%B9.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">使用mklink命令创建OneDrive与博客Markdown文件夹的符号链接，实现同步的目的</blockquote>

<span id="more"></span>

<p>为了能在其他设备上写博客，我曾经把整个文件夹扔到了OneDrive上，但是后来发现这样每次执行<code>hexo cl &amp;&amp; hexo g</code>时都会产生大量的文件变动，对OneDrive服务器属实不太友好，毕竟一直在白嫖🐶。后来就只保留了<code>./source/_posts</code>文件夹，每次写完文章后手动复制粘贴过去。前几天突发奇想，能不能让OneDrive自动同步这个文件夹，搜了一圈就发现了<code>mklink</code>这个命令。</p>
<div class="note info"><p>下面有一些关于`mklink`命令的说明，不想看的话直接点按钮跳过 <a class="btn" href="#OneDrive创建符号链接"><i class="fa fa-forward fa-fw"></i>跳过</a></p></div>


<h1 id="mklink命令简介"><a href="#mklink命令简介" class="headerlink" title="mklink命令简介"></a>mklink命令简介</h1><div class="note primary"><p>命令简介引用了<a class="btn" href="https://ss64.com/nt/mklink.html"><i class="fa fa-book fa-fw"></i>SS64</a>以及<a class="btn" href="https://docs.microsoft.com/zh-cn/windows-server/administration/windows-commands/mklink"><i class="fa fa-book fa-fw"></i>Microsoft Docs</a>的内容，参考了 <a class="btn" href="https://www.icoa.cn/a/910.html"><i class="fa fa-blog fa-fw"></i>逍遥峡谷</a> 的文章，特此感谢</p></div>

<p><code>mklink</code>命令用于创建目录或文件符号或硬链接，自Vista开始引入，支持Vista以后的Windows操作系统。</p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><code>mklink</code>命令提供了三种链接方式，分别是<code>符号链接</code>、<code>硬链接</code>以及<code>联接</code>，三种方式与快捷方式的对比如下</p>
<table>
<thead>
<tr>
<th align="left">方式</th>
<th align="center">链接文件</th>
<th align="center">链接文件夹</th>
<th align="center">跨硬盘链接</th>
<th align="center">指向不存在的目标</th>
</tr>
</thead>
<tbody><tr>
<td align="left">快捷方式</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="center">✅</td>
</tr>
<tr>
<td align="left">硬链接</td>
<td align="center">✅</td>
<td align="center">❌</td>
<td align="center">❌</td>
<td align="center">❌</td>
</tr>
<tr>
<td align="left">联接（目录交接点&#x2F;软链接）</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="center">✅</td>
</tr>
<tr>
<td align="left">符号链接</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="center">✅</td>
</tr>
</tbody></table>
<blockquote>
<ul>
<li>符号链接和联接是基于<a href="https://zh.m.wikipedia.org/zh-hans/NTFS%E9%87%8D%E8%A7%A3%E6%9E%90%E7%82%B9">NTFS重解析点(NTFS reparse point)</a>实现的</li>
<li>硬链接是通过指向同一inode的多个文件表项实现的–与Unix硬链接相同。如果原始文件名被删除，硬链接仍将工作，它直接指向磁盘上的数据</li>
<li>在一个循环中创建两个相互指向的链接，或者创建一个指向自身的链接是可行的（但不可取）。符号链接可能会在那些没有处理这些情况的应用程序中暴露出安全漏洞。</li>
<li>符号链接和硬链接都不支持<code>.zip</code>压缩文件</li>
</ul>
</blockquote>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink [[/d] | [/h] | [/j]] &lt;link&gt; &lt;target&gt;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">&#x2F;d</td>
<td align="left">创建目录符号链接。 默认情况下，此命令将创建文件符号链接。</td>
</tr>
<tr>
<td align="left">&#x2F;h</td>
<td align="left">创建硬链接而不是符号链接。</td>
</tr>
<tr>
<td align="left">&#x2F;j</td>
<td align="left">创建联接（目录交接点）。</td>
</tr>
<tr>
<td align="left">&lt;link&gt;</td>
<td align="left">指定要创建的符号链接的名称。</td>
</tr>
<tr>
<td align="left">&lt;target&gt;</td>
<td align="left">指定新符号链接引用的路径 (相对或绝对) 。</td>
</tr>
<tr>
<td align="left">&#x2F;?</td>
<td align="left">在命令提示符下显示帮助。</td>
</tr>
</tbody></table>
<p>如果<code>&lt;link&gt;</code>和<code>&lt;target&gt;</code>路径中含有空格，则需要用双引号<code>&quot;&quot;</code>包住内容</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><blockquote>
<p>默认情况下，运行命令<code>mklink</code>需要管理员权限。但是自<code>Windows 10 build 14972</code>起，如果开启了<code>开发人员模式</code>，则无需提权即可运行命令。</p>
</blockquote>
<h2 id="移动与选中"><a href="#移动与选中" class="headerlink" title="移动与选中"></a>移动与选中</h2><blockquote>
<ul>
<li>在文件资源管理器中选中<code>符号链接</code>将会选中源文件（目录）</li>
<li>在文件资源管理器中选中<code>联接</code>将会选中<code>联接</code>自身</li>
<li>在文件资源管理器中拖拽<code>符号链接</code>到新的位置将只移动<code>符号链接</code>自身</li>
<li>在文件资源管理器中拖拽<code>联接</code>到新的位置将会移动源文件目录到新的位置</li>
</ul>
</blockquote>
<h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p>下面是我对每个类型所做的测试</p>
<div class="note primary"><p>更加详细的详细说明可以看 <a class="btn" href="https://sspai.com/post/66834"><i class="fa fa-blog fa-fw"></i>少数派</a> 的文章，讲的非常明白</p></div>

<h2 id="文件的符号链接"><a href="#文件的符号链接" class="headerlink" title="文件的符号链接"></a>文件的符号链接</h2><p>新建测试文件夹<code>link</code>与<code>target</code>，新建测试文件<code>./target/target.txt</code>，此时<code>link</code>文件夹为空<br><img data-src="https://s2.loli.net/2022/05/25/cAlHUYMq2W9L7h5.png" alt="文件的符号链接1"><br>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink E:\Test\link\link.txt E:\Test\target\target.txt</span><br></pre></td></tr></table></figure>
<p>此时<code>link</code>文件夹内出现了<code>link.txt</code>，文件类型为<code>.symlink</code>，图标与快捷方式相同，但它是符号链接。更改任一文件另一个文件也会被同步更改。符号链接指向的是源文件的路径，文件的真实存储位置仍然在<code>./target/target.txt</code>。<br><img data-src="https://s2.loli.net/2022/05/25/KJQd7MjVpxwBeo1.png" alt="文件的符号链接2"></p>
<h2 id="文件夹的符号链接"><a href="#文件夹的符号链接" class="headerlink" title="文件夹的符号链接"></a>文件夹的符号链接</h2><p>新建测试文件夹与<code>target</code>，新建测试文件<code>./target/target.txt</code><br><img data-src="https://s2.loli.net/2022/05/25/9DXKw3zxn8p41EB.png" alt="文件夹的符号链接1"><br>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /d E:\Test\link E:\Test\target</span><br></pre></td></tr></table></figure>
<p>此时会创建<code>link</code>文件夹，文件夹图标与快捷方式相同，文件夹内容与源文件夹相同。更改任一文件另一个文件也会被同步更改。<br><img data-src="https://s2.loli.net/2022/05/25/UePih7d86o3OglN.png" alt="文件夹的符号链接2"></p>
<p>符号链接指向的是源文件目录的路径，文件的真实存储位置仍然是<code>target</code>源文件夹，可以看到<code>link</code>文件夹在地址栏与标题栏的路径不同。<br><img data-src="https://s2.loli.net/2022/05/25/4WKXoCPbQa8GZ7S.png" alt="文件夹的符号链接3"></p>
<h2 id="文件的硬链接"><a href="#文件的硬链接" class="headerlink" title="文件的硬链接"></a>文件的硬链接</h2><p>新建测试文件夹<code>link</code>与<code>target</code>，新建测试文件<code>./target/target.txt</code>，此时<code>link</code>文件夹为空<br><img data-src="https://s2.loli.net/2022/05/25/cAlHUYMq2W9L7h5.png" alt="文件的硬链接1"><br>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /h E:\Test\link\link.txt E:\Test\target\target.txt</span><br></pre></td></tr></table></figure>
<p>此时<code>link</code>文件夹内出现了<code>link.txt</code>，文件类型仍然为<code>文本文档</code>，与源文件相同。图标也是正常的文本文档图标。硬链接直接指向硬盘上的文件。<br><img data-src="https://s2.loli.net/2022/05/25/GgYQLRkw6UDWm1y.png" alt="文件的硬链接2"></p>
<h2 id="联接（目录交接点）"><a href="#联接（目录交接点）" class="headerlink" title="联接（目录交接点）"></a>联接（目录交接点）</h2><p>新建测试文件夹与<code>target</code>，新建测试文件<code>./target/target.txt</code><br><img data-src="https://s2.loli.net/2022/05/25/9DXKw3zxn8p41EB.png" alt="联接1"><br>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /j E:\Test\link E:\Test\target</span><br></pre></td></tr></table></figure>
<p>结果与文件夹的符号链接基本相同，唯一的区别是<code>link</code>文件夹在地址栏与标题栏的路径相同。但是文件的真实存储位置仍然是<code>target</code>源文件夹。<br><img data-src="https://s2.loli.net/2022/05/25/hy1fLAiPF48Jwgv.png" alt="联接2"></p>
<h1 id="OneDrive创建符号链接"><a href="#OneDrive创建符号链接" class="headerlink" title="OneDrive创建符号链接"></a>OneDrive创建符号链接</h1><p>首先打开OneDrive的设置，确认<code>常规</code>和<code>通知</code>里面所有的项目已经勾选。<br><img data-src="https://s2.loli.net/2022/05/25/CUqA9YGWbci2O48.png" alt="OneDrive设置"><br>然后将博客的<code>_posts</code>文件夹剪切到OneDrive并重命名，注意是剪切，博客文件夹不能存在<code>_posts</code>文件夹。<br>然后按下<code>win</code>+<code>s</code>，输入<code>cmd</code>，<code>以管理员身份运行</code>，然后输入<code>mklink</code>命令。注意<code>mklink</code>命令只能用<code>cmd</code>运行，<code>powershell</code>是不支持的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /d D:\Project\Blog\cn_Siriusq\source\_posts C:\Users\Sirius\OneDrive\Siriusq</span><br></pre></td></tr></table></figure>
<p>注意第一个路径是我博客文章的路径，第二个路径则是OneDrive的路径我博客文章的路径。这里其实是反着来的，OneDrive作为源文件夹，不然OneDrive会一直显示同步被挂起，很迷惑。</p>
<p>执行完毕后会有提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">为 D:\Project\Blog\cn_Siriusq\source\_posts &lt;&lt;===&gt;&gt; C:\Users\Sirius\OneDrive\Siriusq 创建的符号链接</span><br></pre></td></tr></table></figure>

<p><img data-src="https://s2.loli.net/2022/05/25/YphRoDOySbv6ixJ.png" alt="链接成功"><br>链接成功后打开博客的文件夹可以看到，地址栏是当前文件夹的路径，而标题栏却是OneDrive文件夹的路径。此时无论修改哪一边的文件，另一边的文件也会跟着变化，达到同步的目的</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>OneDrive</tag>
        <tag>mklink</tag>
      </tags>
  </entry>
  <entry>
    <title>Outlook邮件导出</title>
    <url>/Outlook%E9%82%AE%E4%BB%B6%E5%AF%BC%E5%87%BA.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">毕业之后没有了Outlook的催命提示音，日子巴适的很🐶。不过学校给的账户6月就要被注销了（扣扣嗖嗖），趁着还有时间把邮件导出来留作纪念吧</blockquote>

<span id="more"></span>

<h1 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h1><p>首先打开Outlook的<code>选项</code>（先点击左上角的文件，然后选项在左下角），然后点击<code>高级</code>-<code>导出</code><br><img data-src="https://s2.loli.net/2022/05/25/SpfZscu2qKrGhFY.png" alt="选项"></p>
<p>选择<code>导出到文件</code>，然后<code>下一页</code><br><img data-src="https://s2.loli.net/2022/05/25/xhowU4E6HMlgFzL.png" alt="导入和导出向导"></p>
<p>选择<code>Outlook数据文件(.pst)</code>，然后<code>下一页</code><br><img data-src="https://s2.loli.net/2022/05/25/Urat5VqPMETOHpS.png" alt="导出到文件"></p>
<p>选择需要导出的内容，全部导出的话就选择最上面的邮箱地址，然后<code>下一页</code><br><img data-src="https://s2.loli.net/2022/05/25/HqKQLYjk6MEUTFx.png" alt="导出Outlook数据文件"></p>
<p>选择导出文件的位置，然后<code>完成</code><br><img data-src="https://s2.loli.net/2022/05/25/4YWkOsjAPcnLJaw.png" alt="选择导出文件位置"></p>
<p>然后是<code>创建数据文件密码</code>，非必需<br><img data-src="https://s2.loli.net/2022/05/25/pAUZCEXmy4M31Vu.png" alt="添加可选密码"><br><img data-src="https://s2.loli.net/2022/05/25/gUwv1VXuiNjczHI.png" alt="输入密码"></p>
<p>到这里导出就结束了</p>
<h1 id="添加邮箱别名"><a href="#添加邮箱别名" class="headerlink" title="添加邮箱别名"></a>添加邮箱别名</h1><p>导出之后又想把它导入到自己的邮箱里了（纯属闲的蛋疼，其实直接把所有邮件打包发送到自己的邮箱就行），不过我的微软账户使用其他的邮箱注册的，给的Outlook地址是随机生成的一串字母数字，很辣眼睛，所以就添加个别名吧。</p>
<p>我这里登陆的是网页版Outlook，先点击右上角的设置，然后右侧边栏最底下有<code>查看全部Outlook设置</code>。在弹窗里选择<code>右键</code>-<code>同步电子右键</code>-<code>管理或选择主别名</code><br><img data-src="https://s2.loli.net/2022/05/25/WVwLSFP4zClypRG.png" alt="管理或选择主别名"></p>
<p>在跳转的页面选择<code>添加电子邮件</code><br><img data-src="https://s2.loli.net/2022/05/25/TC2OgrAsRNkYxdl.png" alt="添加电子邮件"></p>
<p>添加别名就完成了<br><img data-src="https://s2.loli.net/2022/05/25/CGNFuAjmw1YH8qR.png" alt="添加别名"></p>
<h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><p>先点击左上角的<code>文件</code>，然后选择<code>打开和导出</code>-<code>打开Outlook数据文件</code><br><img data-src="https://s2.loli.net/2022/05/25/4bJTqcYNexEfs5m.png" alt="打开Outlook数据文件"></p>
<p>选择<code>从另一程序或文件导入</code>，然后一路下一页就完事了，前面设置过密码的话会要求输入密码<br><img data-src="https://s2.loli.net/2022/05/25/VB5IcH4zpbAo3Rr.png" alt="导入向导"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Outlook</tag>
        <tag>备份</tag>
        <tag>留学</tag>
      </tags>
  </entry>
  <entry>
    <title>PTE题型</title>
    <url>/PTE%E9%A2%98%E5%9E%8B.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">被雅思恶心到了（~~口语万年5.5~~），转战PTE，开个坑记录下PTE的题型，文章的题型顺序是按照考试的时间先后顺序排列的。另外[送上PTE官网](https://pearsonpte.com/)，可以在官[这里](https://pearsonpte.com/the-test/who-accepts-it/)查询下自己想申请的学校接不接受PTE成绩，另外也可以到学校官网查询，例如我要申请的UCD是要达到总分63小分不低于59，对应雅思就是总分6.5小分6.0的水平，但是PTE是全机器判卷，排除掉了人为因素的影响，更为客观，AI才是未来~~</blockquote>


<span id="more"></span>

<h1 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h1><p>口语部分共有5个题型</p>
<h2 id="Read-Aloud"><a href="#Read-Aloud" class="headerlink" title="Read Aloud"></a>Read Aloud</h2><ul>
<li>三至四行的短文本，朗读出来</li>
<li>40s准备时间</li>
<li>40s朗读时间</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容</li>
<li>发音</li>
<li>流利度</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
<li>口语</li>
</ul>
<h2 id="Repeat-Sentence"><a href="#Repeat-Sentence" class="headerlink" title="Repeat Sentence"></a>Repeat Sentence</h2><ul>
<li>听录音</li>
<li>马上复述</li>
<li>包含10-12个单词</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容3分</li>
<li>发音5分</li>
<li>流利度5分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>口语</li>
</ul>
<h2 id="Discribe-Image"><a href="#Discribe-Image" class="headerlink" title="Discribe Image"></a>Discribe Image</h2><ul>
<li>给出一个图表</li>
<li>40s准备</li>
<li>描述图表</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容5分</li>
<li>发音5分</li>
<li>流利度5分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>口语</li>
</ul>
<h2 id="Retell-Lecture"><a href="#Retell-Lecture" class="headerlink" title="Retell Lecture"></a>Retell Lecture</h2><ul>
<li>播放一段Lecture录音</li>
<li>可能有背景音</li>
<li>口音多样</li>
<li>10s准备</li>
<li>40s概括复述</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容5分</li>
<li>发音5分</li>
<li>流利度5分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>口语</li>
<li>听力</li>
</ul>
<h2 id="Answer-Short-Question"><a href="#Answer-Short-Question" class="headerlink" title="Answer Short Question"></a>Answer Short Question</h2><ul>
<li>一个小问题</li>
<li>用几个单词简短回答</li>
</ul>
<p><strong>评分标准</strong><br>答对1题1分</p>
<p><strong>交叉评分</strong></p>
<ul>
<li>口语</li>
<li>听力</li>
</ul>
<hr>
<h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p>写作部分共有2个题型</p>
<h2 id="Summarize-Written-Text"><a href="#Summarize-Written-Text" class="headerlink" title="Summarize Written Text"></a>Summarize Written Text</h2><ul>
<li>三至四道题</li>
<li>每个题三至四段的文本</li>
<li>总结主旨</li>
<li>1句话概括</li>
<li>5-75个单词</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容2分</li>
<li>形式1分</li>
<li>语法2分</li>
<li>词汇2分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
<li>写作</li>
</ul>
<h2 id="Write-Essay"><a href="#Write-Essay" class="headerlink" title="Write Essay"></a>Write Essay</h2><ul>
<li>大作文</li>
<li>一般是1篇，非酋可能会抽到2篇（瑟瑟发抖）</li>
<li>马上复述</li>
<li>200-300词</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容3分</li>
<li>形式2分</li>
<li>结构及连贯性2分</li>
<li>语法2分</li>
<li>语言范围（是否多样）5分</li>
<li>词汇2分</li>
<li>拼写2分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>写作</li>
</ul>
<hr>
<h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><p>阅读部分共有5个题型</p>
<h2 id="Multiple-choice-choose-single-answer"><a href="#Multiple-choice-choose-single-answer" class="headerlink" title="Multiple-choice, choose single answer"></a>Multiple-choice, choose single answer</h2><ul>
<li>给出一段文本</li>
<li>选出正确答案</li>
<li>单选</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
</ul>
<h2 id="Multiple-choice-choose-multiple-answer"><a href="#Multiple-choice-choose-multiple-answer" class="headerlink" title="Multiple-choice, choose multiple answer"></a>Multiple-choice, choose multiple answer</h2><ul>
<li>多选题</li>
<li>不确定就当单选</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1题1分，选多会倒扣一分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
</ul>
<h2 id="Re-order-paragraphs"><a href="#Re-order-paragraphs" class="headerlink" title="Re-order paragraphs"></a>Re-order paragraphs</h2><ul>
<li>排序题</li>
<li>打乱顺序</li>
<li>不一定连贯</li>
<li>根据逻辑性排序</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
</ul>
<h2 id="Fill-in-the-blanks（单词库）"><a href="#Fill-in-the-blanks（单词库）" class="headerlink" title="Fill in the blanks（单词库）"></a>Fill in the blanks（单词库）</h2><ul>
<li>类似完形填空</li>
<li>给出单词库进行选择</li>
<li>一个单词只选一次</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
</ul>
<h2 id="Fill-in-the-blanks（四选一）"><a href="#Fill-in-the-blanks（四选一）" class="headerlink" title="Fill in the blanks（四选一）"></a>Fill in the blanks（四选一）</h2><ul>
<li>类似完形填空</li>
<li>一个空给出4个单词</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1题1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>阅读</li>
<li>写作</li>
</ul>
<hr>
<p><strong>考完阅读后中间会有十分钟休息时间</strong></p>
<hr>
<h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><p>听力部分共有8个题型</p>
<h2 id="Summarize-Spoken-Text"><a href="#Summarize-Spoken-Text" class="headerlink" title="Summarize Spoken Text"></a>Summarize Spoken Text</h2><ul>
<li>播放一段录音</li>
<li>可能有背景音</li>
<li>口音多样</li>
<li>做总结</li>
<li>听到关键词或关键句后做成笔记</li>
<li>50-70个单词</li>
<li>单独计时间</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>内容2分</li>
<li>形式2分</li>
<li>语法2分</li>
<li>词汇2分</li>
<li>拼写2分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>写作</li>
</ul>
<h2 id="Multiple-choice-choose-multiple-answer-1"><a href="#Multiple-choice-choose-multiple-answer-1" class="headerlink" title="Multiple-choice, choose multiple answer"></a>Multiple-choice, choose multiple answer</h2><ul>
<li>多选题</li>
<li>不确定就当单选</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1个1分</li>
<li>选多会倒扣1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
</ul>
<h2 id="Fill-in-the-blanks（单词库）-1"><a href="#Fill-in-the-blanks（单词库）-1" class="headerlink" title="Fill in the blanks（单词库）"></a>Fill in the blanks（单词库）</h2><ul>
<li>类似完形填空</li>
<li>挖掉几个空</li>
<li>给出一段文本</li>
<li>播放录音</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1空1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>写作</li>
</ul>
<h2 id="Highlight-correct-summary"><a href="#Highlight-correct-summary" class="headerlink" title="Highlight correct summary"></a>Highlight correct summary</h2><ul>
<li>播放录音</li>
<li>四选一</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>阅读</li>
</ul>
<h2 id="Multiple-choice-choose-single-answer-1"><a href="#Multiple-choice-choose-single-answer-1" class="headerlink" title="Multiple-choice, choose single answer"></a>Multiple-choice, choose single answer</h2><ul>
<li>单选题</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
</ul>
<h2 id="Select-missing-word"><a href="#Select-missing-word" class="headerlink" title="Select missing word"></a>Select missing word</h2><ul>
<li>放一段录音</li>
<li>选项前播放bi声</li>
<li>选择正确单词</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1个1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
</ul>
<h2 id="Highlight-incorrect-words"><a href="#Highlight-incorrect-words" class="headerlink" title="Highlight incorrect words"></a>Highlight incorrect words</h2><ul>
<li>给出一段文本</li>
<li>播放一段录音</li>
<li>文本与录音中某些单词有差别</li>
<li>选出不一样的单词</li>
<li>没听出来就不要选了</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>选对1空1分，选错1空倒扣1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>阅读</li>
</ul>
<h2 id="Write-from-dictation"><a href="#Write-from-dictation" class="headerlink" title="Write from dictation"></a>Write from dictation</h2><ul>
<li>播放一句录音</li>
<li>写出听到的句子</li>
</ul>
<p><strong>评分标准</strong></p>
<ul>
<li>1个单词1分</li>
</ul>
<p><strong>交叉评分</strong></p>
<ul>
<li>听力</li>
<li>写作</li>
</ul>
<h1 id="分数对照表"><a href="#分数对照表" class="headerlink" title="分数对照表"></a>分数对照表</h1><p>PTE与雅思的分数对照表,仅供参考</p>
<table>
<thead>
<tr>
<th align="center">PTE</th>
<th align="center">IELTS</th>
</tr>
</thead>
<tbody><tr>
<td align="center">86-90</td>
<td align="center">9.0</td>
</tr>
<tr>
<td align="center">83-85</td>
<td align="center">8.5</td>
</tr>
<tr>
<td align="center">79-82</td>
<td align="center">8.0</td>
</tr>
<tr>
<td align="center">73-78</td>
<td align="center">7.5</td>
</tr>
<tr>
<td align="center">65-72</td>
<td align="center">7.0</td>
</tr>
<tr>
<td align="center">58-64</td>
<td align="center">6.5</td>
</tr>
<tr>
<td align="center">50-57</td>
<td align="center">6.0</td>
</tr>
<tr>
<td align="center">42-49</td>
<td align="center">5.5</td>
</tr>
<tr>
<td align="center">36-41</td>
<td align="center">5.0</td>
</tr>
<tr>
<td align="center">29-35</td>
<td align="center">4.5</td>
</tr>
<tr>
<td align="center">10-28</td>
<td align="center">No Data</td>
</tr>
</tbody></table>
<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>在这里安利一位B站的小姐姐@<a href="https://space.bilibili.com/35648955">久酱贩卖机</a>，她做了几期PTE的科普视频，灰常有用，B站果然是年轻人的学习圣地~~<br>另：知乎PTE板块已经被几家机构号占领了，看看就好…</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>PTE</tag>
        <tag>攻略</tag>
      </tags>
  </entry>
  <entry>
    <title>PTE不完全指南</title>
    <url>/PTE%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">我12月27日在武汉湖北大学考场考完了PTE，等了三天之后出了成绩，成绩单在下面，顺利达到格拉的入学要求。记录一下备考的经验，祝大家早日和语言考试分手（雅思就是个死渣男）</blockquote>

<p><img data-src="https://s2.loli.net/2022/05/13/X3K2jQ8mRNSeMY5.png" alt="PTE"></p>
<span id="more"></span>

<p>首先讲一下大概的时间线，我是今年5月份开始了解PTE。因为4月考的雅思没有达到录取要求，更主要的是复习一个月去考和第一次裸考的成绩基本一样，只有阅读涨了0.5分。。。</p>
<ul>
<li>5月在B站稍微了解了下PTE，然后就在准备研究生申请的事情</li>
<li>十月底格拉来了offer，con雅思6.5（写作6.5，其他6.0）或者PTE68（62），虽然他官网些写的是PTE60(59)</li>
<li>双十一开始复习，双十一在淘宝买了Voucher报了名，然后主要练习口语，每天大概2个小时，中间忙着订格拉的宿舍，大部分时间在摸鱼</li>
<li>十二月之后开始练所有的题型，每天大概4-6个小时</li>
<li>12月11号做了官方模考A卷，总分66，听62 说70 读65 写64，然后格拉要求总分68，就跟慌，11号以后每天复习时间大概在6-8小时</li>
<li>12月21号做了模考C卷，总分67，都说C卷最接近真实考试难度，所以我更慌了</li>
<li>12月25号做了模考B卷，总分70</li>
<li>12月26号飞去武汉，27号上午9点考试</li>
<li>12月30号中午1点收到出成绩的邮件（这里不得不吐槽武汉考场，出成绩是真的慢，我同学29号下午在广州白云考的，30号早上7点多就出分了）</li>
</ul>
<h1 id="关于PTE"><a href="#关于PTE" class="headerlink" title="关于PTE"></a>关于PTE</h1><p>PTE是英国培生教育集团推出的英语语言能力考试，全程机考，程序自动评分，目前英国大部分学校是认可的</p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol>
<li>PTE不会像雅思那样人为压分，只要下功夫练习就一定会有进步，不像雅思，花老大的力气也不涨分</li>
<li>PTE出分速度快，一般1-5个工作日</li>
<li>PTE考位相对宽松，不用担心抢不到位置</li>
</ol>
<h2 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h2><p>PTE适合听力&#x2F;阅读比较好的考生，因为它的听力和阅读难度比较大，尤其是听力<br>PTE的写作和口语比雅思要简单，也适合雅思一直卡口语&#x2F;写作小分的考生</p>
<h1 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h1><p>题型上次介绍过，再列个表概括一下</p>
<table>
<thead>
<tr>
<th align="center">部分</th>
<th align="center">题型</th>
<th>要求</th>
<th align="center">题目数量</th>
<th>交叉评分</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Speaking</td>
<td align="center">RA</td>
<td>朗读屏幕上的一段话，40s准备40s朗读，短句子给的时间会相应减少</td>
<td align="center">6-7</td>
<td>Reading and speaking &#x2F; Oral fluency, pronunciation</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">RS</td>
<td>电脑播放一句话的录音，听完后马上复述出来</td>
<td align="center">10-12</td>
<td>Listening and speaking &#x2F; Oral fluency, pronunciation</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">DI</td>
<td>描述给出的图片，25s准备，40s叙述</td>
<td align="center">6-7</td>
<td>Speaking &#x2F; Oral fluency, pronunciation</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">RL</td>
<td>听一段录音，然后简单复述录音讲了什么，需要做笔记</td>
<td align="center">3-4</td>
<td>Listening and speaking &#x2F; Oral fluency, pronunciation</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">ASQ</td>
<td>回答听到的问题，一般答案是一个单词，都是常识性问题</td>
<td align="center">10-12</td>
<td>Listening and speaking &#x2F; Vocabulary</td>
</tr>
<tr>
<td align="center">Writing</td>
<td align="center">SWT</td>
<td>给出一段文章，用5-75个单词概括这段话，只能写一句话，每题10min</td>
<td align="center">2-3</td>
<td>Reading and writing &#x2F; Grammar, vocabulary</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">WE</td>
<td>类似雅思大作文，每题20min</td>
<td align="center">1-2</td>
<td>Writing &#x2F; Grammar, vocabulary, spelling, written discourse</td>
</tr>
<tr>
<td align="center">Reading</td>
<td align="center">FIBW</td>
<td>完形填空的变种，将合适的单词拖拽到文章的空里</td>
<td align="center">5-6</td>
<td>Reading and writing</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">FIB</td>
<td>类似完形填空，从下拉菜单里选择缺少的单词</td>
<td align="center">4-5</td>
<td>Reading</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">RO</td>
<td>给几句打乱顺序的话，重新排序</td>
<td align="center">2-3</td>
<td>Reading</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">MCM</td>
<td>多选题</td>
<td align="center">2-3</td>
<td>Reading</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">MCS</td>
<td>单选题</td>
<td align="center">2-3</td>
<td>Reading</td>
</tr>
<tr>
<td align="center">Listening</td>
<td align="center">SST</td>
<td>听一段录音，然后总结一段50-70词的小文章，需要做笔记</td>
<td align="center">2-3</td>
<td>Listening and writing &#x2F; Grammar, vocabulary, spelling</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">FIB</td>
<td>听录音，然后拼写出缺少的单词</td>
<td align="center">2-3</td>
<td>Listening and writing</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">WFD</td>
<td>听一句话，然后拼写出来</td>
<td align="center">3-4</td>
<td>Listening and writing</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">MCS</td>
<td>单选题</td>
<td align="center">2-3</td>
<td>Listening</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">MCM</td>
<td>多选题</td>
<td align="center">2-3</td>
<td>Listening</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">SMW</td>
<td>播放一段录音，最后几个单词会剪掉，选择被剪掉的单词</td>
<td align="center">2-3</td>
<td>Listening</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">HIW</td>
<td>播放一段录音，录音和下面的文章有不一样的词，点选出不同的词</td>
<td align="center">2-3</td>
<td>Listening and reading</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">HCS</td>
<td>播放一段录音，选出最能概括录音的总结</td>
<td align="center">2-3</td>
<td>Listening and reading</td>
</tr>
</tbody></table>
<h1 id="答题经验"><a href="#答题经验" class="headerlink" title="答题经验"></a>答题经验</h1><h2 id="Speaking"><a href="#Speaking" class="headerlink" title="Speaking"></a>Speaking</h2><p><strong>口语部分最重要的就是流利度，我的经验就是一直说不要停，念错了也不要倒回去重新念，一直往下说就好，注意意群和停顿，另外录音开始后要及时说，3s内不说的话系统会自动关闭麦克风并跳到下一题</strong></p>
<h3 id="RA"><a href="#RA" class="headerlink" title="RA"></a>RA</h3><p>在准备时间里小声读一遍，不会念的词猜一下，数字年份之类的提前多念几遍</p>
<h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><p>我是鱼的记忆，长的句子记不住，只能记住一半多，能说多少说多少吧，不要卡壳就好<br>这个部分我个人来不及记笔记，也不是很建议记笔记，来不及反应</p>
<h3 id="RL-DI"><a href="#RL-DI" class="headerlink" title="RL&#x2F;DI"></a>RL&#x2F;DI</h3><p>这两个题就是套模板保证流利度，把模板记熟练，考试的时候无脑说。不用纠结语法，这俩题目不考语法<br>RL来不及记句子的话就记关键词，然后往模板里套就行</p>
<h3 id="ASQ"><a href="#ASQ" class="headerlink" title="ASQ"></a>ASQ</h3><p>这个题很蛋疼，对词汇量要求挺高，最好在考试之前过一遍机经，分值不高不必太纠结</p>
<h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><p><strong>写作要注意拼写，打字的时候打错的概率还是挺大的，每道题最好留2分钟检查一下拼写</strong><br>吐槽一下考场的键盘，武汉考场用的是那种巧克力键盘，真的难用，建议练习的时候找那种廉价的薄膜键盘就行，用机械键盘练习的话考试会很不习惯的</p>
<h3 id="SWT"><a href="#SWT" class="headerlink" title="SWT"></a>SWT</h3><p>一般第一句话就是关键句，文章里面举得例子可以无视，注意只能有1个句号</p>
<h3 id="WE"><a href="#WE" class="headerlink" title="WE"></a>WE</h3><p>从雅思转过来可能很不习惯这道题，200-300词的文章却要20分钟写完，莫得办法，只能用模板。模板百度就有，也可以去知乎豆瓣上找或者留邮箱要，拿到模板要看一下有没有错误，有些无良机构给的模板真的是无法直视。<br>留邮箱的话注意拿到资料后及时删除留下的邮箱，不然某垃圾机构会一直给你发垃圾邮件（没错说的就是你PTE在线学院）等offer的时候看见垃圾邮件恨不得想吃了他，每次来邮件都以为是来Offer了</p>
<h2 id="Reading"><a href="#Reading" class="headerlink" title="Reading"></a>Reading</h2><p>阅读的重点就是词汇量，多背单词<br><strong>做题的时候注意时间，阅读是整体计时，在低分值的单选多选题目上不用纠结，给其他题目留足时间</strong></p>
<h3 id="RO"><a href="#RO" class="headerlink" title="RO"></a>RO</h3><p>这部分有点玄学，经验就是找一下句子前后的逻辑和连接词，实在找不出来就背机经吧</p>
<h3 id="MCM-MCS"><a href="#MCM-MCS" class="headerlink" title="MCM&#x2F;MCS"></a>MCM&#x2F;MCS</h3><p>多选和单选都很直接，不会像雅思那样故意挖坑，不要在这两道题上浪费太多时间，分值不高。<br>多选拿不准的话就选最确定的那一个，选错的话倒扣分的</p>
<h3 id="FIB-FIBW"><a href="#FIB-FIBW" class="headerlink" title="FIB&#x2F;FIBW"></a>FIB&#x2F;FIBW</h3><p>这两道题最考验词汇量，一开始练的时候真的是一脸懵逼，不过可以根据词性排除一些选项，增加蒙对的概率。。。</p>
<h2 id="Listening"><a href="#Listening" class="headerlink" title="Listening"></a>Listening</h2><p><strong>听力部分除SST外也是整体计时，注意合理分配时间，因为分值最大的WFD是最后才出现的，有很多人来不及做完WFD就被系统强制交卷了，建议给WFD留3-4分钟</strong></p>
<h3 id="SWT-1"><a href="#SWT-1" class="headerlink" title="SWT"></a>SWT</h3><p>这部分是单独计时的，播放录音的时间也包含在里面<br>一般第一句话会是主题句，另外反复出现的词也要留意<br>记笔记的话尽量记完整的句子，最好不要用模板，因为有词数限制，模板就是浪费宝贵的空间<br>同样建议留出时间检查拼写</p>
<h3 id="FIB"><a href="#FIB" class="headerlink" title="FIB"></a>FIB</h3><p>这道题主要考察拼写，建议用笔把词语记下来<br>亲测武汉考场不能用<code>tab</code>键切换到下一个空，直接打的话需要另一只手操作鼠标，来不及</p>
<h3 id="WFD"><a href="#WFD" class="headerlink" title="WFD"></a>WFD</h3><p>这道题是重头戏，建议考试之前背机经，一个单词就是一分<br>听的时候注意单复数和时态，听完后先回想一下大概意思<br>记笔记的话建议练习首字母法，即记下来每个单词的首字母，然后再把其他的字母填上<br>做完后检查一遍拼写</p>
<h3 id="MCM"><a href="#MCM" class="headerlink" title="MCM"></a>MCM</h3><p>同阅读多选，选对一个1分，选错倒扣分<br>不确定的话不要选</p>
<h3 id="HIW"><a href="#HIW" class="headerlink" title="HIW"></a>HIW</h3><p>这个题选错的话也是倒扣分，所以没听清楚的就不要选了</p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="报名注意事项"><a href="#报名注意事项" class="headerlink" title="报名注意事项"></a>报名注意事项</h2><ol>
<li>报名的时候名字全部大写，名在前面姓在后面，中间空格，和身份证上的拼写一致</li>
<li>留常用的邮箱，出成绩的话会发邮件通知你的</li>
</ol>
<h2 id="Voucher"><a href="#Voucher" class="headerlink" title="Voucher"></a>Voucher</h2><p>官方的优惠券，能省点钱，淘宝可入，会发给你一个优惠码，报名缴费的时候填写优惠码就行了<br>淘宝上的仅限中国大陆考区使用，有效期一般12个月，退考后可以继续用</p>
<h2 id="练习平台"><a href="#练习平台" class="headerlink" title="练习平台"></a>练习平台</h2><p>现在主流的联系平台主要有羊驼、黑科技和猩际，我三家都有用，各有千秋，每家平台都有不少水军。豆瓣一搜索PTE全是某科技的回答，知乎就是某驼的多，每家平台都说自己评分准，但是不要过于相信他们的评分，仅供参考，目前羊驼的口语打分偏低，猩际的偏高，某科技口语是5分制，不好评价</p>
<ul>
<li>羊驼 - 在它家买的Voucher，送了一个半月会员，刚好够用，优点是口语练习实时出成绩，口语成绩是90分制，比较直观，有手机APP和网页版</li>
<li>黑科技 - 开了1个月的会员，主要练习作文，优点是可以查看其他人的优秀作文，有微信小程序和网页版</li>
<li>猩际 - 白嫖的，也用来练习写作，优点是会标出写作错误的地方，它家的公开课可以看一下，适合入门</li>
</ul>
<h2 id="机经"><a href="#机经" class="headerlink" title="机经"></a>机经</h2><p>PTE的一个神器就是机经，尤其是前几年题库少的时候，不过培生一直在更新题库，所以不建议过于依赖机经<br>有几家机构会有预测题，据说准确率蛮高的，后悔没有背<br>我知道的有下面两家，具体不作评价，没怎么看</p>
<ul>
<li>羊驼 - 它家的在APP里或者微信公众号里可以找到下载链接</li>
<li>萤火虫 - 它家的在微信公众号里有下载链接</li>
</ul>
<h2 id="模考"><a href="#模考" class="headerlink" title="模考"></a>模考</h2><p>PTE官方推出了三套模考，和考试的时候使用的是一套打分模式，有ABC三套，强烈建议考试之前做几套官方模拟，要不然就是在烧钱，<br>一般最后考试的分数都会比模考高几分的，因为考场耳机的收音效果比较好<br>模考的时候不要使用蓝牙耳机，录音效果差，很容易出现口语10分的情况。<br>有条件的买一个带麦的头戴式耳机，不放心的可以去闲鱼收一个二手的官方考试同款耳机，不过没太大必要，一个耳机四五百，拿来买排骨吃它不香吗<br>淘宝上可以买到模考的账号，可以单个买也可以买套装，套装价格大概430元</p>
<ul>
<li>A卷 - 难度最大，不太适合一开始就做，容易打击信心</li>
<li>B卷 - 难度最低</li>
<li>C卷 - 难度最接近真实考试</li>
</ul>
<p>另外这几家机构也有自己的模拟考试，价格比较便宜，可以练手用</p>
<h2 id="考试当天注意事项"><a href="#考试当天注意事项" class="headerlink" title="考试当天注意事项"></a>考试当天注意事项</h2><ol>
<li>提前半小时到达考场，可以带点材料，在休息室可以看材料</li>
<li>考场有专门存包的柜子，柜子很大，小号的行李箱也能塞进去，每个人会给一把钥匙，这个柜子中途是不允许开的，可以提前把水杯拿出来，考场提供饮用水，可以自己接</li>
<li>电子设备都要关机放进柜子里</li>
<li>考场桌子上有3M的耳塞，做写作和阅读的时候可以带上，因为你做到写作的时候可能还有人在做口语</li>
<li>国内考生带身份证就行，没必要带护照，我两个都带了，然后只拿了身份证进去</li>
<li>考试之前不要喝太多水，因为考完 口语、写作和阅读之后才会有10分钟的休息时间，大概在11点左右，憋两个小时很酸爽</li>
<li>中间的10分钟休息是可选的，建议休息，休息的时候举手找考官来帮你暂停考试，休息的时候注意时间，因为入场的时候要重新检查，记得出去的时候带着证件</li>
<li>电脑有异常及时找考官记录，要不然考完就没办法了，武汉考场的考官很nice，态度很友好</li>
<li>口语部分不要念太大声，一是保护自己的嗓子；二是会干扰别人，别人举报你的话会被写报告的（当然其他人声音太大的话你也可以举报）；考场的耳机收音效果都是不错的，没必要喊太大声，武汉考场的话你自己在说的时候基本听不到别人说话的声音</li>
<li>口语部分说完之后就可以点<code>Next</code>,避免录进去别人的声音，虽然概率不大</li>
<li>耳机麦克的位置我是放在上嘴唇和鼻尖中间，距离脸部大概2-3指的距离</li>
<li>试音的时候不要跟着别人念<code>Testing testing one two three</code>，找几个爆破音念或者念屏幕上的注意事项，看看会不会喷麦</li>
<li>考试的笔不用的时候一定要扣好笔帽，要不然干了就写不出字来了，考场记笔记用的本子是塑料材质，比较滑</li>
<li>耳机一旦调好就不要再动了</li>
</ol>
<p>需要模板的可以给我发邮件，我当时找了不少，虽然没用到几个<br>要说的就这么多了，祝大家早日通过考试~~~<br>BTW，2020新年快乐~~~</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>PTE</tag>
        <tag>攻略</tag>
      </tags>
  </entry>
  <entry>
    <title>碎碎念</title>
    <url>/Purpose.html</url>
    <content><![CDATA[<h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><p>建立博客的目的嘛，就是记录一些自己踩过的坑咯，然后记录下每次因为感兴趣而开始的折腾，在世界上留下存在的痕迹吧，就这样。</p>
<h3 id="02"><a href="#02" class="headerlink" title="02"></a>02</h3><p>博客主要记录的领域有：</p>
<ul>
<li>网站的配置</li>
<li>出国留学经验</li>
<li>建筑狗的水图大法</li>
<li>搞机（字面意思啦）</li>
<li>各种折腾</li>
</ul>
<h3 id="03"><a href="#03" class="headerlink" title="03"></a>03</h3><p>博主是一个老鸽子，不一定啥时候会冒出来，咕咕咕~</p>
<p>emmm这些好像放到<code>关于</code>里面比较好欸，罢了罢了，写都写了，就这样吧</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>Ryzen Hackintosh</title>
    <url>/Ryzen-Hackintosh.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">折腾了三天，终于把MacOs成功安装到了台式机上，某宝上买了一个拆机苹果网卡，基本完美，安装系统为MACOS HIGH SIERRA(10.13.6 17G65)，这篇文章就是在MacOS上写的（嚣张.jpg）</blockquote>

<p><img data-src="https://s2.loli.net/2022/05/13/TX95J8QoaSFbUHV.jpg" alt="1"></p>
<p>在Ryzen上安装Hackintosh的方法是<strong>Vanilla</strong>，是通过修改config.plist文件来实现黑苹果的，毕竟苹果使用的全是Intel的处理器，所以此文章的方法也仅支持AMD的部分CPU</p>
<span id="more"></span>

<p>此方法安装的黑苹果优点是可以使用iMessage、Facetime、Handoff、Siri等，缺点是不能使用32位应用<br>此方法需要下载的文件较多，建议创建一个文件夹存放相关文件</p>
<p>首先介绍下台式机的配置,原本想用NVME固态的，然鹅垃圾主板第二个M.2接口不是满血，换成了省事的SATA(流下了吃土的泪水)<br>CPU: AMD Ryzen 1700<br>GPU: NVIDIA GTX 1060 6GB<br>主板: ASRock X370 Killer SLI<br>内存: Apacer Blade 8G*2 DDR4 3000<br>SSD1: Samsung SM961 256G (Windows 10)<br>SSD2: Plextor M8VG 256G (MacOS)<br>HDD: Seagate ST2000DM008 2T<br>蓝牙+无线网卡：BCM943602CS （苹果的Macbook Pro上面的拆机卡，免驱）</p>
<h1 id="刻录安装盘"><a href="#刻录安装盘" class="headerlink" title="刻录安装盘"></a>刻录安装盘</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>制作安装盘需要准备以下物品：</p>
<ul>
<li>gibMacOS – python编写的直接从苹果下载macOS组件的程序 <a class="btn" href="https://github.com/corpnewt/gibMacOS">Github下载</a></li>
<li>AMD Vanilla – 用于AMD CPU的内核补丁 <a class="btn" href="https://github.com/AMD-OSX/AMD_Vanilla">Github下载</a></li>
<li>一个不小于<strong>8G</strong>的U盘，推荐USB3.0，速度比较快</li>
<li><strong>有线</strong>网络连接<br>其中gibMacOS需要安装<strong>Python</strong>环境，过程请自行脑补或百度<br>AMD Vanilla文件分了两类，其中15h_16h适用于FX系列和A系列，17h适用于Ryzen、Threadripper以及Athlon 2xxGE系列处理器，根据CPU型号下载</li>
</ul>
<h2 id="下载MacOS安装包"><a href="#下载MacOS安装包" class="headerlink" title="下载MacOS安装包"></a>下载MacOS安装包</h2><p>打开<code>gibMacOS</code>文件夹并运行<code>gibMacOS</code>脚本，选择想要安装的MacOS版本，输入版本号前面的数字选项然后回车，就会开始下载MacOS安装包，并在<code>gibMacOS</code>所在文件夹创建路径为<code>gibMacOS/macos Downloads/publicrelease/版本号</code>的文件夹，安装包聚在这个文件夹里。</p>
<ul>
<li>官方教程建议在选择版本前输入<code>r</code>以加快下载速度，实测并没有太大区别，很快就下载完成了</li>
<li>下载完成后会出现提示，<code>Failed</code>下面的表示没有下载成功，需要重新运行一遍程序下载，还是不行的话尝试一下科学上网，一般都会成功</li>
</ul>
<h2 id="创建USB安装盘"><a href="#创建USB安装盘" class="headerlink" title="创建USB安装盘"></a>创建USB安装盘</h2><ul>
<li>打开<code>gibMacOS</code>文件夹并使用管理员权限运行<code>MakeInstall</code>脚本，第一次运行会下载相关依赖文件，但是速度会很慢或者失败，可能需要科学上网</li>
<li>下载完成后出现选择USB设备的页面，找到要使用的U盘，输入前面的数字并回车，确认无误后输入<code>y</code>并回车，一定要确认好，因为被选择的磁盘会被格式化</li>
<li>格式化完成后会提示你输入上一步下载的安装包的路径，复制粘贴下载路径回车即可</li>
<li>写入的过程耗费的时间稍长，耐心等待，刻录完成后按回车并关闭脚本</li>
</ul>
<h1 id="设置Clover"><a href="#设置Clover" class="headerlink" title="设置Clover"></a>设置Clover</h1><p>刻录完成后可以在文件管理器中看见名为<code>CLOVER</code>的磁盘，这就是安装盘，但是现在还不完整，需要添加内核补丁以及驱动文件</p>
<h2 id="CPU内核补丁"><a href="#CPU内核补丁" class="headerlink" title="CPU内核补丁"></a>CPU内核补丁</h2><p>拷贝下载的AMD Vanilla中对应版本的<code>config.plist</code>，粘贴到<code>CLOVER/EFI/CLOVER</code>路径下，替换原有文件，这个文件在安装完成后也会频繁用到</p>
<h2 id="引导补丁"><a href="#引导补丁" class="headerlink" title="引导补丁"></a>引导补丁</h2><p>按照引导方式的不同分为Legacy和UEFI两类</p>
<ul>
<li>首先打开<code>CLOVER/EFI/CLOVER/drivers64UEFI</code>文件夹（如果没有的话就打开<code>CLOVER/EFI/CLOVER/drivers</code>文件夹）</li>
<li>UEFI引导的删除<code>BIOS</code>和<code>off</code>文件夹，然后删除<code>UEFI</code>文件夹中除了<code>APFSDriverLoader.efi</code>、<code>HFSPlus.efi</code>和<code>AptioMemoryFix.efi</code>的全部文件，然后将这三个文件复制到上一级目录</li>
<li>Legacy引导的<code>UEFI</code>和<code>off</code>文件夹，然后删除<code>BIOS</code>文件夹中除了<code>APFSDriverLoader</code>、<code>HFSPlus</code>的全部文件，然后将这两个文件复制到上一级目录</li>
</ul>
<h2 id="Kext驱动补丁"><a href="#Kext驱动补丁" class="headerlink" title="Kext驱动补丁"></a>Kext驱动补丁</h2><p>kext文件是一个Mac OS X内核扩展，常见于Hackintosh（PC上的黑苹果）。它们通常用于设备驱动程序，运行于系统的核心基底——百度百科<br>这部分的文件需要查询自己的硬件型号并谷歌所需要的驱动文件名称，下面的这些文件基本够用， Github上面的文件要到<code>release</code>里面下<br><strong>下载的文件全部解压后放到<code>CLOVER/EFI/CLOVER/kext/Other</code>路径下，另外删除路径内的<code>FakeSMC.kext</code>文件</strong></p>
<h3 id="必需文件"><a href="#必需文件" class="headerlink" title="必需文件"></a>必需文件</h3><ul>
<li><code>VirtualSMC.kext</code>文件，这个文件通过模仿真正的mac上SMC的功能，让系统以为这是一台真正的mac，没有它就没有黑苹果  <a class="btn" href="https://github.com/acidanthera/VirtualSMC/releases/download/1.0.7/VirtualSMC-1.0.7-RELEASE.zip">1.0.7下载</a></li>
<li><code>NullCPUPowerManagement.kext</code>文件，这个文件可以关闭CPU的电源管理程序，毕竟这是给Intel CPU用的，AMD平台不支持这个程序，这个文件的<a href="https://github.com/corpnewt/NullCPUPowerManagement">Github</a>只放了源码,我从b站up<a href="https://space.bilibili.com/319160358?spm_id_from=333.788.b_765f7570696e666f.1">某某大神_</a>那里找到了可以直接使用的文件  <a class="btn" href="https://github.com/corpnewt/NullCPUPowerManagement">蓝奏云下载</a></li>
</ul>
<h3 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h3><ul>
<li><a href="https://github.com/Mieze/IntelMausiEthernet">IntelMausiEthernet.kext</a> - 用于大多数新 Intel 网卡</li>
<li><a href="https://sourceforge.net/projects/osx86drivers/">AppleIntelE1000e.kext</a> - 用于老 Intel 网卡，但可能在新网卡上造成问题</li>
<li>​<a href="https://github.com/Mieze/AtherosE2200Ethernet">AtherosE2200Ethernet.kext</a> - 用于大多数 Atheros 以及 Killer 网卡</li>
<li><a href="https://github.com/Mieze/RTL8111_driver_for_OS_X">RealtekRTL8111.kext</a> - 用于大多数千兆 Realtek 网卡</li>
<li><a href="https://github.com/Mieze/RealtekRTL8100">RealtekRTL8100.kext</a> - 用于 10&#x2F;100 Realtek 网卡</li>
<li><a href="https://cdn.discordapp.com/attachments/390417931659378688/556912824228773888/SmallTree-Intel-211-AT-PCIe-GBE.kext.zip">SmallTree-Intel-211-AT-PCIe-GBE.kext</a> - 用于 Intel I211-AT 及相关网卡</li>
<li><a href="http://down2.121down.com:8181/soft/AppleIGB.kext.zip">AppleIGB</a> - 一开始用的这个，后来换成了上面那个</li>
</ul>
<h3 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h3><ul>
<li><a href="https://github.com/acidanthera/WhateverGreen">Whatevergreen.kext</a> - 这个文件修复了一些显卡问题</li>
<li><a href="https://github.com/acidanthera/Lilu">Lilu.kext</a> - 这个文件作为其他文件的加载器使用</li>
</ul>
<h3 id="WiFi和蓝牙"><a href="#WiFi和蓝牙" class="headerlink" title="WiFi和蓝牙"></a>WiFi和蓝牙</h3><p>这部分只针对非原生网卡，建议直接淘宝一个原生的苹果拆机网卡，如BCM94360CD，BCM943602CS，BCM94360CS2，不但省事还能解锁Airdrop以及Handoff这些用上就停不下来的功能</p>
<ul>
<li><a href="https://github.com/acidanthera/AirportBrcmFixup">AirportBrcmFixup.kext</a></li>
<li><a href="https://github.com/RehabMan/OS-X-BrcmPatchRAM">OS-X-BrcmPatchRAM</a></li>
</ul>
<h3 id="声卡"><a href="#声卡" class="headerlink" title="声卡"></a>声卡</h3><ul>
<li><a href="https://github.com/acidanthera/AppleALC">AppleALC.kext</a> - 这个文件可以驱动大部分的声卡</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>这里又一个kext文件的合集，需要的可以去这里下载，可能需要科学上网</p>
<a class="btn" href="https://1drv.ms/f/s!AiP7m5LaOED-m-J8-MLJGnOgAqnjGw">Onedrive下载</a>

<p>这样我们的安装盘就制作完成了，下一步就是进行安装了</p>
<h1 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h1><p>这一步的问题可能比较多，比如卡住不动或者报错，不行就断电&#x2F;重启（看脸），我重启了不知道多少次，非洲人脸黑</p>
<h2 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h2><ol>
<li>重启进入BIOS(快捷键自行百度，一般为F2或者DEL)，将所有设置设为默认，保存并退出</li>
<li>再次进入BIOS，进行如下设置，这些选项仅供参考，我只加载了主板的默认配置然后关闭了CSM，其他的都设置的Auto<ul>
<li>AMD-V &#x2F; SVM &#x3D; Disabled</li>
<li>SATA Ports &#x3D; AHCI</li>
<li>IOMMU &#x3D; Disabled</li>
<li>APU &#x3D; Disabled</li>
<li>HPET &#x3D; Enabled</li>
<li>EHCI Hands-off &#x3D; Enabled</li>
<li>XHCI Hands-off &#x3D; Enabled（如果你和我一样只有USB3.0接口的话，忽略掉这个）</li>
<li>Serial Port &#x3D; Disabled</li>
<li>Parallel Port &#x3D; Disabled</li>
<li>CSM &#x3D; Disable（针对UEFI引导）</li>
</ul>
</li>
<li>保存退出，重启后选择<code>Boot Device</code>的首选项为<strong>U盘</strong>的<code>UEFI:Partition</code>，不同主板快捷键不同，自行脑补或百度</li>
<li>从U盘引导后会进入Clover菜单，选择<code>Boot macOS Install from OS X Base System</code>回车，Clover默认会开启啰嗦模式，就是在屏幕上滚动显示状态，跑完就会进入MacOS安装程序，可能会出现选择语言的菜单，我只在第一次安装的时候出现了语言选择，后面的重装过程一次都没出现，默认都是简体中文</li>
</ol>
<h2 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h2><p>MacOS采用的是日志式的文件系统，与Windows不同m，所以安装之前需要对目标磁盘进行格式化</p>
<ol>
<li>双击<code>磁盘工具</code></li>
<li>点击左上角<code>显示</code>选项的下拉菜单并选择<code>显示所有设备</code></li>
<li>点击顶部的<code>抹掉</code></li>
<li>选择用于安装MacOS的硬盘，并将其设置为<ul>
<li>名称: （设置硬盘的名称）</li>
<li>格式： Mac OS 扩展（日志式）</li>
<li>方案: GUID 分区图</li>
</ul>
</li>
<li>点击右下方的<code>抹掉</code></li>
<li>关闭<code>Disk Utility</code></li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>此过程需要联网下载组件，而且服务器在国外，下面的第2步有一些不稳定，提示无法下载的话可能需要关机然后重启，然后重新格式化硬盘（可能需要格式化两次，我觉得这是个玄学问题），有条件的可以在路由器上设置科学上网</p>
<ol>
<li>选择<code>安装macOS</code>，点击继续</li>
<li>再点击继续，这个的地方可能会弹出未能下载balabala的</li>
<li>选择用于安装的磁盘</li>
<li>等待大概十几分钟，安装完成后会自动重启</li>
</ol>
<h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><p>重启后再次选择U盘引导，进入Clover，选择<code>Boot macOS from 你硬盘的名字</code>，等待Clover啰嗦模式跑完就会进入欢迎使用页面，选择国家和键盘balabala的不多说</p>
<ul>
<li>传输信息到这台Mac - 现在不传输任何信息</li>
<li>AppleID登陆可以先跳过，后面可能需要修改机型，修改完后还要重新登录</li>
<li>条款与条件 - 全部同意</li>
<li>快捷设置 - 选择自定设置，然后把<code>分析</code>里面的勾选取消，黑苹果就没有必要来分析了hhhhh</li>
</ul>
<p>等待一会就能够进入系统了</p>
<h1 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h1><p>现在我们仍然需要通过安装U盘进行启动，这一步我们将把EFI文件从U盘复制到启动盘，然后就不需要U盘了<br>首先需要下载下面的两个软件</p>
<ul>
<li><a href="https://sourceforge.net/projects/cloverefiboot/">Clover EFI bootloader</a></li>
<li><a href="https://mackie100projects.altervista.org/download-clover-configurator/">clover Configurator</a></li>
</ul>
<h2 id="Clover-EFI-bootloader设置"><a href="#Clover-EFI-bootloader设置" class="headerlink" title="Clover EFI bootloader设置"></a>Clover EFI bootloader设置</h2><p>下载安装，一路继续，在<code>安装类型</code>那里点击左下角的<code>自定</code><br><strong>UEFI设置</strong></p>
<ul>
<li>仅安装UEFI开机版本</li>
<li>安装Clover到EFI系统区</li>
<li>在UEFI Drivers里面勾选这三个选项<ul>
<li>AptioMemoryFix</li>
<li>PartitionDxe</li>
<li>ApfsLoader</li>
</ul>
</li>
<li>安装RC Scripts到目标磁区</li>
</ul>
<p><strong>Legacy设置</strong></p>
<ul>
<li>Boot0ss</li>
<li>Clover EFI Sata</li>
<li>安装Clover到EFI系统区</li>
<li>在Bios Drivers，64bit里面勾选<code>ApfsLoader</code></li>
<li>安装RC Scripts到目标磁区</li>
</ul>
<h2 id="EFI文件替换"><a href="#EFI文件替换" class="headerlink" title="EFI文件替换"></a>EFI文件替换</h2><ol>
<li>下载安装然后打开<code>Clover Configurator</code></li>
<li>点击左侧菜单里的<code>挂载分区</code></li>
<li>在右下找到安装macOS的硬盘，点击旁边的<code>挂载分区</code></li>
<li>再点击旁边的<code>打开分区</code>，会打开<code>EFI</code>文件夹</li>
<li>打开安装U盘<code>CLover</code>，把里面的文件拷贝到上一步打开的文件夹</li>
<li>此时系统会提醒有重复文件，点击合并</li>
<li>用U盘中<code>/CLOVER/EFI/CLOVER/config.plist</code>替换掉安装硬盘内的<code>./EFI/CLOVER/config.plist</code></li>
</ol>
<p>此时重启就可以进入bios把首选启动项改成安装的硬盘了，U盘可以推出了</p>
<h1 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h1><p>驱动安装需要频繁使用<code>./EFI/CLOVER/config.plist</code>文件，用<code>Clover Configurator</code>打开<br>安装完重启后生效</p>
<h2 id="Nvidia-webdriver"><a href="#Nvidia-webdriver" class="headerlink" title="Nvidia webdriver"></a>Nvidia webdriver</h2><p>因为我只有一张1060，所以这里只提供了10系显卡的安装包，其他类型请自行百度</p>
<a class="btn" href="https://images.nvidia.com/mac/pkg/387/WebDriver-387.10.10.10.40.105.pkg">387.10.10.10.40.105 (17G65) 下载</a>

<ul>
<li>下载安装后会要求重启，重启后打开<code>./EFI/CLOVER/config.plist</code>，在<code>引导参数</code>栏中的<code>参数</code>区右键，选择<code>nvda_drv=1</code></li>
<li>重启后如果画面仍然卡顿撕裂说明没有启用Webdriver，需要在顶栏中找到Nvidia的图标，然后点击下拉菜单切换驱动，重启生效</li>
</ul>
<h2 id="声卡-1"><a href="#声卡-1" class="headerlink" title="声卡"></a>声卡</h2><p>前面已经安装了AppleALC的声卡驱动，但是此时还没有声音，还需要在<code>config.plist</code>文件内进行设置</p>
<ol>
<li>在<a href="https://github.com/acidanthera/AppleALC/tree/master/Resources">这里</a>找到你声卡的文件夹，里面会有以<code>layout</code>开头的文件，记下其中随便一个的数字</li>
<li>用Clover Configurator打开<code>config.plist</code>文件</li>
<li>找到<code>设备设置</code></li>
<li>在右上角找到<code>Audio</code>，在注入后面填入刚才找到的数字</li>
<li>勾选后面的<code>AFG低功耗状态</code>和<code>重置HDA</code></li>
</ol>
<h2 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h2><p>我一开始用下面的办法装的USB驱动，但是设备多了会有问题，而且蓝牙和摄像头都不能用</p>
<ol>
<li>下载<a href="https://bitbucket.org/RehabMan/os-x-usb-inject-all/downloads/">USBInjectALL</a>驱动</li>
<li>下载完成后移动到EFI分区的<code>./EFI/CLOVER/kext/Other</code>路径中</li>
<li>用Clover Configurator打开<code>config.plist</code>文件</li>
<li>找到<code>设备设置</code></li>
<li>在<code>USB</code>选项中勾选下面三项<ul>
<li>注入</li>
<li>添加ClockID</li>
<li>修复所有权</li>
</ul>
</li>
</ol>
<p>其实Ryzen需要使用专用的USB补丁，<a href="https://github.com/XLNCs/ryzenusbfix">GitHub</a>上已经有大神做好了一键脚本，复制到终端执行然后重启即可<br><code>curl -s -o ~/Desktop/ryzenusbfix.sh https://raw.githubusercontent.com/XLNCs/ryzenusbfix/master/ryzenusbfix.sh &amp;&amp; chmod +x ~/Desktop/ryzenusbfix.sh &amp;&amp; ~/Desktop/ryzenusbfix.sh</code></p>
<h2 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h2><p>这一部分仅供参考，每个人的配置都不一样<br>打开<code>./EFI/CLOVER/config.plist</code>，在<code>安装驱动</code>栏中选择其他要加载的驱动文件，这里我下载了UEFI 64 BIT驱动中的下列文件</p>
<ul>
<li>ApfsDriverLoader</li>
<li>AptioMemoryFix</li>
<li>EmuVariableUefi</li>
<li>HFSPlus</li>
<li>NTFS</li>
<li>AudioDxe</li>
</ul>
<h1 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h1><h2 id="修改Clover主题"><a href="#修改Clover主题" class="headerlink" title="修改Clover主题"></a>修改Clover主题</h2><p>默认使用的Clover引导菜单是字符模式，不太美观，所以用主题做了一下美化<br>我在GitHub找到了一个蛮好看的主题<a href="https://github.com/burpsuite/clover_theme">Simple</a>，以它为例</p>
<ol>
<li>下载解压后将主题文件夹放到<code>./EFI/CLOVER/theme</code>路径下，然后把里面的<code>theme.plist</code>拷贝到上一级目录，也就是theme文件夹</li>
<li>打开<code>./EFI/CLOVER/config.plist</code></li>
<li>点击<code>引导界面</code>选项，在右侧的<code>主题</code>中输入主题的名字<code>Simple</code></li>
<li>取消勾选下面的<code>字符模式</code></li>
<li>调节合适的分辨率（然鹅没有21:9的分辨率，我选了1920*1080，用起来好像也还可以，画面是填充满的）</li>
</ol>
<h2 id="修改CPU型号"><a href="#修改CPU型号" class="headerlink" title="修改CPU型号"></a>修改CPU型号</h2><p>这个只是骗自己开心而已，mac并不能识别Ryzen的处理器，所以在关于本机里会显示未知，我们能做的就是把未知对应的文件修改为自己的CPU型号。。。。。。</p>
<ol>
<li>下载bbedit或者textwrangler</li>
<li>打开<code>/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/Resources/zh_CN.lproj/</code>里的文件</li>
<li>找到<code>UnknownCPUKind</code>，把它下面的字符<code>未知</code>修改成你想要现实的内容</li>
<li>保存，此时关于本机中的cpu就会显示成你填写的内容了</li>
</ol>
<h2 id="修改机型"><a href="#修改机型" class="headerlink" title="修改机型"></a>修改机型</h2><p>打开<code>./EFI/CLOVER/config.plist</code>，在<code>机型设置</code>栏中选择最右边的一个上下箭头，会打开一个下拉菜单，选择适合的机型</p>
<h2 id="启用原生NTFS读写"><a href="#启用原生NTFS读写" class="headerlink" title="启用原生NTFS读写"></a>启用原生NTFS读写</h2><p>现在的mac只能读取NTFS格式硬盘上的内容，不能写入。其实苹果早就能够写入NTFS格式的硬盘了，只不过由于版权原因没有默认开放（NTFS格式是微软的）</p>
<ol>
<li>打开终端并输入命令<code>diskutil list</code>，在列出的硬盘列表中找到要读写的硬盘并记录下它的<code>NAME</code></li>
<li>输入命令<code>sudo nano /etc/fstab</code>回车，然后输入密码</li>
<li>插入内容<code>LABEL=NAME none ntfs rw,auto,nobrowse</code>，NAME是查到的硬盘的名字</li>
<li>使用<code>control+X</code>退出编辑，然后输入Y确认并回车</li>
<li>重启就可以写入文件了</li>
<li>如果在访达中看不到这个硬盘的话，需要打开终端输入命令<code>sudo ln -s /Volumes/NAME ~/Desktop/NAME</code>，NAME是查到的硬盘的名字，然后硬盘就会出现在桌面上，当然也可以拖到访达中去</li>
</ol>
<h2 id="创建MacOS虚拟机"><a href="#创建MacOS虚拟机" class="headerlink" title="创建MacOS虚拟机"></a>创建MacOS虚拟机</h2><p>这个是用另一种方法安装失败的时候记录下来的一部分过程，就不浪费，放在这里算了<br>如果你不想在磁盘上直接安装，还有懒人版虚拟机可以选择，这个是我以前在虚拟机上用过的</p>
<ol>
<li>这里的虚拟机镜像是由<a href="https://forum.amd-osx.com/viewtopic.php?t=1899">Shamme</a>发布在论坛上的，下载完成后解压缩：<a class="btn" href="https://hackintosher.com/wp-content/uploads/SierraAMD_VM.zip.torrent.zip">SierraAMD_VM.zip.torrent.zip</a></li>
<li>接下来需要安装VMWare，前往<a href="https://www.vmware.com/products/workstation-player/workstation-player-evaluation.html">VM官网链接</a>下载安装</li>
<li>打开VMWare，点击<code>创建新的虚拟机</code></li>
<li>选择<code>典型</code>并点击下一步</li>
<li>勾选<code>稍后安装操作系统</code></li>
<li>客户机操作系统选择<code>其它</code>，版本选择<code>其它64位</code></li>
<li>编辑虚拟机名称并选择虚拟机位置</li>
<li>设置磁盘大小，这里尽量设置大些，我设置的是60G，一般40G够用，然后选择<code>将虚拟磁盘存储为单个文件</code></li>
<li>点击<code>完成</code></li>
<li>点击<code>编辑此虚拟机设置</code></li>
<li>将内存大小设置到2048M（2G）以上</li>
<li><strong>取消</strong>勾选<code>CD/DVD (IDE)</code>选项中的<code>启动时连接</code></li>
<li>点击<code>硬盘（IDE）</code>选项，然后点击下面的<code>移除</code>按钮</li>
<li>点击旁边的<code>添加</code>按钮</li>
<li>选择<code>硬盘</code>并点击下一步</li>
<li>选择<code>SCSI</code></li>
<li>选择<code>使用现有虚拟磁盘</code></li>
<li>点击浏览并找到第一步下载的文件并打开</li>
<li>点击<code>完成</code></li>
<li>选择<code>保持现有格式</code></li>
<li>点击下方的<code>确定</code></li>
<li>点击左上方的<code>开启此虚拟机</code></li>
<li>敲两次回车，等待加载到Welcome页面</li>
<li>勾选<code>Show all</code>并选择<code>China</code>，点击<code>Continue</code></li>
<li>选择适合的输入方式</li>
<li>选择<code>Don&#39;t transfer any information now</code></li>
<li>点击<code>Continue</code>，然后选择<code>Don&#39;t use</code></li>
<li>选择<code>Don&#39;t sign in</code>，然后选择<code>Skip</code></li>
<li>点击<code>Agree</code>，再点击<code>Agree</code></li>
<li>填写用户名密码</li>
<li>点击地图选择时区</li>
<li><strong>取消</strong>勾选<code>Share Mac Analytics with Apple</code>，稍等片刻进入系统</li>
</ol>
<h2 id="关于软件"><a href="#关于软件" class="headerlink" title="关于软件"></a>关于软件</h2><p>记录下搜集到的软件</p>
<ul>
<li>有坑 - Ryzen的不要装<strong>CPU-S</strong> - 我本来装完想测试一下CPU变频的，结果点击测试就给我重启了，在开机一登陆就重启，折腾了半天也没弄好，所以就又重装一遍。。。。。。</li>
<li>云端同步 - <strong>Onedrive</strong> - 同步常用文档</li>
<li>FTP - <strong>Transmit</strong> - 可以链接很多云服务，如dropbox、google drive</li>
<li>检测系统硬件状态 - <strong>iStat Menus</strong></li>
<li>备份 - <strong>Carbon Copy Cloner</strong> - 时间机器备份会在400多mb的时候卡住不动，暂时无解，换用Carbon Copy Cloner进行备份</li>
<li>好好学习？ - 其实<strong>steam</strong>也有mac客户端</li>
<li>浏览器屏蔽广告 - Safari的<a href="https://safari-extensions.apple.com/details/?id=org.adblockplus.adblockplussafari-GRYYZR985A">Adblock Plus扩展</a></li>
<li>播放器 - <strong>Movist</strong> - 除了自带的QuickTime之外大多数播放器放视频都和ppt一样，但是Quicktime支持的格式太少，找到了一个基于quicktime的播放器Movist解决</li>
<li>记笔记 - <strong>Onenote</strong> - 三端同步真的爽</li>
<li>卸载软件 - <strong>App Cleaner</strong> - 比较干净</li>
<li>下载软件 - <strong>Free Download Manager</strong> - 看名字就知道不要钱</li>
<li>视频下载 - <strong>Downie</strong> - Youtube视频下载</li>
<li>分屏软件 - <strong>Magnet</strong> - 没错和磁力链接重名，话说windows的分屏都出多久了mac还要靠第三方软件来做</li>
<li>翻译软件 - <strong>欧路词典</strong> - 用习惯了，ios可以同步词库</li>
<li>瑞士军刀 - <strong>VS Code</strong> - 不仅能撸代码，还能写Markdown</li>
<li>小飞机 - <strong>ShadowsocksX-NG</strong></li>
<li>大飞机 - <strong>VRayX</strong></li>
<li>不服跑个分？ - <strong>CINEBENCH</strong> - 据说Ryzen跑分很高，为什么用起来没感觉呢emmm</li>
<li>办公软件 - <strong>Office</strong> - 还是巨硬的全家桶比较好用，苹果的也就Keynote比较好用</li>
<li>截图软件 - <strong>Snipaste</strong></li>
<li>平滑滚动 - <strong>MOS</strong> - 告别一顿一顿的鼠标滚轮</li>
<li>记不住快捷键 - <strong>Cheatsheet</strong> - 长按command查看快捷键</li>
<li>iPhone触摸板 - <strong>FullControl</strong> - 用iPhone控制你的mac</li>
<li>干活了 - <strong>Xcode</strong> - 装黑苹果就是为了用它</li>
</ul>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul>
<li>快捷键能把用双系统的人逼疯 - mac的复制粘贴是<code>command+c</code>，windows是<code>ctrl+v</code>，而键盘上的<code>command</code>键对应的是<code>Windows</code>键。。。。。。</li>
<li>大部分windows上用<code>ctrl</code>的在mac上用<code>command</code>就好</li>
<li>显示隐藏文件 - <code>command + shift + .</code></li>
</ul>
<blockquote>
<p>参考：<a href="https://vanilla.amd-osx.com/">AMD OS X Vanilla</a>、<a href="https://hackintosher.com/">Hackintosher</a></p>
</blockquote>
]]></content>
      <categories>
        <category>macOS &amp; Hackintosh</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>黑苹果</tag>
        <tag>多系统</tag>
      </tags>
  </entry>
  <entry>
    <title>群星 Mod 制作与上传日志</title>
    <url>/Stellaris-Mod.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">如何在不使用控制台的前提下成为一个合格的第四天灾</blockquote>

<span id="more"></span>

<div class="note warning"><p>提醒：文中的Mod基于群星3.8.4版本制作，启动器版本为2023.11，请注意时效</p>
</div>

<div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/Modding">Paradox Wiki</a>中对于Mod制作有详细的说明，本文只作为个人Mod的开发记录以及对Wiki内容的补充。</p>
</div>

<h1 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h1><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>CWTools</p><p>Paradox Language Services</p>
<a href="https://marketplace.visualstudio.com/items?itemName=tboby.cwtools-vscode"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>PhotoShop DDS 插件</p><p>DDS plug-in for After Effects and Photoshop</p>
<a href="https://fnordware.blogspot.com/2014/09/dds-plug-in-for-after-effects-and.html"></a>
</div></div>

<h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2><p>群星的配置文件多数是txt格式的，可使用VS Code并安装扩展<code>CWTools</code>进行编辑，CWTools能够实现代码自动补全与错误提示，比较方便。安装完成后在扩展设置中设置群星的安装路径就可以用了，群星的安装路径为<code>[Steam安装路径]/steamapps/common/Stellaris/</code>。</p>
<p><img data-src="https://s2.loli.net/2023/09/05/luRP2W6ECaed8kv.jpg" alt="群星-CWTools.jpg"></p>
<h2 id="DDS插件"><a href="#DDS插件" class="headerlink" title="DDS插件"></a>DDS插件</h2><p>群星中很多图片文件的格式都是DDS，Photoshop需要安装插件才能将图片存储为DDS格式，把下载的插件文件（.8bi）放在PS目录下的<code>./Required/Plug-ins/File Formats</code>这个文件夹里面，随后打开PS，在<code>帮助-关于增效工具</code>中出现DDS就说明安装成功。</p>
<h1 id="创建Mod"><a href="#创建Mod" class="headerlink" title="创建Mod"></a>创建Mod</h1><ol>
<li>在群星启动器的左边栏中选择<code>所有已安装Mod</code>，然后点击右上角的<code>上传MOD</code></li>
<li>在弹出的窗口中填写相关信息，这些信息后期都可以手动修改<ul>
<li>名称：Mod在启动器和创意工坊中显示的名字，这里我以<code>Example</code>为例</li>
<li>版本：兼容Mod的游戏版本，你可以填写当前小版本，如<code>3.8.4</code>，也可以使用<code>*</code>代替小版本号，如<code>3.8.*</code>代表Mod可以在整个3.8大版本中使用</li>
<li>目录：在<code>mod/</code>后面填写Mod所在文件夹的名称，可以与Mod名称不同，这里我已<code>exp</code>为例</li>
<li>标签：Mod的种类，记录Mod更改了哪些游戏内容，主要作用是方便其他人在创意工坊中通过它筛选不同种类的Mod</li>
</ul>
</li>
<li>点击创建MOD</li>
<li>在<code>C:/Users/Documents/Paradox Interactive/Stellaris/mod</code>中会出现以刚刚填写的目录命名的文件夹与同名的<code>.mod</code>文件</li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/09/05/jMBkRFGcu6oVbAt.jpg" alt="群星-mod创建1.jpg"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/09/05/Fl7aBTKQmU6WDv2.jpg" alt="群星-mod创建2.jpg"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/09/05/TIAVvqMPenYUQc2.jpg" alt="群星-mod创建3.jpg"></div></div></div>

<p>mod创建完成后的文件目录如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">C</span>:<span class="regexp">/Users/</span><span class="title class_">Documents</span>/<span class="title class_">Paradox</span> <span class="title class_">Interactive</span>/<span class="title class_">Stellaris</span>/mod</span><br><span class="line">│  </span><br><span class="line">├─ exp.<span class="property">mod</span></span><br><span class="line">│  </span><br><span class="line">└─ exp</span><br><span class="line">    │ </span><br><span class="line">    └─ descriptor.<span class="property">mod</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>.../mod/exp.mod</code>记录的是我们创建本地Mod时填写的信息，一般不需要编辑它</li>
<li><code>.../mod/exp/descriptor.mod</code>和<code>.../mod/exp.mod</code>大同小异，我们在后续将Mod上传到创意工坊时会用到它</li>
<li><code>.../mod/exp/</code>文件夹用来存放我们的Mod文件</li>
</ul>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="Mod原理"><a href="#Mod原理" class="headerlink" title="Mod原理"></a>Mod原理</h2><p>群星中Mod的工作原理大致如下：</p>
<ul>
<li>如果Mod中存在与游戏本体相同的内容，那么Mod的内容会替换掉本体的内容。</li>
<li>如果Mod中的内容在本体中不存在，那么它将会与本体的内容合并。</li>
<li>如果多个Mod重复定义了相同的内容，则只有启动器中最底部的Mod会生效，也就是说前一个Mod中相同的内容都会被后一个Mod覆盖。</li>
</ul>
<h2 id="文件编码"><a href="#文件编码" class="headerlink" title="文件编码"></a>文件编码</h2><p>Mod中的文件需要用到两种编码模式，编码格式可以在VS Code底部的状态栏调整：</p>
<ul>
<li><code>txt</code>文件和<code>mod</code>文件使用<code>UTF-8</code>编码</li>
<li><code>yml</code>文件使用<code>UTF-8 with BOM</code>编码</li>
</ul>
<p><img data-src="https://s2.loli.net/2023/09/05/Y4Ukse72Azq8wBL.jpg" alt="群星-文件编码.jpg"></p>
<h2 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h2><p>图片制作完成后在PS中选择<code>文件-存储为</code>，保存类型选择<code>DDS</code>，然后点击保存，在弹出的对话框中选择<code>Format</code>为<code>DXT5</code>，勾选<code>Mipmap</code>，<code>Alpha Channel</code>选择<code>Transparency</code>。</p>
<p><img data-src="https://s2.loli.net/2023/09/05/84Ahy3JgcOB2ksu.jpg" alt="群星-DDS导出.jpg"></p>
<p>具体的图片尺寸可以去<code>../Stellaris/gfx</code>中找对应的官方图片来确定，图标之类的文件在<code>../Stellaris/gfx/interface/icons</code>中。</p>
<p>需要留意，虽然建筑图标的尺寸是98*98px，但是图片的左边和下边需要留出22px以上的空白，超出边界的内容不会显示。</p>
<h2 id="多语言"><a href="#多语言" class="headerlink" title="多语言"></a>多语言</h2><div class="note primary"><p>详见<a href="https://stellaris.paradoxwikis.com/Localisation_modding#Overwriting_Vanilla_Text">Localisation modding</a></p>
</div>

<p>本地化文件放置在<code>mod/localisation</code>文件夹中，文件格式为yaml，不同语言的文件需要分开存放。群星根据文件开头的标识判断语言类型，英文为<code>l_english:</code>，中文为<code>l_simp_chinese:</code>，<code>desc</code>后缀表示这段话是对上面属性的介绍。示例如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">//eg_l_english.yml</span></span><br><span class="line"><span class="attr">l_english:</span></span><br><span class="line">  <span class="string">eg:0</span> <span class="string">&quot;Example&quot;</span></span><br><span class="line">  <span class="string">eg_desc:0</span> <span class="string">&quot;This is an example description.&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">//eg_l_simp_chinese.yml</span></span><br><span class="line"><span class="attr">l_simp_chinese:</span></span><br><span class="line">  <span class="string">eg:0</span> <span class="string">&quot;示例&quot;</span></span><br><span class="line">  <span class="string">eg_desc:0</span> <span class="string">&quot;这是一段示例的介绍。&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：文件名命名要独特一点，避免与其他Mod重复，重复的话可能不会生效，因为文件被覆盖了。</p>
<h1 id="Mod示例"><a href="#Mod示例" class="headerlink" title="Mod示例"></a>Mod示例</h1><h2 id="物种特质Mod"><a href="#物种特质Mod" class="headerlink" title="物种特质Mod"></a>物种特质Mod</h2><p>先来个最简单的，给物种添加一个永生的特质，这样领袖也不会刚满级就噶了。Mod文件目录如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">C</span>:<span class="regexp">/Users/</span><span class="title class_">Documents</span>/<span class="title class_">Paradox</span> <span class="title class_">Interactive</span>/<span class="title class_">Stellaris</span>/mod/<span class="title class_">Immortal</span>_Species_Trait</span><br><span class="line">│  </span><br><span class="line">├─ common</span><br><span class="line">│   │ </span><br><span class="line">│   └─ trait</span><br><span class="line">│        │</span><br><span class="line">│        └─ immortal_species_traits.<span class="property">txt</span> <span class="comment">//特质定义文件</span></span><br><span class="line">│  </span><br><span class="line">├─ gfx</span><br><span class="line">│   │ </span><br><span class="line">│   └─ interface</span><br><span class="line">│        │</span><br><span class="line">│        └─ icon</span><br><span class="line">│            │</span><br><span class="line">│            └─ traits</span><br><span class="line">│                │</span><br><span class="line">│                └─ the_immortal.<span class="property">dds</span> <span class="comment">//种族特质图标，尺寸为40*40像素</span></span><br><span class="line">│  </span><br><span class="line">├─ localisation</span><br><span class="line">│   │</span><br><span class="line">│   ├─ ist_l_english.<span class="property">yml</span> <span class="comment">//英语本地化文件</span></span><br><span class="line">│   │ </span><br><span class="line">│   └─ ist_l_simp_chinese.<span class="property">yml</span> <span class="comment">//简体中文本地化文件</span></span><br><span class="line">│  </span><br><span class="line">├─ thumbnail.<span class="property">png</span> <span class="comment">//封面图片</span></span><br><span class="line">│  </span><br><span class="line">└─ descriptor.<span class="property">mod</span> <span class="comment">//Mod信息记录</span></span><br></pre></td></tr></table></figure>

<p>下面是<code>immortal_species_traits.txt</code>中的内容与说明</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">the_immortal = &#123;</span><br><span class="line">	cost = <span class="number">0</span> <span class="comment">#特质点花费</span></span><br><span class="line">	icon = <span class="string">&quot;gfx/interface/icons/traits/the_immortal.dds&quot;</span> <span class="comment">#图标路径</span></span><br><span class="line">	allowed_archetypes = &#123; BIOLOGICAL &#125; <span class="comment">#仅允许生物使用，机械不可用</span></span><br><span class="line">	randomized = no <span class="comment">#是否能在银河系的物种中随机生成该特质</span></span><br><span class="line">	immortal_leaders = yes <span class="comment">#领袖永生，和天选之人的特质效果相同</span></span><br><span class="line">	modification = no <span class="comment">#是否可以通过物种基因修饰获得</span></span><br><span class="line">	ai_weight = &#123;</span><br><span class="line">		weight = <span class="number">0</span> <span class="comment">#AI是否能用，0表示禁止AI使用</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是<code>ist_l_simp_chinese.yml</code>中的内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">l_simp_chinese:</span></span><br><span class="line">  <span class="string">the_immortal:0</span> <span class="string">&quot;永生&quot;</span></span><br><span class="line">  <span class="string">the_immortal_desc:0</span> <span class="string">&quot;此物种永生&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="建筑与太空基地Mod"><a href="#建筑与太空基地Mod" class="headerlink" title="建筑与太空基地Mod"></a>建筑与太空基地Mod</h2><p>目录结构都是大同小异的，这里对建筑定义文件进行说明，下面的建筑能让你成为一个合格的第四天灾（手动狗头）</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">building_spb_sanctuary = &#123;</span><br><span class="line">	icon = <span class="string">&quot;building_spb_sanctuary&quot;</span> <span class="comment">#图标名称，不用加路径，默认是./gfx/interface/icons/buildings/</span></span><br><span class="line">	can_be_ruined = no <span class="comment">#不可被破坏，轨道轰炸的时候不会坏</span></span><br><span class="line">	base_buildtime = <span class="number">233</span> <span class="comment">#默认的建造时间</span></span><br><span class="line">	base_cap_amount = <span class="number">1</span> <span class="comment">#一颗行星上能建设几个这种建筑</span></span><br><span class="line">	</span><br><span class="line">	planet_modifier = &#123; <span class="comment">#仅在星球上生效的修饰</span></span><br><span class="line">		pop_happiness = <span class="number">0.3</span> <span class="comment">#人口幸福度+30%</span></span><br><span class="line">		planet_decision_enact_speed_mult = <span class="number">1.00</span> <span class="comment">#行星决议执行速度+100%</span></span><br><span class="line">		planet_stability_add = <span class="number">80</span> <span class="comment">#稳定度+80</span></span><br><span class="line">		planet_crime_add = -<span class="number">80</span> <span class="comment">#犯罪率-80</span></span><br><span class="line">		planet_amenities_add = <span class="number">233</span> <span class="comment">#舒适度+233</span></span><br><span class="line">		planet_resettlement_unemployed_mult = <span class="number">1.00</span> <span class="comment">#失业人口重新安置速度+100%</span></span><br><span class="line">		planet_orbital_bombardment_damage = -<span class="number">1.00</span> <span class="comment">#轨道轰炸伤害减免100%</span></span><br><span class="line">		planet_jobs_unity_produces_mult = <span class="number">0.6</span> <span class="comment">#职业产生的凝聚力+60%</span></span><br><span class="line">		planet_administrators_produces_mult = <span class="number">0.6</span> <span class="comment">#统治者职业产出+60%</span></span><br><span class="line">		planet_max_buildings_add = <span class="number">11</span> <span class="comment">#星球建筑槽位+11</span></span><br><span class="line">    	pop_growth_speed = <span class="number">1.0</span> <span class="comment">#有机人口增长速度+100%</span></span><br><span class="line">    	planet_housing_add = <span class="number">2333</span> <span class="comment">#住房+2333</span></span><br><span class="line">		building_time_mult = -<span class="number">0.3</span> <span class="comment">#建筑建造时间-30%</span></span><br><span class="line">		planet_building_build_speed_mult = <span class="number">0.3</span> <span class="comment">#建筑建造速度+30%</span></span><br><span class="line">		planet_clear_blocker_time_mult  = -<span class="number">0.3</span> <span class="comment">#清理障碍时间-30%</span></span><br><span class="line"></span><br><span class="line">    	<span class="comment">#以下表示每增长一个人口增加多少对应岗位</span></span><br><span class="line">    	job_technician_per_pop = <span class="number">0.05</span> <span class="comment">#电力技工，在游戏中显示的文本是每20人口增加1个该职业</span></span><br><span class="line">    	job_miner_per_pop = <span class="number">0.2</span> <span class="comment">#矿工</span></span><br><span class="line">		job_chemist_per_pop = <span class="number">0.05</span> <span class="comment">#产易爆微粒的职业</span></span><br><span class="line">		job_gas_refiner_per_pop = <span class="number">0.05</span> <span class="comment">#产异星天然气的职业</span></span><br><span class="line">		job_translucer_per_pop = <span class="number">0.05</span> <span class="comment">#产稀有水晶的职业</span></span><br><span class="line">    	job_foundry_per_pop = <span class="number">0.1</span> <span class="comment">#冶金师，产合金的职业</span></span><br><span class="line">		job_artisan_per_pop = <span class="number">0.1</span> <span class="comment">#工匠，产消费品的</span></span><br><span class="line">    	job_farmer_per_pop = <span class="number">0.1</span> <span class="comment">#农夫</span></span><br><span class="line">    	job_clerk_per_pop = <span class="number">0.2</span> <span class="comment">#职员</span></span><br><span class="line">    	job_researcher_per_pop = <span class="number">0.1</span> <span class="comment">#研究员</span></span><br><span class="line"></span><br><span class="line">    	<span class="comment">#以下表示该建筑固定增加的岗位</span></span><br><span class="line">		job_merchant_add = <span class="number">1</span> <span class="comment">#大商人</span></span><br><span class="line">    	job_head_researcher_add = <span class="number">2</span> <span class="comment">#研究主管</span></span><br><span class="line">		job_archaeoengineers_add = <span class="number">3</span> <span class="comment">#考古工程师</span></span><br><span class="line"></span><br><span class="line">    	<span class="comment">#以下表示每种职业增加几点固定产出</span></span><br><span class="line">    	planet_technician_energy_produces_add = <span class="number">6</span> <span class="comment">#电工产能量</span></span><br><span class="line">		planet_miners_minerals_produces_add = <span class="number">6</span> <span class="comment">#矿工产矿</span></span><br><span class="line">		planet_miners_alloys_produces_add = <span class="number">3</span> <span class="comment">#矿工产合金（没想到吧）</span></span><br><span class="line">    	planet_metallurgists_alloys_produces_add = <span class="number">6</span> <span class="comment">#冶金师产合金</span></span><br><span class="line">		planet_artisans_consumer_goods_produces_add = <span class="number">6</span> <span class="comment">#工匠产消费品</span></span><br><span class="line">    	planet_farmers_food_produces_add = <span class="number">6</span> <span class="comment">#农夫产食物</span></span><br><span class="line"></span><br><span class="line">    	<span class="comment">#以下表示每种职业增加的百分比产值</span></span><br><span class="line">		planet_jobs_exotic_gases_produces_mult = <span class="number">0.6</span> <span class="comment">#产异星天然气的职业产出+60%</span></span><br><span class="line">		planet_jobs_rare_crystals_produces_mult = <span class="number">0.6</span> <span class="comment">#产稀有水晶的职业产出+60%</span></span><br><span class="line">		planet_jobs_volatile_motes_produces_mult = <span class="number">0.6</span> <span class="comment">#产易爆微粒的职业产出+60%</span></span><br><span class="line">		planet_metallurgists_produces_mult = <span class="number">0.6</span>  <span class="comment">#冶金师，产合金的职业产出+60%</span></span><br><span class="line">		planet_artisans_produces_mult = <span class="number">0.6</span> <span class="comment">#工匠，产消费品的职业产出+60%</span></span><br><span class="line">    	planet_researchers_produces_mult = <span class="number">0.6</span> <span class="comment">#研究员的职业产出+60%</span></span><br><span class="line">    </span><br><span class="line">    	trade_value_mult = <span class="number">0.3</span> <span class="comment">#贸易额+30%</span></span><br><span class="line">		trade_value_add = <span class="number">233</span> <span class="comment">#贸易额固定值增加233点</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	country_modifier = &#123; <span class="comment">#在整个国家生效的修饰</span></span><br><span class="line">		country_government_civic_points_add = <span class="number">3</span> <span class="comment">#国民理念+3</span></span><br><span class="line">		edict_length_mult = <span class="number">10.0</span> <span class="comment">#法令持续时间+1000%</span></span><br><span class="line">		pop_government_ethic_attraction = <span class="number">0.10</span> <span class="comment">#主流思潮吸引力+10%</span></span><br><span class="line">		envoys_add = <span class="number">3</span> <span class="comment">#特使+3</span></span><br><span class="line">		intel_decryption_add = <span class="number">30</span> <span class="comment">#破译+30</span></span><br><span class="line">		intel_encryption_add = <span class="number">30</span> <span class="comment">#加密+30</span></span><br><span class="line">		add_base_country_intel = <span class="number">30</span> <span class="comment">#基础情报等级+30</span></span><br><span class="line">		ship_windup_mult = -<span class="number">0.30</span> <span class="comment">#超空间跳跃充能时间-30%</span></span><br><span class="line">		ship_winddown_mult = -<span class="number">0.30</span> <span class="comment">#超空间跳跃冷却-30%</span></span><br><span class="line">		ship_fire_rate_mult = <span class="number">0.30</span> <span class="comment">#舰船武器射速+30%</span></span><br><span class="line">		ship_disengage_chance_mult = <span class="number">0.3</span> <span class="comment">#战斗撤离几率+30%</span></span><br><span class="line">		ship_emergency_ftl_min_days_mult = -<span class="number">0.30</span> <span class="comment">#紧急超光速脱离冷却-30%</span></span><br><span class="line">		ship_emergency_ftl_mult = -<span class="number">0.30</span> <span class="comment">#紧急超光速脱离受损风险-30%</span></span><br><span class="line">		country_leader_cap_add = <span class="number">3</span> <span class="comment">#领袖上线+3</span></span><br><span class="line">		country_naval_cap_add = <span class="number">3000</span> <span class="comment">#海军容量+3000</span></span><br><span class="line">		army_health = <span class="number">0.30</span> <span class="comment">#陆军生命值+30%</span></span><br><span class="line">		country_resource_max_add = <span class="number">500000</span> <span class="comment">#资源存储上限+500000</span></span><br><span class="line">		megastructure_build_speed_mult = <span class="number">0.3</span> <span class="comment">#巨构建造速度+30%</span></span><br><span class="line"></span><br><span class="line">    	all_technology_research_speed = <span class="number">0.3</span> <span class="comment">#研究速度+30%</span></span><br><span class="line">		science_ship_survey_speed  = <span class="number">0.3</span> <span class="comment">#调查速度+30%</span></span><br><span class="line">		ship_anomaly_research_speed_mult = <span class="number">0.3</span> <span class="comment">#异常现象研究速度+30%</span></span><br><span class="line">		num_tech_alternatives_add = <span class="number">3</span> <span class="comment">#备选科技+3</span></span><br><span class="line">		ship_archaeological_site_excavation_speed_mult = <span class="number">0.3</span> <span class="comment">#考古发掘速度+30%</span></span><br><span class="line">		ship_ftl_jumpdrive_range_mult = <span class="number">3.0</span> <span class="comment">#舰船跃迁范围+300%</span></span><br><span class="line">		ship_jumpdrive_cooldown_mult = -<span class="number">0.3</span> <span class="comment">#跃迁引擎冷却-30%</span></span><br><span class="line">		species_leader_exp_gain = <span class="number">0.3</span> <span class="comment">#领袖经验获得+30%</span></span><br><span class="line">		country_resource_max_minor_artifacts_add = <span class="number">2000</span> <span class="comment">#稀有文物容量+2000</span></span><br><span class="line">		category_archaeostudies_research_speed_mult = <span class="number">1.0</span> <span class="comment">#远古学研究速度+100%</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	army_modifier = &#123;</span><br><span class="line">		army_starting_experience_add = <span class="number">1000</span> <span class="comment">#陆军初始经验+1000</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	resources = &#123;</span><br><span class="line">		category = planet_buildings</span><br><span class="line">		cost = &#123; <span class="comment">#建造花费</span></span><br><span class="line">			alloys = <span class="number">233</span></span><br><span class="line">		&#125;</span><br><span class="line">		upkeep = &#123; <span class="comment">#建筑维护费</span></span><br><span class="line">			energy = <span class="number">100</span></span><br><span class="line">			consumer_goods = <span class="number">20</span></span><br><span class="line">			food = <span class="number">10</span></span><br><span class="line">		&#125;</span><br><span class="line">		produces = &#123; <span class="comment">#资源产出</span></span><br><span class="line">      		energy = <span class="number">3000</span></span><br><span class="line">			unity = <span class="number">100</span></span><br><span class="line">      		minerals = <span class="number">500</span></span><br><span class="line">      		alloys = <span class="number">150</span></span><br><span class="line">			consumer_goods = <span class="number">150</span></span><br><span class="line">			volatile_motes = <span class="number">10</span></span><br><span class="line">			exotic_gases = <span class="number">10</span></span><br><span class="line">			rare_crystals = <span class="number">10</span></span><br><span class="line">			nanites = <span class="number">3</span></span><br><span class="line">			sr_zro = <span class="number">3</span></span><br><span class="line">			sr_living_metal = <span class="number">3</span></span><br><span class="line">			sr_dark_matter = <span class="number">3</span></span><br><span class="line">      		society_research = <span class="number">100</span></span><br><span class="line">			engineering_research = <span class="number">100</span></span><br><span class="line">			physics_research = <span class="number">100</span></span><br><span class="line">			minor_artifacts = <span class="number">3</span></span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	allow = &#123; owner = &#123; is_ai = no &#125; &#125; <span class="comment">#禁止AI建造</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="领袖Mod"><a href="#领袖Mod" class="headerlink" title="领袖Mod"></a>领袖Mod</h2><p>这个Mod实现的功能如下：</p>
<ul>
<li>游戏开局时创建一个采用独特肖像的新领袖，并让这个新领袖成为新的统治者</li>
<li>这个领袖有三个专属的特质</li>
<li>每月1号重置领袖肖像与年龄（因为物种基因修饰时肖像会变成默认种族的），并消除全部负面特质</li>
</ul>
<p>Mod的文件结构如下图所示。</p>
<p><img data-src="https://s2.loli.net/2023/09/05/vFi1jDy74KrwIlX.png" alt="群星-领袖Mod结构图.png"></p>
<p>以下是部分代码示例</p>
<h3 id="On-actions"><a href="#On-actions" class="headerlink" title="On actions"></a>On actions</h3><div class="note primary"><p><code>On actions</code>是一种触发事件的方式，更多信息请参考<a href="https://stellaris.paradoxwikis.com/On_actions">Paradox Wiki</a></p>
</div>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># common/on_actions/00_bronya.txt</span></span><br><span class="line">on_game_start_country = &#123;  <span class="comment"># 游戏开始时执行事件 bronya.0</span></span><br><span class="line">	events = &#123;</span><br><span class="line">		bronya<span class="number">.0</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">on_monthly_pulse_country = &#123; <span class="comment"># 每月月初执行事件 bronya.3</span></span><br><span class="line">	events = &#123;</span><br><span class="line">		bronya<span class="number">.3</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/Event_modding">Paradox Wiki</a>关于事件的说明</p>
</div>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># events/bronya_event.txt</span></span><br><span class="line">namespace = bronya</span><br><span class="line"></span><br><span class="line">country_event = &#123; <span class="comment">#开局创建领袖并设置为统治者</span></span><br><span class="line">	<span class="built_in">id</span> = bronya<span class="number">.0</span> <span class="comment">#事件的ID，触发器通过事件ID来匹配要执行的事件</span></span><br><span class="line">	hide_window = yes <span class="comment">#隐藏事件弹窗</span></span><br><span class="line">	is_triggered_only = yes <span class="comment">#设定事件只能由触发器或者另一个事件触发，否则该事件会不停的被触发，增加CPU0的负载</span></span><br><span class="line">	trigger = &#123;</span><br><span class="line">		is_ai = no <span class="comment">#禁止AI使用</span></span><br><span class="line">	&#125;</span><br><span class="line">	immediate = &#123; <span class="comment">#事件触发后立即执行</span></span><br><span class="line">		set_country_flag = ruled_by_bronya <span class="comment">#给国家添加一个flag，用于后续的匹配</span></span><br><span class="line">	&#125;</span><br><span class="line">	after = &#123;</span><br><span class="line">		hidden_effect = &#123; <span class="comment">#不产生提示</span></span><br><span class="line">			create_leader = &#123; <span class="comment">#创建领袖</span></span><br><span class="line">				<span class="keyword">class</span> = governor <span class="comment">#总督类型</span></span><br><span class="line">				name = NAME_Bronya <span class="comment">#名字的Key，它的Value需要在本地化文件中设置</span></span><br><span class="line">				immortal = yes <span class="comment">#永生，不会死于年老</span></span><br><span class="line">				set_age = <span class="number">17</span> <span class="comment">#设置年龄，但是在这里并不会生效</span></span><br><span class="line">				gender = female <span class="comment">#性别</span></span><br><span class="line">				skill = <span class="number">1</span> <span class="comment">#等级</span></span><br><span class="line">				traits = &#123; <span class="comment">#设置特质</span></span><br><span class="line">					trait = leader_trait_yamen</span><br><span class="line">					trait = leader_trait_three_duck_turbo</span><br><span class="line">					trait = leader_trait_lychee</span><br><span class="line">				&#125;</span><br><span class="line">				event_leader = yes <span class="comment">#禁止领导派系</span></span><br><span class="line">				effect = &#123;</span><br><span class="line">					set_leader_flag = ruler_bronya <span class="comment">#给领袖添加一个flag</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			last_created_leader = &#123;</span><br><span class="line">				change_leader_portrait = Bronya0 <span class="comment">#设置肖像</span></span><br><span class="line">			&#125;</span><br><span class="line">			set_leader = last_created_leader <span class="comment">#设为统治者</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每月触发的事件，用于恢复肖像等</span></span><br><span class="line">country_event = &#123;</span><br><span class="line">	<span class="built_in">id</span> = bronya<span class="number">.3</span></span><br><span class="line">	hide_window = yes</span><br><span class="line">	is_triggered_only = yes</span><br><span class="line">	trigger = &#123;</span><br><span class="line">		is_ai = no</span><br><span class="line">		has_country_flag = ruled_by_bronya <span class="comment">#只有拥有这个flag的国家才能触发该事件</span></span><br><span class="line">	&#125;</span><br><span class="line">	immediate = &#123;</span><br><span class="line">		<span class="keyword">if</span> = &#123;</span><br><span class="line">			limit = &#123;</span><br><span class="line">				has_country_flag = ruled_by_bronya <span class="comment">#匹配国家</span></span><br><span class="line">			&#125;</span><br><span class="line">			every_owned_leader = &#123;</span><br><span class="line">				limit = &#123;</span><br><span class="line">					has_leader_flag = ruler_bronya <span class="comment">#匹配领袖</span></span><br><span class="line">				&#125;</span><br><span class="line">				change_leader_portrait = Bronya0 <span class="comment">#设定肖像</span></span><br><span class="line">				set_age = <span class="number">17</span> <span class="comment">#设定年龄</span></span><br><span class="line">				remove_all_negative_traits = yes <span class="comment">#移除全部负面特质</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="领袖特质"><a href="#领袖特质" class="headerlink" title="领袖特质"></a>领袖特质</h3><div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/Common_leader_traits">Paradox Wiki</a>关于领袖特质的说明</p>
</div>

<p>特质图标的大小是29*29像素。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># common/traits/00_bronya_traits.txt</span></span><br><span class="line"><span class="comment"># 荔枝律者</span></span><br><span class="line">leader_trait_lychee = &#123;</span><br><span class="line">	cost = <span class="number">0</span></span><br><span class="line">	valid_for_all_ethics = yes <span class="comment">#对所有思潮都生效</span></span><br><span class="line">	councilor_trait = yes <span class="comment">#只有该领袖在内阁中才会生效</span></span><br><span class="line">	icon = <span class="string">&quot;gfx/interface/icons/traits/trait_lychee.dds&quot;</span> <span class="comment">#特质图标的路径</span></span><br><span class="line">	modifier = &#123; <span class="comment">#修饰，加点buff</span></span><br><span class="line">		all_technology_research_speed = <span class="number">0.3</span></span><br><span class="line">		ship_archaeological_site_excavation_speed_mult = <span class="number">0.3</span></span><br><span class="line">		species_leader_exp_gain = <span class="number">0.3</span></span><br><span class="line">		planet_jobs_food_produces_mult = <span class="number">0.3</span></span><br><span class="line">		empire_size_penalty_mult = -<span class="number">0.3</span></span><br><span class="line">		country_starbase_influence_cost_mult = -<span class="number">0.3</span></span><br><span class="line">		army_experience_gain_mult = <span class="number">0.3</span></span><br><span class="line">		pop_growth_speed = <span class="number">0.3</span></span><br><span class="line">	&#125;</span><br><span class="line">	leader_class = &#123; <span class="comment">#只对总督生效</span></span><br><span class="line">		governor</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">#防止其他领袖获取该特质</span></span><br><span class="line">	initial = no </span><br><span class="line">	randomized = no</span><br><span class="line"></span><br><span class="line">	notify_on_gained = no <span class="comment">#获取特质时不提醒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="肖像"><a href="#肖像" class="headerlink" title="肖像"></a>肖像</h3><div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/index.php?title=Portrait_modding&mobileaction=toggle_view_desktop">Paradox Wiki</a>关于肖像的说明</p>
</div>

<p>我使用了最简单的方法：静态肖像，肖像图片的尺寸是496*380像素。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gfx/portraits/portraits/01_bronya_potraits.txt</span></span><br><span class="line">portraits = &#123;</span><br><span class="line">	Bronya0 = &#123;textureFile = <span class="string">&quot;gfx/models/portraits/Custom/Bronya0.dds&quot;</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="星系Mod"><a href="#星系Mod" class="headerlink" title="星系Mod"></a>星系Mod</h2><p>最后一个也是最复杂的一个Mod，在银河系中心创建一个自定义的星系作为帝国的初始星系，文件结构关系如下图所示。</p>
<p><img data-src="https://s2.loli.net/2023/09/05/t7Z46zHTyLA8Pv2.png" alt="群星星系Mod结构.png"></p>
<h3 id="自定义恒星系"><a href="#自定义恒星系" class="headerlink" title="自定义恒星系"></a>自定义恒星系</h3><p>群星中默认的恒星系类型有单星、双星、三星类型，这里我要创建一个四星星系，星系的中央是黑洞，周围环绕着一颗中子星、一颗A类恒星和一颗B类恒星。</p>
<div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/System_modding">Paradox Wiki</a>关于自定义恒星系的说明</p>
</div>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># common/star_classes/starry_star_classes.txt</span></span><br><span class="line">sc_starry_galaxy_center = &#123;</span><br><span class="line">	<span class="keyword">class</span> = black_hole <span class="comment">#设置星系背景</span></span><br><span class="line">	icon = black_hole <span class="comment">#设置星系在星图上的图标样式</span></span><br><span class="line">	planet = &#123; <span class="comment">#黑洞</span></span><br><span class="line">		key = pc_black_hole</span><br><span class="line">		<span class="keyword">class</span> = black_hole</span><br><span class="line">	&#125;</span><br><span class="line">    planet = &#123; <span class="comment">#B类恒星</span></span><br><span class="line">		key = pc_b_star</span><br><span class="line">		<span class="keyword">class</span> = b_star</span><br><span class="line">	&#125;</span><br><span class="line">	planet = &#123; <span class="comment">#中子星</span></span><br><span class="line">		key = pc_neutron_star</span><br><span class="line">		<span class="keyword">class</span> = neutron_star</span><br><span class="line">	&#125;</span><br><span class="line">	planet = &#123; <span class="comment">#A类恒星</span></span><br><span class="line">		key = pc_a_star</span><br><span class="line">		<span class="keyword">class</span> = a_star</span><br><span class="line">	&#125;</span><br><span class="line">	spawn_odds = <span class="number">0</span> <span class="comment">#此类星系随机产生的概率</span></span><br><span class="line">	num_planets = &#123; <span class="comment">#星系中星球的数量</span></span><br><span class="line">		<span class="built_in">min</span> = <span class="number">8</span></span><br><span class="line">		<span class="built_in">max</span> = <span class="number">25</span></span><br><span class="line">	&#125;</span><br><span class="line">	is_environmental_hazard = yes <span class="comment">#是否有环境危害</span></span><br><span class="line">	modifier = &#123;</span><br><span class="line">		ship_disengage_chance_reduction = <span class="number">0.5</span></span><br><span class="line">		ship_emergency_ftl_min_days_mult = <span class="number">0.5</span></span><br><span class="line">		ship_speed_reduction = <span class="number">0.5</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="初始星系"><a href="#初始星系" class="headerlink" title="初始星系"></a>初始星系</h3><p>将初始星系设置在银河中心的原理如下：游戏开始时在地图的随机位置创建一个正常的星系，为了方便区分，我把它叫做原初始星系，在这个星系的初始化过程中使用<code>init_effect</code>在银河系中心创建一个上面自定义的恒星系，我把它称为银河中心星系。最后通过事件与脚本效果，将原初始星系的人口全部迁移到银河中心星系的宜居星球上，并在银河中心星系中创建新的太空基地、科研船、工程船与舰队，再摧毁原初始星系内的所有舰船、太空基地、开采站、母星上的建筑与区划。</p>
<div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/Effects">Paradox Wiki</a>关于<code>Effect</code>的说明</p>
</div>

<p>因为我设置的这个星系太大，代码有接近500行，这里就不全放了，只放创建星云、创建巨构的特殊代码。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># common/solar_system_initializers/galaxy_center_starry_system.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原初始星系的初始化器</span></span><br><span class="line">d_starry_galaxy_center_system = &#123;</span><br><span class="line">	<span class="keyword">class</span> = <span class="string">&quot;sc_black_hole&quot;</span></span><br><span class="line">	usage = custom_empire</span><br><span class="line">	name = <span class="string">&quot;starry_name_galaxy_original_system&quot;</span></span><br><span class="line">	flags = &#123;</span><br><span class="line">		empire_home_system</span><br><span class="line">	&#125;</span><br><span class="line">	planet = &#123;</span><br><span class="line">		<span class="keyword">class</span> = star</span><br><span class="line">		orbit_distance = <span class="number">0</span></span><br><span class="line">		orbit_angle = <span class="number">1</span></span><br><span class="line">		size = &#123;</span><br><span class="line">			<span class="built_in">min</span> = <span class="number">20</span></span><br><span class="line">			<span class="built_in">max</span> = <span class="number">30</span></span><br><span class="line">		&#125;</span><br><span class="line">		has_ring = no</span><br><span class="line">		name = <span class="string">&quot;starry_name_galaxy_original_system&quot;</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">	<span class="comment"># 省略内容</span></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># 原初始星系的母星</span></span><br><span class="line">	planet = &#123;</span><br><span class="line">		<span class="comment">##########################</span></span><br><span class="line">		<span class="comment"># 省略内容</span></span><br><span class="line">		<span class="comment">##########################</span></span><br><span class="line">		home_planet = yes</span><br><span class="line">		init_effect = &#123;</span><br><span class="line">			set_planet_flag = starry_galaxy_center_origin_planet</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">##########################</span></span><br><span class="line">		<span class="comment">#省略内容</span></span><br><span class="line">		<span class="comment">##########################</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">	<span class="comment">#省略内容</span></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line"></span><br><span class="line">	init_effect = &#123;</span><br><span class="line">		set_spawn_system_batch = begin <span class="comment">#优化 spawn_system 的调用效果</span></span><br><span class="line">		<span class="comment"># 生成银河中心星系</span></span><br><span class="line">		no_scope = &#123;</span><br><span class="line">			spawn_system = &#123;</span><br><span class="line">				min_distance &gt;= <span class="number">1</span></span><br><span class="line">				max_distance &lt;= <span class="number">2</span></span><br><span class="line">				min_orientation_angle = <span class="number">1</span></span><br><span class="line">				max_orientation_angle = <span class="number">2</span></span><br><span class="line">				hyperlane = no</span><br><span class="line">				initializer = starry_galaxy_center_init_00 <span class="comment"># 调用银河中心星系的初始化器</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment"># 移除所有的超空间航道</span></span><br><span class="line">		random_system = &#123;</span><br><span class="line">			limit = &#123;</span><br><span class="line">				has_star_flag = starry_galaxy_center_flag_0</span><br><span class="line">			&#125;</span><br><span class="line">			save_event_target_as = starry_galaxy_center_flag_0</span><br><span class="line">			every_neighbor_system = &#123;</span><br><span class="line">				limit = &#123;</span><br><span class="line">					has_hyperlane_to = prev</span><br><span class="line">				&#125;</span><br><span class="line">				remove_hyperlane = &#123;</span><br><span class="line">					<span class="keyword">from</span> = this</span><br><span class="line">					to = prev</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		set_spawn_system_batch = end</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">	<span class="comment"># 省略内容</span></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 银河中心星系的初始化器</span></span><br><span class="line">starry_galaxy_center_init_00 = &#123;</span><br><span class="line">	<span class="keyword">class</span> = <span class="string">&quot;sc_starry_galaxy_center&quot;</span> <span class="comment">#调用前面自定义的星系类型</span></span><br><span class="line">	name = <span class="string">&quot;starry_name_galaxy_center_system&quot;</span></span><br><span class="line">	flags = &#123;</span><br><span class="line">		empire_cluster</span><br><span class="line">		starry_galaxy_center_flag_0</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment"># 带有被损毁的物质解压器的黑洞</span></span><br><span class="line">	planet = &#123;</span><br><span class="line">		<span class="keyword">class</span> = star</span><br><span class="line">		orbit_distance = <span class="number">0</span></span><br><span class="line">		name = <span class="string">&quot;starry_name_galaxy_center_system&quot;</span></span><br><span class="line">		init_effect = &#123;</span><br><span class="line">			save_event_target_as = matter_decompressor_star</span><br><span class="line">			clear_deposits = yes</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">	<span class="comment"># 省略内容</span></span><br><span class="line">	<span class="comment">##############################</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment"># 宜居星</span></span><br><span class="line">	planet = &#123;</span><br><span class="line">		<span class="keyword">class</span> = star</span><br><span class="line">		orbit_distance = <span class="number">0</span></span><br><span class="line">		orbit_angle = <span class="number">120</span></span><br><span class="line">		size = <span class="number">28</span></span><br><span class="line">		has_ring = no</span><br><span class="line">		name = <span class="string">&quot;starry_name_galaxy_center_homestar&quot;</span></span><br><span class="line">		change_orbit = <span class="number">60</span></span><br><span class="line">		<span class="comment"># Homeworld</span></span><br><span class="line">		planet = &#123;</span><br><span class="line">			<span class="keyword">class</span> = pc_gaia</span><br><span class="line">			orbit_distance = <span class="number">1</span></span><br><span class="line">			orbit_angle = &#123;</span><br><span class="line">				<span class="built_in">min</span> = <span class="number">90</span></span><br><span class="line">				<span class="built_in">max</span> = <span class="number">270</span></span><br><span class="line">			&#125;</span><br><span class="line">			name = <span class="string">&quot;starry_name_galaxy_center_homeland&quot;</span></span><br><span class="line">			size = <span class="number">30</span></span><br><span class="line">			has_ring = yes</span><br><span class="line">			home_planet = yes</span><br><span class="line">			init_effect = &#123;</span><br><span class="line">				set_planet_flag = starry_galaxy_center_real_init_system</span><br><span class="line">				save_event_target_as = starry_galaxy_center_capital</span><br><span class="line">			&#125;</span><br><span class="line">			moon = &#123;</span><br><span class="line">				<span class="keyword">class</span> = <span class="string">&quot;pc_barren_cold&quot;</span></span><br><span class="line">				size = <span class="number">5</span></span><br><span class="line">				orbit_distance = <span class="number">12</span></span><br><span class="line">				orbit_angle = <span class="number">40</span></span><br><span class="line">				has_ring = no</span><br><span class="line">				init_effect = &#123;</span><br><span class="line">					set_planet_flag = starry_init_moon</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">###########################</span></span><br><span class="line">		<span class="comment"># 省略内容</span></span><br><span class="line">		<span class="comment">###########################</span></span><br><span class="line">	&#125;</span><br><span class="line">	init_effect = &#123;</span><br><span class="line">		<span class="comment"># 生成星云背景</span></span><br><span class="line">		save_event_target_as = starry_galaxy_center_system_target</span><br><span class="line">		create_ambient_object = &#123;</span><br><span class="line">			<span class="built_in">type</span> = <span class="string">&quot;turbulent_nebula_2&quot;</span></span><br><span class="line">			location = this</span><br><span class="line">		&#125;</span><br><span class="line">		last_created_ambient_object = &#123;</span><br><span class="line">			set_location = &#123;</span><br><span class="line">				target = prev</span><br><span class="line">				distance = <span class="number">0</span></span><br><span class="line">				angle = random</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">#生成星云</span></span><br><span class="line">		<span class="keyword">if</span> = &#123;</span><br><span class="line">			limit = &#123;</span><br><span class="line">				is_inside_nebula = no</span><br><span class="line">			&#125;</span><br><span class="line">			create_nebula = &#123;</span><br><span class="line">				radius = <span class="number">40</span></span><br><span class="line">			&#125;</span><br><span class="line">			set_star_flag = starry_galaxy_center_nebula</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment"># 生成巨构建筑</span></span><br><span class="line">		spawn_megastructure = &#123;</span><br><span class="line">			<span class="built_in">type</span> = <span class="string">&quot;matter_decompressor_ruined&quot;</span></span><br><span class="line">			planet = event_target:matter_decompressor_star</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">###########################</span></span><br><span class="line">		<span class="comment"># 省略内容</span></span><br><span class="line">		<span class="comment">###########################</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="事件-1"><a href="#事件-1" class="headerlink" title="事件"></a>事件</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># events/starry_galaxy_center_game_start.txt</span></span><br><span class="line">namespace = starry_galaxy_center_start</span><br><span class="line"></span><br><span class="line">planet_event = &#123;</span><br><span class="line">	<span class="built_in">id</span> = starry_galaxy_center_start<span class="number">.1</span></span><br><span class="line">	hide_window = yes</span><br><span class="line">	is_triggered_only = yes</span><br><span class="line">	</span><br><span class="line">	trigger = &#123;</span><br><span class="line">		has_planet_flag = starry_galaxy_center_origin_planet</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	immediate = &#123;</span><br><span class="line">		owner = &#123;</span><br><span class="line">			set_country_flag = starry_galaxy_center_country</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		starry_home_planet_first_pass = yes <span class="comment">#执行脚本</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">country_event = &#123;</span><br><span class="line">	<span class="built_in">id</span> = starry_galaxy_center_start<span class="number">.2</span></span><br><span class="line">	hide_window = yes</span><br><span class="line">	is_triggered_only = yes</span><br><span class="line">	</span><br><span class="line">	trigger = &#123;</span><br><span class="line">		has_country_flag = starry_galaxy_center_country</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	immediate = &#123;</span><br><span class="line">		capital_scope = &#123;</span><br><span class="line">			starry_home_planet_secondery_pass = yes <span class="comment">#执行脚本</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="脚本效果"><a href="#脚本效果" class="headerlink" title="脚本效果"></a>脚本效果</h3><div class="note primary"><p><a href="https://stellaris.paradoxwikis.com/Dynamic_modding#Scripted_effects">Paradox Wiki</a>关于脚本效果的说明</p>
</div>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># common/scripted_effects/starry_planet_scripted_effects.txt</span></span><br><span class="line">starry_home_planet_first_pass = &#123;</span><br><span class="line">	IF = &#123;</span><br><span class="line">		limit = &#123;</span><br><span class="line">			OR = &#123;</span><br><span class="line">				has_planet_flag = starry_galaxy_center_origin_planet</span><br><span class="line">				has_planet_flag = starry_galaxy_center_real_init_system</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		owner = &#123;</span><br><span class="line">			give_technology = &#123;</span><br><span class="line">				tech = <span class="string">&quot;tech_gateway_activation&quot;</span> <span class="comment">#静默解锁星门激活科技</span></span><br><span class="line">				message = no</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">starry_home_planet_secondery_pass = &#123;</span><br><span class="line">	IF = &#123;</span><br><span class="line">		limit = &#123;</span><br><span class="line">			has_planet_flag = starry_galaxy_center_origin_planet</span><br><span class="line">		&#125;</span><br><span class="line">		owner = &#123;</span><br><span class="line">			save_event_target_as = starry_galaxy_center_owner</span><br><span class="line">		&#125;</span><br><span class="line">		random_system = &#123;</span><br><span class="line">			limit = &#123; <span class="comment">#匹配自定义的银河中央星系</span></span><br><span class="line">				has_star_flag = starry_galaxy_center_flag_0</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 重建恒星基地</span></span><br><span class="line">			create_starbase = &#123;</span><br><span class="line">				size = <span class="string">&quot;starbase_starport&quot;</span></span><br><span class="line">				module = <span class="string">&quot;shipyard&quot;</span></span><br><span class="line">				module = <span class="string">&quot;shipyard&quot;</span></span><br><span class="line">				building = <span class="string">&quot;crew_quarters&quot;</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 初始化母星</span></span><br><span class="line">			every_system_planet = &#123;</span><br><span class="line">				<span class="keyword">if</span> = &#123;</span><br><span class="line">					limit = &#123;</span><br><span class="line">						is_colonizable = yes</span><br><span class="line">						is_colony = no</span><br><span class="line">					&#125;</span><br><span class="line">					create_colony = &#123; <span class="comment">#使用默认物种创建殖民地</span></span><br><span class="line">						owner = event_target:starry_galaxy_center_owner</span><br><span class="line">						species = owner_main_species</span><br><span class="line">					&#125;</span><br><span class="line">					generate_start_buildings_and_districts = yes <span class="comment">#生成初始建筑与区划</span></span><br><span class="line">					save_event_target_as = starry_galaxy_center_capital</span><br><span class="line"></span><br><span class="line">					<span class="comment">#设置所有权</span></span><br><span class="line">					set_owner = root</span><br><span class="line">					set_controller = root</span><br><span class="line"></span><br><span class="line">					set_capital = yes <span class="comment">#设为首都</span></span><br><span class="line">					set_name = starry_name_galaxy_center_homeland <span class="comment">#设置星球名</span></span><br><span class="line">					sector = &#123; <span class="comment">#设置星区名</span></span><br><span class="line">						set_name = starry_name_galaxy_center_system</span><br><span class="line">					&#125;</span><br><span class="line"></span><br><span class="line">					<span class="comment"># 添加行星修饰符</span></span><br><span class="line">					add_modifier = &#123;</span><br><span class="line">						modifier = soothing_crystals</span><br><span class="line">						days = -<span class="number">1</span></span><br><span class="line">					&#125;</span><br><span class="line">					add_modifier = &#123;</span><br><span class="line">						modifier = good_vibrations</span><br><span class="line">						days = -<span class="number">1</span></span><br><span class="line">					&#125;</span><br><span class="line">					add_modifier = &#123;</span><br><span class="line">						modifier = paradise_planet</span><br><span class="line">						days = -<span class="number">1</span></span><br><span class="line">					&#125;</span><br><span class="line"></span><br><span class="line">					<span class="comment"># 添加特殊地貌</span></span><br><span class="line">					add_deposit = d_alien_pets_deposit</span><br><span class="line">					add_deposit = d_hot_springs</span><br><span class="line">					add_deposit = d_underwater_vent</span><br><span class="line">					add_deposit = d_rushing_waterfalls</span><br><span class="line">					add_deposit = d_submerged_ore_veins</span><br><span class="line">					add_deposit = d_tropical_island</span><br><span class="line">					add_deposit = d_teeming_reef</span><br><span class="line">					add_deposit = d_crystal_reef</span><br><span class="line">					add_deposit = d_betharian_deposit</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment"># 创建开采站</span></span><br><span class="line">				else_if = &#123;</span><br><span class="line">					limit = &#123;</span><br><span class="line">						has_deposit_for = shipclass_mining_station</span><br><span class="line">						has_mining_station = no</span><br><span class="line">					&#125;</span><br><span class="line">					create_mining_station = &#123;</span><br><span class="line">						owner = root</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment"># 创建研究站</span></span><br><span class="line">				else_if = &#123;</span><br><span class="line">					limit = &#123;</span><br><span class="line">						has_deposit_for = shipclass_research_station</span><br><span class="line">						has_research_station = no</span><br><span class="line">					&#125;</span><br><span class="line">					create_research_station = &#123;</span><br><span class="line">						owner = root</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 重新创建科研船</span></span><br><span class="line">			create_fleet = &#123;</span><br><span class="line">				effect = &#123;</span><br><span class="line">					set_owner = root</span><br><span class="line">					create_ship = &#123;</span><br><span class="line">						name = random</span><br><span class="line">						random_existing_design = science</span><br><span class="line">					&#125;</span><br><span class="line">					set_fleet_stance = evasive</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 重新创建工程船</span></span><br><span class="line">			create_fleet = &#123;</span><br><span class="line">				effect = &#123;</span><br><span class="line">					set_owner = root</span><br><span class="line">					create_ship = &#123;</span><br><span class="line">						name = random</span><br><span class="line">						random_existing_design = constructor</span><br><span class="line">					&#125;</span><br><span class="line">					set_fleet_stance = evasive</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 重新创建三艘护卫舰组成的舰队</span></span><br><span class="line">			create_fleet = &#123;</span><br><span class="line">				set_take_point = yes</span><br><span class="line">				effect = &#123;</span><br><span class="line">					set_owner = root</span><br><span class="line">					set_name = <span class="string">&quot;starry_first_fleet_name&quot;</span></span><br><span class="line">					<span class="keyword">while</span> = &#123;</span><br><span class="line">						count = <span class="number">3</span></span><br><span class="line">						create_ship = &#123;</span><br><span class="line">							name = random</span><br><span class="line">							random_existing_design = corvette</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 将星系设置为已探索</span></span><br><span class="line">			solar_system = &#123;</span><br><span class="line">				set_surveyed = &#123;</span><br><span class="line">					surveyed = yes</span><br><span class="line">					surveyor = event_target:starry_galaxy_center_owner</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment"># 将月球设置为地貌改造候选星球</span></span><br><span class="line">			solar_system = &#123;</span><br><span class="line">				every_system_planet = &#123;</span><br><span class="line">					limit = &#123;</span><br><span class="line">						has_planet_flag = starry_init_moon</span><br><span class="line">					&#125;</span><br><span class="line">					prevent_anomaly = yes</span><br><span class="line">					add_modifier = &#123;</span><br><span class="line">						modifier = terraforming_candidate</span><br><span class="line">						days = -<span class="number">1</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment"># 将所有人口迁移到此星球</span></span><br><span class="line">		every_owned_pop = &#123;</span><br><span class="line">			resettle_pop = &#123;</span><br><span class="line">				pop = THIS</span><br><span class="line">				planet = event_target:starry_galaxy_center_capital</span><br><span class="line">			&#125;</span><br><span class="line">			unemploy_pop = yes</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment"># 舍弃原来的星球并将星球更改为被屏障的星球</span></span><br><span class="line">		remove_all_buildings = yes</span><br><span class="line">		remove_all_districts = yes</span><br><span class="line">		clear_deposits = yes</span><br><span class="line">		destroy_colony = yes</span><br><span class="line">		change_pc = pc_shielded</span><br><span class="line">		<span class="comment"># 摧毁原星系内的所有舰船与太空基地</span></span><br><span class="line">		solar_system = &#123;</span><br><span class="line">			every_fleet_in_system = &#123;</span><br><span class="line">				delete_fleet = &#123;</span><br><span class="line">					target = this</span><br><span class="line">					kill_leader = no</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			set_name = random</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="Steam创意工坊"><a href="#Steam创意工坊" class="headerlink" title="Steam创意工坊"></a>Steam创意工坊</h1><p>Mod制作完成后就可以上传到创意工坊了，这样其他玩家就可以订阅和使用你的Mod。</p>
<h2 id="添加封面"><a href="#添加封面" class="headerlink" title="添加封面"></a>添加封面</h2><p>在群星的启动器中，本地的Mod是不会显示封面的，只有Steam创意工坊订阅的Mod才会有封面，这个封面也是Mod在创意工坊中显示的封面。</p>
<p>封面图片有以下几点注意事项：</p>
<ol>
<li>图片大小不超过<code>1MB</code></li>
<li>格式建议使用<code>png</code></li>
<li>长宽比一般为<code>1：1</code></li>
<li>建议命名为<code>thumbnail.png</code>，这里额外留意系统是否开启了文件扩展名显示</li>
</ol>
<p>封面制作完成后打开mod文件夹内的<code>descriptor.mod</code>，我这里的文件路径为<code>.../mod/exp/descriptor.mod</code>，粘贴下面的代码并保存。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">picture=<span class="string">&quot;thumbnail.png&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="上传Mod"><a href="#上传Mod" class="headerlink" title="上传Mod"></a>上传Mod</h2><ol>
<li>在群星启动器的左边栏中选择<code>所有已安装Mod</code>，然后点击右上角的<code>上传MOD</code></li>
<li>在Mod下面的下拉菜单选择要上传的Mod</li>
<li>此时可以给Mod改名以及调整Mod支持的游戏版本</li>
<li><code>Mod ID</code>不需要填，上传时会自动生成</li>
<li>选择上传至<code>Steam创意工坊</code></li>
<li>描述可以先不写，等后面到创意工坊里再写</li>
<li>点击<code>上传Mod</code></li>
<li>在Steam中找到自己的创意工坊物品，然后可以更改Mod的描述，并添加预览图片</li>
<li>编辑完成后记得更改可见性为公开，这样其他玩家才能搜索到你的Mod</li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/09/05/YcbMDwQHiJoZ1S6.jpg" alt="群星-mod上传.jpg"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/09/05/RZSsPTWxYrvNbif.jpg" alt="群星-mod图片上传成功.jpg"></div></div></div>

<h2 id="更新Mod"><a href="#更新Mod" class="headerlink" title="更新Mod"></a>更新Mod</h2><p>更新Mod的步骤和上传大同小异：</p>
<ol>
<li>在群星启动器的左边栏中选择<code>所有已安装Mod</code>，然后点击右上角的<code>上传MOD</code></li>
<li>在Mod下面的下拉菜单选择要更新的Mod</li>
<li><code>Mod ID</code>中会自动填入Mod在创意工坊中的ID，依然不需要我们手动填</li>
<li>点击<code>上传Mod</code>即可</li>
</ol>
]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>Stellaris</tag>
        <tag>MOD</tag>
      </tags>
  </entry>
  <entry>
    <title>同时启用独显与核显</title>
    <url>/TurnOniGpu.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">以普遍理性而论，插入独显后主板会自动屏蔽掉集显。虽然英特尔核心显卡的游戏性能很拉跨，但是它的视频编解码能力却强的离谱。像6500xt这种编码器被阉割的显卡在游戏中录屏、推流或者视频剪辑时就会产生明显的卡顿掉帧，此时调用核显就可以减轻独显与CPU的负担，获得更丝滑的体验。</blockquote>

<span id="more"></span>

<div class="note warning"><h1 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h1><ol>
<li>此方法仅适用于内建核显的桌面CPU</li>
<li>Intel的CPU如果后缀带有<code>F</code>，如<code>12490F</code>，是不含有核显的</li>
<li>AMD锐龙7000系前的CPU只有后缀带有<code>G</code>或者<code>GE</code>的才集成了核显，如<code>5600G</code>，7000系锐龙都带有核显。</li>
<li>核显在开启后会占用一部分内存带宽，如果两者同时工作，在某些情况下可能对游戏帧数产生负面影响</li>
</ol>
</div>

<h1 id="在BIOS中启用核显"><a href="#在BIOS中启用核显" class="headerlink" title="在BIOS中启用核显"></a>在BIOS中启用核显</h1><p>这里我以华硕的B460I主板为例</p>
<ol>
<li>确认显示器连接到了独立显卡的接口上</li>
<li>开机时狂按<code>Del</code>或者<code>F2</code>键进入BIOS</li>
<li>如果左上角显示的是<code>EZ Mode</code>简易模式，按下<code>F7</code>，进入<code>Advanced Mode</code>高级模式<br><img data-src="https://s2.loli.net/2023/07/04/2Uueai5DWJvRLV4.jpg" alt="切换高级模式.jpg"></li>
<li>如果BIOS语言是英文，则通过左上角语言选项切换至简体中文<br><img data-src="https://s2.loli.net/2023/07/04/ARkyNPjM3JZVOG9.jpg" alt="语言设置.jpg"></li>
<li>在顶部菜单栏中选中<code>高级</code>并打开<code>北桥</code><br><img data-src="https://s2.loli.net/2023/07/04/c8Vft5LimZsoWB4.jpg" alt="北桥.jpg"></li>
<li>打开<code>显示设置</code><br><img data-src="https://s2.loli.net/2023/07/04/RbC3LqoAudU8OMw.jpg" alt="显示设置.jpg"></li>
<li>将<code>初始化 iGPU</code>的选项设置为<code>开启</code><br><img data-src="https://s2.loli.net/2023/07/04/hbHx5VwjJZK2DNl.jpg" alt="初始化核显.jpg"></li>
<li>按<code>F10</code>保存并退出</li>
</ol>
<p>如果你找不到上面的选项，请按照以下步骤检查</p>
<ol>
<li>在顶部菜单栏中选中<code>启动</code>并打开<code>CSM（兼容性支持模块）</code><br><img data-src="https://s2.loli.net/2023/07/04/nBQKHuZd4UtgwmE.jpg" alt="兼容性支持模块.jpg"></li>
<li>将<code>开启 CSM</code>设置为<code>关闭</code><br><img data-src="https://s2.loli.net/2023/07/04/gTtQGcRzvjdS4Bm.jpg" alt="关闭CSM.jpg"></li>
</ol>
<p>需要注意，同时启用独显与核显的前提是系统设置为UEFI引导。传统Legacy模式不支持同时启用，需要重装系统并将引导方式设置为UEFI模式。如果你在Legacy模式下关闭CSM功能可能会导致无法进入系统。</p>
<details class="note "><summary><p>note 如何在BIOS中截图</p>
</summary>
<p>以华硕主板为例，首先插入U盘，进入BIOS后按下F12即可截图。<br>注意截图需要保存至外置存储设备（U盘等），截图格式为<code>bmp</code>，文件大小为3.00MB，分辨率为1024*768。</p>

</details>

<h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>正常情况下进入系统后会自动安装驱动，如果你的任务管理器中出现了核心显卡，则可以跳过这一部分。</p>
<p><img data-src="https://s2.loli.net/2023/07/04/6AByY5GC14dsirK.png" alt="查看核显.png"></p>
<p>没有识别到核显的请按照如下步骤操作</p>
<ol>
<li>关机并断开电源</li>
<li>将显示器连接到主板上的视频输出接口</li>
<li>开机后打开Windows更新等待自动下载驱动，或者前往CPU制造商官网下载对应驱动<ul>
<li><a href="https://www.intel.cn/content/www/cn/zh/download-center/home.html">英特尔显卡驱动下载</a> </li>
<li><a href="https://www.amd.com/zh-hans/support">AMD显卡驱动下载</a></li>
</ul>
</li>
<li>安装完成后再次关机断电</li>
<li>将显示器重新连接到独显上</li>
</ol>
<h1 id="设置软件首选显卡"><a href="#设置软件首选显卡" class="headerlink" title="设置软件首选显卡"></a>设置软件首选显卡</h1><p>只开启核显是不够的，如果你打开任务管理器会发现软件依然跑在独显上（核显躺平摆烂中），需要设置软件的图形首选项才能将软件指派给核显运行，步骤如下</p>
<ol>
<li>同时按下<code>Win</code>和<code>I</code>键打开<code>Windows设置</code></li>
<li>依次打开<code>系统 - 屏幕 - 显示卡</code></li>
<li>打开相应软件下的<code>选项</code>菜单</li>
<li>将<code>图形首选项</code>设置为<code>节能</code>并保存</li>
</ol>
<p><img data-src="https://s2.loli.net/2023/07/04/LRwMDk7cu1tJK9b.jpg" alt="图形首选项.jpg"></p>
<p>如果没有找到相应软件的话，请按照以下步骤操作</p>
<ol>
<li>在<code>系统 - 屏幕 - 显示卡</code>找到<code>应用的自定义选项</code></li>
<li>选择<code>桌面应用</code>或者<code>Microsoft Store应用</code></li>
<li>点击<code>浏览</code><ul>
<li><code>桌面应用</code>按照文件路径找到<code>.exe</code>可执行文件并手动添加</li>
<li><code>Microsoft Store应用</code>直接在列表中选择</li>
</ul>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2023/07/04/g1GBWnCoFHDIhiv.jpg" alt="添加应用.jpg"></p>
<p>设置成功后启动相关软件，这里我以屏幕录制软件<code>OBS Studio</code>为例，点击开始录制，然后打开任务管理器，就能看到核显开始卖力的工作啦</p>
<p><img data-src="https://s2.loli.net/2023/07/04/VtHwEdyxp8z7cPn.jpg" alt="验证状态.jpg"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>搞机</tag>
        <tag>攻略</tag>
      </tags>
  </entry>
  <entry>
    <title>V2Ray</title>
    <url>/V2Ray.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">自从P站无法访问后就一直想写个V2Ray的教程，然鹅拖延症加懒癌晚期到现在才开始写emmm，虽然民间一直流传有上P站的各种神功，但网速实在感人而且指不定那天就挂掉了，另外如果你不想看这么麻烦的教程的话可以直看真香警告。另外解释一下这个P站是建筑狗用的Pinterest，想歪的面壁去（🐶）
</blockquote>

<span id="more"></span>

<div class="note danger"><h1 id="时效提醒"><a href="#时效提醒" class="headerlink" title="时效提醒"></a>时效提醒</h1><p>本文写于2019年6月！请注意时效，部分内容可能已过期！</p>
</div>

<details class="note success"><summary><p>Just My Socks 真香</p>
</summary>
<h1 id="真香警告"><a href="#真香警告" class="headerlink" title="真香警告"></a>真香警告</h1><p>自己搭的稳定度还是不够高，我后来还是直接用了Just My Socks，真香<br><img data-src="https://s2.loli.net/2022/06/08/fQNoAIpZeb9laHn.gif" alt="真香.gif"></p>
<p><code>Just My Socks</code>是<code>Bandwagon</code>(一家VPS供应商，被墙之前用户巨多，俗称搬瓦工)官方出品的梯子，使用搬瓦工的优质<code>CN2 GIA</code>线路并且支持被墙自动换IP，也就是说IP被墙后你不用自己动手，<code>Just My Socks</code>官方会为你提供一条龙服务，你甚至感受不到它的存在。<strong>虽然它还是个ShadowSocks</strong><br>这套服务的包月金额最低2.88美元，按照19年7月的汇率大概是19.8元人民币,包年是198元人民币，支持自支付宝付款。<br>因为官方过于作死，已经被墙了，需要使用备用网址<a href="https://justmysocks1.net/members/cart.php?gid=1">Just My Socks</a><br>目前主要有三种套餐，Just My Socks 100、Just My Socks 500和Just My Socks 1000，以100为例，官网的信息是这样的<code>100G/mo at 1Gbps | 3 devices</code>，意思就是每个月100G的流量，带宽是1Gbps，支持3台设备使用，一般人这个就够用了，土豪随意</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>注册登陆，不废话</li>
<li>选择需要的套餐，点击<code>Order Now</code></li>
<li>在<code>Choose Billing Cycle</code>可以选择付款周期，包月<code>Monthly</code>，包季度<code>Quarterly</code>，包半年<code>Semi-Annually</code>和包年<code>Annually</code>，周期越长越便宜</li>
<li>在<code>Apply Promo Code</code>中输入优惠码<code>JMS9272283</code>可以享受5.2%的优惠，完成后点击右侧<code>Checkout</code></li>
<li>没注册的话这一步可以继续注册，填写基本信息，国家选择<code>China</code>，付款方式选择<code>Alipay</code>，勾选下面的<code>I have read and agree to the Terms of Service</code>然后点击<code>Complete Order</code>，支付宝扫码付款</li>
<li>付款完成后在官网顶栏选择<code>Services</code>，在下拉菜单中选择<code>My Services</code>，可以看到已经购买的产品，<code>Status</code>状态为<code>Active</code>，即为激活可用状态</li>
<li>点击你的产品就可以看到ShadowSocks的相关信息了，其中<ul>
<li><code>ShadowSocks Encryption</code>是加密方式</li>
<li><code>ShadowSocks Port</code>是端口</li>
<li><code>ShadowSocks Paaword</code>是密码</li>
<li><code>ShadowSocks Server IP</code>是服务器地址，这个地址会有多个，都可以同时用</li>
</ul>
</li>
<li>在V2Ray客户端选择服务器，点击<code>添加ShadowSocks服务器</code>并输入相关信息就可以用了，可以多添加几个，防止某个节点失效，因为<code>Just My Socks</code>的自动检测需要时间</li>
</ol>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在页面左侧的<code>Actions</code>菜单中可以切换端口、密码和加密方式，觉得套餐不能满足需求或不满意可以在<code>Actions</code>菜单中选择修改套餐和退款，在<code>Overview</code>中可以更改付款周期，注意<strong>密码和端口的更改是自动生成</strong>的，不支持自定义。<br>更改成功会提示<code>Changes saved. Please wait 1 minute for settings to propagate to all servers.</code>，就是说需要等待1分钟将设置同步到所有服务器，1分钟后重新点击左侧的<code>Service Information</code>就可以看到更新后的信息了</p>
<ol>
<li>更改密码，点击<code>Change password</code>即可</li>
<li>更改端口，点击<code>Change port</code>即可</li>
<li>更改加密方式，点击<code>Switch to aes-256-gcm</code>和<code>Switch to aes-256-cfb</code>可以切换两种加密方式，建议选择<code>aes-256-gcm</code></li>
<li>修改套餐，点击<code>Upgrade/Downgrade</code>，选择合适的套餐后付款即可</li>
<li>更改付款周期,点击<code>Modify billing cycle</code>,选择的合适的周期后点击后面的<code>Change billing cycle</code>,可能会提示<code>Billing cycle has been modified successfully. Your next invoice will reflect new billing period</code>，意思是周期修改成功，但不会立即生效，会在下一个周期生效</li>
<li>退款，点击<code>Request Refund</code>，然后再点击<code>Request full refund for this service</code>。<br>这个的操作稍微复杂一些，而且相同身份信息只有一次退款机会，意思就是如果你用同一个支付宝给不同的账号付款，你只有一个账号的退款机会。<br>同时你还要满足以下条件<ul>
<li>客户账户信誉良好，未违反服务条款</li>
<li>以前没有付款或目前没争议</li>
<li>每月数据传输使用量低于10%</li>
<li>客户帐户是 7 天内创建的</li>
<li>客户当前账号没有退款过<br>这些都没有问题的话经过审核通过就会将退款原路返回</li>
</ul>
</li>
</ol>

</details>

<details class="note warning"><summary><p>使用代理时UWP应用无法联网的修复方法</p>
</summary>
<h1 id="UWP联网修复"><a href="#UWP联网修复" class="headerlink" title="UWP联网修复"></a>UWP联网修复</h1><p>开启代理后，微软应用商店、OneNote UWP等UWP应用会出现无法联网的问题，修复方法如下</p>
<ol>
<li>打开V2RayN的<code>设置</code> - <code>参数设置</code> - <code>V2RayN设置</code> - <code>解除Windows10UWP应用回环代理限制</code></li>
<li>允许以管理员身份运行</li>
<li>可能会有弹窗警告，忽略就好</li>
<li>找到对应的应用，在名称前面的勾选框打勾</li>
<li>点击<code>Save Changes</code>完成设置</li>
</ol>

</details>

<h1 id="V2Ray简介"><a href="#V2Ray简介" class="headerlink" title="V2Ray简介"></a>V2Ray简介</h1><p>V2Ray项目是Project V下的一款基础网络通讯工具，<a href="https://www.v2ray.com/">官网</a>已经404了，相比于Shadowsocks，V2Ray功能更加强大，但配置也相对麻烦，主要优点有：</p>
<ul>
<li>更完善的协议: V2Ray 使用了新的自行研发的 VMess 协议，改正了 Shadowsocks 一些已有的缺点，更难被GFW检测到</li>
<li>更强大的性能: 网络性能更好，具体数据可以看 <a href="https://steemit.com/cn/@v2ray/3cjiux">V2Ray 官方博客</a></li>
<li>更丰富的功能: 以下是部分 V2Ray 的功能<ul>
<li>mKCP: KCP 协议在 V2Ray 上的实现，不必另行安装 kcptun</li>
<li>动态端口：动态改变通信的端口，对抗对长时间大流量端口的限速封锁</li>
<li>路由功能：可以随意设定指定数据包的流向，去广告、反跟踪都可以</li>
<li>传出代理：看名字可能不太好理解，其实差不多可以称之为多重代理。类似于 Tor 的代理</li>
<li>数据包伪装：类似于 Shadowsocks-rss 的混淆，另外对于 mKCP 的数据包也可伪装，伪装常见流量，令识别更困难</li>
<li>WebSocket 协议：可以 PaaS 平台搭建V2Ray，通过 WebSocket 代理。也可以通过它使用 CDN 中转，抗封锁效果更好</li>
<li>Mux:多路复用，进一步提高科学上网的并发性能</li>
</ul>
</li>
</ul>
<h1 id="购买VPS"><a href="#购买VPS" class="headerlink" title="购买VPS"></a>购买VPS</h1><p>关于FQ的原理，简单说就是用国内的设备连接国外的服务器（也就是下面要购买的VPS），然后通过国外的服务器访问那些404的不存在的网址，再将数据传回你的设备，所以需要购买一个境外的服务器。</p>
<p>服务器选择有很多，香港新加坡日本美国等国家的都可以，提供服务的厂商有<a href="https://www.vultr.com/">Vultr</a>、<a href="https://bandwagonhost.com/">Bandwagon</a>等，更多VPS信息可以去<a href="https://blog.phpgao.com/vpses.html">大佬的博客</a>查看。现在比较主流的VPS厂商已经支持支付宝&#x2F;微信付款了，另外厂商也会有一些优惠活动</p>
<p>这里我以<a href="https://www.vultr.com/">Vultr</a>为例</p>
<ol>
<li>进入官网后在中间的两栏输入账号（邮箱地址）和密码，然后点击<code>Create account</code></li>
<li>在跳转后的页面左侧单击<code>Billing</code>并选择支付方式和充值金额，Vultr支持支付宝（Alipay）和微信（Wechat Pay）两种国内常用的付款方式，当然也可以使用支持美元的信用卡支付</li>
<li>勾选<code>I Agree to the Terms of Service</code>选框，支付宝点击<code>Pay with Alipay</code>，微信选择<code>Generate QR Code</code>进行支付</li>
<li>点击页面左侧的<code>Products</code>按钮切换</li>
<li>在<code>Choose Server</code>中选择<code>Cloud Compute</code></li>
<li>在<code>Cloud Compute</code>中选择服务器地区，一般来说东京和洛杉矶的速度较快</li>
<li>在<code>Server Type</code>中选择服务器的操作系统，一般选择Linux系统降低内存使用，如<code>CentOS</code>和<code>Ubuntu</code></li>
<li>在<code>Server Size</code>中选择合适的硬件配置以及带宽，一般来说选择<code>1CPU</code>、<code>512MB</code>内存即可，注意有些特价的VPS只提供IPV4地址，普通用户不要选择</li>
<li>其它的选项不需要填写，直接点击页面右下角的<code>Deploy Now</code></li>
<li>页面会跳转到<code>Server added successfully</code>服务器添加成功页面，右下方会显示正在安装<code>Installing</code></li>
<li>安装完成后会显示用户名、密码、IP地址等信息，记住这几个信息，稍后会用到</li>
</ol>
<h1 id="连接VPS"><a href="#连接VPS" class="headerlink" title="连接VPS"></a>连接VPS</h1><h2 id="安装Xshell"><a href="#安装Xshell" class="headerlink" title="安装Xshell"></a>安装Xshell</h2><p>远程连接需要使用<a href="https://www.netsarang.com/zh/free-for-home-school/">Xshell</a>，输入姓名邮箱后获取下载链接并安装</p>
<h2 id="连接VPS-1"><a href="#连接VPS-1" class="headerlink" title="连接VPS"></a>连接VPS</h2><ol>
<li>打开Xshell</li>
<li>点击顶栏<code>文件</code>并选择<code>新建</code></li>
<li>在<code>名称</code>处填写一个易于区分的名称</li>
<li>在<code>主机</code>处填写VPS的IP地址并点击<code>确定</code></li>
<li>此时会提示保存ssh密钥，点击<code>接受并保存</code></li>
<li>提示需要用户名的话输入<code>root</code>即可</li>
<li>输入VPS的密码并点击确定即可连接</li>
</ol>
<h1 id="安装V2Ray"><a href="#安装V2Ray" class="headerlink" title="安装V2Ray"></a>安装V2Ray</h1><p>V2Ray的手动安装过程较为繁琐，但已经有大佬做好了一键安装脚本，直接安装并使用即可</p>
<ol>
<li>在上一步连接成功后的<code>Xshell</code>中使用<code>Shift + Insert</code>粘贴命令<code>bash &lt;(curl -s -L https://git.io/v2ray.sh)</code><ul>
<li>如果提示<code>curl: command not found</code>，则需要安装<code>curl</code>，命令如下</li>
<li>ubuntu&#x2F;debian:<code>apt-get update -y &amp;&amp; apt-get install curl -y</code></li>
<li>centos:<code>yum update -y &amp;&amp; yum install curl -y</code></li>
</ul>
</li>
<li>输入<code>1</code>并回车选择安装</li>
<li>选择V2Ray传输协议，这里17个选择，备注有说明<ul>
<li>默认的可以选择TCP，简单</li>
<li>或者选择使用mKCP_wechat-vedio_dynamicPort进行微信优化伪装和动态端口设定，可以在一定程度上防止被墙，但是这个真的看脸。另外mKCP可以起到一定的加速作用，副作用是容易被运营商QOS限制</li>
<li>比较稳妥的方法是使用WebSocket+TLS，在配合Cloudflare进行中转防止IP被墙，后面会讲</li>
</ul>
</li>
<li>选择V2Ray端口，自己填写一个或者用默认的回车即可，数值在1-65535之间，避开特殊端口(例如80、443)</li>
<li>其他的默认回车即可</li>
<li>安装之前会有提示，看一下设置没有问题的话回车</li>
<li>等待片刻，如果出现什么看不懂的提示就默认回车</li>
<li>输入<code>v2ray start</code>启动V2Ray服务</li>
<li>输入<code>v2ray status</code>回车检测V2Ray是否在运行，返回<code>V2Ray 状态: 正在运行</code>的话说明安装成功了</li>
<li>centos6和7需要关闭防火墙，使用命令<code>systemctl stop firewalld</code>以及<code>systemctl disable firewalld</code>关闭</li>
</ol>
<p>至此在VPS上的配置就已经完成了</p>
<p><strong>2019.06.30.emmm这个周出去浪了，回来再更</strong></p>
<p><strong>2019.07.11本咕咕咕回来了，继续更，顺带说一句厦门是真的热</strong></p>
<h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>在Xshell中连接你的VPS,使用命令<code>v2ray url</code>生成VMess链接并复制，一会要用</p>
<p>V2Ray官方版本是没有GUI界面的，一般用户用起来有点蛋疼，好在各个平台都有支持V2Ray的客户端</p>
<h2 id="Windows客户端"><a href="#Windows客户端" class="headerlink" title="Windows客户端"></a>Windows客户端</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Windows平台使用的客户端是V2RayN<br>在安装客户端之前需要先下载V2Ray并解压，然后再下载V2RayN的压缩包并解压到相同的文件夹,下面是下载链接</p>
<a class="btn" href="https://github.com/v2ray/v2ray-core/releases">V2Ray下载</a> <a class="btn" href="https://github.com/2dust/v2rayN/releases">V2RayN下载</a>

<p>V2Ray选择<code>v2ray-windows-64.zip</code>，V2RayN选择<code>v2rayN.zip</code><br>为了方便使用可以将文件夹内的<code>V2RayN.exe</code>右键发送到桌面快捷方式，以后启动时双击打开即可</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>首先复制刚才的VMess链接，然后打开<code>V2RayN.exe</code>，点击顶栏<code>服务器</code>打开下拉菜单，选择<code>从剪贴板导入批量URL</code>即可<br>如果有多个服务器建议修改别名<br>为了节省流量我们需要开启PAC，因为在全局模式下你的所有流量都会通过你的服务器收发，而PAC则会检查你要访问的网站是否在它的规则当中，如果在则通过代理服务器连接，不在的话就会绕过代理服务器直接连接，步骤如下：<br>首先在任务栏右下角找到V2RayN的并右键，选择<code>启用Http代理</code>并将<code>Http代理模式</code>设置为<code>开启Http代理，并自动配置代理服务器(全局模式)</code>；然后打开v2RayN，点击顶栏<code>检查更新</code>打开下拉菜单，选择<code>检查更新PAC</code>，等待更新完成后将<code>Http代理模式</code>设置为<code>开启PAC，并自动配置PAC(PAC模式)</code></p>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>更新可以通过V2RayN内的<code>检查更新</code>选项进行更新，<code>V2RayCore</code>和<code>V2RayN</code>建议保持最新版本，PAC大约过一两个月更新一次就可以</p>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li>emmm这是个玄学问题，不确定是win10的锅还是V2Ray的问题，有时候会出现没有响应的情况，打开404网站的时候V2RayN的信息栏没有任何反应，看起来像被墙了一样，此时需要使用网络重置解决问题，步骤为：在win10的设置中选择<code>网络和Internet</code>，在<code>状态</code>中找到<code>网络重置</code>选项，过几秒会提醒你要在几分钟内注销，此时直接手动重启即可，重启后再启动V2RayN就解决了</li>
<li>有时候所有的网站都会打不开，原因是退出V2Ray的时候仍然处在全局模式，解决方案为打开V2RayN将<code>Http代理模式</code>切换为<code>PAC模式</code></li>
</ol>
<h2 id="iOS客户端"><a href="#iOS客户端" class="headerlink" title="iOS客户端"></a>iOS客户端</h2><p>iOS客户端有<code>Kitsunebi</code>、<code>Shadowrocket</code>、<code>Pepi</code>、<code>Kitsunebi Lite</code>等，但是这些软件在国区已经全部下架了，解决方案有:</p>
<ul>
<li>注册美区等国外区的Apple ID</li>
<li>通过淘宝购买已经购买过上述软件的Apple ID<br>这里我以<code>Kitsunebi Lite</code>为例，打开软件后点击右上角的<code>+</code>，选择URL导入，粘贴Vmess链接，点击<code>YES</code>，然后回到主页将模式调为自动，点击上方的开关即可使用</li>
</ul>
<h2 id="Android客户端"><a href="#Android客户端" class="headerlink" title="Android客户端"></a>Android客户端</h2><p>安卓端主要是<a href="https://play.google.com/store/apps/details?id=com.v2ray.ang">V2RayNG</a>和<a href="https://play.google.com/store/apps/details?id=com.github.dawndiy.bifrostv">BifrostV</a>两款软件，这里的链接是Google Play的，另外V2RayNG还有<a href="https://github.com/2dust/v2rayNG/releases">Github链接</a>，选择<code>app-universal-release.apk</code>下载使用<br>使用步骤大同小异，都是点击右上角的<code>+</code>并导入Vmess链接，然后点击右下角按钮即可使用</p>
<h2 id="MacOS客户端"><a href="#MacOS客户端" class="headerlink" title="MacOS客户端"></a>MacOS客户端</h2><p>MacOS可以使用<a href="https://github.com/insisttech/v2rayX-copy/releases">V2RayX</a></p>
<ol>
<li>点击上面的链接并下载<code>V2RayX.app-1.2.0.zip</code>，名称不一定完全一样，然后解压，并将<code>V2RayX.app</code>复制到<code>程序</code>文件夹</li>
<li>第一次打开时会出现需要安全认证的信息，此时你需要点完所有系统弹出的窗口里的<code>是</code>、<code>打开</code>、<code>确认</code>等选项，然后打开<code>系统偏好设置</code>里的<code>安全性与隐私</code>，你就会看见灰色的一条，大概意思为“V2RayX，未被安全认证，是否打开”，后面有一个<code>仍要打开</code>的选项，点开就好。然后你就会在状态栏看到 V2RayX 图标</li>
<li>点击图标然后单击<code>Configure</code>，TCP模式在这个界面可以完成配置，按照VPS端的参数填写；mKCP和WebSocket+TLS需要点击页面下方的<code>transport settings</code>进入高级设置</li>
<li>配置完成后点击<code>OK</code>，此时会弹窗提醒，点击<code>Yes, save!</code></li>
<li>点击V2RayX的图标，可以在<code>Global Mode</code>全局模式和<code>PAC Mode</code>PAC模式之间调整</li>
<li>点击<code>Start V2Ray</code>即可使用</li>
</ol>
<h2 id="Linux客户端"><a href="#Linux客户端" class="headerlink" title="Linux客户端"></a>Linux客户端</h2><p>用大佬的话说，<em>你都用Linux了还要什么客户端</em>，其实是Linux真的没有GUI客户端2333，所以只能节省一些麻烦。。。。。。</p>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><ol>
<li>首先还是去V2Ray的<a href="https://github.com/v2ray/v2ray-core/releases/">Github</a>下载安装包，Intel架构的根据系统选择<code>V2Ray-linux-64</code>或者<code>V2Ray-linux-32</code>，ARM架构的选择<code>V2Ray-linux-arm64</code>或<code>V2Ray-linux-arm</code></li>
<li>下载完成后解压</li>
<li>打开解压后的文件夹，删除其中的<code>vpoint_vmess_freedom.json</code>文件，然后自己创建一个<code>config.json</code>文件，建议直接通过Windows客户端导出这个文件，在<code>V2Ray</code>中点击服务器下拉菜单，选择<code>导出所选服务器为客户端配置</code></li>
<li>在文件夹打开终端并执行命令<code>sudo ./v2ray</code>即可开启</li>
</ol>
<h3 id="配置PAC"><a href="#配置PAC" class="headerlink" title="配置PAC"></a>配置PAC</h3><p>此时的V2Ray还不能够愉快的使用，我们还需要给它配置PAC</p>
<ol>
<li>首先安装<code>pip</code>工具，执行命令<code>apt install python-pip</code>，完成后使用命令<code>pip -V</code>检测是否安装成功，成功后会返回pip的版本</li>
<li>执行命令<code>pip install genpac</code>安装<code>genpac</code>，安装成功后会返回<code>Successfully installed genpac-xxx</code></li>
<li>执行命令<code>genpac --format=pac -o auto.pac --pac-proxy=&quot;SOCKS5 127.0.0.1:1080</code>，如果没有输出说明成功，否则按照返回值修改</li>
<li>打开系统设置，以Fedora为例，点击<code>网络</code>，打开<code>Network Proxy</code>的菜单并将其设置为自动</li>
<li>Google下载一个PAC文件</li>
<li>在下方的<code>配置URL</code>栏填入你的PAC文件的绝对路径，格式为<code>file://路径</code></li>
</ol>
<h3 id="设置桌面图标"><a href="#设置桌面图标" class="headerlink" title="设置桌面图标"></a>设置桌面图标</h3><p>每次输入命令启动还是很麻烦的，但是我们可以在桌面设置一个快捷方式或者加入程序列表（滑稽）<br>在文件夹中新建一个名为<code>v2ray.desktop</code>的文件，粘贴下列代码，然后复制到<code>/usr/share/application</code>文件夹下，此过程需要root权限</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line"></span><br><span class="line">Name=V2Ray</span><br><span class="line"></span><br><span class="line">GenericName=V2Ray Client</span><br><span class="line"></span><br><span class="line">Comment=A platform <span class="keyword">for</span> building proxies to bypass network restrictions.</span><br><span class="line"></span><br><span class="line">Exec=/到你文件夹的路径/v2ray --config=/到你文件夹的路径/config.json</span><br><span class="line"></span><br><span class="line">Icon=/到自定义图标图片的路径</span><br><span class="line"></span><br><span class="line">Terminal=true</span><br><span class="line"></span><br><span class="line"><span class="built_in">Type</span>=Application</span><br><span class="line"></span><br><span class="line">Categories=Network;Internet;</span><br></pre></td></tr></table></figure>
<p>然后把文件的权限修改为<code>允许文件作为程序执行</code><br>图标文件可以去大佬的<a href="https://pan.baidu.com/s/1yf4Rkmuy7h65z8XC77SAdg#list/path=%2F">百度网盘</a>下载，提取码<code>hc82</code></p>
<p>然后你就可以愉快的使用V2Ray了（滑稽）</p>
<h1 id="使用Cloudflare-CDN中转（选配）"><a href="#使用Cloudflare-CDN中转（选配）" class="headerlink" title="使用Cloudflare CDN中转（选配）"></a>使用Cloudflare CDN中转（选配）</h1><p>目前GFW主要通过封禁IP的方式墙掉你的VPS，而对应的解决方案便是通过Cloudflare中转，墙不知道你的IP还怎么封呢（滑稽），另外这个方法的另一个功能就是恢复被墙IP的访问（滑稽+1）<br>虽然CDN中转能够有效防止IP被墙，但是步骤比较繁琐，延迟也会提高，还需要另外购买一个域名。不想折腾直接跳过就好了，我第一次配也没有用这个，直接用的mKCP，用了快一年才被墙掉，通过这个方法恢复了被墙的IP</p>
<h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>域名推荐购买<a href="https://sg.godaddy.com/zh">Godaddy</a>家的，这是国外最大的域名供应商，而且不需要实名认证，国内的阿里云和腾讯云也不是不能用2333</p>
<ol>
<li>首先打开<a href="https://sg.godaddy.com/zh">Godaddy</a>进行注册，邮箱用户名密码不多说</li>
<li>注册完成后回到首页搜索自己想要的域名，点击<code>加入购物车</code>,然后点击上面的<code>进入购物车</code></li>
<li>跳转的页面会提示你购买隐私服务和Linux主机，全部选不用然后点击下面的<code>进入购物车</code></li>
<li>结算信息页面除了电话号码都随便写，把右边的<code>2年</code>改成<code>1年</code>，2年的价格比1年贵很多，选1年然后到期再换别的</li>
<li>付款过程不多说</li>
</ol>
<h2 id="Cloudflare-CDN配置"><a href="#Cloudflare-CDN配置" class="headerlink" title="Cloudflare CDN配置"></a>Cloudflare CDN配置</h2><p>Cloudflare CDN就是防止我们IP被墙的关键，而且它提供免费的CDN服务</p>
<ol>
<li>邮箱密码注册不多说</li>
<li>注册完成后点击蓝色的<code>+Add Site</code>按钮</li>
<li>输入刚才在Godaddy上购买的域名，然后点击下面的<code>Add Site</code>按钮</li>
<li>点击<code>Next</code>按钮</li>
<li>套餐选择<code>Free</code>那个，然后点击<code>Confirm plan</code>，在弹出的窗口再点击一次<code>Confirm</code></li>
<li>找到DNS页面，可以看到Cloudflare生成的两个记录。点击蓝色按钮<code>Add Record</code>，第一个空选择<code>A</code>；第二个空填写域名前缀，如<code>test</code>等，生成二级域名；第三个空填写你VPS的IP；第四个不用管。</li>
<li>点击<code>Add Record</code></li>
<li>点击<code>Status</code>下面的橙色云朵，把它变成<strong>灰色</strong>，即DNS Only，然后点击<code>Continue</code></li>
<li>这里会提示你修改你的域名服务器，页面上提供了两个域名服务器地址，需要我们回到购买域名的网站进行修改</li>
<li>打开<a href="https://sg.godaddy.com/zh">Godaddy</a>，在右上角的用户名那里点击打开下拉菜单，然后点击<code>我的产品</code></li>
<li>点击你的域名右侧的<code>DNS</code></li>
<li>在跳转的页面上点击蓝色的<code>更改</code>按钮</li>
<li>选择自定义，如果有别的域名服务器需要先删掉，然后把Cloudflare提供的两个域名服务器粘贴进去，点击保存</li>
<li>回到Cloudflare页面并继续点击<code>continue</code>，如果提示你还没有修改域名服务器的话就等待一段时间（几分钟到几个小时）。等到域名服务器生效就好了，生效的话Cloudflare会发邮件给你；或者页面提示<code>Great news! Cloudflare is now protecting your site</code>就说明可以使用了</li>
</ol>
<h2 id="V2Ray设置"><a href="#V2Ray设置" class="headerlink" title="V2Ray设置"></a>V2Ray设置</h2><p>先前我们用的是mKCP协议，现在需要换成<code>WebSocket+TLS</code></p>
<ol>
<li>使用Xshell连接VPS</li>
<li>输入命令<code>v2ray config</code>并回车</li>
<li>修改传输协议为<code>WebSocket+TLS</code></li>
<li>输入你的二级域名并回车，如<code>test.xxxxx.xxx</code></li>
<li>确认域名正确并回车</li>
<li>如果域名解析错误会报错提示并退出脚本</li>
<li><code>是否自动配置TLS</code>选择Y回车</li>
<li>其它选项默认即可</li>
<li>输入<code>v2ray status</code>查看V2Ray状态,确保V2Ray和Caddy都是正在运行状态</li>
<li>输入<code>v2ray url</code>生成VMess链接并复制</li>
<li>返回<code>Cloudflare</code>域名管理界面，点击<code>Crypto</code>选项，将SSL后的选项设置为<code>Full</code>并确认<code>Universal SSL Status</code>状态为<code>Active Certificate</code>，不是的话可能要稍微等一会，等待证书申请成功（脸黑的话需要等很长时间，但是不会超过24小时，一般很快）</li>
<li>打开<code>Cloudflare</code>的<code>DNS</code>选项，点击<code>Status</code>下面的灰色云朵，把它恢复为橙色</li>
<li>把刚才复制的<code>VMess</code>连接重新导入你的客户端就完成了</li>
</ol>
<h1 id="常用命令汇总"><a href="#常用命令汇总" class="headerlink" title="常用命令汇总"></a>常用命令汇总</h1><ul>
<li>启动V2Ray——<code>v2ray start</code></li>
<li>关闭V2Ray——<code>v2ray stop</code></li>
<li>重启V2Ray——<code>v2ray restart</code></li>
<li>更新V2Ray——<code>v2ray update</code></li>
<li>更新V2Ray管理脚本——<code>v2ray update</code></li>
<li>查看V2Ray状态——<code>v2ray status</code></li>
<li>查看V2Ray配置——<code>v2ray inf</code></li>
<li>修改V2Ray配置——<code>v2ray config</code></li>
<li>生成配置文件链接——<code>v2ray link</code></li>
<li>生成配置信息链接——<code>v2ray infolink</code></li>
<li>生成配置二维码链接——<code>v2ray qr</code></li>
<li>查看V2Ray日志——<code>v2ray log</code></li>
<li>生成VMess链接——<code>v2ray url</code></li>
</ul>
<p><strong>技术无罪</strong></p>
<blockquote>
<p>参考：<a href="https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B">233boy</a>、<a href="https://www.i5seo.com/">长沙SEO霜天博客</a>、<a href="https://blog.sprov.xyz/2019/03/11/cdn-v2ray-safe-proxy/">sprov</a>、<a href="https://octopuspalm.top/2018/08/18/Linux%20%E7%B3%BB%E7%BB%9F%E4%B8%8Bv2ray%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8/">THE WORLD OF ABCDLSJ</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Free Internet</category>
      </categories>
      <tags>
        <tag>V2Ray</tag>
      </tags>
  </entry>
  <entry>
    <title>WSA 折腾日志</title>
    <url>/WSA-%E6%8A%98%E8%85%BE%E6%97%A5%E5%BF%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">记录WSA的安装、联网、设置代理以及安装应用的折腾过程</blockquote>

<span id="more"></span>

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><div class="note warning"><p>记得去BIOS开启CPU虚拟化</p>
</div>

<h2 id="Windows设置调整"><a href="#Windows设置调整" class="headerlink" title="Windows设置调整"></a>Windows设置调整</h2><p>打开<code>设置</code>-<code>应用</code>-<code>可选功能</code>-<code>更多Windows功能</code>，勾选<code>虚拟机平台</code>，等待安装并重启<br><img data-src="https://s2.loli.net/2022/06/02/cdf8ypRustXqS3v.png" alt="wsa2.png"></p>
<p>然后在<code>设置</code>-<code>隐私和安全性</code>-<code>开发者选项</code>-<code>开发人员模式</code>中打开开关<br><img data-src="https://s2.loli.net/2022/06/02/P45KeiDczAdgbXh.png" alt="wsa3.png"></p>
<h2 id="安装adb"><a href="#安装adb" class="headerlink" title="安装adb"></a>安装adb</h2><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>adb 下载</p><p>下载适用于 Windows 的 SDK Platform-Tools</p>
<a href="https://developer.android.com/studio/releases/platform-tools"></a>
</div></div>

<ol>
<li>下载完成后把安装包扔到固定的位置再解压，因为下面需要设置环境变量</li>
<li><code>Win</code> + <code>S</code>搜索并打开<code>编辑系统环境变量</code></li>
<li>在系统变量中新建变量<code>adb</code>，变量值为刚才解压的文件夹路径，如<code>D:\Program Files\platform-tools</code></li>
<li>双击打开系统变量中名为<code>Path</code>的变量，然后新建变量<code>%adb%</code></li>
<li>确定三连</li>
<li>在终端中输入<code>adb version</code>查看是否设置成功</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/06/02/NatckrIXWZC5Oxh.png" alt="wsa4.png"></p>
<h2 id="安装WSA-Toolbox"><a href="#安装WSA-Toolbox" class="headerlink" title="安装WSA Toolbox"></a>安装WSA Toolbox</h2><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>WSA Toolbox</p><p>Provides utilities & tools for WSA</p>
<a href="https://apps.microsoft.com/store/detail/wsa-toolbox/9PPSP2MKVTGT?hl=en-us&gl=US"></a>
</div></div>

<p>这个工具在国区微软应用商店被下架了，只能通过上面链接安装了。后续会需要它来打开WSA的Android系统设置。</p>
<hr>
<h1 id="安装WSA"><a href="#安装WSA" class="headerlink" title="安装WSA"></a>安装WSA</h1><p>这里我使用的是集成了root、Magisk与Google Play的整合包，省下一些麻烦。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Magisk</p><p>LSPosed Magisk on WSA (with Google Apps)</p>
<a href="https://github.com/LSPosed/MagiskOnWSA"></a>
</div></div>

<ol>
<li>首先fork一份代码到自己的仓库，然后在fork后的仓库中点击左上角的<code>Actions</code>。</li>
<li>在<code>Workflow</code>中点击<code>Build WSA</code></li>
<li>点击右侧的<code>Run workflow</code>，在下拉菜单中选择<code>Build arch</code>为<code>x64</code>，选择<code>Variants of gapps</code>为<code>pico</code></li>
<li>最后点击绿色的<code>Run workflow</code>，等待build操作完成，一般需要等待五六分钟。<br><img data-src="https://s2.loli.net/2022/06/02/6SdWlJb9LfIa4cV.png" alt="wsa1.png"></li>
<li>下载build完成的包，注意不要使用多线程下载器</li>
<li>解压</li>
<li>右键单击<code>Install.ps1</code>，选择<code>Run with PowerShell</code>，等待安装完成，安装完成后会打开Play商店</li>
<li>打开<code>基于Android的Windows子系统设置</code>，打开<code>开发人员模式</code>，记录下出现的ip，一般都是<code>127.0.0.1:58526</code><br><img data-src="https://s2.loli.net/2022/06/02/uZAeSJEXPFKyGx3.png" alt="wsa9.png"></li>
</ol>
<hr>
<h1 id="联网的坑"><a href="#联网的坑" class="headerlink" title="联网的坑"></a>联网的坑</h1><p>在没有设置代理的情况下Play商店是连不上的，但是可以通过亚马逊应用商店来判断是否有网络连接，正常的话请跳过本章，本章专为像我一样的大冤种准备。<br>我在安装完WSA后怎么也连不上网，一直提示VritWifi连接受限。试了很多种方法，下面是Google大总结，不妨挨个尝试一下。</p>
<h2 id="更改防火墙规则"><a href="#更改防火墙规则" class="headerlink" title="更改防火墙规则"></a>更改防火墙规则</h2><p>以管理员身份运行终端，执行命令添加防火墙规则</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">New-NetFirewallRule</span> <span class="literal">-DisplayName</span> <span class="string">&quot;WSL&quot;</span> <span class="literal">-Direction</span> Inbound <span class="literal">-InterfaceAlias</span> <span class="string">&quot;vEthernet (WSL)&quot;</span> <span class="literal">-Action</span> Allow</span><br></pre></td></tr></table></figure>
<p>然而这个对我无效。。。</p>
<h2 id="更换DNS"><a href="#更换DNS" class="headerlink" title="更换DNS"></a>更换DNS</h2><p>更改WSA默认的DNS设置，然而对我依然无效</p>
<ol>
<li>打开前面安装的<code>WSA Toolbox</code>，点击中间的<code>Android设置</code></li>
<li>打开<code>网络和互联网</code>-<code>互联网</code>-<code>WLAN</code>-<code>VritWifi</code></li>
<li>点击右上角的设置</li>
<li>把<code>DNS 1</code>更换为<code>8.8.4.4</code>或者<code>114.114.115.115</code>等常用DNS</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/06/02/MGDFkbQCelVUPgu.png" alt="wsa5.png"></p>
<h2 id="adb修改captive-portal"><a href="#adb修改captive-portal" class="headerlink" title="adb修改captive_portal"></a>adb修改captive_portal</h2><p>事实证明这个玩意儿纯属掩耳盗铃，打开终端，执行</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb connect <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">58526</span></span><br><span class="line">adb shell settings put global captive_portal_https_url https://connect.rom.miui.com/generate_204</span><br><span class="line">adb shell settings put global captive_portal_http_url http://connect.rom.miui.com/generate_204</span><br></pre></td></tr></table></figure>
<p>这个操作的唯一作用是在能联网但是仍然提示网络连接受限的情况下去掉烦人的提示。。。</p>
<blockquote>
<p>Captive portal（强制门户）是在授予新连接至Wi-Fi的用户更广的网络（互联网）访问权限之前在其网页浏览器呈现中的网页，其常用于呈现可能需要认证或接受最终用户许可协议&#x2F;可接受使用策略的着陆页或登录页。强制门户应用于方方面面的移动宽带服务中（如有线连接、计费Wi-Fi及家庭热点），同时也可提供对企业或家庭有线网络（公寓、酒店和商业中心的网络）的访问权限。</p>
</blockquote>
<p>因为WSA默认用谷歌的Captive Portal来检测是否联网，但是国内肯定连不上，所以就会提示网络受限，只要把检测服务器换成国内的就行了，这里白嫖小米的嘿嘿，还可以嫖苹果、华为和vivo的，把链接换了就行</p>
<ul>
<li>苹果 <a href="http://www.apple.com/library/test/success.html">http://www.apple.com/library/test/success.html</a></li>
<li>华为 <a href="http://connectivitycheck.platform.hicloud.com/generate_204">http://connectivitycheck.platform.hicloud.com/generate_204</a></li>
<li>vivo <a href="http://wifi.vivo.com.cn/generate_204">http://wifi.vivo.com.cn/generate_204</a></li>
</ul>
<h2 id="USB网络共享"><a href="#USB网络共享" class="headerlink" title="USB网络共享"></a>USB网络共享</h2><p>这个方法算是曲线救国，实在没办法的话可以用，但是重启之后可能需要重新设置</p>
<ol>
<li>打开前面安装的<code>WSA Toolbox</code>，点击中间的<code>Android设置</code></li>
<li>打开<code>系统</code>-<code>开发者选型</code></li>
<li>打开<code>使用开发者选型</code>开关</li>
<li>下滑，找到<code>网络</code>-<code>默认USB设置</code></li>
<li>设置为<code>USB网络共享</code></li>
</ol>
<h2 id="开启Hyper-V功能"><a href="#开启Hyper-V功能" class="headerlink" title="开启Hyper-V功能"></a>开启Hyper-V功能</h2><div class="note primary"><p>搜到了知乎<a href="https://zhuanlan.zhihu.com/p/431557897">希尔顿</a>的文章，发现他额外开启了Hyper-V功能，试了一下，没想到真能行了🤣。毕竟按照官方文档的说法是不需要开启Hyper-V的</p>
</div>

<ol>
<li>打开<code>设置</code>-<code>应用</code>-<code>可选功能</code>-<code>更多Windows功能</code></li>
<li>展开<code>Hyper-V</code></li>
<li>勾选<code>Hyper-V平台</code></li>
<li>等待安装完成</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/06/02/HJIWBZVYlC3pT7s.png" alt="wsa6.png"></p>
<p>然后就神奇的连上网了，原理我到现在也没搞懂🤯</p>
<hr>
<h1 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h1><h2 id="正常操作"><a href="#正常操作" class="headerlink" title="正常操作"></a>正常操作</h2><p>我用的客户端是V2rayN。如果用Clash的话直接谷歌就成，教程很多。</p>
<ol>
<li>打开V2rayN，在<code>设置</code>-<code>参数设置</code>-<code>基础设置</code>中勾选<code>允许来自局域网的连接</code></li>
<li>记下最下面显示的局域网http端口号，默认是<code>10811</code><br><img data-src="https://s2.loli.net/2022/06/02/CmPInWYB536VjwS.png" alt="wsa7.png"></li>
<li>在终端中运行下面的命令，注意把<code>127.0.0.1:58526</code>替换成在<code>基于Android的Windows子系统设置</code>记下的ip，一般都是这个<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb connect <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">58526</span></span><br></pre></td></tr></table></figure></li>
<li>在终端输入<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure></li>
<li>找到目前使用的网卡的ip地址，例如我的就是192.168.50.70<br><img data-src="https://s2.loli.net/2022/06/02/Vh3JBqGuFPoNMd9.png" alt="wsa8.png"></li>
<li>在终端运行下面的命令，注意把ip换成自己的网卡的<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb shell settings put global http_proxy <span class="number">192.168</span>.<span class="number">50.70</span>:<span class="number">10811</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>如果想要取消代理的话用下面的命令</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb shell settings put global http_proxy :<span class="number">0</span></span><br><span class="line">adb shell settings delete global http_proxy</span><br></pre></td></tr></table></figure>

<h2 id="曲线救国"><a href="#曲线救国" class="headerlink" title="曲线救国"></a>曲线救国</h2><p>如果上面的方法不行的话，可以在WSA中单独安装设置代理软件，如V2rayNG</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>V2rayNG</p><p>A V2Ray client for Android</p>
<a href="https://github.com/2dust/v2rayNG/releases"></a>
</div></div>

<hr>
<h1 id="旁加载安装apk"><a href="#旁加载安装apk" class="headerlink" title="旁加载安装apk"></a>旁加载安装apk</h1><p>如果没有代理可用的话，自然也就不能通过Play商店安装应用了，不过好在可以用旁加载的方式安装应用。</p>
<ol>
<li>在终端中运行下面的命令，注意把<code>127.0.0.1:58526</code>替换成在<code>基于Android的Windows子系统设置</code>记下的ip，一般都是这个<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb connect <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">58526</span></span><br></pre></td></tr></table></figure></li>
<li>cd到apk所在的文件夹</li>
<li>执行<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">adb install apk名</span><br></pre></td></tr></table></figure></li>
</ol>
<p>国内的应用商店我用的是酷安</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>酷安APP</p><p>发现科技新生活</p>
<a href="https://www.coolapk.com/"></a>
</div></div>]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>WSA</tag>
        <tag>Android</tag>
        <tag>V2ray</tag>
        <tag>Google Play</tag>
        <tag>Magisk</tag>
        <tag>adb</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 右键菜单改回 Windows 10 样式</title>
    <url>/Windows-11-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%94%B9%E5%9B%9E-Windows-10-%E6%A0%B7%E5%BC%8F.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">巨硬迷惑操作之两级右键菜单，真该把提出这个需求的产品经理祭天，好在还能通过祖传注册表修改大法改回去</blockquote>

<span id="more"></span>

<div class="note warning"><p>前排提示，修改注册表有风险，请谨慎操作</p></div>

<h1 id="命令行修改"><a href="#命令行修改" class="headerlink" title="命令行修改"></a>命令行修改</h1><p>下面是命令行大法，按下<code>WIN</code>+<code>R</code>，输入<code>cmd</code>后回车，运行下面的指令<br><img data-src="https://s2.loli.net/2022/05/26/U1tImjKdg95kcrJ.png" alt="wt00.png"></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">reg add HKCU\Software\Classes\CLSID\&#123;<span class="number">86</span>ca1aa0-<span class="number">34</span>aa-<span class="number">4</span>e8b-a509-<span class="number">50</span>c905bae2a2&#125;\InprocServer32 /f /ve</span><br></pre></td></tr></table></figure>

<ul>
<li><code>/f</code>表示不弹出确认窗口，静默执行添加注册表任务</li>
<li><code>/ve</code>表示添加到注册表中的项为空值<code>null</code></li>
</ul>
<p>按下<code>CTRL</code>+<code>SHIFT</code>+<code>ESC</code>打开任务管理器，找到<code>Windows资源管理器</code>，点击右下角<code>重新启动</code>就完事了<br><img data-src="https://s2.loli.net/2022/05/26/SUImc6zHprZdnD8.png" alt="wt03.png"></p>
<h1 id="注册表编辑器手动修改"><a href="#注册表编辑器手动修改" class="headerlink" title="注册表编辑器手动修改"></a>注册表编辑器手动修改</h1><p>按下<code>WIN</code>+<code>R</code>，输入<code>regedit</code>后回车，打开注册表编辑器<br><img data-src="https://s2.loli.net/2022/05/26/ESuqQDpA7wjNX3U.png" alt="wt07.png"></p>
<p>定位到<code>HKEY_CURRENT_USER\SOFTWARE\CLASSES\CLSID</code>，右键单击CLSID，选择<code>新建</code>-<code>项</code>，命名为<code>&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;</code><br><img data-src="https://s2.loli.net/2022/05/26/OUEzy2KhC19XDxa.png" alt="wt01.png"></p>
<p>右键单击新建的项，选择<code>新建</code>-<code>项</code>，命名为<code>InprocServer32</code><br><img data-src="https://s2.loli.net/2022/05/26/QDtdvyes8mhxHJz.png" alt="wt02.png"></p>
<p>双击打开<code>InprocServer32</code>右侧的<code>默认</code>，不需要填写任何东西，直接点击<code>确定</code>，然后关闭注册表编辑器，并重启Windows资源管理器<br><img data-src="https://s2.loli.net/2022/05/26/GbFELW5PlveiSCh.png" alt="wt05.png"></p>
<p>然后就能见到亲切的经典Window10右键菜单咯<br><img data-src="https://s2.loli.net/2022/05/26/ZxVlu7rLwDY3sam.png" alt="wt06.png"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Win10</tag>
        <tag>右键菜单</tag>
        <tag>注册表</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal 美化</title>
    <url>/Windows-Terminal-%E7%BE%8E%E5%8C%96.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">一个每天都要面对的东西，不好看会影响心情的🐶。（终于要把欠下的博文写完了，腹泻式更新结束咯）</blockquote>

<span id="more"></span>

<div class="note primary"><p>搜到的很多方法已经过时了，最后还是老老实实跟着<a class="btn" href="https://ohmyposh.dev/docs/"><i class="fa fa-blog fa-fw"></i>Oh My Posh 官方文档</a>来配置了</p></div>

<h1 id="更新PowerShell"><a href="#更新PowerShell" class="headerlink" title="更新PowerShell"></a>更新PowerShell</h1><p>首先使用<code>$psversiontable</code>命令查询PowerShell版本，系统自带的是5.1版本，现在最新的版本是7.2，两个版本相互独立，可以同时安装，这里我安装了新版本。</p>
<div class="note info"><p><a class="btn" href="https://github.com/PowerShell/PowerShell/releases/download/v7.2.4/PowerShell-7.2.4-win-x64.msi"><i class="fa fa-download fa-fw"></i>PowerShell-7.2.4-win-x64.msi</a></p></div>

<p>安装后打开<code>Windows Terminal</code>，在<code>设置</code>里将<code>默认配置文件</code>修改为<code>PowerShell</code>(系统自带的版本叫Windows PowerShell)<br><img data-src="https://s2.loli.net/2022/05/27/H3hMnolzSsZktxc.png" alt="ps1.png"></p>
<h1 id="更换字体"><a href="#更换字体" class="headerlink" title="更换字体"></a>更换字体</h1><p>选择字体的时候要选用含有<code>Nerd fonts</code>的字体，否则一些图标会显示为乱码。字体我使用了<code>sarasa-mono-sc-nerd-font</code>，即<code>附加了Nerd字体的简体等距更纱黑体</code>。下载链接如下，我下载的是<code>sarasa-mono-sc-nerd-font.zip</code></p>
<div class="note info"><p><a class="btn" href="https://github.com/jonz94/Sarasa-Gothic-Nerd-Fonts/releases"><i class="fa fa-download fa-fw"></i>Sarasa Gothic Nerd Fonts</a></p></div>

<div class="note default"><p>Nerd Fonts 是一个使用大量字体图标来解决程序员在开发过程中缺少合适字体的问题的项目。它可以从流行的字体图标库中将大量外部字体引入待开发的项目中，它支持的字体图标库包括 Font Awesome, Devicons, Octicons等。</p></div>

<div class="note default"><p>等距更纱黑体是由Iosevka和思源黑体组合而成的免费开源字体，适合在终端中使用</p></div>

<h2 id="字体后缀"><a href="#字体后缀" class="headerlink" title="字体后缀"></a>字体后缀</h2><div class="note primary"><p>引用自<a class="btn" href="https://forum.ubuntu.org.cn/viewtopic.php?t=492571"><i class="fa fa-blog fa-fw"></i>zrqlx126</a>的文章，特此感谢</p></div>

<p>下载后解压并安装需要的字体，字体后缀的意思如下</p>
<h3 id="附加术语"><a href="#附加术语" class="headerlink" title="附加术语"></a>附加术语</h3><ul>
<li><code>unhinted</code>－无微调字体</li>
<li><code>ttf</code>－TrueType字体文件格式</li>
<li><code>ttc</code>－TrueType字体集文件格式（更纱黑体按照字重进行分类，合并了相近ttf字体文件）</li>
</ul>
<h3 id="第一个连字符后的名称"><a href="#第一个连字符后的名称" class="headerlink" title="第一个连字符后的名称"></a>第一个连字符后的名称</h3><ul>
<li><code>gothic</code>－引号为全宽</li>
<li><code>ui</code>－引号为窄的</li>
<li><code>mono</code>－破折号为全宽</li>
<li><code>term</code>－破折号为半宽</li>
<li><code>fixed</code>－不连字、且破折号为半宽</li>
</ul>
<h3 id="第二个连字符后的名称"><a href="#第二个连字符后的名称" class="headerlink" title="第二个连字符后的名称"></a>第二个连字符后的名称</h3><ul>
<li><code>cl</code>－古典汉字字形</li>
<li><code>sc</code>－简体汉字字形</li>
<li><code>tc</code>－繁体汉字字形</li>
<li><code>j</code>－日文汉字字形</li>
<li><code>k</code>－韩文汉字字形</li>
<li><code>hc</code>－香港汉字字形</li>
</ul>
<h3 id="第三个连字符后的名称"><a href="#第三个连字符后的名称" class="headerlink" title="第三个连字符后的名称"></a>第三个连字符后的名称</h3><ul>
<li><code>slab</code>－超厚笔划字形</li>
<li><code>regular</code>－常规字体</li>
<li><code>italic</code>－斜体字体</li>
<li><code>extralight</code>－超细字体</li>
<li><code>light</code>－细体字体</li>
<li><code>semibold</code>－半粗字体</li>
<li><code>bold</code>－粗体字体</li>
<li><code>extralightitalic</code>－超细斜体</li>
<li><code>lightitalic</code>－细斜字体</li>
<li><code>semibolditalic</code>－半粗斜体</li>
<li><code>bolditalic</code>－粗斜字体</li>
</ul>
<h3 id="第四个连字符后的名称"><a href="#第四个连字符后的名称" class="headerlink" title="第四个连字符后的名称"></a>第四个连字符后的名称</h3><ul>
<li><code>nerd</code>－附加了Nerd fonts</li>
</ul>
<p>然后在Windows Terminal的<code>设置</code>-<code>配置文件</code>-<code>PowerShell</code>-<code>外观</code>-<code>字体</code>中将字体设置为<code>等距更纱黑体 SC Nerd Font</code>。<br><img data-src="https://s2.loli.net/2022/05/28/vEdZ485tBU6AhIj.png" alt="字体更换.png"></p>
<h1 id="安装美化模块"><a href="#安装美化模块" class="headerlink" title="安装美化模块"></a>安装美化模块</h1><p>使用<code>winget</code>安装美化模块<code>Oh My Posh</code></p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">winget install JanDeDobbeleer.OhMyPosh <span class="literal">-s</span> winget</span><br></pre></td></tr></table></figure>

<p>然后重启Windows Terminal，使用下面的命令打开PowerShell的配置文件</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<p>如果提示找不到配置文件的话用下面的命令创建</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">New-Item</span> –Path <span class="variable">$Profile</span> –<span class="built_in">Type</span> File –Force</span><br></pre></td></tr></table></figure>

<p>粘贴并保存</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<p>执行下面的命令重载配置文件或者重启Windows Terminal就能看到变化了</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">. <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>Oh My Posh提供了很多主题，可以输入下面的命令或者去官网查看主题预览</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-PoshThemes</span></span><br></pre></td></tr></table></figure>
<div class="note info"><p><a class="btn" href="https://ohmyposh.dev/docs/themes"><i class="fa fa-download fa-fw"></i>主题预览</a></p></div>

<p>找到合适的就把下面的命令复制到PowerShell配置文件中</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh <span class="literal">--config</span> <span class="string">&quot;<span class="variable">$env:POSH_THEMES_PATH</span>/主题名称.omp.json&quot;</span> | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<p>例如我选用的<code>takuya</code>主题配置为</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh <span class="literal">--config</span> <span class="string">&quot;<span class="variable">$env:POSH_THEMES_PATH</span>/takuya.omp.json&quot;</span> | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<p>但是我不太喜欢主题的配色，想自己调整一下。</p>
<p>可以使用下面的命令导出当前使用的主题配置文件，我这里导出的路径是<code>~/.pwshtheme.omp.json</code>，也就是<code>C:\Users\用户名\.pwshtheme.omp.json</code>，请根据自己的需要修改。另外，Oh My Posh自带的主题文件在<code>C:\Users\用户名\AppData\Local\Programs\oh-my-posh\themes</code>中，可以参考一下里面配置文件的写法。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> config export <span class="literal">--output</span> ~/.pwshtheme.omp.json</span><br></pre></td></tr></table></figure>

<p>然后打开文件修改配色即可。</p>
<p>如果想要修改更多内容请参照官方文档说明</p>
<div class="note info"><p><a class="btn" href="https://ohmyposh.dev/docs"><i class="fa fa-download fa-fw"></i>主题配置详解</a></p></div>

<p>修改完成后使用<code>notepad $PROFILE</code>打开PowerShell的配置文件，替换掉原来的主题配置，注意路径。</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ oh-my-posh init pwsh --config &quot;~/.pwshtheme.omp.json&quot; | Invoke-Expression</span></span><br><span class="line"><span class="deletion">- oh-my-posh init pwsh --config &quot;$env:POSH_THEMES_PATH/takuya.omp.json&quot; | Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<h1 id="安装Scoop"><a href="#安装Scoop" class="headerlink" title="安装Scoop"></a>安装Scoop</h1><div class="note primary"><p>下面的内容参考了<a class="btn" href="https://p3terx.com/archives/scoop-the-best-windows-package-manager.html"><i class="fa fa-blog fa-fw"></i>P3TERX</a>的文章，特此感谢</p></div>

<p>Scoop 是一个 Win­dows 包管理工具，下面的Neofetch需要使用Scoop来安装</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-WebRequest</span> get.scoop.sh | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<h2 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h2><p>然后为Scoop配置代理，结合自己梯子的端口修改端口号，不然会一直报错</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">scoop config proxy localhost:<span class="number">7890</span></span><br></pre></td></tr></table></figure>

<p>取消代理命令为</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">scoop config <span class="built_in">rm</span> proxy</span><br></pre></td></tr></table></figure>

<h2 id="安装extras-bucket"><a href="#安装extras-bucket" class="headerlink" title="安装extras bucket"></a>安装extras bucket</h2><p>可以为scoop添加额外的bucket。bucket就是一个软件仓库，Scoop安装后会有Main bucket，但是它的收录条件较为严格，所以最好再安装一个<code>extras bucket</code>，extras bucket可以提供更多的软件，甚至有Steam，不过不建议这么干就是咯。</p>
<p>安装命令如下</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">scoop bucket add extras</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul>
<li><code>scoop update</code> —— 更新 scoop 及软件包列表</li>
<li><code>scoop install -k &lt;app&gt;</code> —— 非全局安装（并禁止安装包缓存）</li>
<li><code>scoop install -gk &lt;app&gt;</code> —— 全局安装（并禁止安装包缓存）</li>
<li><code>scoop uninstall -p &lt;app&gt;</code> —— 卸载非全局软件（并删除配置文件）</li>
<li><code>scoop uninstall -gp &lt;app&gt;</code> —— 卸载全局软件（并删除配置文件）</li>
<li><code>scoop update -k *</code> —— 更新所有非全局软件（并禁止安装包缓存）</li>
<li><code>scoop update -gk *</code> —— 更新所有软件（并禁止安装包缓存）</li>
<li><code>scoop cleanup -k *</code> —— 删除所有旧版本非全局软件（并删除软件包缓存）</li>
<li><code>scoop cleanup -gk *</code> —— 删除所有旧版本软件（并删除软件包缓存）</li>
<li><code>scoop cache rm *</code> —— 清除软件包缓存</li>
<li><code>scoop bucket list</code> —— 查看所有bucket</li>
</ul>
<h1 id="辅助模块"><a href="#辅助模块" class="headerlink" title="辅助模块"></a>辅助模块</h1><div class="note primary"><p>下面的内容参考引用了<a class="btn" href="https://asmcn.icopy.site/awesome/awesome-powershell/"><i class="fa fa-blog fa-fw"></i>Awesome PowerShell</a>，特此感谢</p></div>

<h2 id="检查脚本执行策略"><a href="#检查脚本执行策略" class="headerlink" title="检查脚本执行策略"></a>检查脚本执行策略</h2><p>首先检查脚本执行策略设置，共有四种策略</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>Restricted</code>——默认的设置， 不允许任何script运行</li>
<li><code>AllSigned</code>——只能运行经过数字证书签名的script</li>
<li><code>RemoteSigned</code>——运行本地的script不需要数字签名，但是运行从网络上下载的script必须要有数字签名</li>
<li><code>Unrestricted</code>——允许所有的script运行</li>
</ul>
<p>如果不是<code>RemoteSigned</code>或者<code>Unrestricted</code>的话执行下面的命令修改策略，否则一些模块无法安装</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser <span class="literal">-Confirm</span></span><br></pre></td></tr></table></figure>

<h2 id="posh-git"><a href="#posh-git" class="headerlink" title="posh-git"></a>posh-git</h2><p><a href="https://github.com/dahlbyk/posh-git">posh-git</a>是一个PowerShell模块，它将Git和PowerShell整合在一起，可以在PowerShell中显示Git状态的汇总信息。它也为常见的git命令、分支名称、路径等提供<code>Tab</code>补全功能。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">PowerShellGet\<span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Scope</span> CurrentUser <span class="literal">-Force</span></span><br></pre></td></tr></table></figure>

<p>然后执行下面的命令来引入模块</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Add-PoshGitToProfile</span></span><br></pre></td></tr></table></figure>

<p>或者在PowerShell配置文件中添加</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> posh<span class="literal">-git</span></span><br></pre></td></tr></table></figure>

<p>然后重载配置文件或者重启Windows Terminal，输入<code>git fe</code>，然后按下<code>Tab</code>，如果能够自动补全为<code>git fetch</code>就说明成功了</p>
<h2 id="PSReadLine"><a href="#PSReadLine" class="headerlink" title="PSReadLine"></a>PSReadLine</h2><div class="note primary"><p>下面的内容参考引用了微软官方文档<a class="btn" href="https://docs.microsoft.com/zh-cn/powershell/module/psreadline/about/about_psreadline?view=powershell-7.2"><i class="fa fa-blog fa-fw"></i>about_PSReadLine</a></p></div>

<p><a href="https://docs.microsoft.com/zh-cn/powershell/module/psreadline/about/about_psreadline?view=powershell-7.2">PSReadLine 2.1</a> 为 PowerShell 控制台提供了强大的命令行编辑体验。 提供以下功能：</p>
<ul>
<li>命令行的语法着色</li>
<li>语法错误的直观指示</li>
<li>(编辑和历史记录的更好的多行体验)</li>
<li>自定义键绑定</li>
<li>Cmd 和 Emacs 模式</li>
<li>许多配置选项</li>
<li>在 Cmd 模式下，Bash 样式完成 (可选，默认值为 Emacs 模式)</li>
<li>Emacs yank&#x2F;kill 循环</li>
<li>基于 PowerShell 令牌的 “word” 移动和删除</li>
<li>预测 IntelliSense</li>
</ul>
<p>PSReadLine 2.1.0 随 PowerShell 7.2 一起提供，并在所有支持的 PowerShell 版本中受支持。所以就不需要额外安装了。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>首先打开配置文件</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<p>粘贴下面的内容</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> <span class="built_in">History</span> <span class="comment"># 设置预测文本来源为历史记录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Set-PSReadlineKeyHandler</span> <span class="literal">-Key</span> Tab <span class="literal">-Function</span> Complete <span class="comment"># 设置 Tab 键补全</span></span><br><span class="line"><span class="built_in">Set-PSReadLineKeyHandler</span> <span class="literal">-Chord</span> <span class="string">&quot;Ctrl+RightArrow&quot;</span> <span class="literal">-Function</span> ForwardWord <span class="comment"># 设置 ctrl + 向右键逐字补全</span></span><br><span class="line"><span class="built_in">Set-PSReadLineKeyHandler</span> <span class="literal">-Key</span> <span class="string">&quot;Ctrl+z&quot;</span> <span class="literal">-Function</span> Undo <span class="comment"># 设置 Ctrl+z 为撤销</span></span><br><span class="line"><span class="built_in">Set-PSReadLineKeyHandler</span> <span class="literal">-Key</span> UpArrow <span class="literal">-Function</span> HistorySearchBackward <span class="comment"># 设置向上键为后向搜索历史记录</span></span><br><span class="line"><span class="built_in">Set-PSReadLineKeyHandler</span> <span class="literal">-Key</span> DownArrow <span class="literal">-Function</span> HistorySearchForward <span class="comment"># 设置向下键为前向搜索历史纪录</span></span><br></pre></td></tr></table></figure>

<p>保存后重载配置文件或者重启Windows Terminal</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><code>→</code> —— 自动补全联想内容</li>
<li><code>CTRL</code>+<code>→</code> —— 逐字补全联想内容</li>
<li><code>↑</code>和<code>↓</code> —— 搜索历史命令</li>
<li><code>Tab</code> —— 补全</li>
<li><code>CTRL</code>+<code>z</code> —— 撤销</li>
</ul>
<h2 id="ZLocation"><a href="#ZLocation" class="headerlink" title="ZLocation"></a>ZLocation</h2><p><a href="https://github.com/vors/ZLocation">ZLocation</a>是Jump-Location的翻版，它可以基于以前运行的命令数量追踪你最常用的目录。在一个短暂的学习阶段之后，<code>z</code>将带你到最受欢迎的目录，该目录与命令行上给出的所有正则表达式相匹配。你可以使用Tab-Completion&#x2F;Intellisense来挑选不是首选的目录。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用下面的命令一键安装+配置</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> ZLocation <span class="literal">-Scope</span> CurrentUser; <span class="built_in">Import-Module</span> ZLocation; <span class="built_in">Add-Content</span> <span class="literal">-Value</span> <span class="string">&quot;`r`n`r`nImport-Module ZLocation`r`n&quot;</span> <span class="literal">-Encoding</span> utf8 <span class="literal">-Path</span> <span class="variable">$PROFILE</span>.CurrentUserAllHosts</span><br></pre></td></tr></table></figure>

<h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><ul>
<li><code>z</code> —— 显示已知的文件夹以及它们的权重</li>
<li><code>z c:</code> —— 切到C盘</li>
<li><code>z zlo</code> —— 切到ZLocation文件夹（简写）</li>
<li><code>z -l foo</code> —— 查看所有与foo匹配的位置</li>
<li><code>z -</code> —— 跳转到前一个跳转的目录或者初始文件夹</li>
</ul>
<h2 id="The-Fuck"><a href="#The-Fuck" class="headerlink" title="The Fuck"></a>The Fuck</h2><p><a href="https://github.com/nvbn/thefuck">The Fuck</a>是一个很好玩的东西，可以输入<code>fuck</code>来修正前一条报错的指令。</p>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>安装The Fuck前需要安装<code>Python(3.4+)</code>、<code>pip</code>和<code>python-dev</code>。安装命令为</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">pip install thefuck</span><br></pre></td></tr></table></figure>

<h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>打开PowerShell的配置文件</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<p>粘贴下面的内容</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:PYTHONIOENCODING</span>=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line"><span class="built_in">iex</span> <span class="string">&quot;<span class="variable">$</span>(thefuck --alias)&quot;</span></span><br></pre></td></tr></table></figure>

<p>保存后重载配置文件或者重启Windows Terminal</p>
<h3 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h3><p>输入错误的命令后再输入<code>fuck</code>，然后按<code>Enter</code>确认<br><img data-src="https://s2.loli.net/2022/05/28/UbaGKjvyqoBOJ2A.png" alt="thefuxk.png"></p>
<h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">pip3 install thefuck <span class="literal">--upgrade</span></span><br></pre></td></tr></table></figure>

<h2 id="gsudo"><a href="#gsudo" class="headerlink" title="gsudo"></a>gsudo</h2><p><a href="https://github.com/gerardog/gsudo">gsudo</a>是Windows的一个sudo替代品，具有与原始*nix sudo类似的用户体验。它允许在当前控制台窗口或新窗口中以高权限运行命令，或提升当前shell的权限。免得每次需要提权都要重新以管理员身份运行PowerShell，而且重新运行还会丢失之前的记录。</p>
<h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>老方法，winget安装</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">winget install gsudo</span><br></pre></td></tr></table></figure>

<h3 id="减少UAC弹窗"><a href="#减少UAC弹窗" class="headerlink" title="减少UAC弹窗"></a>减少UAC弹窗</h3><p>可以通过启用凭证缓存的方式，来实现gsudo多次提权而只显示一个UAC弹窗。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">gsudo config CacheMode auto</span><br></pre></td></tr></table></figure>

<h1 id="Windows-Terminal设置"><a href="#Windows-Terminal设置" class="headerlink" title="Windows Terminal设置"></a>Windows Terminal设置</h1><p>以下设置可以单独针对<code>PowerShell</code>生效，也可以在<code>设置</code>-<code>配置文件</code>-<code>默认值</code>种调整为默认配置，对所有未进行单独设置的<code>shell</code>生效。</p>
<h2 id="配色方案"><a href="#配色方案" class="headerlink" title="配色方案"></a>配色方案</h2><p>上面调整了<code>PowerShell</code>的主题，但是输入输出的字体配色还是原来的亚子，它们是由Windows Terminal的<code>配色方案</code>控制的。默认有8种配色方案，不过嘛，都挺辣眼睛的。好在可以自己创建配色方案。</p>
<p>打开Windows Terminal的<code>设置</code>，找到<code>配色方案</code>，点击右侧的<code>新增</code>，创建自己的配色方案，然后逐个更改颜色。修改完成后点击<code>保存</code>.<br><img data-src="https://s2.loli.net/2022/05/28/Cgb5uS6xpYVIhyl.png" alt="配色方案.png"></p>
<p>然后去下面的<code>Powershell</code>配置文件，找到<code>外观</code>-<code>配色方案</code>，将它调整为自己刚才创建的配色方案。<br><img data-src="https://s2.loli.net/2022/05/28/3CLDR59KiXU4QsO.png" alt="配色方案2.png"></p>
<h2 id="亚克力效果"><a href="#亚克力效果" class="headerlink" title="亚克力效果"></a>亚克力效果</h2><p>打开Windows Terminal的<code>设置</code>，找到<code>Show acrylic in tab row (requires relaunch)</code>并开启，重启Windows Terminal可以看到顶栏已经开启了亚克力效果。</p>
<p>然后去下面的<code>Powershell</code>配置文件，找到<code>外观</code>-<code>透明度</code>-<code>Enable acrylic</code>并开启，然后可以看到窗口背景也开启了亚克力效果。可以根据自己喜好微调透明度，我调成了85%。</p>
<h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>依然在<code>Powershell</code>配置文件中，找到<code>外观</code>-<code>背景图像</code>-<code>背景图像路径</code>，选择背景图片，然后调整<code>背景图像不透明度</code>。</p>
<h1 id="完工"><a href="#完工" class="headerlink" title="完工"></a>完工</h1><p>折腾了一下午，终于搞完了，附上一张完工图，比原来的红蓝配色好多咯<br><img data-src="https://s2.loli.net/2022/05/28/r2enDMoJpIlZjyt.png" alt="ps完工.png"></p>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Win10</tag>
        <tag>Windows Terminal</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows唤醒后窗口位移至左上角且尺寸缩小解决方案</title>
    <url>/Windows%E5%94%A4%E9%86%92%E5%90%8E%E7%AA%97%E5%8F%A3%E4%BD%8D%E7%A7%BB%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">自从回家换回2k显示器，每次睡眠后唤醒时所有打开的窗口都会跑到左上角，而且尺寸变得只有原来的一半大，诡异的是这些窗口还是最大化状态，而本案的罪魁祸首就是DP的热插拔检测（Hot Plug Detection）</blockquote>

<span id="more"></span>

<h1 id="简单粗暴的解决方案"><a href="#简单粗暴的解决方案" class="headerlink" title="简单粗暴的解决方案"></a>简单粗暴的解决方案</h1><div class="note warning"><p>前排提示，修改注册表有风险，请谨慎操作</p></div>

<p>太长不看版，按下<code>WIN</code>+<code>R</code>，输入<code>regedit</code>后回车，打开注册表编辑器，定位到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers</span><br></pre></td></tr></table></figure>
<p>这里我忘记截图了，用另一条电脑的截图来凑个数，总之你会在下面这三条里看到很多记录，记录的是曾经连接过的显示器的相关设置，如下图所示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Configuration</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Connectivity</span><br><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\ScaleFactors</span><br></pre></td></tr></table></figure>
<p><img data-src="https://s2.loli.net/2022/07/22/amLGDn13OYKI8bB.png" alt="拉来凑数的.png"></p>
<p>把这三个里面的记录全部删掉然后重启，重启后Windows会重新识别现在连接的显示器，如下图所示<br><img data-src="https://s2.loli.net/2022/07/22/mPJEI14NqUavGBz.png" alt="新的.png"></p>
<p>一般到这里问题就解决了，重启下显示器或者睡眠唤醒一下检测一下。如果你的电脑问题依旧的话，尝试关闭显示器开关再打开，然后刷新一下注册表编辑器，可以看到Configuration下面多了一项<code>NOEDIDxxxxxxx</code>，修改<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Configuration\NOEDIDxxxxxxx\00</code>中的<code>PrimSurfSize.cx</code>和<code>PrimSurfSize.cy</code>的值为当前显示器的分辨率，注意这个00下面还有一个00，里面的也要改。<br><img data-src="https://s2.loli.net/2022/07/22/TAzSv2s6kPVFyZl.png" alt="再来一张.png"></p>
<blockquote>
<p>解决方案来源1：<a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-10-reset-external-monitors-settings/b3a53cef-e54f-4410-b09e-6846fa297a3f">Stefan Traistaru</a><br>解决方案来源2：<a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-are-resized-and-moved-after-waking-pc-with/35084e25-1b78-4cff-94e9-e9157334bb2f">atwitsend42</a></p>
</blockquote>
<p>如果想要知道原因的话请继续向下看</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><div class="note primary"><h2 id="热插拔"><a href="#热插拔" class="headerlink" title="热插拔"></a>热插拔</h2><p>大多数现代显示器的一个方便的特点是能够在两者都通电的情况下 “热插拔 “到源设备上，并立即以正确的显示设置开始工作。</p>
<p>这种行为是由三个功能实现的。热插拔检测、显示数据通道（DDC）和扩展显示识别数据（EDID）。</p>
<h2 id="热插拔检测"><a href="#热插拔检测" class="headerlink" title="热插拔检测"></a>热插拔检测</h2><p>将显示器 “热插拔 “到信号源中，意味着在两个设备都通电的情况下进行连接。这与旧技术不同，旧技术通常需要在一个或两个设备断电的情况下进行 “冷插”。热插拔检测或 “HPD “是HDMI、DisplayPort和DVI规格的一项功能。通常情况下，它依赖于连接器中的一个针脚进行接触，从而启动该过程。</p>
<h2 id="DDC"><a href="#DDC" class="headerlink" title="DDC"></a>DDC</h2><p>DDC，即显示数据通道，描述了信号源和显示器用于通信的协议和物理路径。它通常被分配给接口上的一个或多个引脚，并携带EDID。</p>
<p>DisplayPort使用一个多功能的 “AUX通道”，而不是一个专门的DDC，它既是用户数据的媒介（通常是USB），也是传输EDID和其他拓扑信息的手段。</p>
<h2 id="EDID"><a href="#EDID" class="headerlink" title="EDID"></a>EDID</h2><p>EDID（扩展显示识别数据）是由显示器提供的信息，用于向源设备描述其能力和要求。它包含诸如制造商、序列号、最大分辨率、刷新率和色彩空间等信息。</p>
<h2 id="罪魁祸首"><a href="#罪魁祸首" class="headerlink" title="罪魁祸首"></a>罪魁祸首</h2><p>在显示器关闭或进入睡眠状态时，它将通过DCC传输一个信号，表明它正在关闭电源，在某些情况下，这被系统的视频驱动程序或操作系统解释为显示器被拔掉。这将导致操作系统以一种不理想的方式重新安排桌面空间和窗口。</p>
<blockquote>
<p>来源：<a href="https://www.datapro.net/techinfo/hot_plug_detection.html">Hot Plug Detection, DDC, and EDID</a></p>
</blockquote>
</div>

<p>以我的显示器为例，原分辨率为2560x1440，但是显示器关闭后，系统认为显示器被拔出，检测不到显示器的话系统就会采用注册表中的默认分辨率，也就是上面提到的那个<code>NOEDIDxxxxxxx</code>，在我这里是1024x768，当显示器再次开启时，会听到很多声硬件插拔的提示音，说明显示器被当作了新插入的设备，显示器开启后所有的窗口的分辨率并没有改变，仍然是1024x768，观感上就是占了屏幕大小的一半。而Windows窗口的屏幕坐标原点就是在左上角，也就导致所有的窗口都挤在了左上角。</p>
<div class="note success"><h2 id="NOEDID"><a href="#NOEDID" class="headerlink" title="NOEDID"></a>NOEDID</h2><p>NOEDID的意思就是No EDID，如果系统无法从显示器获取扩展显示识别数据的话，就会调用这个配置。这个文件在显示器关闭或者拔出后会自动生成。</p>
</div>

<h1 id="其他解决方案"><a href="#其他解决方案" class="headerlink" title="其他解决方案"></a>其他解决方案</h1><h2 id="降低刷新率"><a href="#降低刷新率" class="headerlink" title="降低刷新率"></a>降低刷新率</h2><p>很难想象这个办法居然是戴尔官网的文章给出的，涉及的显示器有UP3214Q, P2715Q, P2415Q等，这个荒谬的解决方案是让我们把显示器的刷新率从60Hz下调到30Hz，这篇文章的发布日期是2021年，2021年30Hz的刷新率能干啥呢，转下滚轮都卡的好吧</p>
<blockquote>
<p>来源：<a href="https://www.dell.com/support/kbdoc/en-us/000129626/display-windows-move-resize-after-resuming-from-sleep-state?lang=en">Display Windows Move or Resize After Resuming from Sleep State</a></p>
</blockquote>
<h2 id="换用HDMI接口"><a href="#换用HDMI接口" class="headerlink" title="换用HDMI接口"></a>换用HDMI接口</h2><p>毕竟这是DP独有的问题，换上HDMI自然就解决了嘛🐶</p>
<h2 id="调节显示器热插拔检测设置"><a href="#调节显示器热插拔检测设置" class="headerlink" title="调节显示器热插拔检测设置"></a>调节显示器热插拔检测设置</h2><p>在显示器OSD菜单中将<code>DP Hot-Plug Detection</code>设置为<code>Always Active</code>。但是这个办法不适用于所有显示器，只有部分显示器才有这个功能。</p>
<blockquote>
<p>来源：<a href="https://answers.microsoft.com/en-us/windows/forum/all/windows-are-resized-and-moved-to-upper-left-corner/b05f3057-eb64-4446-83f6-8d0c648c4369">Windows are resized and moved to upper-left corner of screen when monitor wakes up from sleep [SOLVED, ON MY SYSTEM]</a></p>
</blockquote>
<h2 id="加密狗"><a href="#加密狗" class="headerlink" title="加密狗"></a>加密狗</h2><p>在显示器和主机之间加一个加密狗来欺骗主机，但是要加钱。</p>
<h1 id="历史-摆烂"><a href="#历史-摆烂" class="headerlink" title="历史-摆烂"></a>历史-摆烂</h1><p>其实类似的问题在2010年就出现了，当时有人在英伟达的reddit社区发过讨论，但是十几年过去了，无论是巨硬、英伟达、AMD还是英特尔都在摆烂，没有一个人出来解决这个问题。有人曾经给VESA(视频电子标准协会)发过邮件，但是VESA表示他们知道这个问题，但是这个问题应该由显示器制造商解决，而不是他们，就甩锅呗。</p>
<blockquote>
<p><a href="https://www.reddit.com/r/nvidia/comments/66opvp/this_displayport_hotplug_madness_finally_needs_to/">最初的讨论</a></p>
</blockquote>
<p>画了个表情包送给它们🐶</p>
<p><img data-src="https://s2.loli.net/2022/07/22/rzUwyZLOD18tXkW.webp" alt="摆烂.webp"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Win10</tag>
        <tag>DP</tag>
        <tag>Hot Plug Detection</tag>
        <tag>热插拔检测</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows重装指北</title>
    <url>/Windows%E9%87%8D%E8%A3%85%E6%8C%87%E5%8C%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">写一个Windows重装教程，另外偷个懒，把office的安装教程也合进来了hhh</blockquote>

<span id="more"></span>

<div class="note warning"><p>本文写于2020年，目前仅适用于Windows10操作系统，如需Windows11相关教程，请移步新教程：<a href="https://siriusq.top/win-11-iot-ltsc-installation.html">Windows 11 IoT LSTC 重装记录</a></p>
</div>

<h1 id="必备素材"><a href="#必备素材" class="headerlink" title="必备素材"></a>必备素材</h1><ul>
<li>容量≥8G的U盘一个</li>
<li>能正常使用的电脑一台</li>
<li>Refus启动盘制作工具<ul>
<li><a href="https://rufus.ie/">下载地址</a></li>
<li>在网页下面的Download中选择<code>Rufus x.xx Portable</code></li>
</ul>
</li>
<li>Windows镜像<ul>
<li>Win10 1909及以前版本<ul>
<li><a href="https://msdn.itellyou.cn/">下载地址</a></li>
<li>点击左边栏的<code>操作系统</code></li>
<li>选择想要安装的版本</li>
<li>以<code>Windows 10, Version 1909 (updated Jan 2020)</code>为例<ul>
<li>1909表示这是2019年9月大更新的版本（下一个版本号为2004，意思就是2020年4月大更新的版本）</li>
<li>updated Jan 2020表示这个镜像包含了2020年1月份的小更新</li>
</ul>
</li>
<li>可以看到有4个选项，以<code>Windows 10 (business editions), version 1909 (updated Jan 2020) (x64) - DVD (Chinese-Simplified)</code>为例<ul>
<li>business editions是我们需要的版本，包含企业版、专业版、教育版、专业工作站等版本</li>
<li>x64代表64位系统（32位系统为x86），如果没有特殊需要建议安装64位</li>
</ul>
</li>
<li>点击详细信息，可以看到一个<code>ed2k</code>开头的链接</li>
<li>复制这个链接，用迅雷下载镜像文件</li>
</ul>
</li>
<li>Win10 2004及之后的版本<ul>
<li><a href="https://next.itellyou.cn/">下载地址</a></li>
<li>使用邮件或者第三方账户注册并登录</li>
<li>有能力的朋友可以捐助一下，网站作者已经坚持免费12年了</li>
<li>选择<code>Windows10</code>并点击<code>详细信息</code></li>
<li>以<code>Windows 10 (business edition), Version 2004 (Updated June 2020) (x64) - DVD (Chinese-Simplified)</code>为例</li>
<li>点击后面的<code>复制按钮</code></li>
<li>打开相应的下载软件（这里推<a href="https://motrix.app/zh-CN">Motrix</a>）并下载镜像</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="制作安装盘"><a href="#制作安装盘" class="headerlink" title="制作安装盘"></a>制作安装盘</h1><ul>
<li>插入U盘</li>
<li>以管理员身份运行<code>Refus</code></li>
<li>在<code>设备</code>中选择你的U盘</li>
<li><code>引导类型选择</code>前一栏保持默认的<code>镜像文件（请选择）</code>然后点击后面的<code>选择</code>按钮</li>
<li>找到下载的Windows镜像并打开</li>
<li>点击最下面的<code>开始</code></li>
<li>等待制作完成</li>
</ul>
<h1 id="BIOS修改启动项"><a href="#BIOS修改启动项" class="headerlink" title="BIOS修改启动项"></a>BIOS修改启动项</h1><p>下面的选项表述不一定准确，以电脑BIOS标注为准，意思对即可</p>
<ul>
<li>重启电脑</li>
<li>开机的时候狂按<code>F2/F10/Delete</code>（不同的电脑进入BIOS的按键不一样）</li>
<li>进入BIOS</li>
<li>找到<code>启动顺序/启动项管理</code></li>
<li>关闭<code>安全启动/Secure Boot</code></li>
<li>新电脑<ul>
<li>引导方式选择<code>UEFI Only</code></li>
<li>将你的U盘设置为<code>第一启动项</code>（部分电脑需要使用F5&#x2F;F6移动到最上方）</li>
<li>如果有两个U盘选项，例如<code>UEFI:USBXXX</code>和<code>USBXXX</code>，选择带有UEFI的那一个</li>
<li>保存设置并退出BIOS</li>
</ul>
</li>
<li>老电脑（不支持UEFI启动的）<ul>
<li>将你的U盘设置为<code>第一启动项</code>（部分电脑需要使用F5&#x2F;F6移动到最上方）</li>
<li>保存设置并退出BIOS</li>
</ul>
</li>
<li>等待电脑重启</li>
</ul>
<h1 id="转换硬盘分区格式"><a href="#转换硬盘分区格式" class="headerlink" title="转换硬盘分区格式"></a>转换硬盘分区格式</h1><p>这一步只针对UEFI启动，非UEFI的请跳过</p>
<ul>
<li>等电脑转完圈后会进入语言选择页面</li>
<li>使用<code>Shift</code>+<code>F10</code>打开终端</li>
<li>输入<code>diskpart</code>打开磁盘管理</li>
<li>输入<code>list disk</code>，列出硬盘，会显示硬盘的序号（0&#x2F;1&#x2F;2等）</li>
<li>找到安装目标磁盘的序号，输入<code>select disk 序号</code>回车<ul>
<li>注意不要选到自己的U盘</li>
</ul>
</li>
<li>输入<code>clean</code>回车</li>
<li>输入<code>convert gpt</code>转换gpt格式</li>
<li>再次输入<code>list disk</code>，观察<code>GPT</code>下面是否出现星号</li>
<li>有星号的话就可以关闭终端了</li>
</ul>
<h1 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h1><p>不同版本的Windows安装过程稍有不同，以下步骤不会在所有系统中出现</p>
<ul>
<li>选择安装语言后点击<code>下一步</code></li>
<li>点击<code>现在安装</code></li>
<li>进入<code>激活Windows</code>页面，选择<code>我没有产品密钥</code></li>
<li>进入<code>选择要安装的操作系统</code>页面，根据需要选择要安装的版本并点击<code>下一步</code></li>
<li>进入<code>适用的声明和许可条款</code>页面，勾选<code>我接受许可条款</code>并点击<code>下一步</code></li>
<li>进入<code>你想执行哪种类型的安装</code>页面，选择<code>自定义：仅安装Windows（高级）</code></li>
<li>进入<code>你想将Windows安装在哪里</code>页面，根据驱动器的大小判断硬盘，如果有固态硬盘的话选择固态硬盘</li>
<li>点击右下方的<code>新建</code>，此时会提示创建其他分区，点击<code>确定</code></li>
<li>分区创建完成后点击<code>下一步</code></li>
<li>等待系统安装完成，这一步耗时相对较长</li>
<li>进入提示<code>Windows需要重启才能继续</code>的页面，会有10秒的重启倒计时，此时拔出U盘并点击<code>立即重启</code></li>
<li>重启后会提示<code>让我们先从区域设置开始</code>，选择<code>中国</code>并点击<code>是</code></li>
<li>提示<code>这种键盘布局是否合适</code>，选择需要的键盘布局并点击<code>是</code></li>
<li>有需要的话可以添加第二种键盘布局，步骤同上，没有需要点击<code>跳过</code></li>
<li>连接网络，不想连接或者没有网络的话点击左下角的<code>我没有Internet连接</code><ul>
<li>不连接的话会有第二遍提示：<code>当你连接到Internet时，有更多要发现的内容</code>，点击左下角的<code>继续执行有限设置</code></li>
</ul>
</li>
<li>输入用户名和密码并确认密码</li>
<li>三个安全问题胡乱写就行，从来没有用到过这个东西</li>
<li>进入<code>在具有活动历史记录的设备上执行更多的操作</code>页面，如果你有多台电脑的话可以选择<code>是</code>，开启后可以同步不同电脑上的活动记录，不过个人感觉没啥卵用</li>
<li>进入<code>从数字助理获取帮助页面</code>，选择<code>接受</code>就会开启Cortana，其实也没什么卵用</li>
<li>进入<code>为你的设备选择隐私设置页面</code>，根据需要进行勾选，我个人只开启了<code>位置</code>与<code>查找我的设备</code>两个选项</li>
<li>点击接受后就设置完成了，等待一会就会进入桌面</li>
</ul>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>进入桌面后建议联网，然后进入<code>设置-更新和安全-检查更新</code>，等待所有更新安装完成后点击下面出现的<code>立即重启</code>，这个过程耗时较长，取决于网速。另外Windows会自动在后台安装驱动，如果当前屏幕分辨率很怪的话不用慌，过一会安装完驱动就好了。</p>
<h1 id="KMS激活"><a href="#KMS激活" class="headerlink" title="KMS激活"></a>KMS激活</h1><p>KMS全称Key Management Service，主要用于企业内的计算机批量激活，激活有效期为180天，但是可以设置自动续期。需要注意的是个人用户使用的KMS在法律层面上并不属于正版，去官网买的Key才算法律层面的正版，微软只是对这种行为睁一只眼闭一只眼罢了。不建议长期使用。</p>
<p>激活方式如下：在开始按钮上右键，选择<code>Windows Powershell（管理员）</code>，依次输入下面的命令并回车，有弹窗的话点确定即可。激活过程请保持联网</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">slmgr <span class="literal">-skms</span> kms.<span class="number">03</span>k.org</span><br><span class="line">slmgr <span class="literal">-ipk</span> 相应版本的密钥</span><br><span class="line">slmgr <span class="literal">-ato</span></span><br><span class="line">slmgr <span class="literal">-dlv</span></span><br></pre></td></tr></table></figure>

<p>相应版本的密钥如下，Win11和Win10的一样，没有变，其他版本请到<a href="https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys"><strong>微软官方文档</strong></a>查找，其中版本后缀有N的为欧洲专供版，后缀有G的为政府专供版，不过这些和一般用户没啥关系。</p>
<table>
<thead>
<tr>
<th align="left">操作系统版本</th>
<th align="left">KMS 客户端安装程序密钥</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Windows 10 专业版</td>
<td align="left">W269N-WFGWX-YVC9B-4J6C9-T83GX</td>
</tr>
<tr>
<td align="left">Windows 10 专业版 N</td>
<td align="left">MH37W-N47XK-V7XM9-C7227-GCQG9</td>
</tr>
<tr>
<td align="left">Windows 10 专业工作站版</td>
<td align="left">NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J</td>
</tr>
<tr>
<td align="left">Windows 10 专业工作站版 N</td>
<td align="left">9FNHH-K3HBT-3W4TD-6383H-6XYWF</td>
</tr>
<tr>
<td align="left">Windows 10 专业教育版</td>
<td align="left">6TP4R-GNPTD-KYYHQ-7B7DP-J447Y</td>
</tr>
<tr>
<td align="left">Windows 10 专业教育版 N</td>
<td align="left">YVWGF-BXNMC-HTQYQ-CPQ99-66QFC</td>
</tr>
<tr>
<td align="left">Windows 10 教育版</td>
<td align="left">NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</td>
</tr>
<tr>
<td align="left">Windows 10 教育版 N</td>
<td align="left">2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</td>
</tr>
<tr>
<td align="left">Windows 10 企业版</td>
<td align="left">NPPR9-FWDCX-D2C8J-H872K-2YT43</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 N</td>
<td align="left">DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 G</td>
<td align="left">YYVX9-NTFWV-6MDM3-9PT4T-4M68B</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 G N</td>
<td align="left">44RPN-FTY23-9VTTB-MP9BX-T84FV</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 LTSC 2019</td>
<td align="left">M7XTQ-FN8P6-TTKYV-9D4CC-J462D</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 N LTSC 2019</td>
<td align="left">92NFX-8DJQP-P6BBQ-THF9C-7CG2H</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 LTSB 2016</td>
<td align="left">DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 N LTSB 2016</td>
<td align="left">QFFDN-GRT3P-VKWWX-X7T3R-8B639</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 2015 LTSB</td>
<td align="left">WNMTR-4C88C-JK8YV-HQ7T2-76DF9</td>
</tr>
<tr>
<td align="left">Windows 10 企业版 2015 LTSB N</td>
<td align="left">2F77B-TNFGY-69QQF-B8YKP-D69TJ</td>
</tr>
</tbody></table>
<p>第一条命令中的<code>kms.03k.org</code>是一个KMS激活服务器，如果挂掉的话可以换用下面的这些</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">kms.chinancce.com</span><br><span class="line">kms.bluskai.com</span><br><span class="line">kms.library.hk</span><br><span class="line">kms.91ssr.top</span><br><span class="line">kms.digiboy.ir</span><br><span class="line">kms.luody.info</span><br><span class="line">kms.lotro.cc</span><br><span class="line">kms.shuax.com</span><br><span class="line">kms.cangshui.net</span><br></pre></td></tr></table></figure>

<h1 id="Office安装与激活"><a href="#Office安装与激活" class="headerlink" title="Office安装与激活"></a>Office安装与激活</h1><p>安装方法如下</p>
<ul>
<li>下载<a href="https://otp.landian.vip/zh-cn/download.html"><strong>Office Tool Plus</strong></a>，建议下载完整版</li>
<li>解压文件并使用管理员身份运行<code>Office Tool Plus.exe</code></li>
<li>点击<code>部署</code></li>
<li>在<code>产品</code>中勾选需要的版本<ul>
<li>一般选择的是<code>Office 专业增强版 2019 批量版 ProPlus2019Volume</code></li>
</ul>
</li>
<li>在<code>应用程序</code>中勾选需要的软件</li>
<li>在右侧的体系结构中选择<code>x64</code>，32位系统请选择<code>x86</code></li>
<li>选择相应的通道<ul>
<li>一般选择<code>每月通道</code></li>
<li>企业版Win10可能会提示不支持通道，可以换成<code>Office 2019 企业长期版</code></li>
<li>或者先选择<code>测试通道</code>或者<code>开发通道</code>后，再重新选择<code>每月通道</code>，这样就不会报错了</li>
</ul>
</li>
<li>安装方式保持默认的<code>在线安装</code></li>
<li>安装模块保持默认的<code>Office部署工具</code></li>
<li>勾选<code>安装完成后创建桌面快捷方式</code></li>
<li>点击右下角的<code>开始部署</code></li>
</ul>
<p>Office同样可以使用KMS激活,步骤如下</p>
<ul>
<li>使用管理员身份运行<code>Office Tool Plus.exe</code></li>
<li>点击<code>激活</code></li>
<li>在<code>KMS管理</code>中输入KMS服务器地址<code>kms.03k.org</code>并点击<code>应用服务器地址</code></li>
<li>在<code>密钥管理</code>中输入相应版本的秘钥并点击<code>安装密钥</code></li>
<li>点击右下角的<code>激活</code></li>
</ul>
<p>相应版本的秘钥如下</p>
<table>
<thead>
<tr>
<th align="left">Product</th>
<th align="left">GVLK</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Office2021</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Office 专业增强版 LTSC 2021</td>
<td align="left">FXYTK-NJJ8C-GB6DW-3DYQT-6F7TH</td>
</tr>
<tr>
<td align="left">Office LTSC Standard 2021</td>
<td align="left">KDX7X-BNVR8-TXXGX-4Q7Y8-78VT3</td>
</tr>
<tr>
<td align="left">Project Professional 2021</td>
<td align="left">FTNWT-C6WBT-8HMGF-K9PRX-QV9H8</td>
</tr>
<tr>
<td align="left">Project Standard 2021</td>
<td align="left">J2JDC-NJCYY-9RGQ4-YXWMH-T3D4T</td>
</tr>
<tr>
<td align="left">Visio LTSC Professional 2021</td>
<td align="left">KNH8D-FGHT4-T8RK3-CTDYJ-K2HT4</td>
</tr>
<tr>
<td align="left">Visio LTSC Standard 2021</td>
<td align="left">MJVNY-BYWPY-CWV6J-2RKRT-4M8QG</td>
</tr>
<tr>
<td align="left">Access LTSC 2021</td>
<td align="left">WM8YG-YNGDD-4JHDC-PG3F4-FC4T4</td>
</tr>
<tr>
<td align="left">Excel LTSC 2021</td>
<td align="left">NWG3X-87C9K-TC7YY-BC2G7-G6RVC</td>
</tr>
<tr>
<td align="left">Outlook LTSC 2021</td>
<td align="left">C9FM6-3N72F-HFJXB-TM3V9-T86R9</td>
</tr>
<tr>
<td align="left">PowerPoint LTSC 2021</td>
<td align="left">TY7XF-NFRBR-KJ44C-G83KF-GX27K</td>
</tr>
<tr>
<td align="left">Publisher LTSC 2021</td>
<td align="left">2MW9D-N4BXM-9VBPG-Q7W6M-KFBGQ</td>
</tr>
<tr>
<td align="left">Skype for Business LTSC 2021</td>
<td align="left">HWCXN-K3WBT-WJBKY-R8BD9-XK29P</td>
</tr>
<tr>
<td align="left">Word LTSC 2021</td>
<td align="left">TN8H9-M34D3-Y64V9-TR72V-X79KV</td>
</tr>
<tr>
<td align="left">Office2019</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Office 专业增强版 2019</td>
<td align="left">NMMKJ-6RK4F-KMJVX-8D9MJ-6MWKP</td>
</tr>
<tr>
<td align="left">Office 标准版 2019</td>
<td align="left">6NWWJ-YQWMR-QKGCB-6TMB3-9D9HK</td>
</tr>
<tr>
<td align="left">Project 专业版 2019</td>
<td align="left">B4NPR-3FKK7-T2MBV-FRQ4W-PKD2B</td>
</tr>
<tr>
<td align="left">Project 标准版 2019</td>
<td align="left">C4F7P-NCP8C-6CQPT-MQHV9-JXD2M</td>
</tr>
<tr>
<td align="left">Visio 专业版 2019</td>
<td align="left">9BGNQ-K37YR-RQHF2-38RQ3-7VCBB</td>
</tr>
<tr>
<td align="left">Visio 标准版 2019</td>
<td align="left">7TQNQ-K3YQQ-3PFH7-CCPPM-X4VQ2</td>
</tr>
<tr>
<td align="left">Access 2019</td>
<td align="left">9N9PT-27V4Y-VJ2PD-YXFMF-YTFQT</td>
</tr>
<tr>
<td align="left">Excel 2019</td>
<td align="left">TMJWT-YYNMB-3BKTF-644FC-RVXBD</td>
</tr>
<tr>
<td align="left">Outlook 2019</td>
<td align="left">7HD7K-N4PVK-BHBCQ-YWQRW-XW4VK</td>
</tr>
<tr>
<td align="left">PowerPoint 2019</td>
<td align="left">RRNCX-C64HY-W2MM7-MCH9G-TJHMQ</td>
</tr>
<tr>
<td align="left">Publisher 2019</td>
<td align="left">G2KWX-3NW6P-PY93R-JXK2T-C9Y9V</td>
</tr>
<tr>
<td align="left">Skype for Business 2019</td>
<td align="left">NCJ33-JHBBY-HTK98-MYCV8-HMKHJ</td>
</tr>
<tr>
<td align="left">Word 2019</td>
<td align="left">PBX3G-NWMT6-Q7XBW-PYJGG-WXD33</td>
</tr>
<tr>
<td align="left">Office2016</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Office 专业增强版 2016</td>
<td align="left">XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99</td>
</tr>
<tr>
<td align="left">Office Standard 2016</td>
<td align="left">JNRGM-WHDWX-FJJG3-K47QV-DRTFM</td>
</tr>
<tr>
<td align="left">Project Professional 2016</td>
<td align="left">YG9NW-3K39V-2T3HJ-93F3Q-G83KT</td>
</tr>
<tr>
<td align="left">Project Standard 2016</td>
<td align="left">GNFHQ-F6YQM-KQDGJ-327XX-KQBVC</td>
</tr>
<tr>
<td align="left">Visio Professional 2016</td>
<td align="left">PD3PC-RHNGV-FXJ29-8JK7D-RJRJK</td>
</tr>
<tr>
<td align="left">Visio Standard 2016</td>
<td align="left">7WHWN-4T7MP-G96JF-G33KR-W8GF4</td>
</tr>
<tr>
<td align="left">Access 2016</td>
<td align="left">GNH9Y-D2J4T-FJHGG-QRVH7-QPFDW</td>
</tr>
<tr>
<td align="left">Excel 2016</td>
<td align="left">9C2PK-NWTVB-JMPW8-BFT28-7FTBF</td>
</tr>
<tr>
<td align="left">OneNote 2016</td>
<td align="left">DR92N-9HTF2-97XKM-XW2WJ-XW3J6</td>
</tr>
<tr>
<td align="left">Outlook 2016</td>
<td align="left">R69KK-NTPKF-7M3Q4-QYBHW-6MT9B</td>
</tr>
<tr>
<td align="left">PowerPoint 2016</td>
<td align="left">J7MQP-HNJ4Y-WJ7YM-PFYGF-BY6C6</td>
</tr>
<tr>
<td align="left">Publisher 2016</td>
<td align="left">F47MM-N3XJP-TQXJ9-BP99D-8 837 K</td>
</tr>
<tr>
<td align="left">Skype for Business 2016</td>
<td align="left">869NQ-FJ69K-466HW-QYCP2-DDBV6</td>
</tr>
<tr>
<td align="left">Word 2016</td>
<td align="left">WXY84-JN2Q9-RBCCQ-3Q3J3-3PFJ6</td>
</tr>
</tbody></table>
<p>安装完成后首次打开Office会有一个弹窗，正常现象</p>
<p>本篇结束~</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win10</tag>
        <tag>Office</tag>
        <tag>重装</tag>
      </tags>
  </entry>
  <entry>
    <title>禁止Windows自动更新A卡驱动</title>
    <url>/amd-gpu-driver-auto-update-banned.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 头脑发热更新了下A卡驱动，然后发现显卡在新驱动 24.7.1 下啸叫严重，而我的机箱就在我手边，那声音，跟锯桌子腿一样。然后我就卸载了新驱动，重新装了个版本很老但是很稳定的 22.5.1 驱动，本以为这样就结束了，结果被Windows自动更新这个大聪明给背刺了，趁我吃了个饭的功夫，把驱动又给我升级了。我试了多种方法之后才终于让自动更新消停了，以下就是我和自动更新这个大聪明斗智斗勇的过程。 </blockquote>

<span id="more"></span>

<p>在开始之前，先来说一下Windows自动更新的机制，以普遍理性而论，它只管更新驱动，不管更新 Adrenalin 控制面板，这样就会造成 Adrenalin 提示驱动不匹配。而且它更新的驱动还不一定比我们自己安装的驱动版本高，但是它认为自己的驱动版本更高，就给我们覆盖咯，真的是大聪明。</p>
<div class="note warning"><p>断网提示：在进行下面的所有操作前，请先下载好一个稳定的驱动，然后<strong>断网</strong>！敲黑板，划重点，一定要断，要不然Windows会趁着你操作的过程行云流水的给你自动更新驱动。</p>
</div>

<h1 id="卸载现有驱动"><a href="#卸载现有驱动" class="headerlink" title="卸载现有驱动"></a>卸载现有驱动</h1><p>先来卸载Windows自动安装的驱动，这里推荐使用 Display Driver Uninstaller，也就是 DDU 来进行卸载。与控制面板相比，它卸载的更干净，可以减小后续操作出问题的概率。下载链接如下，一般下载最新的Portable版本即可。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>下载 DDU</p><p>Display Driver Uninstaller (DDU) is a driver removal utility that can help you completely uninstall AMD/NVIDIA/INTEL graphics card drivers and packages from your system, trying to remove all leftovers (including registry keys, folders and files, driver store).</p>
<a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-"></a>
</div></div>

<p>下载下来是个自解压程序，双击自解压后打开解压的文件夹，启动Display Driver Uninstaller.exe，在右边选择<code>显卡</code>-<code>AMD</code>，然后点击<code>清除并重启</code>，不用进安全模式，等它运行完会自动重启。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-odrlfb6d6">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="DDU清除驱动"><img data-src="https://s2.loli.net/2024/09/20/eBSPsjLvk625aZo.webp" alt="DDU清除驱动" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-odrlfb6d6" class="carousel-caption"> </div>
    </div>
  

<h1 id="禁止Windows更新显卡驱动"><a href="#禁止Windows更新显卡驱动" class="headerlink" title="禁止Windows更新显卡驱动"></a>禁止Windows更新显卡驱动</h1><p>以下是我尝试过的各种方法，虽然前几种方法都没起作用，但这里还是记录一下。因为据我观察，这些方法是否生效都是玄学问题，每种方法都有人说有用，也都有人说没用。</p>
<h2 id="组策略编辑"><a href="#组策略编辑" class="headerlink" title="组策略编辑"></a>组策略编辑</h2><div class="note primary"><p>此方法来自微软社区问答：<a href="https://answers.microsoft.com/zh-hans/windows/forum/all/%E5%A6%82%E4%BD%95%E7%A6%81%E7%94%A8-windows-10-11/4487dd94-ca23-433b-b8df-d8a61020b34a">如何禁用 Windows 10 (11) 的显卡驱动更新</a></p>
</div>

<p>步骤如下：</p>
<ol>
<li>右键单击开始菜单，打开<code>设备管理器</code>。</li>
<li>双击<code>显示适配器</code>下的AMD显卡。</li>
<li>切换到<code>详细信息</code>标签。</li>
<li>在<code>属性</code>下拉菜单中选择<code>类Guid</code>，然后右键复制下面显示的<code>值</code>。</li>
<li>同时按下 <code>Windows + R</code> 键，输入 <code>gpedit.msc</code> 并回车以打开组策略编辑器。</li>
<li>依次打开<code>计算机配置</code>-<code>管理模板</code>-<code>系统</code>-<code>设备安装</code>-<code>设备安装限制</code>。</li>
<li>双击打开右侧的<code>阻止使用与下列设备安装程序类相匹配的的驱动程序安装设备</code>。</li>
<li>勾选<code>已启用</code>。</li>
<li>点击下方的<code>显示</code>，将第4步复制的显卡的<code>类Guid</code>粘贴到<code>值</code>中。</li>
<li>点击<code>确定</code>保存更改。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-a7dp2oiwc">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="右键单击开始菜单，打开设备管理器"><img data-src="https://s2.loli.net/2024/09/20/ywtqmVIFb8d5RGs.webp" alt="右键单击开始菜单，打开设备管理器" class="zoomable"></li><li class="splide__slide" data-caption="双击显示适配器下的AMD显卡"><img data-src="https://s2.loli.net/2024/09/20/1lNt3rLd7qmfOec.webp" alt="双击显示适配器下的AMD显卡" class="zoomable"></li><li class="splide__slide" data-caption="切换到详细信息标签页，在属性下拉菜单中找到类Guid，然后右键复制下面显示的值"><img data-src="https://s2.loli.net/2024/09/20/l27BaLnkHFAKcWS.webp" alt="切换到详细信息标签页，在属性下拉菜单中找到类Guid，然后右键复制下面显示的值" class="zoomable"></li><li class="splide__slide" data-caption="依次打开计算机配置-管理模板-系统-设备安装-设备安装限制，双击打开右侧的阻止使用与下列设备安装程序类相匹配的的驱动程序安装设备"><img data-src="https://s2.loli.net/2024/09/20/gkyN27D4z8VpUiG.webp" alt="依次打开计算机配置-管理模板-系统-设备安装-设备安装限制，双击打开右侧的阻止使用与下列设备安装程序类相匹配的的驱动程序安装设备" class="zoomable"></li><li class="splide__slide" data-caption="勾选已启用，点击下方的显示，将第4步复制的显卡的类Guid粘贴到值中，点击确定保存更改"><img data-src="https://s2.loli.net/2024/09/20/xUNIpY2CQ7LBhsD.webp" alt="勾选已启用，点击下方的显示，将第4步复制的显卡的类Guid粘贴到值中，点击确定保存更改" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-a7dp2oiwc" class="carousel-caption"> </div>
    </div>
  

<p>在我的尝试中，这个方法并不能完全阻断Windows自动安装驱动，驱动安装程序可以走完大部分进度条，然后提示安装失败。但是吧，你说它安装上了吧，它提示安装失败，你说它没装上吧，Adrenalin 又提示驱动版本不匹配。而且我的显卡又开始疯狂啸叫。我愿称之为薛定谔的驱动。</p>
<p>此外，家庭版系统没有组策略编辑器，所以不能使用这个方法。</p>
<h2 id="DDU禁用更新"><a href="#DDU禁用更新" class="headerlink" title="DDU禁用更新"></a>DDU禁用更新</h2><p>DDU 中也有禁用驱动更新的设置，但是对我的电脑没有用，可能是我一开始没断网的原因。</p>
<ol>
<li>点击DDU左上角的<code>选项</code></li>
<li>在高级设置中勾选<code>当Windows搜索设备驱动程序时，禁止Windows更新下载驱动程序</code></li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-90twqs87z">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="DDU禁用更新"><img data-src="https://s2.loli.net/2024/09/20/Kf2R6ExjnzDiNr1.png" alt="DDU禁用更新" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-90twqs87z" class="carousel-caption"> </div>
    </div>
  

<h2 id="Dism-禁用更新"><a href="#Dism-禁用更新" class="headerlink" title="Dism++禁用更新"></a>Dism++禁用更新</h2><p>同上，Dism++的方法也对我的电脑没有用。</p>
<ol>
<li>打开Dism++中的<code>控制面板</code>-<code>系统优化栏</code>。</li>
<li>展开<code>Windows Update</code>菜单。</li>
<li>开启<code>Windows更新不包括驱动程序</code>选项。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-oksf1v75k">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Dism++禁用更新"><img data-src="https://s2.loli.net/2024/09/20/98aGBiWXJo2I4KS.png" alt="Dism++禁用更新" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-oksf1v75k" class="carousel-caption"> </div>
    </div>
  

<h2 id="在设备管理器中回退驱动"><a href="#在设备管理器中回退驱动" class="headerlink" title="在设备管理器中回退驱动"></a>在设备管理器中回退驱动</h2><p>这是对我的电脑有效的方法，已经稳定使用了两个月了。</p>
<ol>
<li>右键单击开始菜单，打开<code>设备管理器</code>。</li>
<li>双击<code>显示适配器</code>下的AMD显卡。</li>
<li>单击<code>回退驱动程序</code></li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-431pxn2lh">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="在设备管理器中回退驱动"><img data-src="https://s2.loli.net/2024/09/20/HMxINqzFDUdbfe6.webp" alt="在设备管理器中回退驱动" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-431pxn2lh" class="carousel-caption"> </div>
    </div>
  

<h1 id="安装新驱动"><a href="#安装新驱动" class="headerlink" title="安装新驱动"></a>安装新驱动</h1><p>我最后安装的驱动版本是 <a href="https://drivers.amd.com/drivers/WHQL-AMD-Software-Adrenalin-Edition-22.5.1-Win10-Win11-May10.exe">22.5.1</a>，对于6500xt来说，这个版本最省心。因为后续的驱动所谓的优化，导致在接双屏的情况下，显存频率会一直拉满，我的这张卡在显存频率拉满之后会疯狂啸叫，搞得我耳朵都疼。有很多用户反馈过Bug，然而AMD说这是个feature，为了稳定性，我看纯属扯淡。用22.5.1时，只要两个屏一个接独显一个接核显，显存频率就可以动态调节，不会一直拉满。而且用22.5.1时我的显卡没有出过任何问题，反而是后面所谓提高了稳定性的版本出现了掉驱动的现象。</p>
<p>最后在安装完成后建议关闭Adrenalin中的检查更新开关，然后重启一次电脑。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-18s177sv1">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Adrenalin关闭检查更新"><img data-src="https://s2.loli.net/2024/09/20/aSW8T5pOMZXEUx9.webp" alt="Adrenalin关闭检查更新" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-18s177sv1" class="carousel-caption"> </div>
    </div>
  ]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>GPU</tag>
        <tag>Driver</tag>
        <tag>AMD</tag>
      </tags>
  </entry>
  <entry>
    <title>在基于GitHub Pages的博客更新时同步更新GitHub Profile个人信息页最近博文部分</title>
    <url>/auto-update-profile-latest-blog-posts.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">我在GitHub的自定义个人信息页中添加了展示最近更新的博文的部分，但是每次更新完博客还要再来这里手动更新一下，就很麻烦。于是我本着"偷懒是人类进步的动力"的原则，搞出了一种博客部署完成后，使用GitHub Actions自动更新个人信息页的最近博文部分的方法。</blockquote>

<span id="more"></span>

<div class="note warning"><p>提醒：本文中使用的博客框架为Hexo，博客主题为Next。RSS Feed采用Atom 1.0格式</p>
</div>

<h1 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h1>
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-zq1z1p1xs">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="auto_update_profile-cn.webp"><img data-src="https://s2.loli.net/2023/10/19/Gk81DjxnfIgU2Yd.webp" alt="auto_update_profile-cn.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-zq1z1p1xs" class="carousel-caption"> </div>
    </div>
  

<p>此方法的基本原理如上图所示，我们首先要在博客仓库与Profile仓库中各设置一个Workflow，然后当我们执行<code>hexo deploy</code>操作将博客文件推送到GitHub仓库后，GitHub Pages会自动运行一个Workflow来部署博客网站，当部署完成后，我们设置的<code>Trigger Profile Update</code> Workflow会被唤起，它的作用是调用Profile仓库中的另一个Workflow：<code>Update Latest Blog Posts</code>。Profile仓库中的Workflow会运行<code>update-readme.mjs</code>脚本，脚本首先会访问博客的RSS Feed，读取其中的内容，并使用正则表达式提取博文的标题与链接，接着读取<code>README.md</code>文件，找到我们预先设置的标识符，使用提取到的内容替换标识符中原有的内容，并将所做的修改写回<code>README.md</code>文件。最后Workflow会将更改的内容push回仓库中。</p>
<h1 id="启用RSS功能"><a href="#启用RSS功能" class="headerlink" title="启用RSS功能"></a>启用RSS功能</h1><p>首先我们需要开启博客的RSS功能，以便脚本获取博客的标题与URL。开启Hexo框架的RSS功能需要安装<code>hexo-generator-feed</code>插件，这个插件支持生成Atom 1.0 与 RSS 2.0 的feed。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<details class="note primary"><summary><p>关于Atom 1.0 与 RSS 2.0</p>
</summary>
<p>Atom 1.0 和 RSS 2.0 都是用于发布博客、新闻和其他网页内容的标准化格式。它们有一些区别，主要包括以下几个方面：</p>
<p><strong>1. 数据格式：</strong></p>
<ul>
<li>Atom 1.0 使用一种 XML 数据格式，它具有更统一和一致的结构，更适合处理机器读取。</li>
<li>RSS 2.0 也使用 XML，但它的结构相对不太统一，因此在解析时可能需要更多的处理。</li>
</ul>
<p><strong>2. 标题和作者：</strong></p>
<ul>
<li>Atom 1.0 对标题和作者等元数据有更严格的要求，其中标题和作者是必需字段。</li>
<li>RSS 2.0 对标题和作者等元数据的要求相对较松，这些字段是可选的。</li>
</ul>
<p><strong>3. 扩展性：</strong></p>
<ul>
<li>Atom 1.0 提供了更强大的扩展性，允许添加自定义元数据和命名空间，以满足不同应用的需求。</li>
<li>RSS 2.0 也支持扩展，但相对较为有限，扩展性不如 Atom。</li>
</ul>
<p><strong>4. 发布日期：</strong></p>
<ul>
<li>Atom 1.0 使用 “published” 元素来表示博文的发布日期，这是一个标准化的日期格式。</li>
<li>RSS 2.0 使用 “pubDate” 元素来表示发布日期，这个日期格式相对自由，可能需要更多解析。</li>
</ul>
<p><strong>5. 条目链接：</strong></p>
<ul>
<li>Atom 1.0 使用 “link” 元素来表示博文的链接，这是博文的固定链接。</li>
<li>RSS 2.0 也使用 “link” 元素，但它有时可能表示不同的链接类型（例如，博文的固定链接或者评论链接）。</li>
</ul>
<p>总的来说，Atom 1.0 更加规范和一致，适用于需要高度结构化数据的应用。而 RSS 2.0 在一些方面更加灵活，适合一些较为简单的应用场景。选择使用哪种标准通常取决于你的具体需求以及你希望的数据结构和格式。</p>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<p>安装完成后打开Hexo框架的配置文件<code>_config.yml</code>，向其中添加下面的配置：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Rss Feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span></span><br></pre></td></tr></table></figure>

<p>接下来的步骤用于在博客网站中添加一个RSS订阅按钮，没有需要的话可以跳过</p>
<p>打开Next主题的配置文件<code>_config.next.yml</code>，使用搜索功能快读定位到<code># Social Links</code>配置，在<code>social:</code>下面添加一行<code>RSS Feed: /atom.xml || fa fa-rss</code>，示例如下：</p>
<figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/Siriusq</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">RSS Feed:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure>

<p>这样就可以在侧栏中显示RSS订阅按钮了。</p>
<div class="note warning"><p>提示：当博客的标题含有中文时，直接在浏览器中查看atom.xml可能会出现乱码，但是右键另存到本地后再用VSCode打开的话是正常的，不用管。</p>
</div>


<h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="获取GitHub-Token"><a href="#获取GitHub-Token" class="headerlink" title="获取GitHub Token"></a>获取GitHub Token</h2><p>在我们的操作中，涉及到了跨仓库调用GitHub Actions的情况，GitHub Actions默认的权限不能满足这种操作，我们需要申请一个Personal Access Token，用它来赋予GitHub Actions的额外的访问权限。</p>
<details class="note primary"><summary><p>关于Personal Access Token</p>
</summary>
<p>GitHub Personal Access Token（个人访问令牌）是一种用于身份验证和访问 GitHub API 的令牌。它具有以下作用：</p>
<ol>
<li><p><strong>身份验证</strong>：个人访问令牌允许你以你的 GitHub 帐户身份访问 GitHub 资源，而无需使用密码。这提供了更安全的身份验证方式，同时不需要暴露你的 GitHub 帐户密码。</p>
</li>
<li><p><strong>访问权限</strong>：你可以为每个个人访问令牌设置不同的权限，从只读访问到完全仓库访问权限。这使得你可以根据不同的用例和应用程序需求创建有限的、仅适用于特定操作的令牌。</p>
</li>
<li><p><strong>API 访问</strong>：你可以使用个人访问令牌来通过 GitHub API 进行各种操作，如获取仓库信息、创建问题、推送代码等。这对于自动化操作和集成 GitHub 到应用程序或工作流程中非常有用。</p>
</li>
<li><p><strong>绕过限制</strong>：在某些情况下，GitHub 有一些 API 限制，如访问频率限制。使用个人访问令牌，你可以以你的帐户身份绕过这些限制。</p>
</li>
<li><p><strong>应用程序集成</strong>：个人访问令牌还可以用于将 GitHub 集成到第三方应用程序中，允许这些应用程序执行特定的 GitHub 操作。</p>
</li>
</ol>
<p>个人访问令牌是一个强大的工具，但应该小心管理它们，以确保安全性。不要轻易分享或泄露你的令牌，只授予必要的权限，并定期审查和撤销不再需要的令牌，以降低潜在的风险。</p>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<ol>
<li>点击GitHub网页右上角的头像</li>
<li>在弹出的面板中点击<code>Settings</code></li>
<li>点击左侧边栏最下方的<code>Developer seetings</code></li>
<li>点击<code>Personal access tokens中的Tokens(classic)</code></li>
<li>点击右上方的<code>Generate new token</code></li>
<li>选择<code>Generate new token(classic)</code></li>
<li>将<code>Expiration</code>设置为<code>No expiration</code></li>
<li>在<code>Select scopes</code>中勾选<code>repo</code>选项</li>
<li>滚动到页面最下方，点击<code>Generate token</code></li>
<li>复制生成的<code>Token</code>，注意在离开这个页面后就再也见不到这个Token了，所以一定妥善保管</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-er942kgi1">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1-2.webp"><img data-src="https://s2.loli.net/2023/10/19/MCX8r6medVjocbq.webp" alt="1-2.webp" class="zoomable"></li><li class="splide__slide" data-caption="3.webp"><img data-src="https://s2.loli.net/2023/10/19/nGbz1mhuYMXlEIV.webp" alt="3.webp" class="zoomable"></li><li class="splide__slide" data-caption="4-6.webp"><img data-src="https://s2.loli.net/2023/10/19/HyqLWKu5wg8B3hJ.webp" alt="4-6.webp" class="zoomable"></li><li class="splide__slide" data-caption="7-8.webp"><img data-src="https://s2.loli.net/2023/10/19/8oPj7UqBV4Ynscv.webp" alt="7-8.webp" class="zoomable"></li><li class="splide__slide" data-caption="9.webp"><img data-src="https://s2.loli.net/2023/10/19/y4T2RbD7UEWQY6Z.webp" alt="9.webp" class="zoomable"></li><li class="splide__slide" data-caption="10.webp"><img data-src="https://s2.loli.net/2023/10/19/ZfOqEgM3Yh97oTW.webp" alt="10.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-er942kgi1" class="carousel-caption"> </div>
    </div>
  


<h2 id="设置Secret"><a href="#设置Secret" class="headerlink" title="设置Secret"></a>设置Secret</h2><p>我们申请的Token具有对仓库的完全访问权限，自然不能以明文方式出现在Workflow文件中，GitHub允许我们使用<code>repository secret</code>功能，将Token以变量的方式存储在当前仓库安全存储中，降低泄露的可能性。</p>
<details class="note primary"><summary><p>关于Repository Secret</p>
</summary>
<p>GitHub 仓库（Repository）的 Secrets 是一种用于存储敏感信息或机密数据的方式，以便在 GitHub Actions Workflow、GitHub Actions Job 和 GitHub Repository 的其他部分中使用。这些 Secrets 的作用包括：</p>
<ol>
<li><p><strong>安全地存储敏感数据</strong>：Secrets 提供了一个安全的存储方式，可用于存储敏感数据，如访问令牌、密码、API 密钥等。这些数据通常不应该明文存储在代码中或 Workflow 文件中，因为这会增加安全风险。</p>
</li>
<li><p><strong>用于 GitHub Actions Workflow</strong>：你可以将 Secrets 传递给 GitHub Actions Workflow，以用于自动化工作流程中的不同操作，如构建、部署和测试。这有助于确保敏感信息不会在 Workflow 输出中泄露。</p>
</li>
<li><p><strong>访问外部服务</strong>：Secrets 可以用于访问外部服务和 API，如部署到云服务或与其他集成进行身份验证。它们使你可以在 Workflow 中以安全方式使用这些服务，同时不会泄露机密数据。</p>
</li>
<li><p><strong>灵活性</strong>：Secrets 允许你根据需要创建和管理多个 Secrets。这使得你可以为不同的工作流程和场景使用不同的密钥和令牌，以确保最小化安全风险。</p>
</li>
<li><p><strong>自动化操作</strong>：GitHub Actions 可以在 Workflow 中自动使用 Secrets，从而不需要手动输入敏感信息，提高了自动化操作的效率。</p>
</li>
<li><p><strong>更新和轮换</strong>：GitHub 仓库 Secrets 允许你定期更新或轮换敏感信息，以增加安全性。</p>
</li>
</ol>
<p>请注意，GitHub 仓库 Secrets 是受到限制和安全审查的，只有拥有适当权限的人员可以访问和管理它们。这有助于确保 Secrets 的安全性和保密性。</p>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<details class="note primary"><summary><p>在 Workflow 中使用 Repository Secrets 的原理</p>
</summary>
<p>GitHub Actions 在 Workflow 中使用 Repository Secrets 的原理如下：</p>
<ol>
<li><p><strong>创建 Repository Secret</strong>：在 GitHub 仓库的设置中，你创建了一个 Repository Secret，为其指定了一个名称（key）和对应的值。这个 Secret 存储在 GitHub 的安全存储中，只有有权访问仓库的用户和 Workflow 可以使用它。</p>
</li>
<li><p><strong>Workflow 中的环境变量</strong>：在你的 GitHub Actions Workflow 文件中，你可以通过 <code>$</code> 语法来引用 Repository Secret。这个语法允许你访问 Secret 的值，而不需要直接在 Workflow 文件中明文包含敏感信息。</p>
</li>
<li><p><strong>传递给 Workflow 环境变量</strong>：GitHub Actions 在运行 Workflow 时，会将 Repository Secrets 的值传递给 Workflow 中的环境变量。这些环境变量在 Workflow 的执行环境中可用，并可以像普通环境变量一样使用。</p>
</li>
<li><p><strong>安全性</strong>：GitHub 保护了这些 Secrets，确保它们不会被泄露或直接暴露给 Workflow 外部。这意味着 Secrets 在 Workflow 的输出、日志或其他可视化输出中不可见。只有 Workflow 内部的代码可以访问它们。</p>
</li>
<li><p><strong>使用 Secret</strong>：在 Workflow 中，你可以使用这些环境变量，如访问令牌或 API 密钥，来执行需要身份验证或敏感数据的操作，比如访问私有仓库、部署到云服务、与外部 API 通信等。</p>
</li>
</ol>
<p>总之，Repository Secrets 提供了一种在 Workflow 中安全存储和访问敏感信息的方式，同时不会将这些信息暴露给 Workflow 的外部。这使得 GitHub Actions 可以在自动化流程中处理敏感数据，而无需将其硬编码到 Workflow 文件中，从而提高了安全性和可维护性。</p>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<p>设置步骤如下：</p>
<ol>
<li>打开博客仓库的<code>Settings</code>页面</li>
<li>点击左侧边栏中<code>Secrets and variables</code>下的<code>Actions</code></li>
<li>点击<code>New repository secret</code></li>
<li>我这里将<code>Secrets</code>的<code>Name</code>设置为了<code>PAT_TOKEN_PROFILE</code></li>
<li>将上一步申请的<code>Token</code>粘贴到<code>Secret</code>中</li>
<li>点击<code>Add Secret</code></li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-z1hsul6kq">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1-3.webp"><img data-src="https://s2.loli.net/2023/10/19/Yb8BGd2ePlEMWRn.webp" alt="1-3.webp" class="zoomable"></li><li class="splide__slide" data-caption="4-6.webp"><img data-src="https://s2.loli.net/2023/10/19/qzHiYgNlOWtyVLw.webp" alt="4-6.webp" class="zoomable"></li><li class="splide__slide" data-caption="a.webp"><img data-src="https://s2.loli.net/2023/10/19/PItMG7ikaYb3CqF.webp" alt="a.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-z1hsul6kq" class="carousel-caption"> </div>
    </div>
  

<h1 id="配置Workflow"><a href="#配置Workflow" class="headerlink" title="配置Workflow"></a>配置Workflow</h1><p>接下来让我们配置两个仓库的Workflow，博客仓库只需要简单的设置一个Workflow，而Profile仓库需要再创建一个脚本文件，并向README文件中添加标识符。</p>
<h2 id="Profile仓库"><a href="#Profile仓库" class="headerlink" title="Profile仓库"></a>Profile仓库</h2><p>首先是Profile仓库的设置，先将仓库Clone到本地，在本地编辑完成后再推送到GitHub。</p>
<h3 id="创建Workflow"><a href="#创建Workflow" class="headerlink" title="创建Workflow"></a>创建Workflow</h3><p>在本地目录中创建<code>./source/.github/workflows/update-readme.yml</code>文件，<code>./.github/workflows/</code>是GitHub Actions默认用于存放Workflow文件的路径，注意新建文件夹时不要漏掉<code>.github</code>文件夹名称前面的<code>.</code>。将下面的代码复制到这个文件中。</p>
<figure class="highlight yml"><figcaption><span>update-readme.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Update</span> <span class="string">Latest</span> <span class="string">Blog</span> <span class="string">Posts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">repository_dispatch:</span></span><br><span class="line">    <span class="attr">types:</span> [<span class="string">update-my-profile</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">update-readme:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="number">14</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">node-fetch</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">node-fetch</span></span><br><span class="line">      </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">feedparser</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">feedparser</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Update</span> <span class="string">README</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">node</span> <span class="string">update-readme.mjs</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">if</span> <span class="string">README</span> <span class="string">has</span> <span class="string">changed</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">readme-check</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        git fetch origin master</span></span><br><span class="line"><span class="string">        changed_files=$(git diff --name-only origin/master)</span></span><br><span class="line"><span class="string">        if echo &quot;$changed_files&quot; | grep -q &#x27;README.md&#x27;; then</span></span><br><span class="line"><span class="string">          echo &quot;readme_changed=true&quot; &gt;&gt; $GITHUB_ENV</span></span><br><span class="line"><span class="string">        else</span></span><br><span class="line"><span class="string">          echo &quot;readme_changed=false&quot; &gt;&gt; $GITHUB_ENV</span></span><br><span class="line"><span class="string">        fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Commit</span> <span class="string">and</span> <span class="string">push</span> <span class="string">changes</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        if [[ &quot;$&#123;&#123; env.readme_changed &#125;&#125;&quot; == &quot;true&quot; ]]; then</span></span><br><span class="line"><span class="string">          git config --local user.name &#x27;github-actions[bot]&#x27;</span></span><br><span class="line"><span class="string">          git config --local user.email &#x27;github-actions[bot]@users.noreply.github.com&#x27;</span></span><br><span class="line"><span class="string">          git add README.md</span></span><br><span class="line"><span class="string">          git commit -m &quot;Update README with latest blog posts&quot;</span></span><br><span class="line"><span class="string">          git push</span></span><br><span class="line"><span class="string">        else</span></span><br><span class="line"><span class="string">          echo &quot;README.md has not changed. Skipping commit and push.&quot;</span></span><br><span class="line"><span class="string">        fi</span></span><br></pre></td></tr></table></figure>

<p>这个Workflow的作用如下：</p>
<ol>
<li>在收到博客仓库发送的<code>repository_dispatch</code>事件后开始运行</li>
<li>安装与设置Node相关环境<ul>
<li>这里我使用的Node 14，原因是后续新版本的Node会导致GitHub Actions在运行过程中莫名其妙的终止，没找到具体原因。</li>
</ul>
</li>
<li>安装所需的Node.js模块，这里我们用到了<code>node-fetch</code>与<code>feedparser</code><ul>
<li><code>node-fetch</code> 是一个用于在 Node.js 环境中进行 HTTP 请求的库。它提供了一种简单的方式来发起 HTTP 请求并处理响应，类似于浏览器中的 Fetch API。</li>
<li><code>feedparser</code> 是一个用于解析 RSS 和 Atom 格式的订阅源（feed），并将其转化为易于处理的 JavaScript 对象的 Node.js 模块。</li>
</ul>
</li>
<li>运行Node脚本</li>
<li>检查<code>README.md</code>是否发生变动，添加这步是因为有时我会更新老博文，这样最近博文部分就不会有变化，直接推送的话Workflow会报错<ul>
<li>如果发生变动则提交并推送相关更改</li>
<li>没有变动则跳过</li>
</ul>
</li>
</ol>
<div class="note warning"><p>注意事项：如果你的主分支名称是<code>main</code>的话，需要在<code>Check if README has changed</code>中修改下面两条，将<code>master</code>改为<code>main</code></p>
<ul>
<li>git fetch origin master</li>
<li>changed_files&#x3D;$(git diff –name-only origin&#x2F;master)</li>
</ul>
</div>

<details class="note primary"><summary><p>关于repository_dispatch</p>
</summary>
<p><code>repository_dispatch</code> 是 GitHub Actions 中的一种事件类型，它允许你手动触发仓库中定义的 Workflow。这个功能对于需要在特定情况下手动启动自动化任务的场景非常有用。</p>
<p>下面是关于 <code>repository_dispatch</code> 的详细解释：</p>
<ul>
<li><p><strong>手动触发工作流程</strong>：<code>repository_dispatch</code> 允许你手动触发在仓库中定义的 GitHub Actions Workflow。这意味着你可以在需要时手动启动 Workflow 的执行，而不依赖于特定事件（如 push、pull request 等）来触发。</p>
</li>
<li><p><strong>自定义事件类型</strong>：你可以为 <code>repository_dispatch</code> 指定自定义的事件类型。这个事件类型可以是你自己定义的，以描述触发的目的或操作。例如，你可以定义一个事件类型为 “update-my-profile”，表示触发 Workflow 来更新用户配置文件。</p>
</li>
<li><p><strong>携带有效负载数据</strong>：你还可以选择携带一些有效负载数据（payload），这些数据可以在触发 Workflow 时一同发送。有效负载数据是一个 JSON 对象，它可以包含任何需要传递给 Workflow 的信息，以帮助它执行特定的操作。</p>
</li>
<li><p><strong>访问 GitHub API 权限</strong>：触发 <code>repository_dispatch</code> 事件需要有适当的 GitHub API 权限。通常，你需要具有推送代码（push）的权限，或者是仓库管理员，才能触发 <code>repository_dispatch</code> 事件。</p>
</li>
</ul>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<h3 id="设置Workflow读写权限"><a href="#设置Workflow读写权限" class="headerlink" title="设置Workflow读写权限"></a>设置Workflow读写权限</h3><p>默认情况下，Workflow对所在仓库的文件只有读取权限，写入权限需要手动开启，步骤如下：</p>
<ol>
<li>打开Profile仓库的<code>Settings</code></li>
<li>点击左侧边栏中<code>Actions</code>选项下的<code>General</code>选项</li>
<li>将<code>Workflow permissions</code>修改为<code>Read and write permissions</code></li>
<li>点击<code>Save</code></li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-k2d1bl1rl">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1-4.webp"><img data-src="https://s2.loli.net/2023/10/19/jUoBOJmAY9utS8h.webp" alt="1-4.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-k2d1bl1rl" class="carousel-caption"> </div>
    </div>
  

<h3 id="创建Node脚本"><a href="#创建Node脚本" class="headerlink" title="创建Node脚本"></a>创建Node脚本</h3><p>在Profile仓库的根目录中创建<code>update-readme.mjs</code>文件，注意文件格式是<code>mjs</code>而不是<code>js</code>。</p>
<p>我起初使用的是js格式，但是在GitHub Actions运行时会因为无法导入模块而报错，原因未知。</p>
<details class="note primary"><summary><p>关于js与mjs格式</p>
</summary>
<p><code>.mjs</code> 文件和 <code>.js</code> 文件都是 JavaScript 文件的扩展名，但它们有一些关键的区别：</p>
<ol>
<li><p><strong>模块类型：</strong></p>
<ul>
<li><code>.mjs</code> 文件被视为 ECMAScript 模块（ES 模块），这意味着它们使用了 JavaScript 的原生模块系统，可以使用 <code>import</code> 和 <code>export</code> 语句来导入和导出模块。ES 模块是 JavaScript 的官方模块标准，通常用于现代 JavaScript 开发。</li>
<li><code>.js</code> 文件可以是传统 CommonJS 模块（Node.js 模块），这些模块使用 <code>require()</code> 和 <code>module.exports</code> 语法来导入和导出模块。CommonJS 是 Node.js 最早引入的模块系统，但也可以在浏览器中使用，通过工具如 Browserify 或 Webpack 来支持。</li>
</ul>
</li>
<li><p><strong>默认行为：</strong></p>
<ul>
<li>Node.js 中，默认情况下，<code>.js</code> 文件被视为 CommonJS 模块，除非在代码中明确指定了使用 ES 模块。这意味着你可以省略文件扩展名（如 <code>.js</code>），并且 Node.js 会自动查找 CommonJS 模块。</li>
<li><code>.mjs</code> 文件则默认被视为 ES 模块，你需要在导入或运行时明确指定文件扩展名（如 <code>import foo from &#39;./module.mjs&#39;</code>）。</li>
</ul>
</li>
<li><p><strong>浏览器支持：</strong></p>
<ul>
<li>浏览器普遍支持 ES 模块，因此，你可以在浏览器环境中使用 <code>.mjs</code> 文件作为模块。</li>
<li>浏览器对 CommonJS 模块的支持有限，通常需要使用工具（如 Browserify）来将 CommonJS 模块转化为可在浏览器中运行的代码。</li>
</ul>
</li>
<li><p><strong>Node.js 版本：</strong></p>
<ul>
<li><code>.mjs</code> 文件需要 Node.js 13.2.0 版本或更高版本的运行环境，以支持 ES 模块的默认行为。在早期版本的 Node.js 中，你需要显式启用 ES 模块支持。</li>
<li><code>.js</code> 文件则在早期版本的 Node.js 中被广泛支持，无需特殊配置。</li>
</ul>
</li>
</ol>
<p>总之，选择使用 <code>.mjs</code> 或 <code>.js</code> 取决于你的项目需求和目标环境。如果你在 Node.js 中并且想要使用 ES 模块，可以选择使用 <code>.mjs</code> 文件。如果你需要在浏览器中使用模块，ES 模块是更常见的选择，但你也可以将 CommonJS 模块转化为 ES 模块。</p>
<blockquote>
<p>源自Chat GPT</p>
</blockquote>

</details>

<p>脚本代码如下：</p>
<figure class="highlight mjs"><figcaption><span>update-readme.mjs</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; readFile, writeFile &#125; <span class="keyword">from</span> <span class="string">&#x27;fs/promises&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FeedParser</span> <span class="keyword">from</span> <span class="string">&#x27;feedparser&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">updateReadme</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rssUrl = <span class="string">&#x27;https://siriusq.top/en/atom.xml&#x27;</span>;  <span class="comment">// 替换成你的博客的 RSS Feed 链接</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(rssUrl);</span><br><span class="line">    <span class="keyword">const</span> feedparser = <span class="keyword">new</span> <span class="title class_">FeedParser</span>();</span><br><span class="line"></span><br><span class="line">    response.<span class="property">body</span>.<span class="title function_">pipe</span>(feedparser);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> posts = [];</span><br><span class="line"></span><br><span class="line">    feedparser.<span class="title function_">on</span>(<span class="string">&#x27;readable&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> item;</span><br><span class="line">      <span class="keyword">while</span> ((item = <span class="variable language_">this</span>.<span class="title function_">read</span>())) &#123;</span><br><span class="line">        <span class="keyword">if</span> (posts.<span class="property">length</span> &lt; <span class="number">7</span>) &#123; <span class="comment">// 获取前7篇博文</span></span><br><span class="line">          <span class="keyword">const</span> title = item.<span class="property">title</span>;</span><br><span class="line">          <span class="keyword">const</span> link = item.<span class="property">link</span>;</span><br><span class="line">          posts.<span class="title function_">push</span>(<span class="string">`- [<span class="subst">$&#123;title&#125;</span>](<span class="subst">$&#123;link&#125;</span>)`</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    feedparser.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (posts.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 读取 README 文件</span></span><br><span class="line">        <span class="keyword">const</span> readme = <span class="keyword">await</span> <span class="title function_">readFile</span>(<span class="string">&#x27;README.md&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新 README 文件中的标识符内容</span></span><br><span class="line">        <span class="keyword">const</span> updatedReadme = readme.<span class="title function_">replace</span>(</span><br><span class="line">          <span class="regexp">/&lt;!-- Start_Position --&gt;.*&lt;!-- End_Position --&gt;/</span>s,</span><br><span class="line">          <span class="string">`&lt;!-- Start_Position --&gt;\n<span class="subst">$&#123;posts.join(<span class="string">&#x27;\n&#x27;</span>)&#125;</span>\n&lt;!-- End_Position --&gt;`</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写回 README 文件</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">writeFile</span>(<span class="string">&#x27;README.md&#x27;</span>, updatedReadme);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;README 更新成功！&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;未能找到博文。&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;更新失败:&#x27;</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">updateReadme</span>();</span><br></pre></td></tr></table></figure>

<div class="note warning"><p>注意事项：</p>
<ul>
<li>将<code>const rssUrl = &#39;https://siriusq.top/en/atom.xml&#39;</code>的值替换成你的博客的 RSS Feed 链接</li>
<li><code>if (posts.length &lt; 7)</code>用于设置展示的博文数量，默认是7篇</li>
</ul>
</div>


<h3 id="向README添加标识符"><a href="#向README添加标识符" class="headerlink" title="向README添加标识符"></a>向README添加标识符</h3><p>接下来需要我们在Profile仓库的README文件中添加两个标识符，当Workflow被触发后，两个标识符中间的内容就会自动更新为最新的博文标题与链接。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&lt;!-- Start<span class="emphasis">_Position --&gt;</span></span><br><span class="line"><span class="emphasis">&lt;!-- End_</span>Position --&gt;</span><br></pre></td></tr></table></figure>

<p>示例如下：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">Other Contents......</span><br><span class="line"></span><br><span class="line"><span class="section">### 📝 Latest Blog Posts</span></span><br><span class="line">The following are my latest 7 blog posts:</span><br><span class="line"></span><br><span class="line">&lt;!-- Start<span class="emphasis">_Position --&gt;</span></span><br><span class="line"><span class="emphasis">- [<span class="string">Quick Setup Guide for LaTeX in VSCode</span>](<span class="link">https://siriusq.top/en/latex-vscode-quick-config.html</span>)</span></span><br><span class="line"><span class="emphasis">- [<span class="string">Accessing Windows Shared Folders on iPhone</span>](<span class="link">https://siriusq.top/en/ios-windows-file-share.html</span>)</span></span><br><span class="line"><span class="emphasis">- [<span class="string">Stellaris Mod Creation and Upload Log</span>](<span class="link">https://siriusq.top/en/stellaris-mod.html</span>)</span></span><br><span class="line"><span class="emphasis">- [<span class="string">Bongo Paw Clicker Development Summary</span>](<span class="link">https://siriusq.top/en/bongo-paw-blicker.html</span>)</span></span><br><span class="line"><span class="emphasis">- [<span class="string">Enabling Integrated Graphics with Discrete Graphics Installed</span>](<span class="link">https://siriusq.top/en/turn-on-igpu.html</span>)</span></span><br><span class="line"><span class="emphasis">- [<span class="string">MacBook Pro Headless</span>](<span class="link">https://siriusq.top/en/macbook-pro-headless.html</span>)</span></span><br><span class="line"><span class="emphasis">&lt;!-- End_</span>Position --&gt;</span><br><span class="line"></span><br><span class="line">Other Contents......</span><br></pre></td></tr></table></figure>

<p>最后，将所做的更改推送到GitHub中</p>
<h2 id="博客仓库"><a href="#博客仓库" class="headerlink" title="博客仓库"></a>博客仓库</h2><h3 id="创建Workflow-1"><a href="#创建Workflow-1" class="headerlink" title="创建Workflow"></a>创建Workflow</h3><p>博客仓库的Workflow同样需要在本地目录中创建，然后再推送到GitHub仓库，因为Hexo框架在部署时会完全替换掉GitHub远程仓库中的所有文件，包括自定义的GitHub Actions。</p>
<p>首先在博客<code>source</code>目录下创建<code>.github/workflows/update-my-profile.yml</code>文件，然后粘贴下面的代码：</p>
<figure class="highlight yml"><figcaption><span>update-my-profile.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Trigger</span> <span class="string">Profile</span> <span class="string">Update</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="string">page_build</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">trigger-my-profile-update:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Dispatch</span> <span class="string">event</span> <span class="string">to</span> <span class="string">Profile</span> <span class="string">Repo</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">GITHUB_PROFILE_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PAT_TOKEN_PROFILE</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        curl -X POST \</span></span><br><span class="line"><span class="string">        -H &quot;Authorization: token $GITHUB_PROFILE_TOKEN&quot; \</span></span><br><span class="line"><span class="string">        -H &quot;Accept: application/vnd.github.everest-preview+json&quot; \</span></span><br><span class="line"><span class="string">        https://api.github.com/repos/[USERNAME]/[USERNAME]/dispatches \</span></span><br><span class="line"><span class="string">        --data &#x27;&#123;&quot;event_type&quot;: &quot;update-my-profile&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这个Workflow的作用是，当博客的Page成功构建后，通过我们先前设置的Repository Secret获取对仓库的完全访问权限，然后通过<code>repository_dispatch</code>事件触发Profile仓库中的另一个Workflow，即我们先前设置的<code>update-my-profile</code>。</p>
<div class="note warning"><p>注意事项：</p>
<ul>
<li>将倒数第二行中的两个<code>[USERNAME]</code>替换为你自己的GitHub用户名，去掉两边的中括号</li>
<li><code>GITHUB_PROFILE_TOKEN</code>变量的数值就是我们前面设置的<code>Secret</code>的<code>Name</code></li>
</ul>
</div>

<h3 id="修改Hexo框架配置文件"><a href="#修改Hexo框架配置文件" class="headerlink" title="修改Hexo框架配置文件"></a>修改Hexo框架配置文件</h3><p>如果你在此时尝试重新生成博客静态文件并部署到远程仓库，你会发现GitHub Actions中并没有出现刚刚设置的Workflow，这是因为前缀为<code>.</code>的文件和文件夹在 Unix 和 Linux 系统中被视为隐藏文件，<code>hexo g</code>与<code>hexo d</code>两条命令会默认忽略这些隐藏文件，所以用于存放我们Workflow的文件夹<code>.github</code>被视为隐藏文件忽略掉了。接下来我们会通过修改配置文件让Hexo框架在生成和部署过程中捎带上我们的Workflow。</p>
<p>首先打开Hexo框架的配置文件<code>_config.yml</code>，通过搜索定位到<code>include</code>设置，添加Workflow文件的路径</p>
<figure class="highlight yml"><figcaption><span>Workflow文件路径</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="string">.github/workflows/update-my-profile.yml</span></span><br></pre></td></tr></table></figure>

<p>示例如下：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="attr">include:</span> <span class="string">.github/workflows/update-my-profile.yml</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br></pre></td></tr></table></figure>

<p>然后通过搜索定位到<code>deploy</code>设置，在最下面添加一行<code>ignore_hidden: false</code>，示例如下：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:Siriusq/en.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>此外，Hexo框架在生成静态文件时会将yml格式的文件转换为GitHub Actions不支持的json格式，这也会导致此前设置的Workflow失效。接下来需要我们将workflow文件路径添加到<code>skip_render</code>中，这样Hexo框架在生成文件时就会将它原封不动的复制到public文件夹中。示例如下：</p>
<figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">.github/workflows/update-my-profile.yml</span></span><br></pre></td></tr></table></figure>

<p>保存更改，然后运行<code>hexo cl</code>与<code>hexo g -d</code>命令，不出意外的话几分钟后就能看到自动更新后的Profile了。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-2n829qvjd">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="21.webp"><img data-src="https://s2.loli.net/2023/10/19/oMWf2XS6GavL8jt.webp" alt="21.webp" class="zoomable"></li><li class="splide__slide" data-caption="22.webp"><img data-src="https://s2.loli.net/2023/10/19/4WpxQZuj6IOmcDo.webp" alt="22.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-2n829qvjd" class="carousel-caption"> </div>
    </div>
  


<div class="note default"><p>PS：我本来想让Chat GPT给我出一套包含代码的完整的解决方案，就是我只需要复制粘贴就能迅速完成任务的那种。但是吧，Chat GPT让我深刻体会到了代码生成5分钟，Debug一整天的无奈，偷懒大失败。</p>
<p>下图就是我写这篇博文时的心理状态</p>
<p><img data-src="https://s2.loli.net/2023/10/19/qs9INfATvKBamn2.webp" alt="how-openai-chatgpt-helps-software-development.webp"></p>
</div>]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub Pages</tag>
        <tag>GitHub Actions</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash Verge Tun 模式配置记录</title>
    <url>/clash-verge-tun-config.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 在本文中，我将记录Clash Verge的配置过程，包括创建配置文件、切换内核、启用TUN模式以及防止DNS泄露。 </blockquote>

<span id="more"></span>

<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>2023年11月2日下午，Clash for Windows（CFW）仓库被删除，当晚相关话题冲上微博热搜前十，吸引来一些又蠢又坏的自媒体煽风点火，谣言满天飞。次日，Clash系的多数仓库均采取了删库或归档切换分支的措施，暂避风头。由于CFW不再更新，出于安全考虑，我决定从CFW切换到Clash Verge。</p>
<h1 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h1><p>以下是Clash Verge的GitHub Release页面，请根据你的操作系统选择相应的安装包：</p>
<ul>
<li>Windows用户可以下载 <code>Clash.Verge_1.x.x_x64_zh-CN.msi</code></li>
<li>使用Intel CPU的Mac用户可以下载 <code>Clash.Verge_1.x.x_x64.dmg</code></li>
<li>使用M系列CPU的Mac用户可以下载 <code>Clash.Verge_1.x.x_aarch64.dmg</code></li>
</ul>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Clash Verge</p><p>Clash Verge Rev Release 页面</p>
<a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"></a>
</div></div>

<p>安装过程非常简单，只需一直点击<code>下一步</code>即可，无需进行其他设置。</p>
<h1 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h1><p>首先，点击左侧边栏中的<code>Settings</code>以打开设置页面。</p>
<h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p>在<code>Verge Setting</code>中将<code>Language</code>设置为<code>中文</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-4bfrid6bc">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="语言设置.png"><img data-src="https://s2.loli.net/2023/11/07/3uJXgw2jV9izKP6.png" alt="语言设置.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-4bfrid6bc" class="carousel-caption"> </div>
    </div>
  

<details class="note success"><summary><p>过时内容</p>
</summary>
<h2 id="切换内核"><a href="#切换内核" class="headerlink" title="切换内核"></a>切换内核</h2><p>新版本的Clash Verge已经移除了 Clash Premium 内核，不再需要额外设置内核。</p>
<p><del>Clash Verge支持两个内核：Clash Premium（闭源且已删库）和Clash Meta（开源）。默认情况下使用的是Clash Premium，建议将内核切换为Clash Meta。</del></p>
<ol>
<li><p><del>在<code>Clash设置</code>中找到<code>Clash内核</code>项，然后点击后面的小齿轮图标。</del></p>
</li>
<li><p><del>选择<code>Clash Meta</code>。</del></p>
</li>
<li><p><del>点击右上角的<code>重启内核</code>。</del></p>
 <div class="carousel-container">
   <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-wbssxx1pk">
     <div class="splide__track">
       <ul class="splide__list"><li class="splide__slide" data-caption="切换内核.png"><img data-src="https://s2.loli.net/2023/11/07/dxoDgMcjFPlVHf6.png" alt="切换内核.png" class="zoomable"></li><li class="splide__slide" data-caption="切换为meta并重启内核.png"><img data-src="https://s2.loli.net/2023/11/07/ve2n3WyxtI6sPwk.png" alt="切换为meta并重启内核.png" class="zoomable"></li></ul>
     </div>
   </div>
   <div id="carousel-caption-wbssxx1pk" class="carousel-caption"> </div>
 </div></li>
</ol>

</details>

<h2 id="设置外部控制"><a href="#设置外部控制" class="headerlink" title="设置外部控制"></a>设置外部控制</h2><p>之前，Clash曝出了一个漏洞，攻击者可以通过RESTful API接口植入木马。出于安全考虑，我修改了默认的外部控制端口并添加了密码。详细信息请看<a href="https://www.youtube.com/watch?v=4AnapDDMlyI">不良林的Youtube视频</a>。</p>
<ol>
<li>在<code>Clash设置</code>中找到<code>外部控制</code>项，然后点击后面的箭头。</li>
<li>修改<code>External Controller</code>的端口，默认是<code>9090</code>，可以改成<code>11451</code>（手动狗头）。</li>
<li>在<code>Core Secret</code>中填写密码。</li>
<li>保存。</li>
</ol>
<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><p>以下是我自己的配置，仅供参考，请根据你的需求进行设置。</p>
<ul>
<li>禁用IPv6</li>
<li>禁用局域网连接</li>
<li>开启开机启动</li>
<li>开启静默启动</li>
</ul>
<h1 id="配置文件设置"><a href="#配置文件设置" class="headerlink" title="配置文件设置"></a>配置文件设置</h1><ol>
<li>点击左侧边栏中的<code>配置</code>。</li>
<li>点击右上角的<code>新建</code>。</li>
<li>类型选择<code>Local</code>，名称自定，其余两项留空。<ul>
<li>更多配置文件类型，请参考<a href="https://github.com/zzzgydi/clash-verge/wiki/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">Clash Verge Wiki</a>。</li>
</ul>
</li>
<li>点击<code>保存</code>。</li>
<li>右键单击新建的配置项，选择<code>打开文件</code>，默认会使用VSCode打开。</li>
<li>填写自己的配置并<code>保存</code>。<ul>
<li>如果不熟悉配置，可以参考<a href="https://wiki.metacubex.one/example/">Clash Meta文档</a>，在配置示例中有个懒人配置可以直接拿来用。</li>
<li>也可以直接使用CFW的配置文件大部分内容。</li>
</ul>
</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-vtokp2lfi">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="新建配置.png"><img data-src="https://s2.loli.net/2023/11/07/uZ8LznlQJANeIKW.png" alt="新建配置.png" class="zoomable"></li><li class="splide__slide" data-caption="编辑文件.png"><img data-src="https://s2.loli.net/2023/11/07/7GoCLb4uyIUizZB.png" alt="编辑文件.png" class="zoomable"></li><li class="splide__slide" data-caption="粘贴并保存.png"><img data-src="https://s2.loli.net/2023/11/07/K3ME2oqcrm5X79G.png" alt="粘贴并保存.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-vtokp2lfi" class="carousel-caption"> </div>
    </div>
  

<details class="note success"><summary><p>我的配置文件</p>
</summary>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mixed-port:</span> <span class="number">7890</span> <span class="comment"># 代理端口</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">false</span> <span class="comment"># 不允许允许其他设备经过 Clash 的代理端口访问互联网</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:11451</span> <span class="comment"># RESTful API 监听地址，默认端口9090，建议修改为其他端口</span></span><br><span class="line"><span class="attr">secret:</span> <span class="string">&quot;Woshiyigemeiyouganqingdemima!&quot;</span> <span class="comment"># API 的访问密钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># host: # 原神私服，启动！</span></span><br><span class="line"><span class="comment">#   &#x27;*.mihoyo.com&#x27;: 127.0.0.1</span></span><br><span class="line"><span class="comment">#   &#x27;*.yuanshen.com&#x27;: 127.0.0.1</span></span><br><span class="line"><span class="comment">#   &#x27;*.hoyoverse.com&#x27;: 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">profile:</span></span><br><span class="line">  <span class="attr">store-selected:</span> <span class="literal">true</span> <span class="comment"># 储存 API 对策略组的选择，以供下次启动时使用</span></span><br><span class="line">  <span class="attr">store-fake-ip:</span> <span class="literal">true</span> <span class="comment"># 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sniffer:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sniff:</span></span><br><span class="line">    <span class="attr">TLS:</span></span><br><span class="line">      <span class="attr">ports:</span> [<span class="number">443</span>, <span class="number">8443</span>]</span><br><span class="line">    <span class="attr">HTTP:</span></span><br><span class="line">      <span class="attr">ports:</span> [<span class="number">80</span>, <span class="string">&#x27;8080-8880&#x27;</span>]</span><br><span class="line">      <span class="attr">override-destination:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 启用TUN模式</span></span><br><span class="line">  <span class="attr">stack:</span> <span class="string">system</span> <span class="comment"># TUN 模式堆栈，MacOS建议用 gvisor</span></span><br><span class="line">  <span class="attr">dns-hijack:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;any:53&#x27;</span> <span class="comment"># dns 劫持，一般设置为 any:53 即可，即劫持所有 53 端口的 udp 流量</span></span><br><span class="line">  <span class="attr">auto-route:</span> <span class="literal">true</span> <span class="comment"># 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡</span></span><br><span class="line">  <span class="attr">auto-detect-interface:</span> <span class="literal">true</span> <span class="comment"># 自动选择流量出口接口</span></span><br><span class="line">  <span class="attr">strict-route:</span> <span class="literal">true</span> <span class="comment"># 严格路由，可以防止地址泄漏</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">prefer-h3:</span> <span class="literal">true</span> <span class="comment"># 优先使用HTTP3</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:53</span> <span class="comment"># dns 服务监听</span></span><br><span class="line">  <span class="attr">ipv6:</span> <span class="literal">true</span> <span class="comment"># 是否解析 IPV6, 如为 false, 则回应 AAAA 的空解析</span></span><br><span class="line">  <span class="attr">enhanced-mode:</span> <span class="string">fake-ip</span> <span class="comment"># Clash 的 dns 处理模式</span></span><br><span class="line">  <span class="attr">fake-ip-range:</span> <span class="number">28.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">/8</span> <span class="comment"># fakeip 下的 IP 段设置，tun 网卡的默认 ip 也使用此值</span></span><br><span class="line">  <span class="attr">use-hosts:</span> <span class="literal">true</span> <span class="comment"># 是否查询系统 hosts</span></span><br><span class="line">  <span class="attr">fake-ip-filter:</span> <span class="comment"># fakeip 过滤，以下地址不会下发 fakeip 映射用于连接</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;+.lan&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;+.local&#x27;</span></span><br><span class="line">  <span class="attr">default-nameserver:</span> <span class="comment">#默认 dns，用于解析 nameserver 中的 DNS 服务器，必须为 ip, 可为加密 dns</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">  <span class="attr">nameserver:</span> <span class="comment"># 默认的域名解析服务器，如不配置 fallback/proxy-server-nameserver , 则所有域名都由 nameserver 解析</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line">  <span class="attr">fallback:</span> <span class="comment">#后备域名解析服务器，一般情况下使用境外 DNS, 保证结果可信，配置 fallback后默认启用 fallback-filter,geoip-code为 cn</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://1.0.0.1/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://1.1.1.1/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://9.9.9.9/dns-query</span></span><br><span class="line">  <span class="attr">proxy-server-nameserver:</span> <span class="comment"># 代理节点域名解析服务器，仅用于解析代理节点的域名</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://9.9.9.9/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://1.12.12.12/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://223.5.5.5/dns-query</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://1.1.1.1/dns-query</span></span><br><span class="line">  <span class="attr">nameserver-policy:</span> <span class="comment"># 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询</span></span><br><span class="line">    <span class="string">&quot;geosite:cn,private&quot;</span><span class="string">:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理设置，以 Just My Socks 为例</span></span><br><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ss</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx1.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">aes-256-gcm</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s2</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ss</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx2.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">aes-256-gcm</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">xxxxx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s3</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">vmess</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx3.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">uuid:</span> <span class="string">xxx-114514-xxxxxx</span></span><br><span class="line">    <span class="attr">alterId:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">auto</span></span><br><span class="line">    <span class="comment"># tls: true</span></span><br><span class="line">    <span class="comment"># skip-cert-verify: true</span></span><br><span class="line">    <span class="comment"># servername: example.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s4</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">vmess</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx4.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">uuid:</span> <span class="string">xxx-114514-xxxxxx</span></span><br><span class="line">    <span class="attr">alterId:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">auto</span></span><br><span class="line">    <span class="comment"># tls: true</span></span><br><span class="line">    <span class="comment"># skip-cert-verify: true</span></span><br><span class="line">    <span class="comment"># h2-opts:</span></span><br><span class="line">    <span class="comment">#   host:</span></span><br><span class="line">    <span class="comment">#     - http.example.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s5</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">vmess</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx5.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">uuid:</span> <span class="string">xxx-114514-xxxxxx</span></span><br><span class="line">    <span class="attr">alterId:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">auto</span></span><br><span class="line">    <span class="comment"># tls: true</span></span><br><span class="line">    <span class="comment"># skip-cert-verify: true</span></span><br><span class="line">    <span class="comment"># servername: example.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">jms-s801</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">vmess</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">xxxx801.xxxxx.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">12345</span></span><br><span class="line">    <span class="attr">uuid:</span> <span class="string">xxx-114514-xxxxxx</span></span><br><span class="line">    <span class="attr">alterId:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">auto</span></span><br><span class="line">    <span class="comment"># tls: true</span></span><br><span class="line">    <span class="comment"># skip-cert-verify: true</span></span><br><span class="line">    <span class="comment"># servername: example.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 策略组，我只用了手动选择这一种</span></span><br><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROXY</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s4</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s5</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">jms-s801</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 规则集，我用了[Loyalsoldier](https://github.com/Loyalsoldier/clash-rules)的</span></span><br><span class="line"><span class="attr">rule-providers:</span></span><br><span class="line">  <span class="attr">reject:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/reject.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">icloud:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/icloud.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">apple:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/apple.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">google:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/google.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/proxy.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">direct:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/direct.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">private:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/private.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">gfw:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/gfw.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tld-not-cn:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/tld-not-cn.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">telegramcidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/telegramcidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cncidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/cncidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">lancidr:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/lancidr.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">applications:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./ruleset/applications.yaml</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 规则</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,applications,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN,clash.razord.top,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">DOMAIN,yacd.haishan.me,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,private,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,reject,REJECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,icloud,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,apple,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,google,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,proxy,PROXY</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,direct,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,lancidr,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,cncidr,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RULE-SET,telegramcidr,PROXY</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GEOIP,LAN,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">GEOIP,CN,DIRECT</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">MATCH,PROXY</span></span><br><span class="line"></span><br><span class="line"><span class="attr">geodata-mode:</span> <span class="literal">true</span> <span class="comment"># 使用dat格式的geoip文件</span></span><br><span class="line"><span class="attr">geox-url:</span> <span class="comment"># 自定义geo下载地址</span></span><br><span class="line">  <span class="attr">geoip:</span> <span class="string">&quot;https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat&quot;</span></span><br><span class="line">  <span class="attr">geosite:</span> <span class="string">&quot;https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat&quot;</span></span><br><span class="line">  <span class="attr">mmdb:</span> <span class="string">&quot;https://fastly.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb&quot;</span></span><br></pre></td></tr></table></figure>
</details>

<div class="note primary"><p>更多配置选项请参考<a href="https://wiki.metacubex.one/config/">Clash.Meta官方文档</a></p>
</div>

<h1 id="启用TUN模式"><a href="#启用TUN模式" class="headerlink" title="启用TUN模式"></a>启用TUN模式</h1><p>TUN接口是一种虚拟网络接口，允许用户空间程序与内核之间的通信，以便将数据包从一个网络堆栈传递到另一个。Clash Meta支持启用TUN模式，它通过创建一个TUN虚拟网卡来接管用户网络中的三层数据包。在TUN模式下，所有应用程序和流量都将被强制路由到代理服务器，无论应用程序是否支持代理设置。</p>
<ol>
<li>点击左侧边栏中的<code>设置</code>，找到<code>服务模式</code>并点击后面的小盾牌图标。</li>
<li>点击<code>INSTALL</code>。<ul>
<li>安装时可能会报告安装失败，但实际上是成功的，这可能是一个Bug。</li>
</ul>
</li>
<li>打开服务模式与Tun模式的开关，同时关闭系统代理的开关。</li>
<li>如果任务栏左下角的网络图标由WiFi变成下图所示的图标，说明安装成功。<br><img data-src="https://s2.loli.net/2023/11/07/beujaYXTOGxI6QH.png" alt="任务栏左下角网络图标变成这样说明安装成功.png"></li>
<li>点击左侧边栏中的<code>配置</code>，右键单击之前创建的配置项，然后选择<code>使用</code>。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-3w8k7m72y">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="安装服务模式.png"><img data-src="https://s2.loli.net/2023/11/07/mzWkwQPXtaFUrD4.png" alt="安装服务模式.png" class="zoomable"></li><li class="splide__slide" data-caption="点击INSTALL-忽略掉左上角的报错-可能是bug.png"><img data-src="https://s2.loli.net/2023/11/07/f7tDroGg6ki4ABc.png" alt="点击INSTALL-忽略掉左上角的报错-可能是bug.png" class="zoomable"></li><li class="splide__slide" data-caption="勾选对应设置.png"><img data-src="https://s2.loli.net/2023/11/07/rhHXDnqv5zgZMmE.png" alt="勾选对应设置.png" class="zoomable"></li><li class="splide__slide" data-caption="右键启用配置.png"><img data-src="https://s2.loli.net/2023/11/07/o2YfEq63QF47vcN.png" alt="右键启用配置.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-3w8k7m72y" class="carousel-caption"> </div>
    </div>
  

<h1 id="更新规则"><a href="#更新规则" class="headerlink" title="更新规则"></a>更新规则</h1><p>我在配置文件中设置了很多条规则，为了使这些规则生效，还需要手动更新规则文件。</p>
<ol>
<li>点击左侧边栏中的<code>规则</code></li>
<li>点击打开右上角的<code>规则集合</code></li>
<li>点击<code>更新全部</code><ul>
<li>如果你有本地规则文件，需要先将文件复制到Clash应用目录下的<code>ruleset</code>文件夹，然后再来更新规则</li>
</ul>
</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-x9ylidfqt">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="更新规则"><img data-src="https://s2.loli.net/2024/10/28/IticmqGwpC68SnH.webp" alt="更新规则" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-x9ylidfqt" class="carousel-caption"> </div>
    </div>
  

<h1 id="防止DNS泄露"><a href="#防止DNS泄露" class="headerlink" title="防止DNS泄露"></a>防止DNS泄露</h1><p>DNS泄露（DNS Leak）是一种网络隐私问题，通常发生在使用虚拟专用网络（VPN）或代理服务时。它指的是用户的DNS查询未通过VPN或代理处理，而是绕过它们，直接发送到本地或公共DNS服务器。这可能会泄露用户的在线活动信息，因为DNS查询通常包含用户正在访问的网站信息，即使其网络流量通过VPN或代理加密和隐藏。</p>
<p>有关DNS泄露的更多信息，请参考不良林的相关视频：</p>
<ul>
<li><a href="https://youtu.be/fqREM6b25SY">进阶•DNS泄露篇</a></li>
<li><a href="https://youtu.be/aKlH6KRt9Jc">进阶•DNS分流篇</a></li>
<li><a href="https://youtu.be/50iVDmqzDW8">进阶•DNS代理篇</a></li>
</ul>
<h2 id="禁用智能多宿主名称解析"><a href="#禁用智能多宿主名称解析" class="headerlink" title="禁用智能多宿主名称解析"></a>禁用智能多宿主名称解析</h2><p>Windows系统的智能多宿主域名解析会同时向所有网络发出并行的DNS查询以提高性能。尽管我在配置文件中设置了相关的DNS规则，但这些规则仅对Clash设置的Tun虚拟网卡生效，而物理网卡不受其控制。因此，未禁用智能多宿主名称解析的情况下，系统可能会同时通过虚拟网卡和物理网卡发起DNS查询，而物理网卡使用的DNS服务器一般是本地或公共DNS，也就意味着运营商等第三方可以看到你正在访问的网站，此时就发生了DNS泄露。</p>
<p>这一步可以使用WireShark抓取物理网卡的数据来对比禁用前后的区别。</p>
<p>关闭方法如下：</p>
<ol>
<li>在开始菜单搜索<code>编辑组策略</code>并打开对应控制面板。</li>
<li>打开<code>计算机配置</code>-<code>管理模板</code>-<code>网络</code>-<code>DNS 客户端</code>-<code>禁用智能多宿主名称解析</code>。</li>
<li>勾选左上角的<code>已启用</code>。</li>
<li>点击<code>确定</code>。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-ht1ljgbo8">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="打开组策略编辑器.png"><img data-src="https://s2.loli.net/2023/11/07/IpCg1TZd6azANJ5.png" alt="打开组策略编辑器.png" class="zoomable"></li><li class="splide__slide" data-caption="找到对应策略.png"><img data-src="https://s2.loli.net/2023/11/07/dR63HkPtOEfeMmo.png" alt="找到对应策略.png" class="zoomable"></li><li class="splide__slide" data-caption="禁用多宿主并确定.png"><img data-src="https://s2.loli.net/2023/11/07/Aryc3ehHiDUmdOL.png" alt="禁用多宿主并确定.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-ht1ljgbo8" class="carousel-caption"> </div>
    </div>
  

<h2 id="禁用QUIC"><a href="#禁用QUIC" class="headerlink" title="禁用QUIC"></a>禁用QUIC</h2><p>QUIC（Quick UDP Internet Connections）是一种网络传输协议，旨在加速互联网上的数据传输和提供更快的网络连接。QUIC是由Google开发的，并已被纳入标准化进程，以提高网络性能和安全性。越来越多的浏览器开始支持QUIC功能，以改进用户的网络体验。然而，某些情况下，QUIC会导致DNS泄露，因此建议禁用浏览器中的QUIC功能。</p>
<blockquote>
<p>由于UDP在有些场景下必须使用真实的IP，所以 目前clash处理udp流量的域名，即使是使用fakeip模式，也一定会发起DNS请求。比如基于UDP的QUIC协议，也就是浏览器用的HTTP3，启用了QUIC的浏览器访问youtube这种支持QUIC的网站就会发起DNS请求，导致DNS泄露，解决办法是禁用浏览器的QUIC功能。<br>引自<a href="https://bulianglin.com/archives/dns.html">进阶•DNS分流篇</a></p>
</blockquote>
<p>以Edge浏览器为例，在浏览器地址栏输入<code>edge://flags/#enable-quic</code>，跳转到<code>Experimental QUIC protocol</code>选项，将其设置为<code>Disabled</code>即可。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-1wt1p9b41">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="禁用quic.png"><img data-src="https://s2.loli.net/2023/11/07/Eq67CloYbz1V8NA.png" alt="禁用quic.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-1wt1p9b41" class="carousel-caption"> </div>
    </div>
  

<h2 id="停用浏览器安全DNS"><a href="#停用浏览器安全DNS" class="headerlink" title="停用浏览器安全DNS"></a>停用浏览器安全DNS</h2><p>大部分浏览器现在已经默认开启“安全 DNS”功能，此功能会影响 TUN 模式劫持 DNS 请求导致反推域名失败。</p>
<p>以Edge浏览器为例，找到<code>设置</code>-<code>隐私、搜索和服务``-安全性</code>-<code>使用安全的DNS指定如何查找网站的网络地址</code>，关闭其开关即可。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-cuepchuas">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="关闭安全DNS.png"><img data-src="https://s2.loli.net/2023/11/07/vU6XPrWw1fyzVIR.png" alt="关闭安全DNS.png" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-cuepchuas" class="carousel-caption"> </div>
    </div>
  

<h2 id="启用Clash的DNS服务器并设置本机DNS服务器"><a href="#启用Clash的DNS服务器并设置本机DNS服务器" class="headerlink" title="启用Clash的DNS服务器并设置本机DNS服务器"></a>启用Clash的DNS服务器并设置本机DNS服务器</h2><p>在配置文件中设置好Clash的DNS服务后，将本机的系统DNS服务器设置为<code>127.0.0.1</code>，以WLAN为例，逐步打开<code>系统设置</code>-<code>网络和Internet</code>-<code>WLAN</code>-<code>硬件属性</code>，将<code>DNS服务器分配</code>设置为手动，开启<code>IPv4</code>，在<code>首选DNS</code>中输入<code>127.0.0.1</code>并保存。</p>
]]></content>
      <categories>
        <category>Free Internet</category>
      </categories>
      <tags>
        <tag>Clash</tag>
        <tag>GFW</tag>
        <tag>Win11</tag>
        <tag>Tun</tag>
      </tags>
  </entry>
  <entry>
    <title>在Mac上创建macOS镜像安装文件</title>
    <url>/create-macos-iso.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 此博文记录了如何在Mac上下载macOS的安装文件，并将其转换为ISO镜像文件的过程，请注意此方法不适用于Windows操作系统。 </blockquote>

<span id="more"></span>

<div class="note warning"><p>本文中的方法需要一台真的Mac来完成相关操作，不适用于Windows系统。</p>
</div>

<h1 id="下载原版安装文件"><a href="#下载原版安装文件" class="headerlink" title="下载原版安装文件"></a>下载原版安装文件</h1><ol>
<li>首先打开<a href="https://github.com/corpnewt/gibMacOS">gibMacOS</a>的仓库，这是一个帮助我们直接从苹果服务器下载macOS相关文件的Python脚本  <div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>gibMacOS</p><p>Py2/py3 script that can download macOS components direct from Apple</p>
<a href="https://github.com/corpnewt/gibMacOS"></a>
</div></div></li>
<li>点击右上角的<code>Code</code>按钮，点击<code>Download ZIP</code>下载文件<br><img data-src="https://s2.loli.net/2024/07/15/qm2OiVEGHzJsIS8.jpg" alt="下载gibMacOS.jpg"></li>
<li>解压下载的文件</li>
<li>打开<code>gibMacOS.command</code>，整个过程会出现几个请求权限的弹窗，全部允许即可</li>
<li>如果你当前的系统没有安装python的话，会提示安装python，按<code>Y</code>并回车来安装</li>
<li>输入对应版本前面的数字并回车来下载macOS安装文件</li>
<li>下载完成后打开<code>gibMacOS</code>所在目录中的<code>macOS Downloads</code>文件夹</li>
<li>打开对应版本目录下的<code>InstallAssistant.pkg</code>文件并安装</li>
</ol>
<h1 id="制作ISO镜像"><a href="#制作ISO镜像" class="headerlink" title="制作ISO镜像"></a>制作ISO镜像</h1><p>接下来我们会使用<code>hdiutil</code>工具来制作ISO镜像文件。<code>hdiutil</code> 是 macOS 上的一个命令行工具，用于操作磁盘映像文件（disk images）。</p>
<p>打开macOS的终端，依次输入下面的命令，请根据实际情况调节对应参数：</p>
<ol>
<li><p><strong>创建一个新的磁盘映像文件：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdiutil create -o /tmp/macOS -size 16000m -volname macOS -layout SPUD -fs HFS+J</span><br></pre></td></tr></table></figure>
<ul>
<li><code>hdiutil create</code>: 创建一个新的磁盘映像文件。</li>
<li><code>-o /tmp/macOS</code>: 指定输出文件路径为 <code>/tmp/macOS</code>。</li>
<li><code>-size 16000m</code>: 设置磁盘映像的大小为 16000 MB（16 GB）。请确保磁盘映像的大小大于安装文件的大小。</li>
<li><code>-volname macOS</code>: 设置卷标名为 “macOS”。</li>
<li><code>-layout SPUD</code>: 使用 SPUD（Single Partition, Apple Partition Map）分区布局。</li>
<li><code>-fs HFS+J</code>: 使用 HFS+（Mac OS Extended）文件系统，并启用日志功能。</li>
<li>输出结果为创建一个名为 <code>/tmp/macOS.dmg</code> 的磁盘映像文件。</li>
</ul>
</li>
<li><p><strong>挂载磁盘映像文件：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdiutil attach /tmp/macOS.dmg -noverify -mountpoint /Volumes/macOSISO</span><br></pre></td></tr></table></figure>
<ul>
<li><code>hdiutil attach</code>: 挂载一个磁盘映像文件。</li>
<li><code>/tmp/macOS.dmg</code>: 指定要挂载的磁盘映像文件路径。</li>
<li><code>-noverify</code>: 跳过对磁盘映像的验证过程。</li>
<li><code>-mountpoint /Volumes/macOSISO</code>: 指定挂载点为 <code>/Volumes/macOSISO</code>。</li>
</ul>
</li>
<li><p><strong>使用 macOS 安装程序创建可引导的安装介质：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo /Applications/Install\ macOS\ Sonoma.app/Contents/Resources/createinstallmedia --volume /Volumes/macOSISO --nointeraction</span><br></pre></td></tr></table></figure>
<ul>
<li><code>sudo</code>: 使用超级用户权限运行命令。</li>
<li><code>/Applications/Install\ macOS\ Sonoma.app/Contents/Resources/createinstallmedia</code>: 调用 macOS 安装程序的 <code>createinstallmedia</code> 工具。</li>
<li><code>--volume /Volumes/macOSISO</code>: 指定目标卷为挂载的磁盘映像文件。</li>
<li><code>--nointeraction</code>: 自动执行操作，无需用户交互。</li>
</ul>
</li>
<li><p><strong>卸载挂载的安装介质：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdiutil detach -force /Volumes/Install\ macOS\ Sonoma</span><br></pre></td></tr></table></figure>
<ul>
<li><code>hdiutil detach</code>: 卸载一个挂载的磁盘映像文件。</li>
<li><code>-force</code>: 强制卸载，即使有文件正在使用。</li>
<li><code>/Volumes/Install\ macOS\ Sonoma</code>: 指定要卸载的挂载点。</li>
</ul>
</li>
<li><p><strong>转换磁盘映像文件格式：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hdiutil convert /tmp/macOS.dmg -format UDTO -o ~/Desktop/macOS.cdr</span><br></pre></td></tr></table></figure>
<ul>
<li><code>hdiutil convert</code>: 转换磁盘映像文件格式。</li>
<li><code>/tmp/macOS.dmg</code>: 指定要转换的源磁盘映像文件。</li>
<li><code>-format UDTO</code>: 将磁盘映像文件转换为 UDTO（DVD&#x2F;CD-R Master）格式。</li>
<li><code>-o ~/Desktop/macOS.cdr</code>: 指定输出文件路径为 <code>~/Desktop/macOS.cdr</code>。</li>
</ul>
</li>
<li><p><strong>重命名文件扩展名：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/Desktop/macOS.cdr ~/Desktop/macOS.iso</span><br></pre></td></tr></table></figure>
<ul>
<li><code>mv</code>: 移动或重命名文件。</li>
<li><code>~/Desktop/macOS.cdr</code>: 指定源文件路径。</li>
<li><code>~/Desktop/macOS.iso</code>: 指定目标文件路径，将 <code>.cdr</code> 扩展名改为 <code>.iso</code>。</li>
</ul>
</li>
</ol>
<details class="note primary"><summary><p>磁盘映像文件</p>
</summary>
<p>DMG 文件（Disk Image File）是 macOS 系统中常用的一种磁盘映像文件格式。它通常用于分发软件、存储备份或者创建可引导的安装盘。DMG 文件可以包含一个或多个文件和文件夹，并且可以被挂载为虚拟磁盘，从而使这些文件和文件夹像物理磁盘一样被访问。</p>

</details>

<div class="note default"><p>参考：<a href="https://i12bretro.github.io/tutorials/0763.html">Create Almost Any MacOS Installation Media</a></p>
</div>]]></content>
      <categories>
        <category>macOS &amp; Hackintosh</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>黑苹果</tag>
        <tag>重装</tag>
      </tags>
  </entry>
  <entry>
    <title>为 VMware Fusion 中的 macOS 虚拟机开启 3D 加速</title>
    <url>/enable-gpu-acceleration-in-macos-vm.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 在上一篇博文中，我已经安装并配置好了macOS Sonoma的虚拟机，但是由于无法在设置中开启3D加速，就会显得非常卡顿，甚至一个窗口缩放动画就能硬控虚拟机10秒，这显然不能忍。在谷歌一番之后，我在官网找到了一个通过修改vmx文件来开启3D加速的方法。</blockquote>

<span id="more"></span>

<div class="note warning"><p>请确保虚拟机中的macOS已经安装了<strong>最新的VMware Tools</strong>。宿主机与虚拟机系统版本不低于macOS 11 Big Sur。</p>
</div>

<p>苹果在macOS 11 Big Sur中引入了<a href="https://developer.apple.com/documentation/paravirtualizedgraphics?language=objc">半虚拟化图形框架（Paravirtualized Graphics framework）</a>，这意味着macOS的虚拟机终于能够用真正的显卡进行运算，而不是全靠CPU吭哧吭哧的模拟画面，虚拟机的流畅度可以得到很大提升。这个功能在Parallels Desktop中是自动开启的，但是在Vmware Fusion中，由于稳定性原因，并没有提供相关的设置选项，而是需要我们通过修改<code>.vmx</code>文件手动开启它。（至于为什么不直接用PD，还不是因为它太贵了，哪有白嫖的VMware香）</p>
<p>操作步骤如下</p>
<ol>
<li>打开VMware Fusion，但是不要启动虚拟机。</li>
<li>在宿主机的顶部菜单栏中点击<code>窗口</code>打开下拉菜单。</li>
<li>点击<code>虚拟机资源库</code>。</li>
<li>在相应虚拟机上右键单击，选择<code>在访达中显示</code>。</li>
<li>在访达中右键单击虚拟机文件，选择<code>显示包内容</code>。</li>
<li>右键单击<code>xxx.vmx</code>文件，xxx是你的虚拟机名称，打开方式选择<code>文本编辑</code>。</li>
<li>在文件中添加下面两行配置，加在哪里都行，无所谓。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">appleGPU0.<span class="property">present</span> = <span class="string">&quot;TRUE&quot;</span>  </span><br><span class="line">svga.<span class="property">present</span> = <span class="string">&quot;FALSE&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>保存并启动虚拟机，在锁屏界面可以看到背景视频已经可以播放了，进入桌面后可以看到程序坞和顶部菜单栏的半透明效果已经开启，说明3D加速已经成功启用。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-dwfbbrfto">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="在宿主机的顶部菜单栏中点击窗口打开下拉菜单，点击虚拟机资源库"><img data-src="https://s2.loli.net/2024/07/17/BZ8AhPlKdEqtzcf.webp" alt="在宿主机的顶部菜单栏中点击窗口打开下拉菜单，点击虚拟机资源库" class="zoomable"></li><li class="splide__slide" data-caption="在相应虚拟机上右键单击，选择在访达中显示"><img data-src="https://s2.loli.net/2024/07/17/zXIEaTPHY3dsQlm.webp" alt="在相应虚拟机上右键单击，选择在访达中显示" class="zoomable"></li><li class="splide__slide" data-caption="在访达中右键单击虚拟机文件，选择显示包内容"><img data-src="https://s2.loli.net/2024/07/17/f3QAHstYKeIRZlX.webp" alt="在访达中右键单击虚拟机文件，选择显示包内容" class="zoomable"></li><li class="splide__slide" data-caption="右键单击xxx.vmx文件，xxx是你的虚拟机名称，打开方式选择文本编辑"><img data-src="https://s2.loli.net/2024/07/17/km7vQ9hjupVt5l4.webp" alt="右键单击xxx.vmx文件，xxx是你的虚拟机名称，打开方式选择文本编辑" class="zoomable"></li><li class="splide__slide" data-caption="3D加速已经成功启用"><img data-src="https://s2.loli.net/2024/07/17/wPKV7I1XY9Qedyc.webp" alt="3D加速已经成功启用" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-dwfbbrfto" class="carousel-caption"> </div>
    </div>
  

<div class="note danger"><p>此方法当前仍存在缺陷，包括：</p>
<ul>
<li>不支持基于 OpenGL 的应用程序。</li>
<li>某些基于 Metal 的应用程序可能无法正常运行，因为虚拟机中当前只支持部分 Metal API。</li>
<li>在某些特定的硬件中，可能会出现渲染崩溃、宿主机崩溃、虚拟机崩溃等问题。</li>
</ul>
</div>

<div class="note default"><p>参考：<a href="https://knowledge.broadcom.com/external/article/315314/enable-3d-acceleration-in-macos-11-big-s.html">Enable 3D acceleration in MacOS 11 (Big Sur) virtual machines</a></p>
</div>]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>配置 GitHub SSH 远程连接与 GPG 提交签名验证</title>
    <url>/git-ssh-config.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 刚刚重装了操作系统，又要从头配置GitHub的SSH密钥，每次配置时都要现场搜索命令，比较麻烦，索性自己记录一下过程，方便以后使用。 </blockquote>

<span id="more"></span>

<div class="note success"><p>关于本文中使用的操作系统、Git版本和应用场景：</p>
<ul>
<li>Windows 11 IoT 企业版 LTSC 24H2 （崭新出厂）</li>
<li>git version 2.47.0.windows.1</li>
<li>两个GitHub账号，都需要配置SSH以及GPG密钥</li>
</ul>
</div>

<div class="note warning"><ul>
<li><strong>以下所有使用的命令均在 Git Bash 中执行。</strong></li>
<li><strong>命令中由尖括号<code>&lt; &gt;</code>包裹的内容需要根据个人情况进行调整，例如文件名<code>&lt;Filename&gt;</code>。调整时删掉尖括号，也就是说命令中不应该包含任何的<code>&lt; &gt;</code>。</strong></li>
<li><strong>请根据实际情况调整文中的文件路径、设置选项等内容。</strong></li>
</ul>
</div>

<h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><p>崭新出厂的系统，自然是没有安装Git的，先下载一下。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>Git</p><p>下载 Git</p>
<a href="https://git-scm.com/downloads"></a>
</div></div>

<p>安装后启动 Git Bash。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-16cgjchk3">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="启动 Git Bash"><img data-src="https://s2.loli.net/2024/11/01/FtNOTKEHePQJqiI.webp" alt="启动 Git Bash" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-16cgjchk3" class="carousel-caption"> </div>
    </div>
  

<h1 id="配置-SSH-密钥"><a href="#配置-SSH-密钥" class="headerlink" title="配置 SSH 密钥"></a>配置 SSH 密钥</h1><p>先来配置用于远程连接的SSH密钥。</p>
<h2 id="生成-SSH-密钥"><a href="#生成-SSH-密钥" class="headerlink" title="生成 SSH 密钥"></a>生成 SSH 密钥</h2><p>使用<a href="https://ed25519.cr.yp.to/">Ed25519</a>算法生成SSH密钥，将<code>&lt;your_email@example.com&gt;</code>替换为你的GitHub首选电子邮件地址。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;&lt;your_email@example.com&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>此时系统会提示<code>Enter file in which to save the key</code>来让你选择密钥的存储位置，直接按下回车键接受默认位置<code>/c/Users/&lt;username&gt;/.ssh/id_ed25519</code>。</p>
<p>然后会提示<code>Enter passphrase for &quot;/c/Users/&lt;username&gt;/.ssh/id_ed25519&quot; (empty for no passphrase): </code>以及<code>Enter same passphrase again: </code>来让你输入以及确认密钥的密码。<strong>可以按两次回车跳过，不设置密码。</strong> 如果设置了密码，那么每次执行<code>git push</code>操作时都要输入一遍，比较麻烦。</p>
<p>最后系统会输出密钥的位置、指纹等信息，完整的输出类似下面这种：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Generating public/private ed25519 key pair.  </span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/&lt;username&gt;/.ssh/id_ed25519):  </span><br><span class="line">Enter passphrase <span class="keyword">for</span> <span class="string">&quot;/c/Users/&lt;username&gt;/.ssh/id_ed25519&quot;</span> (empty <span class="keyword">for</span> no passphrase):  </span><br><span class="line">Enter same passphrase again:  </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/&lt;username&gt;/.ssh/id_ed25519  </span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/&lt;username&gt;/.ssh/id_ed25519.pub  </span><br><span class="line">The key fingerprint is:  </span><br><span class="line">SHA256:jfalkjfstsdfgy &lt;your_email@example.com&gt;  </span><br><span class="line">The key<span class="string">&#x27;s randomart image is:  </span></span><br><span class="line"><span class="string">+--[ED25519 256]--+  </span></span><br><span class="line"><span class="string">| +*+*- |  </span></span><br><span class="line"><span class="string">| -*//- |  </span></span><br><span class="line"><span class="string">| /-/++/ |  </span></span><br><span class="line"><span class="string">| **/** |  </span></span><br><span class="line"><span class="string">| /+*/+ |  </span></span><br><span class="line"><span class="string">| //*+. |  </span></span><br><span class="line"><span class="string">| +-*/* |  </span></span><br><span class="line"><span class="string">| /*--/ |  </span></span><br><span class="line"><span class="string">| /*-**  |  </span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>

<h2 id="将-SSH-密钥添加到-GitHub-帐户"><a href="#将-SSH-密钥添加到-GitHub-帐户" class="headerlink" title="将 SSH 密钥添加到 GitHub 帐户"></a>将 SSH 密钥添加到 GitHub 帐户</h2><p>创建完SSH密钥对后，我们需要将公钥添加到我们的 GitHub 帐户中。</p>
<p>首先使用记事本打开公钥文件，然后复制里面的所有内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">notepad ~/.ssh/id_ed25519.pub</span><br></pre></td></tr></table></figure>

<div class="note default"><p>此时在<code>~/.ssh</code>目录，也就是<code>C:\Users\&lt;username&gt;\.ssh</code>下，会有<code>id_ed25519</code>和<code>id_ed25519.pub</code>两个文件，前者是私钥，后者是公钥。只需要将公钥添加到 GitHub 帐户中，请不要将私钥上传到网络。</p>
</div>

<p>然后在浏览器中登录你的GitHub账户，依次点击：页面右上角的个人资料照片 → <code>Settings</code> → 侧边栏中的<code>SSH and GPG keys</code> → 右上角的<code>New SSH key</code>按钮。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-duk66061x">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="依次点击页面右上角的个人资料照片 → Settings → 侧边栏中的 SSH and GPG keys → 右上角的 New SSH key 按钮"><img data-src="https://s2.loli.net/2024/11/01/HlJdD1eEVkpKb9t.webp" alt="依次点击页面右上角的个人资料照片 → Settings → 侧边栏中的 SSH and GPG keys → 右上角的 New SSH key 按钮" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-duk66061x" class="carousel-caption"> </div>
    </div>
  

<p>然后在<code>Title</code>中填写新密钥的称谓，以方便区分来自不同的设备的密钥。<code>Key type</code>保持默认的Authentication Key选项。向<code>Key</code>中粘贴复制的公钥。最后点击<code>Add SSH Key</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-e6hv7vc78">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Add SSH Key"><img data-src="https://s2.loli.net/2024/11/01/nPZGXrUW8A1g9hJ.webp" alt="Add SSH Key" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-e6hv7vc78" class="carousel-caption"> </div>
    </div>
  

<details class="note primary"><summary><p>Authentication Key 与 Signing Key 的区别</p>
</summary>
<p>引用自：ChatGPT<br>在 GitHub 中添加 SSH 密钥时，你会看到两种密钥类型：Authentication Key 和 Signing Key。它们的区别如下：</p>
<ul>
<li>Authentication Key（认证密钥）<ul>
<li><strong>用途</strong>：Authentication Key 是用于身份验证的密钥。它用于通过 SSH 协议安全地连接到 GitHub，从而允许你执行 git push、git pull 等操作。</li>
<li><strong>工作原理</strong>：当你使用 SSH URL（如 <code>git@github.com:username/repo.git</code>）连接到 GitHub 时，GitHub 会使用你的 SSH 公钥进行身份验证。你需要在 GitHub 上添加相应的公钥，以便在使用 SSH 时能够正确验证你的身份。</li>
<li><strong>使用场景</strong>：所有需要访问 GitHub 的操作，如克隆、推送和拉取代码，都需要使用 Authentication Key。</li>
</ul>
</li>
<li>Signing Key（签名密钥）<ul>
<li><strong>用途</strong>：Signing Key 是用于对提交进行数字签名的密钥。这可以确保提交是由特定的用户创建的，增加了代码的可信度。</li>
<li><strong>工作原理</strong>：当你进行提交时，可以使用 GPG 或 SSH 密钥来对提交进行签名。通过签名，其他开发者可以验证这次提交是否确实来自你，并且没有被篡改。</li>
<li><strong>使用场景</strong>：在需要验证提交来源的项目中，尤其是开源项目，使用 Signing Key 可以提供额外的安全性。</li>
</ul>
</li>
</ul>

</details>

<p>最后验证一下是否配置成功，如果是第一次进行连接，系统会提示<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入<code>yes</code>并回车即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>配置成功的话系统会输出<code>Hi &lt;Username&gt;! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-e7is6m3f9">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="验证是否配置成功"><img data-src="https://s2.loli.net/2024/11/01/iLGnxEgYCAS3aPF.webp" alt="验证是否配置成功" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-e7is6m3f9" class="carousel-caption"> </div>
    </div>
  

<h2 id="配置全局-Git-用户名与电子邮件地址"><a href="#配置全局-Git-用户名与电子邮件地址" class="headerlink" title="配置全局 Git 用户名与电子邮件地址"></a>配置全局 Git 用户名与电子邮件地址</h2><div class="note primary"><p>引用自：<a href="https://docs.github.com/zh/get-started/getting-started-with-git/setting-your-username-in-git">GitHub文档</a><br>可使用 <code>git config</code> 命令更改与 Git 提交关联的名称。 您设置的新名称将在从命令行推送到 GitHub 的任何未来提交中显示。 如果您想要将真实姓名保密，则可以使用任意文本作为您的 Git 用户名。使用 <code>git config</code> 更改与 Git 提交关联的名称仅影响未来的提交，而不会更改用于过去提交的名称。<br>可使用 <code>git config</code> 命令更改与 Git 提交关联的电子邮件地址。您设置的新电子邮件地址将在您从命令行推送到 GitHub 的任何将来都可见。您在更改提交电子邮件地址之前做出的任何提交仍然与您之前的电子邮件地址相关联。</p>
</div>

<p>设置全局用户名，将<code>&lt;Username&gt;</code>替换为你的 GitHub 用户名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;&lt;Username&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>设置全局电子邮件地址，将<code>&lt;your_email@example.com&gt;</code>替换为你的GitHub首选电子邮件地址。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;&lt;your_email@example.com&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>相关设置项可以在<code>C:\Users\&lt;Username&gt;\.gitconfig</code>中修改。</p>
<h1 id="提交签名验证"><a href="#提交签名验证" class="headerlink" title="提交签名验证"></a>提交签名验证</h1><p>SSH 的配置已经完成了，此时你可以正常的使用<code>git push</code>等操作。但是！由于我们还没有对提交进行签名验证，现在进行的提交缺少灵魂（下图中的Verified小绿标）。接下来我会向我的 GitHub 帐户添加 <a href="https://en.wikipedia.org/wiki/GNU_Privacy_Guard">GPG</a> 密钥，并对我的 Git 提交进行签名验证。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-kupd8r61g">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Verified小绿标"><img data-src="https://s2.loli.net/2024/11/01/FjufLNEICXmiz1a.webp" alt="Verified小绿标" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-kupd8r61g" class="carousel-caption"> </div>
    </div>
  

<details class="note primary"><summary><p>验证提交签名的作用</p>
</summary>
<p>引用自：ChatGPT<br>Q：在进行push时我们已经通过ssh密钥验证了身份，为何还要再次验证提交签名？<br>A：虽然SSH密钥验证了你的身份，确保你有权访问远程仓库，但提交签名和身份验证有不同的目的和作用：</p>
<ol>
<li>身份验证与提交的来源<ul>
<li><strong>SSH密钥验证</strong>：当你通过SSH密钥进行<code>push</code>时，GitHub或GitLab验证的是你是否有权限推送代码。这是一个身份验证过程，确保你是一个合法的用户。</li>
<li><strong>提交签名</strong>：签名是用来验证每个具体提交的来源。它确保该提交确实是由持有相应私钥的人生成的。这意味着，即使一个恶意用户能够访问你的远程仓库（例如，获取了你的SSH密钥），他们仍然无法伪造你过去的提交。</li>
</ul>
</li>
<li>防止篡改<ul>
<li><strong>SSH密钥验证</strong>：只是验证身份，确保你可以访问远程仓库，但不保证仓库中的每个提交都是安全的。</li>
<li><strong>提交签名</strong>：提供了对提交内容的完整性保证。如果提交被篡改，签名会失效，警告用户这个提交不再是可信的。</li>
</ul>
</li>
<li>增强安全性<ul>
<li>签名是额外的安全层，可以防止内外部的恶意行为。即使SSH密钥被泄露，签名验证可以确保代码的完整性和来源。</li>
</ul>
</li>
</ol>

</details>

<details class="note success"><summary><p>关于使用 SSH 密钥进行签名</p>
</summary>
<p>其实有个偷懒的办法，就是在前面将 SSH 密钥添加到 GitHub 帐户后，再重复一边操作，将密钥类型从 Authentication Key 切换为 Signing Key。这样就可以使用 SSH 密钥来进行提交签名验证，不用在单独设置 GPG 密钥，属于是一只牛马打两份工。不过 GPG 密钥用作签名验证时的功能多一丢丢，所以我还是设置了 GPG 密钥。</p>
<p>使用 SSH 密钥进行签名还需要单独设置一下：</p>
<ul>
<li>使用 <code>git config --global gpg.format ssh</code> 配置 Git 使用 SSH 对提交和标记签名。</li>
<li>使用 <code>git config --global user.signingkey ~/.ssh/&lt;your_ssh_key.pub&gt;</code> 在 Git 中指定要使用的签名密钥。</li>
</ul>

</details>

<h2 id="生成-GPG-密钥"><a href="#生成-GPG-密钥" class="headerlink" title="生成 GPG 密钥"></a>生成 GPG 密钥</h2><p>安装 Git 时会默认安装 GPG，先检查一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --version</span><br></pre></td></tr></table></figure>

<p>正常情况会返回版本信息，如果报错的话可能需要手动安装。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gpg (GnuPG) 2.4.5-unknown  </span><br><span class="line">libgcrypt 1.9.4-unknown  </span><br><span class="line">Copyright (C) 2024 g10 Code GmbH  </span><br><span class="line">License GNU GPL-3.0-or-later &lt;https://gnu.org/licenses/gpl.html&gt;  </span><br><span class="line">This is free software: you are free to change and redistribute it.  </span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  </span><br><span class="line">  </span><br><span class="line">Home: /c/Users/&lt;Username&gt;/.gnupg  </span><br><span class="line">Supported algorithms:  </span><br><span class="line">Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA  </span><br><span class="line">Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,  </span><br><span class="line">CAMELLIA128, CAMELLIA192, CAMELLIA256  </span><br><span class="line">Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224  </span><br><span class="line">Compression: Uncompressed, ZIP, ZLIB, BZIP2</span><br></pre></td></tr></table></figure>

<p>接下来生成 GPG 密钥对</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --full-generate-key</span><br></pre></td></tr></table></figure>

<p>系统会引导我们配置密钥的类型：</p>
<ol>
<li>选择加密方式，直接按回车键，选择默认的ECC，也就是椭圆曲线加密。</li>
<li>选择加密用的曲线，直接按回车选择默认的Curve25519曲线。</li>
<li>选择密钥有效期，同样直接按下回车保持默认的永不过期选项。</li>
<li>最后按下y并回车确认以上选择。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-xjed43ia1">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="配置密钥的类型"><img data-src="https://s2.loli.net/2024/11/01/FaXLpeGKdMJ7B2l.webp" alt="配置密钥的类型" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-xjed43ia1" class="carousel-caption"> </div>
    </div>
  

<p>最后来填写密钥信息：</p>
<ol>
<li>填写名称，这个任意填写，可以直接用GitHub的用户名。</li>
<li>填写电子邮件地址，必须是GitHub账户绑定的首选电子邮件地址。</li>
<li>填写注释，这个不重要，可以空着。</li>
<li>按<code>O键</code>并回车确认以上信息。</li>
<li>在弹出的Pinentry窗口中填写密钥的保护密码，然后再输入一遍密码来确认。以后使用该密钥对提交进行签名时需要输入密码。懒的话可以留空。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-trea81r5q">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="填写密钥信息"><img data-src="https://s2.loli.net/2024/11/01/uxEcXGkJRMd3IbA.webp" alt="填写密钥信息" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-trea81r5q" class="carousel-caption"> </div>
    </div>
  

<h2 id="将-GPG-密钥添加到-GitHub-帐户"><a href="#将-GPG-密钥添加到-GitHub-帐户" class="headerlink" title="将 GPG 密钥添加到 GitHub 帐户"></a>将 GPG 密钥添加到 GitHub 帐户</h2><p>同SSH密钥一样，我们也需要将GPG密钥的公钥添加到 GitHub 帐户中。</p>
<p>首先列出系统现有的 GPG 密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --list-secret-keys --keyid-format=long</span><br></pre></td></tr></table></figure>

<p>得到的结果类似于：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/c/Users/&lt;Username&gt;/.gnupg/pubring.kbx  </span><br><span class="line">----------------------------------  </span><br><span class="line">sec ed25519/21231BBF246642D21 2024-10-01 [SC]  </span><br><span class="line">16534564331BBDF314564321231 </span><br><span class="line">uid [ultimate] Name (Comments) &lt;your_email@example.com&gt;  </span><br><span class="line">ssb cv25519/652153215AB215621 2024-10-01 [E]</span><br></pre></td></tr></table></figure>

<p>看上去很懵逼对不对，实际上它的格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sec &lt;加密算法&gt;/&lt;密钥ID&gt; &lt;生成日期&gt; [&lt;功能&gt;]</span><br><span class="line">&lt;公钥&gt;</span><br><span class="line">uid [ultimate] &lt;密钥名称&gt; (&lt;注释&gt;) &lt;电子邮件地址&gt;</span><br><span class="line">ssb &lt;加密算法&gt;/&lt;密钥ID&gt; &lt;生成日期&gt; [&lt;功能&gt;]</span><br></pre></td></tr></table></figure>

<p>密钥的功能分为:</p>
<ul>
<li>S：签名 Signing</li>
<li>E：加密 Encrypt</li>
<li>C：认证 Certify</li>
</ul>
<p>我们需要使用具备签名功能的密钥的ID，也就是后缀为<code>[SC]</code>的那一行中的<code>21231BBF246642D21</code>，或者是电子邮件地址，来使用下面的命令导出ASCII编码的公钥，并自动复制到剪切板。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --armor --<span class="built_in">export</span> &lt;密钥ID或电子邮件地址&gt; | clip</span><br></pre></td></tr></table></figure>

<p>接下来在浏览器中登录你的GitHub账户，依次点击 GitHub 任意页面右上角的个人资料照片 → <code>Settings</code> → 侧边栏中的<code>SSH and GPG keys</code> → 右侧的<code>New GPG key</code>按钮。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-ifctsnftk">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="依次点击 GitHub 任意页面右上角的个人资料照片 → Settings → 侧边栏中的 SSH and GPG keys → 右侧的 New GPG key 按钮"><img data-src="https://s2.loli.net/2024/11/01/BpX36WignKmeNRq.webp" alt="依次点击 GitHub 任意页面右上角的个人资料照片 → Settings → 侧边栏中的 SSH and GPG keys → 右侧的 New GPG key 按钮" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-ifctsnftk" class="carousel-caption"> </div>
    </div>
  

<p>在<code>Title</code>中填写新签名密钥的称谓，方便区分来自不同的设备的密钥。在<code>Key</code>中粘贴签名复制的公钥。最后点击<code>Add GPG key</code>完成添加。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-cpjeltp3d">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="在 Title 中填写新签名密钥的称谓，方便区分来自不同的设备的密钥。在 Key 中粘贴签名复制的公钥。最后点击 Add GPG key"><img data-src="https://s2.loli.net/2024/11/01/zYIiJBcFQ7uDsZp.webp" alt="在 Title 中填写新签名密钥的称谓，方便区分来自不同的设备的密钥。在 Key 中粘贴签名复制的公钥。最后点击 Add GPG key" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-cpjeltp3d" class="carousel-caption"> </div>
    </div>
  

<h2 id="配置提交签名验证"><a href="#配置提交签名验证" class="headerlink" title="配置提交签名验证"></a>配置提交签名验证</h2><p>最后我们需要配置全局GPG密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.signingkey &lt;密钥ID&gt;</span><br></pre></td></tr></table></figure>

<p>另外在进行提交时，需要在命令中加入<code>-S</code>选项来为提交签名。如果你前面设置了密码，则需要在弹出的验证窗口中输入密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -S -m <span class="string">&quot;&lt;提交信息&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>（可选）如果你觉得每次输入<code>-S</code>选项麻烦，可以将 Git 配置为默认对所有提交进行签名，这样提交时就不用输入<code>-S</code>了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global commit.gpgsign true</span><br></pre></td></tr></table></figure>

<h3 id="（可选）设置-GPG-Agent-缓存"><a href="#（可选）设置-GPG-Agent-缓存" class="headerlink" title="（可选）设置 GPG-Agent 缓存"></a>（可选）设置 GPG-Agent 缓存</h3><div class="note primary"><p>参考：</p>
<ul>
<li><a href="https://www.gnupg.org/documentation/manuals/gnupg-devel/Agent-Options.html">2.2 Option Summary @GPG 文档</a></li>
<li><a href="https://www.zouht.com/2891.html">使用GPG对你的Git提交进行签名验证</a></li>
<li><a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key?</a></li>
</ul>
</div>

<p>如果觉得每次都输入密码很麻烦，可以设置 GPG-Agent 缓存时间，在缓存过期前进行提交签名都不需要再输入密码。</p>
<p>首先在<code>~/.gnupg</code>目录创建配置文件，并用记事本打开。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.gnupg/gpg-agent.conf &amp;&amp; notepad ~/.gnupg/gpg-agent.conf</span><br></pre></td></tr></table></figure>

<p>粘贴配置，然后保存并关闭文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">default-cache-ttl 604800</span><br><span class="line">max-cache-ttl 604800</span><br></pre></td></tr></table></figure>
<ul>
<li>后面数字的单位是秒，数值不能设置的太大，我起初设置的是一个月的密码缓存时间（2592000秒），但是没有生效，改成一个周（604800秒）后才生效。</li>
<li><code>default-cache-ttl n</code>：将缓存条目有效的时间设置为 n 秒，默认时间为 600 秒。每次访问缓存条目时，都会重置条目的定时器。</li>
<li><code>max-cache-ttl n</code>：将缓存条目有效的最大时间设置为 n 秒。到期之后，即使最近已访问过缓存条目，缓存条目也将过期。默认时间为 2 小时（7200 秒）。</li>
</ul>
<h3 id="（可选）导入并信任-GitHub-公钥"><a href="#（可选）导入并信任-GitHub-公钥" class="headerlink" title="（可选）导入并信任 GitHub 公钥"></a>（可选）导入并信任 GitHub 公钥</h3><div class="note primary"><p>参考：</p>
<ul>
<li><a href="https://www.zouht.com/2891.html">使用GPG对你的Git提交进行签名验证</a></li>
<li><a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key?</a></li>
</ul>
</div>

<p>如果我们直接在GitHub网页上进行提交，提交签名验证使用的是GitHub的密钥，而不是我们自己的。而我们本地没有GitHub签名验证的公钥，就会在相关提交中显示<code>gpg: Can&#39;t check signature: No public key</code>。</p>
<p>可以切换到一个Git仓库目录，使用下面的命令查看。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --show-signature</span><br></pre></td></tr></table></figure>

<p>输出结果如下所示，可以看到GitHub密钥的ID是<code>B5690EEEBB952194</code>，被标红了。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-jbgug4ams">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="输出结果被标红"><img data-src="https://s2.loli.net/2024/11/01/NhxMFgwC189fBGd.webp" alt="输出结果被标红" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-jbgug4ams" class="carousel-caption"> </div>
    </div>
  

<p>这个红色对强迫症来说很难受，所以我选择在本地导入并信任 GitHub 公钥来消除这个红框框。</p>
<p>首先在本地导入GitHub的公钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://github.com/web-flow.gpg | gpg --import</span><br></pre></td></tr></table></figure>

<p>然后查看现有的密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --list-keys --keyid-format=long</span><br></pre></td></tr></table></figure>

<p>输出内容如下，第一个是自己的GPG密钥，下面两个是GitHub的（甚至还有一个过期的哈哈哈哈）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --list-keys --keyid-format=long  </span><br><span class="line">/c/Users/Sirius/.gnupg/pubring.kbx  </span><br><span class="line">----------------------------------  </span><br><span class="line">pub ed25519/21231BBF246642D21 2024-10-01 [SC]</span><br><span class="line">16534564331BBDF314564321231  </span><br><span class="line">uid [ultimate] Name (Comments) &lt;your_email@example.com&gt;  </span><br><span class="line">sub cv25519/652153215AB215621 2024-10-01 [E]</span><br><span class="line">  </span><br><span class="line">pub rsa2048/4AEE18F83AFDEB23 2017-08-16 [SC] [expired: 2024-01-16]  </span><br><span class="line">5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23  </span><br><span class="line">uid [ expired] GitHub (web-flow commit signing) &lt;noreply@github.com&gt;  </span><br><span class="line">  </span><br><span class="line">pub rsa4096/B5690EEEBB952194 2024-01-16 [SC]  </span><br><span class="line">968479A1AFF927E37D1A566BB5690EEEBB952194  </span><br><span class="line">uid [ unknown] GitHub &lt;noreply@github.com&gt;</span><br></pre></td></tr></table></figure>

<p>然后编辑GitHub的公钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --edit-key B5690EEEBB952194</span><br></pre></td></tr></table></figure>

<p>信任该密钥。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trust</span><br></pre></td></tr></table></figure>

<p>然后会提示你选择信任等级，输入4并回车。</p>
<p>最后保存更改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">save</span><br></pre></td></tr></table></figure>

<p>完整输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Sirius@Pikachu MINGW64 ~/.gnupg  </span><br><span class="line">$ gpg --edit-key B5690EEEBB952194  </span><br><span class="line">gpg (GnuPG) 2.4.5-unknown; Copyright (C) 2024 g10 Code GmbH  </span><br><span class="line">This is free software: you are free to change and redistribute it.  </span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">pub rsa4096/B5690EEEBB952194  </span><br><span class="line">created: 2024-01-16 expires: never usage: SC  </span><br><span class="line">trust: unknown validity: unknown  </span><br><span class="line">[ unknown] (1). GitHub &lt;noreply@github.com&gt;  </span><br><span class="line">  </span><br><span class="line">gpg&gt; trust  </span><br><span class="line">pub rsa4096/B5690EEEBB952194  </span><br><span class="line">created: 2024-01-16 expires: never usage: SC  </span><br><span class="line">trust: unknown validity: unknown  </span><br><span class="line">[ unknown] (1). GitHub &lt;noreply@github.com&gt;  </span><br><span class="line">  </span><br><span class="line">Please decide how far you trust this user to correctly verify other <span class="built_in">users</span><span class="string">&#x27; keys  </span></span><br><span class="line"><span class="string">(by looking at passports, checking fingerprints from different sources, etc.)  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">1 = I don&#x27;</span>t know or won<span class="string">&#x27;t say  </span></span><br><span class="line"><span class="string">2 = I do NOT trust  </span></span><br><span class="line"><span class="string">3 = I trust marginally  </span></span><br><span class="line"><span class="string">4 = I trust fully  </span></span><br><span class="line"><span class="string">5 = I trust ultimately  </span></span><br><span class="line"><span class="string">m = back to the main menu  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">Your decision? 4  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">pub rsa4096/B5690EEEBB952194  </span></span><br><span class="line"><span class="string">created: 2024-01-16 expires: never usage: SC  </span></span><br><span class="line"><span class="string">trust: full validity: unknown  </span></span><br><span class="line"><span class="string">[ unknown] (1). GitHub &lt;noreply@github.com&gt;  </span></span><br><span class="line"><span class="string">Please note that the shown key validity is not necessarily correct  </span></span><br><span class="line"><span class="string">unless you restart the program.  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">gpg&gt; save  </span></span><br><span class="line"><span class="string">Key not changed so no update needed.</span></span><br></pre></td></tr></table></figure>

<p>如果日后这个密钥也到期了，就删掉它，再重新导入最新的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg --delete-key B5690EEEBB952194</span><br></pre></td></tr></table></figure>

<h3 id="（可选）VS-Code-配置"><a href="#（可选）VS-Code-配置" class="headerlink" title="（可选）VS Code 配置"></a>（可选）VS Code 配置</h3><div class="note primary"><p>参考：<a href="https://soft.moe/technology/cryptography/kun-gpg.html#github-verified">GPG key 实现 GitHub <code>Verified</code> 认证（Authenticate &amp; Sign）</a></p>
</div>

<p>如果直接在VS Code中使用Git并进行签名验证，需要在VS Code中使用<code>ctrl+,</code>组合键打开设置，搜索<code>git.enableCommitSigning</code>，勾选<code>允许使用 GPG、X.509 或 SSH 提交签名</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-kxibvqwp5">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="在VS Code中使用 ctrl + , 组合键打开设置，搜索 git.enableCommitSigning ，勾选 允许使用 GPG、X.509 或 SSH 提交签名"><img data-src="https://s2.loli.net/2024/11/01/m5BM31GLHw7KFUl.webp" alt="在VS Code中使用 ctrl + , 组合键打开设置，搜索 git.enableCommitSigning ，勾选 允许使用 GPG、X.509 或 SSH 提交签名" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-kxibvqwp5" class="carousel-caption"> </div>
    </div>
  

<h1 id="多账户配置"><a href="#多账户配置" class="headerlink" title="多账户配置"></a>多账户配置</h1><p>如果你只需要设置一个账号，那么到这里所有的配置就都已经结束了。接下来我会继续配置第二个账号的SSH与GPG密钥，与第二账号相关的文件&#x2F;路径&#x2F;后缀我都命名为<code>second</code>，请根据个人喜好进行修改。</p>
<h2 id="配置-SSH-密钥-1"><a href="#配置-SSH-密钥-1" class="headerlink" title="配置 SSH 密钥"></a>配置 SSH 密钥</h2><h3 id="生成第二个-SSH-密钥"><a href="#生成第二个-SSH-密钥" class="headerlink" title="生成第二个 SSH 密钥"></a>生成第二个 SSH 密钥</h3><p>先来生成第二个 SSH 密钥：</p>
<ul>
<li>将<code>&lt;your_email@example.com&gt;</code>替换为第二个账号的首选电子邮件地址。</li>
<li>将<code>&lt;username&gt;</code>替换为你的Windows账户名称，也就是用户文件夹的名称。</li>
<li>将<code>&lt;id_ed25519_second&gt;</code>替换为第二个密钥的文件名。<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;&lt;your_email@example.com&gt;&quot;</span> -f <span class="string">&quot;/c/Users/&lt;username&gt;/.ssh/&lt;id_ed25519_second&gt;&quot;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>因为我们在命令中指定了密钥的文件路径，所以系统只会提示输入和确认密码，同样按两次回车跳过。</p>
<h3 id="创建-SSH-配置文件"><a href="#创建-SSH-配置文件" class="headerlink" title="创建 SSH 配置文件"></a>创建 SSH 配置文件</h3><p>我们可以创建一个config配置文件，使用不同的 Host 区分不同账户的 Git 操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.ssh/config &amp;&amp; notepad ~/.ssh/config</span><br></pre></td></tr></table></figure>

<p>配置文件的格式为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host &lt;别名&gt;</span><br><span class="line">    HostName &lt;实际 Host&gt;</span><br><span class="line">    User &lt;用户名&gt;</span><br><span class="line">    IdentityFile &lt;私钥路径&gt;</span><br></pre></td></tr></table></figure>

<p>粘贴下面的内容，并结合实际情况调整的Host别名和密钥文件路径，然后保存并关闭文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Default config for main account</span><br><span class="line">Host github.com</span><br><span class="line">	HostName github.com</span><br><span class="line">	User git</span><br><span class="line">	IdentityFile ~/.ssh/id_ed25519</span><br><span class="line"></span><br><span class="line"># Config for second account</span><br><span class="line">Host github.com-second</span><br><span class="line">	HostName github.com</span><br><span class="line">	User git</span><br><span class="line">	IdentityFile ~/.ssh/id_ed25519_second</span><br></pre></td></tr></table></figure>

<p>这两个配置块的含义是：</p>
<ul>
<li>对使用 <code>@github.com-second</code> 的 Git URL 使用 <code>id_ed25519_second</code> 密钥。</li>
<li>对其他的所有 Git URL 使用 <code>id_ed25519</code> 密钥。</li>
</ul>
<h3 id="将-SSH-密钥添加到-GitHub-帐户-1"><a href="#将-SSH-密钥添加到-GitHub-帐户-1" class="headerlink" title="将 SSH 密钥添加到 GitHub 帐户"></a>将 SSH 密钥添加到 GitHub 帐户</h3><p>将 SSH 密钥添加到第二个 GitHub 帐户的步骤和第一个账户的配置基本相同，只要将命令中第一个密钥的名称替换为第二个的即可。</p>
<p>验证是否配置成功的命令调整为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com-second</span><br></pre></td></tr></table></figure>

<h2 id="提交签名验证-1"><a href="#提交签名验证-1" class="headerlink" title="提交签名验证"></a>提交签名验证</h2><p>生成第二个GPG密钥并将它添加到第二个GitHub账号的步骤和第一个完全一样，按前面的内容操作即可，注意<strong>不要再进行全局设置</strong>。</p>
<h2 id="Git-命令调整"><a href="#Git-命令调整" class="headerlink" title="Git 命令调整"></a>Git 命令调整</h2><p>对于第二个账号，在使用<code>git clone</code>等命令时需要将默认的<code>@github.com</code>替换为前面配置的Host 别名，即<code>@github.com-second</code>，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com-second:Username/Repo.git</span><br></pre></td></tr></table></figure>

<h1 id="多账户区分"><a href="#多账户区分" class="headerlink" title="多账户区分"></a>多账户区分</h1><p>我在前面已经将第一个账号的配置作为全局设置使用，为了避免两个账户混淆，我们需要将它们的Git配置区分开来，以下是我找到的两种设置方法。</p>
<p>我仍使用<code>second</code>作为实例中的用户名&#x2F;文件名，请注意将它修改为你自己的第二账户名。</p>
<h2 id="批处理快速配置"><a href="#批处理快速配置" class="headerlink" title="批处理快速配置"></a>批处理快速配置</h2><div class="note primary"><p>参考：<a href="https://ayk.moe/articles/commit-signature-guide/index.html">Ayakaの部屋</a></p>
</div>

<p>这种方法是对第二个账号的每个Git仓库进行本地Git设置。借助本地设置更高的优先级将仓库的所有账户区分开。</p>
<p>但是，每次配置时都要输入多条命令，显得太麻烦，不如把这些命令添加到批处理文件中，然后将批处理文件添加到系统环境变量中，这样每次只要执行一遍批处理文件就可以完成配置。</p>
<p>首先在用户目录下创建 <code>~/.gitswitch/second.bat</code>文件并用记事本打开。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.gitswitch/ &amp;&amp; <span class="built_in">touch</span> ~/.gitswitch/second.bat &amp;&amp; notepad ~/.gitswitch/second.bat</span><br></pre></td></tr></table></figure>

<p>然后粘贴并编辑下面的内容，保存并关闭文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --local user.name &lt;第二账户用户名&gt;</span><br><span class="line">git config --local user.email &lt;第二账户用户名电子邮件地址&gt;</span><br><span class="line">git config --local user.signingkey &lt;第二账户 GPG 密钥 secret ID&gt;</span><br><span class="line">git config --local commit.gpgsign true</span><br></pre></td></tr></table></figure>

<p>接下来在具有管理员权限的终端中运行下面的指令，打开系统环境变量设置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rundll32.exe sysdm.cpl,EditEnvironmentVariables</span><br></pre></td></tr></table></figure>

<p>将 <code>C:\Users\&lt;Username&gt;\.gitswitch</code>添加到系统环境变量，注意将<code>&lt;Username&gt;</code>替换为你的<code>Windows用户名</code>：</p>
<ol>
<li>双击打开系统变量下的<code>Path</code></li>
<li>点击右上角的<code>新建</code></li>
<li>粘贴路径</li>
<li>确定保存</li>
<li>重启终端使更改生效
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-5fj1uufnl">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="系统环境变量配置"><img data-src="https://s2.loli.net/2024/11/03/pELnc4xV7vCGZ1R.webp" alt="系统环境变量配置" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-5fj1uufnl" class="carousel-caption"> </div>
    </div>
  </li>
</ol>
<p>之后如果需要在某个仓库进行第二账户的本地配置，直接输入并执行脚本即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">second.bat</span><br></pre></td></tr></table></figure>

<h2 id="条件设置"><a href="#条件设置" class="headerlink" title="条件设置"></a>条件设置</h2><p>此类方法使用了2.13版本新增的<a href="https://git-scm.com/docs/git-config#_includes">条件设置</a>，可以结合条件语句和通配符实现更加灵活的区分。</p>
<p>在配置条件设置前，先在用户目录下创建第二个账号的Git配置文件，并使用记事本打开：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.gitswitch/second/ &amp;&amp; <span class="built_in">touch</span> ~/.gitswitch/second/.gitconfig &amp;&amp; notepad ~/.gitswitch/second/.gitconfig</span><br></pre></td></tr></table></figure>

<p>然后粘贴并修改下面的配置，保存并关闭记事本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">	name = &lt;第二账户用户名&gt;</span><br><span class="line">	email = &lt;第二账户用户名电子邮件地址&gt;</span><br><span class="line">	signingkey = &lt;第二账户 GPG 密钥 secret ID&gt;</span><br><span class="line">[commit]</span><br><span class="line">	gpgsign = true</span><br></pre></td></tr></table></figure>

<p>最后在全局Git配置文件<code>~/.gitconfig</code>的末尾添加条件，我总结了两种常用的条件：路径匹配和配置项URL匹配，可以叠加使用。</p>
<p><strong>请注意：条件设置需要放在全局设置的下方！</strong></p>
<h3 id="路径匹配"><a href="#路径匹配" class="headerlink" title="路径匹配"></a>路径匹配</h3><div class="note primary"><p>参考：</p>
<ul>
<li><a href="https://josta.me/blog/201708/git_config_user/">Git的用户信息设置</a></li>
<li><a href="https://stackoverflow.com/questions/43919191/git-2-13-conditional-config-on-windows">Git 2.13 conditional config on windows</a></li>
</ul>
</div>

<p>我们可以为第二个账号的Git仓库指定一个父目录，然后让父目录下所有的Git仓库都使用同一个指定的配置，而不在这个目录下的其他Git仓库会默认使用全局配置，这样就不需要再为第二个账号的每个Git仓库都进行单独配置。</p>
<p>在全局Git配置文件<code>~/.gitconfig</code>的末尾添加下面的配置，Windows系统下必须加上<code>/i</code>来关闭大小写敏感，否则会因为路径问题导致配置不生效。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[includeIf <span class="string">&quot;gitdir/i:D:/Project/Second/&quot;</span>]</span><br><span class="line">	path = ~/.gitswitch/second/.gitconfig</span><br></pre></td></tr></table></figure>

<p>这样在<code>D:/Project/Second/</code>路径下存放的所有项目都会自动使用<code>~/.gitswitch/second/.gitconfig</code>中的配置。而其它路径下的项目会保持原有的全局配置。</p>
<h3 id="配置项URL匹配"><a href="#配置项URL匹配" class="headerlink" title="配置项URL匹配"></a>配置项URL匹配</h3><div class="note primary"><p>参考：<a href="https://stackoverflow.com/questions/74012449/git-includeif-hasconfigremote-url-not-working">Git - includeIf hasconfig:remote.*.url not working</a></p>
</div>

<p>这个方法需要Git版本高于2.36，是通过判断使用的远程URL来设置不同的Git配置。这个方法同样需要为第二个账号创建独立的配置文件，方法同上，然后在全局配置文件中加入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[includeIf <span class="string">&quot;hasconfig:remote.*.url:git@github.com-second:*/**&quot;</span>]</span><br><span class="line">    path = ~/.gitswitch/second/.gitconfig</span><br></pre></td></tr></table></figure>

<p>这行配置的意思是，如果某个项目的本地配置中，<code>remote.*.url</code>项对应的值是<code>git@github.com-second:Username/Repo.git</code>，则使用指定的配置文件<code>~/.gitswitch/second/.gitconfig</code>。这个方法可以和之前设置的 SSH Host 无缝衔接，非常方便。</p>
<p>完整的全局Git配置文件<code>~/.gitconfig</code>如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">	name = &lt;主账户用户名&gt;</span><br><span class="line">	email = &lt;主账户电子邮件地址&gt;</span><br><span class="line">	signingkey = &lt;主账户 GPG 密钥 secret ID&gt;</span><br><span class="line">[commit]</span><br><span class="line">	gpgsign = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[includeIf <span class="string">&quot;gitdir/i:D:/Project/Second/&quot;</span>]</span><br><span class="line">	path = ~/.gitswitch/second/.gitconfig</span><br><span class="line"></span><br><span class="line">[includeIf <span class="string">&quot;hasconfig:remote.*.url:git@github.com-second:*/**&quot;</span>]</span><br><span class="line">    path = ~/.gitswitch/second/.gitconfig</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考与引用：</p>
<ul>
<li><a href="https://docs.github.com/zh/get-started/getting-started-with-git/setting-your-username-in-git">GitHub文档</a></li>
<li><a href="https://stackoverflow.com/questions/60482588/what-is-githubs-public-gpg-key">What is GitHub’s public GPG key? @StackOverflow</a></li>
<li><a href="https://stackoverflow.com/questions/43919191/git-2-13-conditional-config-on-windows">Git 2.13 conditional config on windows @StackOverflow</a></li>
<li><a href="https://stackoverflow.com/questions/74012449/git-includeif-hasconfigremote-url-not-working">Git - includeIf hasconfig:remote.*.url not working @StackOverflow</a></li>
<li><a href="https://www.zouht.com/2891.html">使用GPG对你的Git提交进行签名验证 @颢天</a></li>
<li><a href="https://soft.moe/technology/cryptography/kun-gpg.html#github-verified">GPG key 实现 GitHub Verified 认证（Authenticate &amp; Sign） @KUN’s Blog</a></li>
<li><a href="https://ayk.moe/articles/commit-signature-guide/index.html">GitHub commit 签名指南 @Ayakaの部屋</a></li>
<li><a href="https://josta.me/blog/201708/git_config_user/">Git的用户信息设置 @YeèのNotes</a></li>
<li><a href="https://chatgpt.com/">ChatGPT</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>SSH</tag>
        <tag>GPG</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Pages 启用 Cloudflare 加速及 HTTPS</title>
    <url>/github-pages-%E5%90%AF%E7%94%A8-cloudflare-%E5%8A%A0%E9%80%9F%E5%8F%8A-https.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">前几天转移域名的时候发现GitHub Pages没有全部开启HTTPS，而且Cloudflare设置的A记录也不全，就重新折腾了一遍，顺便记录一下</blockquote>

<span id="more"></span>

<h1 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h1><h2 id="Cloudflare"><a href="#Cloudflare" class="headerlink" title="Cloudflare"></a>Cloudflare</h2><p>Cloudflare的配置我很早之前就搞过了，再简单写一下，加点图片</p>
<ol>
<li>登录 Cloudflare， 然后点击顶栏的<code>Add site</code><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Cloudflare</p><p>Web Performance & Security</p>
<a href="https://dash.cloudflare.com/"></a>
</div></div></li>
<li>输入自己的域名，然后点击<code>Add site</code>按钮，我这胡乱加了一个没人用的做示范<br><img data-src="https://s2.loli.net/2022/06/12/FaLBvrE9Rl2esN4.png" alt="cl1.png"></li>
<li>选择方案，一般选<code>Free</code>就够用了<br><img data-src="https://s2.loli.net/2022/06/12/47TOxsBYAMdz9ul.png" alt="cl2.png"></li>
<li>然后Cloudflare会自动获取域名的DNS记录，这里跳过，拉到页面最底部，点击<code>Continue</code>按钮，待会回来再配置<br><img data-src="https://s2.loli.net/2022/06/12/F4MPguhfd8bkvS9.png" alt="cl3.png"></li>
<li>复制Cloudflare给出的域名服务器，回到域名注册商那里替换掉原有的<br><img data-src="https://s2.loli.net/2022/06/12/2IB3agoAJcWpNr8.png" alt="cl4.png"><br><img data-src="https://s2.loli.net/2022/06/12/EgkBH4AyjSJbmnU.png" alt="cl5.png"></li>
<li>回到Cloudflare，点击<code>Done, check nameservers</code></li>
<li>然后慢慢等待生效，生效后会有邮件提醒，等待生效的时候可以先设置<code>SSL/TLS</code><ol>
<li>在Overview里，将Encryption Mode先设置为<code>Full</code><br><img data-src="https://s2.loli.net/2022/06/12/tKcsr2RdWbBoFSz.png" alt="ssl1.png"></li>
<li>然后到Edge Certificates中，开启<code>Always Use HTTPS</code>、<code>Opportunistic Encryption</code>等<br><img data-src="https://s2.loli.net/2022/06/12/bXdgpHsTMcDok8L.png" alt="ssl2.png"></li>
<li>到Origin Server中，开启<code>Authenticated Origin Pulls</code><br><img data-src="https://s2.loli.net/2022/06/12/fkxNsFb1uG2IwWh.png" alt="ssl3.png"></li>
</ol>
</li>
<li>生效后到<code>DNS</code>设置里添加四条A记录与一条CNAME记录<ol>
<li>CNAME记录的NAME设置为<code>www</code>，Content设置为GitHub Pages默认的域名，<code>用户名.github.io</code>那个</li>
<li>A记录的Name都使用<code>@</code>或者自己的域名，Content依次设置为<ol>
<li>185.199.108.153</li>
<li>185.199.109.153</li>
<li>185.199.110.153</li>
<li>185.199.111.153</li>
</ol>
</li>
</ol>
</li>
<li>确认一下各个记录的Proxy status都是<code>Proxied</code>状态，即橙色的云朵<br><img data-src="https://s2.loli.net/2022/06/12/ogYE2MFOfkbqDa7.png" alt="dns.png"></li>
</ol>
<h2 id="GitHub-Pages-配置"><a href="#GitHub-Pages-配置" class="headerlink" title="GitHub Pages 配置"></a>GitHub Pages 配置</h2><ol>
<li>打开自己的网站的仓库设置<code>Settings</code>-<code>Pages</code></li>
<li>在<code>Custom domain</code>中填入自己的域名，点击Save后会自动生成一个CNAME文件</li>
</ol>
<h1 id="开启Encryption-Full-strict-模式"><a href="#开启Encryption-Full-strict-模式" class="headerlink" title="开启Encryption Full (strict)模式"></a>开启Encryption Full (strict)模式</h1><p>Full (strict)模式与Full模式的区别在于，Full (strict)模式使用的是由可信 CA 或 Cloudflare Origin CA 签名的有效证书并对每个请求验证证书，而非Full模式使用的无需验证的自签名证书。GitHub Pages可以通过开启<code>Enforce HTTPS</code>来获取免费的可信证书，满足开启Full (strict)模式的条件。下面就是我今天新发现的问题，我的Pages设置中不能开启<code>Enforce HTTPS</code>，勾选框一直是灰色的，折腾半天发现是Cloudflare的代理状态的造成的，解决方案如下</p>
<ol>
<li>在Cloudflare的DNS设置中把Proxy status全部设置为<code>DNS Only</code>状态，即灰色的云朵<br><img data-src="https://s2.loli.net/2022/06/12/Fn9XR7VoGNktHid.png" alt="https00.png"></li>
<li>回到Pages设置，刷新一下就可以勾选<code>Enforce HTTPS</code>了</li>
<li>GitHub会自动申请SSL证书，有了这个证书才能够在Cloudflare开启Full (strict)模式<br><img data-src="https://s2.loli.net/2022/06/12/EjMkopVYmPnRvwb.png" alt="https01.png"><br><img data-src="https://s2.loli.net/2022/06/12/QSFCK7NGnoqyH8V.png" alt="https02.png"></li>
<li>等待Pages的HTTPS生效后，回到Cloudflare，把刚才修改的Proxy status全部恢复为<code>Proxied</code>状态，即橙色的云朵</li>
<li>到<code>SSL/TLS</code>设置中，将Encryption Mode设置为<code>Full (strict)</code><br><img data-src="https://s2.loli.net/2022/06/12/Wmwr3A7sN15gHnX.png" alt="https03.png"></li>
</ol>
<h1 id="DNS记录类型科普"><a href="#DNS记录类型科普" class="headerlink" title="DNS记录类型科普"></a>DNS记录类型科普</h1><div class="note primary"><p>部分内容引用自 <a class="btn" href="https://zh.m.wikipedia.org/zh-hans/DNS%E8%AE%B0%E5%BD%95%E7%B1%BB%E5%9E%8B%E5%88%97%E8%A1%A8"><i class="fa fa-blog fa-fw"></i>维基百科</a></p>
</div>
<h2 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h2><p>A记录(Address record)是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的网页服务器(web server)上。同时也可以设置域名的子域名。它会传回一个32位元的IPv4地址。</p>
<h2 id="AAAA记录"><a href="#AAAA记录" class="headerlink" title="AAAA记录"></a>AAAA记录</h2><p>AAAA记录(AAAA record)是用来将域名解析到IPv6地址的DNS记录。用户可以将一个域名解析到IPv6地址上，也可以将子域名解析到IPv6地址上。它会传回一个128位元的IPv6地址。</p>
<h2 id="CNAME记录"><a href="#CNAME记录" class="headerlink" title="CNAME记录"></a>CNAME记录</h2><p>CNAME记录(Canonical Name Record)，用于将一个域名（同名）映射到另一个域名（真实名称），域名解析服务器遇到CNAME记录会以映射到的目标重新开始查询。CNAME 记录可用于 CDN 加速，通过 CDN 加速别名解析网站域名。</p>
<h2 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h2><p>NS(Name Server)记录是域名服务器记录，用来指定该域名由哪个DNS服务器来进行解析。如果需要把子域名交给其他DNS服务商解析，就需要添加NS记录。</p>
<h2 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h2><p>MX(mail exchanger)记录用于指定负责处理发往收件人域名的邮件服务器。</p>
<h2 id="TXT记录"><a href="#TXT记录" class="headerlink" title="TXT记录"></a>TXT记录</h2><p>TXT记录一般指为某个主机名或域名设置的说明。</p>
<h2 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h2><p>TTL(Time To Live)表示解析记录在DNS服务器中的缓存时间，长度为秒。当本地DNS服务器收到某一域名的解析请求时，需要向该域名指定的权威DNS服务器发送解析请求获取解析记录。获得的解析记录会在本地DNS服务器中保存一段时间。在这段时间内，如果本地DNS服务器再次收到该域名的解析请求，将不再向权威DNS服务器发送解析请求，而是直接返回保存在本地DNS服务器中的解析记录。</p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub Pages</tag>
        <tag>Cloudflare</tag>
        <tag>HTTPS</tag>
        <tag>CDN</tag>
      </tags>
  </entry>
  <entry>
    <title>Grasscutter Windows本地服务器配置记录</title>
    <url>/grasscutter.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">Grasscutter 是一款用 Java 编写的实验性服务器，旨在模拟某款 Anime Game 的服务端。本文记录了我配置服务器的过程，包括 Grasscutter 与 Cultivation 的安装、相关指令的使用、一些实用插件与工具的使用方法、卡池与商店的配置以及角色模型的替换等内容。</blockquote>

<span id="more"></span>

<div class="note warning"><p>说明：本文以Windows11系统为例，客户端与服务端运行在同一台PC上。</p>
</div>

<div class="note default"><p>提示：请将本文给出的文件路径中的<code>[Username]</code>替换成自己的Windows用户名。</p>
</div>

<h1 id="运行环境配置"><a href="#运行环境配置" class="headerlink" title="运行环境配置"></a>运行环境配置</h1><p>Grasscutter的运行依赖于<code>Java</code>与<code>MongoDB</code>，建议安装JDK17，MongoDB安装最新版即可，下载链接如下：</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>Java</p><p>Java SE Development Kit 17 下载</p>
<a href="https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>MongoDB Community</p><p>MongoDB 数据库社区版下载</p>
<a href="https://www.mongodb.com/try/download/community"></a>
</div></div>


    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-90o969sgc">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="下载JDK17.webp"><img data-src="https://s2.loli.net/2023/11/11/G2KwYIs4yVaM6CT.webp" alt="下载JDK17.webp" class="zoomable"></li><li class="splide__slide" data-caption="下载MongoDB.webp"><img data-src="https://s2.loli.net/2023/11/11/FLuEvQB2oUqw13l.webp" alt="下载MongoDB.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-90o969sgc" class="carousel-caption"> </div>
    </div>
  

<p>Java的安装：</p>
<ul>
<li>下载Java安装包，选择<code>Windows x64 Installer</code>或者<code>Windows x64 MSI Installer</code>。</li>
<li>安装时，直接按默认选项完成安装。</li>
</ul>
<p>MongoDB的安装：</p>
<ol>
<li>下载MongoDB，选择社区版的<code>msi</code>格式安装包。</li>
<li>安装时选择 <code>Complete</code> 完全安装。</li>
<li>在<code>Service Configuration</code>中可以修改文件路径（最下面两项），其他选项保持默认。</li>
<li>左下角的<code>MongoDB Compass</code>是MongoDB的图形用户界面，可选装。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-u6sij5zam">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="选择完全安装.webp"><img data-src="https://s2.loli.net/2023/11/11/rRhxCA4BYDVu25U.webp" alt="选择完全安装.webp" class="zoomable"></li><li class="splide__slide" data-caption="继续安装.webp"><img data-src="https://s2.loli.net/2023/11/11/Y4mrh23sL71CUJx.webp" alt="继续安装.webp" class="zoomable"></li><li class="splide__slide" data-caption="安装Compass.webp"><img data-src="https://s2.loli.net/2023/11/11/OgrBZdvYXPmsNfl.webp" alt="安装Compass.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-u6sij5zam" class="carousel-caption"> </div>
    </div>
  

<h1 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h1><p>客户端的下载链接可以在<code>GI-Download-Library</code>获取。</p>
<ul>
<li>主文件的下载链接在<code>GI-Download-Library/GenshinImpact/Client/版本号.md</code>中，下载完成后解压。</li>
<li>语音文件的下载链接在<code>GI-Download-Library/GenshinImpact/Audio/版本号.md</code>中，解压后将文件夹复制到主文件的目录中即可。</li>
</ul>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>GI-Download-Library</p><p>主文件与语音文件下载</p>
<a href="https://github.com/MAnggiarMustofa/GI-Download-Library"></a>
</div></div>

<h1 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h1><h2 id="安装Cultivation"><a href="#安装Cultivation" class="headerlink" title="安装Cultivation"></a>安装Cultivation</h2><p>Cultivation是一款由Grasscutter团队开发的跨平台启动器，能够在 Windows、macOS 和 Linux 上运行。它自带代理功能，大大简化了Grasscutter的安装过程，只需点击几下按钮即可运行。</p>
<p>下载链接如下，选择后缀是<code>msi</code>的文件，如<code>Cultivation_1.2.0_x64_en-US.msi</code>。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Cultivation</p><p>Cultivation Release 页面</p>
<a href="https://github.com/Grasscutters/Cultivation/releases"></a>
</div></div>

<p>安装完成后重启电脑，再以管理员身份运行Cultivation。</p>
<h2 id="下载Grasscutter"><a href="#下载Grasscutter" class="headerlink" title="下载Grasscutter"></a>下载Grasscutter</h2><p>点击Cultivation右上角的<code>下载</code>图标，</p>
<ul>
<li>根据自身需要下载<code>All-in-One</code>文件，二选一，下载的文件都是已经构建完毕的，不需要自己编译。<ul>
<li><code>Grasscutter All-in-One</code>是没有任务的，但是一些场景需要自己用指令解锁，比如风龙废墟外围的风墙。</li>
<li><code>Questing All-in-One</code>是带有任务的，但是任务或多或少的存在一些bug，有时需要手动输入指令来继续进行任务，详见：<a href="https://docs.google.com/spreadsheets/u/0/d/1uao72LmJ5ZkPswOaceEcgtSMJRKlaoO2WBuf_8uStiQ/htmlview?pli=1#">常见任务Bug及处理指令</a>。</li>
</ul>
</li>
<li>下载<code>Grasscutter Resources</code>。</li>
</ul>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-veoq0ix6y">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Download Grasscutter.webp"><img data-src="https://s2.loli.net/2023/11/11/jleJCaPN1iKBFDp.webp" alt="Download Grasscutter.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-veoq0ix6y" class="carousel-caption"> </div>
    </div>
  

<p>如果你需要某一个特定版本的资源文件，可以到下面的仓库中通过切换对应分支来获取，下载完成后将文件复制到<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\resources</code>文件夹中。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>GC Resources</p><p>资源文件的GitLab仓库</p>
<a href="https://gitlab.com/YuukiPS/GC-Resources"></a>
</div></div>

<h2 id="配置Cultivation"><a href="#配置Cultivation" class="headerlink" title="配置Cultivation"></a>配置Cultivation</h2><p>首次启动时会有弹窗提示，请求安装CA证书，点击<code>是</code>同意安装。安装证书后Cultivation内置的mitmproxy就能够通过中间人攻击（MITM）的方式将客户端与游戏服务器的通信代理到本地服务端。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-g9wqqi056">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="安装证书.webp"><img data-src="https://s2.loli.net/2023/11/11/FRVI5289awtUPKT.webp" alt="安装证书.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-g9wqqi056" class="carousel-caption"> </div>
    </div>
  

<p>点击Cultivation右上角的小齿轮打开设置页面，</p>
<ul>
<li>最下方是语言设置项，支持多种语言。</li>
<li>游戏安装路径选取客户端文件夹根目录中的<code>GenshinImpact.exe</code>。</li>
<li>确认以下四项已勾选：<ul>
<li><code>自动修改RSA</code></li>
<li><code>使用内置代理</code></li>
<li><code>自动启动MongoDB</code></li>
<li><code>随游戏自动启动Grasscutter</code></li>
</ul>
</li>
<li>将自定义Java路径设置为<code>C:\Program Files\Java\jdk-17\bin\java.exe</code>。</li>
<li>其他选项保持默认即可。</li>
</ul>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-o6dg96z0i">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="配置1.webp"><img data-src="https://s2.loli.net/2023/11/11/lB3LI72ZhVJKeoQ.webp" alt="配置1.webp" class="zoomable"></li><li class="splide__slide" data-caption="配置2.webp"><img data-src="https://s2.loli.net/2023/11/11/sYk7KjeTdWN61Aw.webp" alt="配置2.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-o6dg96z0i" class="carousel-caption"> </div>
    </div>
  

<h1 id="XX，启动！"><a href="#XX，启动！" class="headerlink" title="XX，启动！"></a>XX，启动！</h1><p>服务器至此已经配置完成。XX，启动！</p>
<ol>
<li>打开Cultivation。</li>
<li>点击启动按钮右侧的<code>小按钮</code>运行Grasscutter。<ul>
<li>可能弹出Windows防火墙相关提示，允许即可。</li>
</ul>
</li>
<li>点击<code>启动</code>按钮启动游戏。</li>
<li>输入任意用户名和密码，系统会自动创建账号。<ul>
<li>密码没有用，下次登录时随便输一个数字即可。</li>
</ul>
</li>
</ol>
<h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p>常用的指令请到<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\GM Handbook</code>中查看，此外在Grasscutter窗口中可以使用<code>help</code>指令查看每条指令的详细用法。</p>
<p>直接在Grasscutter中运行指令的话一般需要指定UID，比如下面的指令用于解除UID为10001的用户的体力限制：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/prop ns on @10001</span><br></pre></td></tr></table></figure>

<p>此外也可以通过内置的聊天功能在客户端中执行指令：</p>
<ol>
<li>在客户端中按下<code>Enter</code>回车键。</li>
<li>点击左下角的<code>添加会话对象</code>。</li>
<li>点击好友横幅右边的<code>加号</code>开启对话。</li>
<li>在对话框中输入指令并发送。</li>
</ol>
<p>在聊天框中直接输入指令时需要注意：</p>
<ul>
<li>账户创建等指令不能在聊天框中使用。</li>
<li>指令一般不需要指定UID，默认对当前用户生效。</li>
<li>注意聊天框中输入的指令需要以<code>/</code>开头。</li>
<li>如<code>/give 223 x1</code>就是给当前用户1个粉球。<ul>
<li>223是粉球的ID。</li>
<li>x后面到数字代表物品的数量。</li>
</ul>
</li>
</ul>
<h1 id="工具软件"><a href="#工具软件" class="headerlink" title="工具软件"></a>工具软件</h1><p>自己一条条的敲指令有点累，建议使用下面的工具软件直接生成指令。在安装相关插件后还可以在工具软件中直接执行指令，连复制粘贴都不需要了。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Grasscutter Tools</p><p>割草机工具箱下载</p>
<a href="https://github.com/jie65535/GrasscutterCommandGenerator/releases"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>GC-Tools</p><p>支持可视化生成圣遗物指令的在线工具</p>
<a href="https://null-grasscutter-tools.vercel.app/#/artifact/index"></a>
</div></div>

<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>Grasscutter支持安装插件，我安装了下面两个插件</p>
<ul>
<li><code>Grasscutter-Rollback</code></li>
<li><code>gc-opencommand-plugin</code></li>
</ul>
<p>插件需要放在<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\plugins</code>文件夹中。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Grasscutter-Rollback</p><p>Grasscutter数据库备份与回滚插件</p>
<a href="https://github.com/KingRainbow44/Grasscutter-Rollback"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>gc-opencommand-plugin</p><p>割草机工具箱远程执行插件</p>
<a href="https://github.com/jie65535/gc-opencommand-plugin"></a>
</div></div>

<h2 id="gc-opencommand-plugin"><a href="#gc-opencommand-plugin" class="headerlink" title="gc-opencommand-plugin"></a>gc-opencommand-plugin</h2><p>gc-opencommand-plugin是一个为第三方客户端开放GC指令执行接口的插件，可以配合Grasscutter Tools使用，直接执行相关指令，不需要再去游戏聊天窗口中输入。</p>
<p>配置方法如下：</p>
<ol>
<li>启动Grasscutter。</li>
<li>打开<code>plugins</code>文件夹中与插件jar文件同名的文件夹，找到<code>config.json</code>。</li>
<li>复制<code>config.json</code>中的<code>token</code>，正常情况下这个token会自动生成，如果没有生成的话自己胡乱编一个32位的即可。</li>
<li>打开<code>Grasscutter Tools</code>。</li>
<li>切换到<code>设置</code>标签页。</li>
<li>勾选程序设置中的<code>UID</code>选项。</li>
<li>输入当前账号的UID。</li>
<li>切换到<code>远程</code>标签页。</li>
<li>点击服务器地址后的查询按钮。</li>
<li>确认<code>服务器状态 - 远程执行插件</code>后面出现绿色的对号。</li>
<li>点击<code>控制台</code>，粘贴第3步中复制的<code>token</code>。</li>
<li>点击<code>连接</code>。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-s17x12gqn">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="opencommand插件.webp"><img data-src="https://s2.loli.net/2023/11/11/TPRCVJ4I1OqikyX.webp" alt="opencommand插件.webp" class="zoomable"></li><li class="splide__slide" data-caption="opencommand插件1.webp"><img data-src="https://s2.loli.net/2023/11/11/7kPdbWUavsKeoDY.webp" alt="opencommand插件1.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-s17x12gqn" class="carousel-caption"> </div>
    </div>
  

<h2 id="Grasscutter-Rollback"><a href="#Grasscutter-Rollback" class="headerlink" title="Grasscutter-Rollback"></a>Grasscutter-Rollback</h2><p>Grasscutter-Rollback是一个数据库备份与回滚插件，当游戏坏档时可以回滚。</p>
<p>使用方法：</p>
<ul>
<li>备份当前数据库：<code>bk</code></li>
<li>回滚上一个数据库：<code>rb</code></li>
<li>备份当前数据库并重命名：<code>bk [name]</code></li>
<li>回滚到指定数据库：<code>rb [name]</code></li>
</ul>
<h1 id="卡池替换"><a href="#卡池替换" class="headerlink" title="卡池替换"></a>卡池替换</h1><p>Grasscutter_Banners 仓库包含了开服至今的所有卡池信息，下载对应的文件，将其复制到<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\data\</code>目录中，替换掉原有的<code>Banners.json</code>文件，然后在Grasscutter中执行<code>reload</code>指令即可更换当前卡池。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Grasscutter_Banners</p><p>割草机卡池文件仓库</p>
<a href="https://github.com/Zhaokugua/Grasscutter_Banners"></a>
</div></div>

<h1 id="商店编辑"><a href="#商店编辑" class="headerlink" title="商店编辑"></a>商店编辑</h1><p>默认情况下商店中是没有任何物品的，需要向<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\data\</code>目录中添加<code>shop.json</code>文件。</p>
<p>建议使用前面工具软件中提到的<code>Grasscutter Tools</code>中的<code>商店编辑器</code>编辑相关文件，方法如下：</p>
<ol>
<li>复制<code>C:\Users\[Username]\AppData\Roaming\cultivation\grasscutter\resources\ExcelBinOutput\ShopGoodsExcelConfigData.json</code>到其他的文件夹中。</li>
<li>打开Grasscutter Tools主页中的<code>商店编辑器</code>。</li>
<li>将复制后的文件路径粘贴到Grasscutter Tools中，点击<code>加载</code>。</li>
<li>编辑文件，注意每完成一项都要点击最下方的<code>添加或更新</code>按钮，否则更改不会不生效。</li>
<li>点击<code>保存</code>，会提示覆盖文件，允许即可。</li>
<li>将文件重命名为<code>shop.json</code>。</li>
<li>将文件复制到<code>C:\Users\[Username]。\AppData\Roaming\cultivation\grasscutter\data\</code>中。</li>
</ol>
<h1 id="角色模型替换"><a href="#角色模型替换" class="headerlink" title="角色模型替换"></a>角色模型替换</h1><p>角色模型Mod可以在Gamebanana下载，然后使用<code>GI-Model-Importer</code>注入到游戏中。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Gamebanana</p><p>Mod下载站</p>
<a href="https://gamebanana.com/games/8552"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>GI-Model-Importer</p><p>基于3DMigoto的原神自定义模型导入工具</p>
<a href="https://github.com/SilentNightSound/GI-Model-Importer"></a>
</div></div>

<p>具体步骤如下：</p>
<ol>
<li>在<a href="https://github.com/SilentNightSound/GI-Model-Importer/releases">Release</a>页面下载<code>GI-Model-Importer</code>并解压缩<ul>
<li>一般选择<code>3dmigoto-GIMI-for-playing-mods.zip</code>即可</li>
<li>如果要自己做Mod的话请选择<code>3dmigoto-GIMI-for-development.zip</code></li>
</ul>
</li>
<li>用VSCode打开<code>d3dx.ini</code></li>
<li>通过搜索<code>[Loader]</code>快速定位，将<code>[Loader]</code>下面的target修改为自己的游戏安装位置，例如<code>D:\Program Files\GenshinImpact_4.0.1\GenshinImpact.exe</code>   
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-c5mj4wdga">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="替换路径.webp"><img data-src="https://s2.loli.net/2023/11/08/E3KiqTQy9kJWZb2.webp" alt="替换路径.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-c5mj4wdga" class="carousel-caption"> </div>
    </div>
  </li>
<li>保存文件</li>
<li>将下载的Mod文件解压缩后复制到GI-Model-Importer的<code>Mods</code>文件夹<ul>
<li>注意：一个角色只能启用一个Mod</li>
</ul>
</li>
<li>先启动<code>3DMigoto Loader.exe</code></li>
<li>再通过<code>Cultivation</code>启动游戏</li>
<li>加载过程中屏幕左下角出现下图所示的浮窗则说明启动成功   
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-v05jdgx2f">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="启动成功浮窗.webp"><img data-src="https://s2.loli.net/2023/11/08/sOvpqaElQIBf47F.webp" alt="启动成功浮窗.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-v05jdgx2f" class="carousel-caption"> </div>
    </div>
  </li>
</ol>
<div class="note primary"><p>更多说明请查看<a href="https://github.com/SilentNightSound/GI-Model-Importer/blob/main/CN_README.md">Genshin-Impact-Model-Importer 文档</a></p>
</div>

<p><img data-src="https://s2.loli.net/2023/11/11/uoCZmLU3EWQ9aGf.webp" alt="可厉害了.webp"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Grasscutter</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 插件开发</title>
    <url>/hexo-plugin-development.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 眼馋 The Verge 的图片轮播功能，在有序图集中轮播比组图要好用，但是 Hexo 并没有相关插件，于是照猫画虎自己用 Splide 摸了一个适用于 NexT 主题的图片轮播插件，顺便记录下插件从开发到发布的全过程。 </blockquote>

<span id="more"></span>

<div class="note warning"><p>版本说明：</p>
<ul>
<li>Hexo：7.3.0</li>
<li>npm：10.8.2</li>
</ul>
</div>

<h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><ol>
<li>首先创建一个文件夹来存放插件文件。<ul>
<li>文件夹名称必须以<code>hexo-</code>开头，如<code>hexo-splide-carousel</code>，否则Hexo不会识别这个插件。</li>
<li>文件夹不必放在博客目录中。</li>
<li>建议搭配<code>git</code>使用，比如在GitHub中新建一个同名仓库并克隆到本地。</li>
</ul>
</li>
<li>在终端中执行<code>npm init</code>命令来初始化项目，跟随引导完成<code>package.json</code>的创建，<code>package.json</code>用于记录插件的名称、版本、依赖等信息，没想好或者不明白的选项保持默认即可，后续可以修改。<ul>
<li>有关<code>package.json</code>中各项的作用，详见<a href="https://docs.npmjs.com/cli/v10/configuring-npm/package-json">官方文档 package.json</a>。<ul>
<li>示例：<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-splide-carousel&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A package for Hexo blogs using the Next theme, provides image carousel and zoom functionality using Splide and medium-zoom libraries.&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;hexo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;theme-next&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;plugin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;splide&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;carousel&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;medium-zoom&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Siriusq&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;homepage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/Siriusq/hexo-splide-carousel&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bugs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://github.com/Siriusq/hexo-splide-carousel/issues&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;repository&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git://github.com:Siriusq/hexo-splide-carousel.git&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>懒得在这里一项一项填写的话就直接输入<code>npm init -y</code>，这个命令会直接生成一个默认的<code>package.json</code>。</li>
</ul>
</li>
<li>初始化完毕后，文件夹中会出现<code>index.js</code>与<code>package.json</code>两个文件，<code>index.js</code>是插件的入口文件。</li>
</ol>
<h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p>这部分内容比较长，是我的插件中相关文件的说明，仅供参考，毕竟我也是第一次开发Hexo的插件，难免出现纰漏。</p>
<p>在开发前建议完整阅读<a href="https://hexo.io/zh-cn/api">官方文档</a>。</p>
<p>我的插件属于标签类的，Hexo在生成静态文件的过程中，如果检测到markdown文件中存在相应的标签（如 <code>&#123;% splide %&#125;</code>），就会将标签及其中的内容转换为我们指定的html结构。</p>
<p>如果你的插件类型不同，可以到下面的网站寻找类似插件，照猫画虎。</p>
<ul>
<li><a href="https://hexo.io/plugins/">Hexo Plugins</a></li>
<li><a href="https://github.com/next-theme/awesome-next">Awesome NexT</a></li>
</ul>
<h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p>我的插件结构如下，并不是很规范，比如splide-init.js我就不知道应该放在哪里，因为我也没找到相关的规范，就仿照了其他看起来文件结构比较规范的插件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo-splide-carousel</span><br><span class="line"> ├─index.js</span><br><span class="line"> ├─package.json</span><br><span class="line"> ├─LICENSE</span><br><span class="line"> ├─README.md</span><br><span class="line"> ├─.npmignore</span><br><span class="line"> ├─lib</span><br><span class="line"> │  ├─scripts</span><br><span class="line"> │  │  ├─splide-init.js</span><br><span class="line"> │  │  └─tags</span><br><span class="line"> │  │     └─splide-tag.js</span><br><span class="line"> │  └─assets</span><br><span class="line"> │     └─splide-custom.css</span><br><span class="line"> └─ReadmeAssets</span><br><span class="line">    ├─CNREADME.md</span><br><span class="line">    └─preview.jpg</span><br></pre></td></tr></table></figure>

<h2 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h2><p>前面已经说过，这个文件是插件的入口文件，也就是主文件，它在我插件中的功能为：</p>
<ul>
<li>注册标签</li>
<li>引入模块</li>
<li>向页面中注入js脚本及css样式</li>
</ul>
<h3 id="注册标签"><a href="#注册标签" class="headerlink" title="注册标签"></a>注册标签</h3><p>标签插件可以帮助开发者在文章中快速插入内容。相关文档：<a href="https://hexo.io/zh-cn/api/tag">标签插件（Tag）</a>。</p>
<p>我为插件注册了两个标签：<code>splide</code>和<code>sc</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注册 Hexo 自定义标签及其简写</span></span><br><span class="line"><span class="keyword">const</span> splideTag = <span class="built_in">require</span>(<span class="string">&#x27;./lib/scripts/tags/splide-tag&#x27;</span>)(hexo);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(</span><br><span class="line">  <span class="string">&quot;splide&quot;</span>,</span><br><span class="line">  splideTag,</span><br><span class="line">  &#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(</span><br><span class="line">  <span class="string">&quot;sc&quot;</span>,</span><br><span class="line">  splideTag,</span><br><span class="line">  &#123; <span class="attr">ends</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ul>
<li><code>const splideTag = require(&#39;./lib/scripts/tags/splide-tag&#39;)(hexo);</code>。<ul>
<li><code>require(&#39;./lib/scripts/tags/splide-tag&#39;)</code>：这里我将标签函数作为模块单独引入，方便后期修改，模块的路径为<code>./lib/scripts/tags/splide-tag.js</code>。</li>
<li><code>(hexo)</code>:如果你的标签函数中调用了hexo的配置文件等，就需要传递hexo实例到函数中。</li>
</ul>
</li>
<li><code>hexo.extend.tag.register</code>用于标签注册。<ul>
<li>第一个参数为标签名称，也就是在markdown文件中使用的标签。</li>
<li>第二个参数为标签函数，因为我把它作为模块引入了，所以这里很简洁。<ul>
<li>如果你的标签函数比较简单，也可以直接填入函数<code>function (args, content) &#123; // ... &#125;,</code>。</li>
</ul>
</li>
<li>第三个参数是标签选项，Hexo共提供了两个选项，ends和async，两者默认都是false状态。<ul>
<li><code>&#123; ends: true &#125;,</code>表示使用结束标签。反映在md文件中，就是使用<code>end标签名称</code>来表示标签结束。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="加载文件"><a href="#加载文件" class="headerlink" title="加载文件"></a>加载文件</h3><p>首先加载Hexo提供的文件IO模块，详细用法请查看<a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>然后通过fs模块加载其他文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加载 lib 中的文件</span></span><br><span class="line"><span class="keyword">const</span> splideInit = fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./lib/scripts/splide-init.js&quot;</span>), &#123; <span class="attr">encoding</span>: <span class="string">&quot;utf8&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> customStyle = fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./lib/assets/splide-custom.css&quot;</span>), &#123; <span class="attr">encoding</span>: <span class="string">&quot;utf8&quot;</span> &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h3><p>我在插件中开放了一些自定义功能，比如选择依赖使用的CDN供应商，调整组件的样式等，为了让用户更方便的进行调整，就需要在Hexo的配置文件中添加这些配置选项。</p>
<p>需要注意<code>_config.yml</code>中使用的缩进均为两个空格。</p>
<p>下面以自定义CDN为例：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">splide:</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">unpkg</span>  <span class="comment"># 可选项：unpkg, cdnjs, jsdelivr</span></span><br></pre></td></tr></table></figure>

<p>然后就可以在index.js中读取配置。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> cdn = hexo.<span class="property">config</span>.<span class="property">splide</span>.<span class="property">cdn</span> || <span class="string">&#x27;unpkg&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>为了防止用户将选项留空，建议设置一个默认选项，<code>|| &#39;unpkg&#39;</code>就表示如果配置文件中未指定CDN，则使用默认CDN供应商unpkg。</p>
<h3 id="注入器"><a href="#注入器" class="headerlink" title="注入器"></a>注入器</h3><p>注入器被用于将静态代码片段注入生成的 HTML 的 <code>&lt;head&gt;</code> 及 <code>&lt;body&gt;</code> 中。 Hexo 将在 <code>after_render:html</code> 过滤器之前完成注入。相关文档：<a href="https://hexo.io/zh-cn/api/injector">注入器（Injector）</a></p>
<p>前面我们只是读取了js与css文件，但是它们的代码需要被注入到生成的 HTML 中才能生效。以注入自定义样式为例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 前面引入的css样式</span></span><br><span class="line"><span class="keyword">const</span> customStyle = fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./lib/assets/splide-custom.css&quot;</span>), &#123; <span class="attr">encoding</span>: <span class="string">&quot;utf8&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将样式注入到 HTML 中</span></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">injector</span>.<span class="title function_">register</span>(</span><br><span class="line">  <span class="string">&quot;head_begin&quot;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;style type=&quot;text/css&quot;&gt;<span class="subst">$&#123;customStyle&#125;</span>&lt;/style&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;default&quot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ul>
<li>第一个参数是注入代码的位置。<ul>
<li><code>head_begin</code>: 注入在 <code>&lt;head&gt;</code> 之后（默认）</li>
<li><code>head_end</code>: 注入在 <code>&lt;/head&gt;</code> 之前</li>
<li><code>body_begin</code>: 注入在 <code>&lt;body&gt;</code> 之后</li>
<li><code>body_end</code>: 注入在 <code>&lt;/body&gt;</code> 之前</li>
</ul>
</li>
<li>第二个参数是需要注入的代码片段。</li>
<li>第三个参数是注入代码的页面范围。<ul>
<li><code>default</code>: 注入到每个页面（默认值）</li>
<li><code>home</code>: 只注入到主页</li>
<li><code>post</code>: 只注入到文章页面</li>
<li><code>page</code>: 只注入到独立页面</li>
<li><code>archive</code>: 只注入到归档页面</li>
<li><code>category</code>: 只注入到分类页面</li>
<li><code>tag</code>: 只注入到标签页面</li>
</ul>
</li>
</ul>
<h2 id="splide-tag-js"><a href="#splide-tag-js" class="headerlink" title="splide-tag.js"></a>splide-tag.js</h2><p><code>./lib/scripts/tags/splide-tag.js</code>就是前面作为模块引入的标签函数，文件如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生成html结构</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">hexo</span> =&gt;</span> <span class="keyword">function</span> (<span class="params">args, content</span>) &#123;</span><br><span class="line">  <span class="comment">// 从Hexo配置中获取全局默认设置</span></span><br><span class="line">  <span class="keyword">const</span> globalSplideOptions = hexo.<span class="property">config</span>.<span class="property">splide</span>.<span class="property">options</span> || &#123;&#125;;</span><br><span class="line">  <span class="comment">// 解析标签中的局部设置，比如 &#123;% splide type:&#x27;loop&#x27; autoplay:true %&#125;</span></span><br><span class="line">  <span class="keyword">const</span> splideSettings = args.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, arg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> [key, value] = arg.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    acc[key] = value;</span><br><span class="line">    <span class="keyword">return</span> acc;</span><br><span class="line">  &#125;, &#123;&#125;);</span><br><span class="line">  <span class="comment">// Markdown 中的每行图片</span></span><br><span class="line">  <span class="keyword">const</span> lines = content.<span class="title function_">trim</span>().<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 省略内容</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 生成最终 HTML，如果至少有一张图片有简介，才生成简介部分以及id</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;carousel-container&quot;&gt;</span></span><br><span class="line"><span class="string">      // 省略内容</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>标签函数会传入两个参数：<code>args</code> 和 <code>content</code>。在md文件中，我的标签结构为：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% splide type:&#x27;loop&#x27; autoplay:true %&#125;</span><br><span class="line">![<span class="string">alt</span>](<span class="link">url</span>)</span><br><span class="line">&#123;% endsc %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>args</code> 包含传入标签插件的参数，即上面的<code>type:&#39;loop&#39; autoplay:true</code>。</li>
<li><code>content</code> 是标签插件所覆盖的内容，即<code>![alt](url)</code>。</li>
</ul>
<h2 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h2><p><code>splide-init.js</code>的作用为监听页面事件，并判断是否初始化轮播组件。<br><code>splide-custom.css</code>会应用我自定义的样式，覆盖部分Splide的默认样式。</p>
<h1 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h1><p>在开发过程中我们需要频繁的进行测试，来确保插件正常工作。</p>
<ol>
<li>首先在博客项目中安装我们的插件，安装方法有多种，包括但不限于：<ul>
<li>（推荐）在博客根目录执行命令<code>npm install 插件的路径</code>来安装我们的插件，这个命令相当于创建了一个链接，我们在插件项目的文件夹中对文件做出的改动会实时同步到<code>博客根目录/node_modules/插件名</code>中。</li>
<li>如果你不打算上传插件的话，也可以直接将插件文件夹移动到<code>./node_modules</code>路径下，然后手动在博客根目录下的<code>./package.json</code>中的<code>dependencies</code>下添加我们的插件及其版本，如<code>&quot;hexo-splide-carousel&quot;: &quot;^1.0.0&quot;,</code>。如果是最后一行，记得在前一行末尾添加逗号并删除自身的逗号。</li>
</ul>
</li>
<li>如果你的插件有自定义配置项，记得在Hexo的配置文件<code>_config.yml</code>中添加这些配置项。</li>
<li>然后就是老一套的<code>hexo cl</code>和<code>hexo s</code>测试了。</li>
</ol>
<h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><p>在插件制作完成后，我们可以选择将它上传到npm，这样其他人也可以安装使用我们制作的插件。</p>
<ol>
<li>创建<code>README</code>文件，介绍插件的作用以及使用方法，更多内容详见<a href="https://docs.npmjs.com/about-package-readme-files">官方文档 About package README files</a>。</li>
<li>如果有需要忽略的文件，可以创建<code>.npmignore</code>文件，写法与<code>.gitignore</code>类似，一些常见文件如<code>.git</code>文件夹以及<code>README</code>文件是默认忽略的，不需要添加到<code>.npmignore</code>文件中。详见<a href="https://docs.npmjs.com/cli/v10/using-npm/developers#keeping-files-out-of-your-package">官方文档 Keeping files out of your Package</a>。</li>
<li>完善<code>package.json</code>。</li>
<li>到<a href="https://www.npmjs.com/">npm官网</a>注册一个账号。</li>
<li>在插件目录执行<code>npm login</code>，然后回车跳转到浏览器中登录账号。</li>
<li>执行<code>npm publish</code>，然后回车跳转到浏览器中验证身份。</li>
<li>在npm首页搜索自己的插件名就可以找到刚刚发布的插件了。</li>
</ol>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>如果在插件中发现了新的Bug或者添加了新的功能，就需要将更新后的插件再次推送到npm。</p>
<ol>
<li>执行<code>npm version 版本号</code>。<ul>
<li>初始化后的默认版本号是<code>1.0.0</code>。</li>
<li>如果更新内容主要是Bug修复，那么只需要增加最后一位数字，如<code>1.0.1</code>。</li>
<li>如果添加了向后兼容的新功能，则改动中间的数字，如<code>1.1.0</code>。</li>
<li>如果改动非常大，添加了不能向后兼容的新功能，则改动第一位数字，如<code>2.0.0</code>。</li>
<li>有关版本号的详细规则，请查看<a href="https://docs.npmjs.com/about-semantic-versioning">官方文档 About semantic versioning</a>。</li>
</ul>
</li>
<li>执行<code>npm publish</code>，然后回车跳转到浏览器中验证身份，然后等待终端中的命令执行完成。</li>
</ol>
<h1 id="Hexo收录"><a href="#Hexo收录" class="headerlink" title="Hexo收录"></a>Hexo收录</h1><p>插件发布后，我们还可以将插件推送到Hexo官方的插件列表中，方便更多人查找使用。</p>
<ol>
<li>Fork 一份 <a href="https://github.com/hexojs/site">hexojs&#x2F;site</a> 到自己的仓库。</li>
<li>将 fork 后的仓库 clone 到本地。</li>
<li>在<code>./source/_data/plugins/</code>中新建一个<code>yaml</code>文件，文件名同你的插件名。</li>
<li>在新建的文件中使用英语填写相关内容，示例如下： <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">Server</span> <span class="string">module</span> <span class="string">for</span> <span class="string">Hexo.</span></span><br><span class="line"><span class="attr">link:</span> <span class="string">https://github.com/hexojs/hexo-server</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">official</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">server</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">console</span></span><br></pre></td></tr></table></figure></li>
<li>将做出的更改推送到自己的仓库。</li>
<li>开启新的 pull request。
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-7izf9611w">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Open pull request"><img data-src="https://s2.loli.net/2024/09/18/njJmexIDHFvWt3i.webp" alt="Open pull request" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-7izf9611w" class="carousel-caption"> </div>
    </div>
  </li>
<li>在 title 中描述做出的修改，如<code>Plugin: add plugin hexo-splide-carousel</code>。</li>
<li>勾选 <code>Check List</code> 中的相关选项。
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-lk74h86m3">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="填写相关内容"><img data-src="https://s2.loli.net/2024/09/18/MZygx7LwdmqevY4.webp" alt="填写相关内容" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-lk74h86m3" class="carousel-caption"> </div>
    </div>
  </li>
<li>提交后等待 Hexo 完成相关检查即可。</li>
<li>最后你的插件就会出现在<a href="https://hexo.io/plugins/">Hexo官网的插件列表</a>中。</li>
</ol>
<blockquote>
<p>参考及引用</p>
<ol>
<li><a href="http://blog.holic-x.com/md/3.component/hexo%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/common/03-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html">hexo-插件开发规范@一人の境</a></li>
<li><a href="https://blog.shiguang666.eu.org/2024/06/22/9633525b3409/">Hexo 插件开发步骤</a></li>
<li><a href="https://hexo.io/zh-cn/api/index.html">Hexo API</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>插件</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>iPhone访问Windows共享文件夹</title>
    <url>/iOS-Windows-File-Share.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">一直在用的局域网文件传输软件在Win11上不能用了，又找不到好的替代品，所以决定使用Windows共享文件夹的老方法来向iOS设备传输文件。</blockquote>

<span id="more"></span>

<div class="note danger"><p>说明：本文的方法只针对受信任的网络，如自己家的WiFi。不建议在公用网络中设置共享，非常不安全。</p>
</div>

<h1 id="开启SMB协议"><a href="#开启SMB协议" class="headerlink" title="开启SMB协议"></a>开启SMB协议</h1><p>在开始菜单上方的搜索框输入<code>启用或关闭 Windows 功能</code>并打开对应的面板，勾选开启<code>SMB直通</code>功能。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-lyebdux7q">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="搜索框.webp"><img data-src="https://s2.loli.net/2023/09/17/XGH8tz7FvqIL5D2.webp" alt="搜索框.webp" class="zoomable"></li><li class="splide__slide" data-caption="功能.webp"><img data-src="https://s2.loli.net/2023/09/17/q1gzoFVEtmnk37h.webp" alt="功能.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-lyebdux7q" class="carousel-caption"> </div>
    </div>
  

<h1 id="共享设置"><a href="#共享设置" class="headerlink" title="共享设置"></a>共享设置</h1><ol>
<li>打开<code>设置</code> - <code>网络和Internet</code> - <code>WLAN</code> - <code>[当前WiFi]属性</code></li>
<li>将网络配置文件类型设置为<code>专用网络</code></li>
<li>打开<code>设置</code> - <code>网络和Internet</code> - <code>高级网络设置</code> - <code>高级共享设置</code></li>
<li>开启<code>专用网络</code>中的<code>网络发现</code>和<code>文件和打印机共享</code>选项，勾选<code>自动设置网络连接的设备</code></li>
<li>关闭<code>所有网络</code>中的<code>公用文件夹共享</code>，文件共享链接选择<code>128位加密(推荐)</code>，开启<code>密码保护的共享</code>选项</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-zsmn80cun">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="专用网络.webp"><img data-src="https://s2.loli.net/2023/09/17/Ed6VmuWqGbD5eUl.webp" alt="专用网络.webp" class="zoomable"></li><li class="splide__slide" data-caption="共享设置.webp"><img data-src="https://s2.loli.net/2023/09/17/1GeJhZWx4vYN7FS.webp" alt="共享设置.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-zsmn80cun" class="carousel-caption"> </div>
    </div>
  

<h1 id="创建共享用户"><a href="#创建共享用户" class="headerlink" title="创建共享用户"></a>创建共享用户</h1><ol>
<li>按下<code>Win + X</code>快捷键，打开<code>计算机管理</code></li>
<li>展开<code>本地用户和组</code>选项，在<code>用户</code>上右键打开菜单并选择<code>新用户</code></li>
<li>输入新的用户名和密码，勾选<code>密码永不过期</code>选项</li>
<li>点击<code>确定</code>，创建完成后关闭窗口</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-idg7fofs9">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="创建共享用户.webp"><img data-src="https://s2.loli.net/2023/09/17/ZEF8XBzWmhk3jn7.webp" alt="创建共享用户.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-idg7fofs9" class="carousel-caption"> </div>
    </div>
  

<h1 id="文件夹设置"><a href="#文件夹设置" class="headerlink" title="文件夹设置"></a>文件夹设置</h1><ol>
<li>找到要共享的文件夹，右键打开文件夹<code>属性</code></li>
<li>打开<code>共享</code>选项卡，点击文件网络和文件夹共享下的<code>共享</code>按钮</li>
<li>选择刚才创建的用户，然后点击<code>添加</code></li>
<li>将新用户的权限级别调整为<code>读取/写入</code></li>
<li>点击<code>共享</code></li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-lc3fqbews">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="属性.webp"><img data-src="https://s2.loli.net/2023/09/17/JcxQnkSoONvH9P5.webp" alt="属性.webp" class="zoomable"></li><li class="splide__slide" data-caption="添加用户.webp"><img data-src="https://s2.loli.net/2023/09/17/1pciwA6svgIrCj7.webp" alt="添加用户.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-lc3fqbews" class="carousel-caption"> </div>
    </div>
  

<h1 id="iOS文件设置"><a href="#iOS文件设置" class="headerlink" title="iOS文件设置"></a>iOS文件设置</h1><ol>
<li>文件夹属性中会出现一行<code>网络路径</code></li>
<li>打开iOS的文件App，点击右上角的三个点，选择<code>连接服务器</code></li>
<li>输入<code>smb:[共享文件夹的网络路径]</code>，这里把<code>\</code>替换成<code>/</code>，例如Windows中显示的网络路径是<code>\\ThisPC\ShareFolder</code>，那么这里要输入的就是<code>smb://ThisPC/ShareFolder</code></li>
<li>输入新创建的用户名和密码</li>
<li>连接</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-yhqwvfdm9">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="连接服务器.webp"><img data-src="https://s2.loli.net/2023/09/17/2fiqmn8VwPZbHGj.webp" alt="连接服务器.webp" class="zoomable"></li><li class="splide__slide" data-caption="输入网络路径.webp"><img data-src="https://s2.loli.net/2023/09/17/5w2jhcMe3KAUbkZ.webp" alt="输入网络路径.webp" class="zoomable"></li><li class="splide__slide" data-caption="输入用户名和密码.webp"><img data-src="https://s2.loli.net/2023/09/17/NTIF5CimUDJQLrS.webp" alt="输入用户名和密码.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-yhqwvfdm9" class="carousel-caption"> </div>
    </div>
  

<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol>
<li>iOS自带的文件App非常的智障，如果一段时间没有访问共享文件夹，那么下次访问时只能看到一个空文件夹，必须要推出smb服务器，然后点右上角的三个点重新连接服务器。</li>
<li>iOS自带的文件App中会比Windows的资源管理器多出一个名为desktop.ini的文件，这原本是个Windows的隐藏文件，不用管它</li>
<li>十分建议使用第三方文件App替换自带的App</li>
<li>iPhone与PC必须处于同一网络下</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-v4dnfu3gh">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="推出smb服务器.webp"><img data-src="https://s2.loli.net/2023/09/17/9zWb3K1jtXclaTp.webp" alt="推出smb服务器.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-v4dnfu3gh" class="carousel-caption"> </div>
    </div>
  
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>iOS</tag>
        <tag>共享文件</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS屏蔽开屏广告</title>
    <url>/iOS%E5%B1%8F%E8%94%BD%E5%BC%80%E5%B1%8F%E5%B9%BF%E5%91%8A.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">国内的互联网公司真的是脸都不要了，搞出个摇一摇开屏广告，差点中招，想回退到老版本又太麻烦，实在忍不了了，最后决定抓包，然后用Shadowrocket的规则屏蔽掉这些恶心的广告</blockquote>

<span id="more"></span>

<p>此方法的原理是使用Shadowrocket的<code>REJECT</code>规则，对APP的请求的广告域名进行拦截并返回404状态码，APP下载不到广告，自然也就不会显示了。</p>
<div class="note warning"><p>提示：此方法需要</p>
<ul>
<li>一个美区&#x2F;英区的Apple ID以及相应支付方式，因为好用的代理软件在国区已经全被下架了</li>
<li>一个可靠的机场&#x2F;VPS，因为需要一直开启VPN</li>
<li>重新安装需要屏蔽广告的APP</li>
</ul>
</div>


<h1 id="导入规则"><a href="#导入规则" class="headerlink" title="导入规则"></a>导入规则</h1><p>这里我以Shadowrocket为例，Quantumult X、Surge等代理软件也都可以使用，配置方法大同小异。</p>
<p>首先将Shadowrocket的<code>全局路由</code>设置为<code>配置</code><br><img data-src="https://s2.loli.net/2022/07/16/tzWnpVfPIBE87Ks.webp" alt="全局路由设置.webp"></p>
<p>然后到<code>配置</code>中，添加一份规则，规则在GitHub上很多，我用的是下面这个规则集中的<code>黑名单+去广告</code></p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Shadowrocket-ADBlock-Rules-Forever</p><p>最完善的 iOS Shadowrocket规则</p>
<a href="https://johnshall.github.io/Shadowrocket-ADBlock-Rules-Forever/"></a>
</div></div>

<h1 id="安装抓包APP"><a href="#安装抓包APP" class="headerlink" title="安装抓包APP"></a>安装抓包APP</h1><p>虽然上面导入的规则已经能够屏蔽掉部分APP的开屏广告了，但是有一些APP的广告下载链接经常变化，规则不一定包含，就需要抓包这些链接，然后加入到Shadowrocket的规则里。</p>
<p>抓包APP国区推荐比较多的是<a href="https://apps.apple.com/cn/app/stream/id1312141691">Stream</a>，但是英区并没有上架，这里我用的是<a href="https://apps.apple.com/gb/app/storm-sniffer-packet-capture/id1610958307">Storm Sniffer</a></p>
<h2 id="添加VPN"><a href="#添加VPN" class="headerlink" title="添加VPN"></a>添加VPN</h2><p>首次启动时先打开上面的<code>开启抓包</code>开关，然后会提示添加VPN，允许并输入手机的密码<br><img data-src="https://s2.loli.net/2022/07/16/k1dXZC3SKDryGE7.webp" alt="添加VPN.webp"></p>
<h2 id="开启HTTPS支持"><a href="#开启HTTPS支持" class="headerlink" title="开启HTTPS支持"></a>开启HTTPS支持</h2><p>下一步是开启HTTPS支持，需要下载并启用证书</p>
<h3 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h3><p><img data-src="https://s2.loli.net/2022/07/16/Cy2mZasRGuM5BNd.webp" alt="下载证书.webp"></p>
<h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p>下载完成后打开设置，会多出一个<code>已下载描述文件</code>，点击右上角的<code>安装</code>，然后输入密码，然后会弹出是否信任证书的警告，继续点击右上角的<code>安装</code>即可<br><img data-src="https://s2.loli.net/2022/07/16/qkIfpCd5wKeGTtQ.webp" alt="安装描述文件.webp"></p>
<h3 id="启用证书"><a href="#启用证书" class="headerlink" title="启用证书"></a>启用证书</h3><p>打开<code>设置</code>-<code>通用</code>-<code>关于本机</code>，拉到最下面，有一个<code>证书信任设置</code>，开启Strom Sniffer的证书,证书和APP名字差了一丢丢，会弹出警告，点击<code>继续</code>即可（抓完包建议回来关掉它，卸磨杀驴🐶🐶）。然后回到Storm Sniffer界面，如果显示的像最右边的图片一样，说明HTTPS支持已经开启成功。<br><img data-src="https://s2.loli.net/2022/07/16/sZ3PYy9GV15kKRa.webp" alt="启用证书.webp"></p>
<details class="note warning"><summary><p>删除证书</p>
</summary>
<h3 id="删除证书"><a href="#删除证书" class="headerlink" title="删除证书"></a>删除证书</h3><p>完整版的卸磨杀驴，在<code>设置</code>-<code>通用</code>-<code>VPN与设备管理</code>中找到Strom Sniffer，然后点击<code>移除描述文件</code>即可<br><img data-src="https://s2.loli.net/2022/07/16/a2xYhHBvwlbtC3j.webp" alt="卸磨杀驴.webp"></p>

</details>

<h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><p>抓包之前需要先卸载并重装要抓包的APP，因为广告文件已经在APP缓存里了，而APP里面所谓的清除缓存功能并不会清除广告的缓存。在启动的时候APP会直接调用已经缓存下来的广告，而不会向广告下载服务器发出请求，不发出请求我们就抓不到广告服务器的域名，自然也不能屏蔽它们了。</p>
<p>首先打开Storm Sniffer的<code>开启抓包</code>开关，然后启动要抓包的APP，第一次启动可能不会弹出广告，多清理后台试几次，广告加载出来后就可以回到Storm Sniffer，关掉<code>开启抓包</code>开关，然后在列表中寻找长得像广告的域名，图片形式的广告比较好找，Storm Sniffer会显示图片预览，视频形式的就得慢慢找了。找到后在Storm Sniffer中点击请求的HOST，选择复制Value就可以复制域名了<br><img data-src="https://s2.loli.net/2022/07/16/CIKLhiQevwGxTfB.webp" alt="抓包.webp"></p>
<h1 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h1><p>打开Shadowrocket的<code>配置</code>，打开刚才导入的规则，点击右上角的加号添加新的规则，类型一般不用改，策略设置为<code>REJECT</code>，然后粘贴刚才抓到的域名并保存。<br><img data-src="https://s2.loli.net/2022/07/16/tU9xOiNgpS3m4LW.webp" alt="添加自定义规则.webp"></p>
<p>然后开启Shadowrocket的代理，再次重装刚才抓完的APP，清除掉广告的缓存，就可以正常使用了。</p>
<details class="note primary"><summary><p>规则类型</p>
</summary>
<h2 id="规则类型"><a href="#规则类型" class="headerlink" title="规则类型"></a>规则类型</h2><p>一些常用规则类型说明</p>
<ul>
<li>DOMAIN：域名匹配</li>
<li>DOMAIN-SUFFIX：域名后缀匹配</li>
<li>DOMAIN-KEYWORD：域名关键字匹配</li>
<li>IP-CIDR：IP 段匹配</li>
<li>GEOIP：GEOIP 数据库（国家代码）匹配</li>
<li>DST-PORT：目标端口匹配</li>
<li>FINAL：剩余网站</li>
</ul>

</details>

<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p>国内的APP为了投放广告可谓费尽心机，APP的广告域名可能会更换，虽然频率不高，但是每次更换我们都需要重装APP并重新抓包，比较麻烦。不过一旦屏蔽完成，就再也不用忍受每次5秒的开屏广告，APP启动都是秒开，而且也不用担心开屏广告跳出来某些晦气玩意儿的大脸，还是很值的。另外附上微博国际版的域名屏蔽列表</p>
<details class="note success"><summary><p>微博国际版域名屏蔽列表</p>
</summary>
<ul>
<li>sdk.e.qq.com</li>
<li>mazu.m.qq.com</li>
<li>adimg.uve.weibo.com</li>
<li>tqt.weibo.cn</li>
<li>miaozhen.com</li>
<li>sdkapp.uve.weibo.com</li>
<li>sdkmonitor.biz.weibo.com</li>
<li>h.trace.qq.com</li>
<li>cgi.connect.qq.com</li>
<li>gdtimg.com</li>
<li>umengcloud.com</li>
<li>adstrategy.biz.weibo.com</li>
</ul>

</details>

<div class="note danger"><ul>
<li>切记不要在关闭代理的情况下启动这个APP！不然广告又会被缓存下来，就得再重装一次了。</li>
<li>建议禁止这些APP的后台刷新，iOS的消息推送机制不需要它们后台刷新，禁止也不会耽误消息。毕竟代理APP不一定稳定，万一代理掉了这些APP就可能在后台缓存广告了</li>
</ul>
</div>]]></content>
      <categories>
        <category>Free Internet</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>广告屏蔽</tag>
        <tag>ShadowRocket</tag>
        <tag>抓包</tag>
      </tags>
  </entry>
  <entry>
    <title>ITX 装机经验总结</title>
    <url>/itx-summary.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">从19年末入坑ITX到现在已经4年多了，期间拆拆装装也踩了不少坑，这篇博客就来总结一下装机中的经验。</blockquote>

<span id="more"></span>

<h1 id="防尘网"><a href="#防尘网" class="headerlink" title="防尘网"></a>防尘网</h1><p>如果你的进出风口是C24这种洞洞板的，建议使用尼龙或者锦纶网作为防尘网，淘宝上几块钱一平米，60目足够，目数指的是2.53厘米中的线数，25.3mm除以60就是小孔的孔径，买回来用双面胶直接粘在铝板上就行。千万不要买PVC打孔的那种，洞洞板本身就减少了不少通风面积，然后PVC网再挡一下，散热效率可想而知。我原来用的是0.8mm的PVC防尘网，手放在机箱上出风口都感觉不到有气流，itx机箱用它就是超级闷罐。我的C24在更换防尘网后待机温度降低了3度，烤鸡温度降低了7度。</p>
<p>如果是Rider R2 5.0这种上下前后全是Mesh网板的机箱，就没有什么必要装防尘网了，网板自己就是防尘网。</p>
<p>另外防尘网只需要装在进风口，出风口不需要装，装上的话只会把灰尘拦截在机箱里面。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/7olWcMIh3BNtrsa.webp" alt="PVC防尘网.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/L9VCZ54JygmsFdO.webp" alt="锦纶网.webp"></div></div></div>

<h1 id="风扇"><a href="#风扇" class="headerlink" title="风扇"></a>风扇</h1><p>关于风扇的选购指南，请参考泥潭的<a href="https://bbs.nga.cn/nuke.php?func=ucp&__inchst=UTF-8&username=SUPERODD">野兽仙贝 SUPERODD</a>。</p>
<p>深圳利民的风扇有一个算一个全是垃圾，而且它的水军是真多啊，曾经听了它们的鬼话，买了个利民的扇子装在散热器上，非吊装工况下不到一年就坏轴了，低转速下有哒哒哒的轴噪，像拖拉机一样，烦得很，高转速的时候轴承就像脱缰的野狗，偏心摆动幅度非常大，手摸上去的感觉就和摸冲击钻一样，甚至带的桌子都在震动，真怕它把我主板给我震废了。拆下来之后发现电机背面还渗油了，于是直接扔垃圾桶了。</p>
<p>如果你的风扇是吊装的话，建议直接上双滚珠轴承的，现在的平价的FDB油轴吊装使用就只有中午能用，早晚要坏，坏掉之后的噪音比双滚珠轴承的大多了。</p>
<p>如果你想要组纯白主机，那么风扇最好一次买齐，不要隔一段时间加一个，因为白色会慢慢变黄，不同时间安装的风扇会有色差，就很难受，我之前买的Arctic的白色风扇已经发黄了，对比新买的风尊T30完全是两个颜色。</p>
<p>如果你的机箱是C24这种直插结构，显卡距离机箱底部非常近，那么机箱的底部风扇完全没必要装，装上反而会扰乱气流，导致温度升高。我的C24在拆掉了底下的HF1215后，显卡待机温度升了2度，原来是49现在是51，待机时两个显示器都运行30帧的wallpaper engine。但是双烤时温度却降低了，就很反直觉。另外底部的这个风扇还会和CPU前面的顶部进风扇打架，搞得CPU吸收的全是显卡的尾气，拆掉它之后CPU温度也会降低。</p>
<p><img data-src="https://s2.loli.net/2024/03/25/lAh41EWFkPUTVNZ.webp" alt="C24.webp"></p>
<h1 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h1><p>对ITX来说，集线器就是完完全全的废物，大部分机箱都放不下，我买了个九州风扇的SC790，是磁吸的，但是根本找不到合适的地方吸，而且做工堪忧，我在拆掉它的时候按着卡扣拔pwm信号线，结果把底座的塑料给带出来了。。。。。。</p>
<p>在C24里面，它只有吸在电源上才有足够的空间插线，但是磁铁贴在电源上会产生干扰，导致奇奇怪怪的问题。</p>
<h1 id="风扇固定螺丝"><a href="#风扇固定螺丝" class="headerlink" title="风扇固定螺丝"></a>风扇固定螺丝</h1><p>一定！一定！一定不要用风扇附赠的自攻螺丝，自攻螺丝是比风扇螺丝孔粗半圈的，拧螺丝的时候会在螺丝孔上现场造螺纹，这个过程对风扇塑料框架的伤害很大，我的HF1215的框架就变形了，几个8025风扇螺丝孔周围的塑料都翘起来了。</p>
<p>建议使用胶钉或者是对锁螺丝，对锁螺丝是最佳方案，胶钉在固定较重的风扇时还是力不从心的；而且橡胶存在老化问题，减震效果会逐渐减弱；最最关键的，对锁螺丝好看，胶钉装上之后得把屁股那一大截剪掉，我剪得像狗啃的一样，怎么看都不顺眼。</p>
<p>我目前使用的就是镀镍对锁螺丝加橡胶垫片，淘宝搜索对锁螺丝时不要加上电脑之类的关键字，这东西四五块钱就能买20个，如果你加上电脑两个字搜索，十几块钱只能买4个。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/RHikB2cOxbq9E3Y.webp" alt="胶钉.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/J2w8vItePBf1GSl.webp" alt="对锁螺丝.webp"></div></div></div>

<h1 id="某宝的硅胶风扇减震框"><a href="#某宝的硅胶风扇减震框" class="headerlink" title="某宝的硅胶风扇减震框"></a>某宝的硅胶风扇减震框</h1><p>没啥卵用，设计上很智障的产品，太软了，拧几下螺丝它就会变形成麻花，根本没法用。</p>
<p>Chiphell上有大佬自己做了3d模型，可以去嘉立创3d打印，差不多10块1个，这种就很稳，而且有框约束的话风不会乱窜，免得出现出风扇出的风被进风扇吸回来的情况。</p>
<p><img data-src="https://s2.loli.net/2024/03/25/f1ixwXLYSvs6yEB.webp" alt="硅胶减震框.webp"></p>
<h1 id="RGB"><a href="#RGB" class="headerlink" title="RGB"></a>RGB</h1><p>所有的RGB部件最好一次买齐，尽量同一公司，风扇最好同一产品同一批次，不然会有色差，看起来很难受。</p>
<p>注意看主板的说明书，RGB接口最多一次带多少个灯珠，最大电流是多少，带太多设备的话后面的灯会不亮或者发暗。</p>
<p>最重要的一点是分清设备是12V的RGB的还是5V的ARGB，接错会烧掉。</p>
<h1 id="显卡支架"><a href="#显卡支架" class="headerlink" title="显卡支架"></a>显卡支架</h1><p>那种可以旋转的小棍样式的支架简直暴利，我买的乔思伯那个VC20MINI要20块钱，而这东西本质上就是个广告钉，某宝直接搜广告钉，几块钱就能买一大把。</p>
<p>当然，如果想省钱的话：<br>最具性价比产品：一次性筷子<br>最具质感产品：一块的钢镚摞起来</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/zILdR5AEQptj1iY.webp" alt="显卡支架.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/gEduyixrk5WoDU4.webp" alt="广告钉.webp"></div></div></div>

<h1 id="线材"><a href="#线材" class="headerlink" title="线材"></a>线材</h1><p>如果你的机箱空间很极限，或者有侧透需要考虑美观，电源线建议换用定制软硅胶的。其他情况还是用原装线放心，毕竟原装线除了硬完全没有缺点，而且烧了的话还有厂商赔，用定制线烧了硬件就只能自认倒霉了。</p>
<p>定制线买回来后建议和原装线放在一起对比一下线序，线序不对会炸的，另外线序与接口定义可以去<a href="https://pc-mods.com/">PC MOD 网站</a>查看。</p>
<p>如果可以的话，Sata线、USB3.0线和机箱跳线换成扁平的或者软的，走线会方便很多，我C24原装的USB3.0的线是那种又粗又硬又长的线，盘了两圈才放好，换的时候注意机箱面板上的螺丝孔距，从20mm到26mm都有机箱在用。</p>
<p><img data-src="https://s2.loli.net/2024/03/25/6fWRubdHyqrAIeP.webp" alt="硅胶定制线.webp"></p>
<h1 id="散热器"><a href="#散热器" class="headerlink" title="散热器"></a>散热器</h1><p>买散热器不要卡着限高买，很多标注都不准，我的C24标称限高130mm，买了个标称130mm高的的乔思伯CR1400EVO，结果顶盖凸出来不到1mm，盖不上玻璃侧板，最后上的磁条垫高的亚克力侧板，如果你不嫌弃磁条丑的话，理论上可以垫高到160mm放下99%的散热器（手动狗头）。</p>
<p>买之前一定要问客服或者评论区多翻一翻，看看扣具会不会和主板的装甲冲突，CR1400EVO就和华硕B460i的固态散热马甲冲突，硬装上去的话，扣具是翘起来的。一些散热器的背板也可能会和主板背面的电子元件冲突。如果是下压散热器，要注意鳍片的朝向，最好和风道的方向是一致的，这样气流才能通畅的通过散热器带走热量。</p>
<h1 id="底部进风"><a href="#底部进风" class="headerlink" title="底部进风"></a>底部进风</h1><p>如果你的机箱底部有进风风扇，建议把机箱垫高，可以提高不小的进风量。某宝搜索垫块，很便宜。</p>
<h1 id="理线"><a href="#理线" class="headerlink" title="理线"></a>理线</h1><p>理线建议使用魔术贴，不建议使用扎带，扎带不好拆，后期清灰拆风扇的话需要把扎带剪开才能把风扇抽出来。（如果看不到线的话，直接胡乱一塞完事）</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/hsZFMSDtmWxEUl3.webp" alt="扎带.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/HK2u3VUBviNdy7X.webp" alt="魔术贴.webp"></div></div></div>

<h1 id="补漆"><a href="#补漆" class="headerlink" title="补漆"></a>补漆</h1><p>机箱在拆装的过程中难免会掉漆，尤其是螺丝孔附近。铁皮机箱掉漆后直接裸露在外，很容易生锈。为了一小块裸漏的铁皮去喷漆不太值得，还是用指甲油更有性价比，某宝上最便宜的一档就够用，如果你有女朋友就更好说了（手动狗头）。</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>ITX</tag>
        <tag>搞机</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode LaTeX 快速配置指南</title>
    <url>/latex-vscode-quick-config.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">安装Tex环境并在VSCode中快速配置好LaTeX的方法记录</blockquote>

<span id="more"></span>

<h1 id="安装TeX-Live"><a href="#安装TeX-Live" class="headerlink" title="安装TeX Live"></a>安装TeX Live</h1><p>首先到<a href="https://www.tug.org/texlive/index.html#concise">TeX Live官网</a>下载安装文件。下面的链接中左边是Windows版本的ISO文件下载页面，右边是Mac版本的pkg文件下载页面</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>TeX Live ISO image</p><p>Acquiring TeX Live as an ISO image</p>
<a href="https://www.tug.org/texlive/acquire-iso.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>MacTeX.pkg</p><p>MacTeX is a package which installs TeX Live on the Macintosh.</p>
<a href="https://www.tug.org/mactex/mactex-download.html"></a>
</div></div>

<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>对于Windows用户，建议使用<code>ISO</code>文件进行安装，ISO文件大小约为4GB，包含了所有需要的文件，不需要在线安装。如果你的网络条件比较好的话，你也可以选择下载install-tl-windows.exe，它只有20MB，双击即可开始在线安装，更加方便。但是我使用install-tl-windows.exe时程序预估需要几小时才能完成下载和安装，而下载ISO文件只需要几分钟。</p>
<p>打开下载页面后，选择<code>download from a nearby CTAN mirror</code>前往最近的镜像站点，单击下载<code>texlive.iso</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-855hx92jw">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="前往最近的镜像站点"><img data-src="https://s2.loli.net/2023/10/06/rtv86aQ3NoJeygY.webp" alt="前往最近的镜像站点" class="zoomable"></li><li class="splide__slide" data-caption="下载texlive.iso"><img data-src="https://s2.loli.net/2023/10/06/cuwyg4mZVAdPsFJ.webp" alt="下载texlive.iso" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-855hx92jw" class="carousel-caption"> </div>
    </div>
  

<p>下载完成后双击挂载文件，然后以管理员身份运行其中的<code>install-tl-windows.bat</code>。待安装程序加载完成后点击<code>安装</code>按钮，安装过程取决于电脑性能，大约需要30分钟，安装成功后点击<code>关闭</code>按钮结束安装程序。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-wzgw62ig7">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="选择安装路径"><img data-src="https://s2.loli.net/2023/10/06/TkNJ7vCBLpOlfVb.webp" alt="选择安装路径" class="zoomable"></li><li class="splide__slide" data-caption="Loading"><img data-src="https://s2.loli.net/2023/10/06/PA9rod7y2NktUEJ.webp" alt="Loading" class="zoomable"></li><li class="splide__slide" data-caption="安装"><img data-src="https://s2.loli.net/2023/10/06/RX3Zq2Ota47wpjV.webp" alt="安装" class="zoomable"></li><li class="splide__slide" data-caption="安装成功"><img data-src="https://s2.loli.net/2023/10/06/A2pZSEaxkrHeR3d.webp" alt="安装成功" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-wzgw62ig7" class="carousel-caption"> </div>
    </div>
  

<h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><p>mac用户直接点击下载页面的<code>MacTeX.pkg</code>下载安装包，安装包大小为5.2G。下载完成后只需要双击打开安装包，然后根据指引操作即可。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-arlehdqrk">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="下载MacTeX.pkg"><img data-src="https://s2.loli.net/2023/10/06/OMBXEcRnWstlv9A.png" alt="下载MacTeX.pkg" class="zoomable"></li><li class="splide__slide" data-caption="同意协议"><img data-src="https://s2.loli.net/2023/10/06/6AZdueKySU5cvwb.png" alt="同意协议" class="zoomable"></li><li class="splide__slide" data-caption="等待安装完成"><img data-src="https://s2.loli.net/2023/10/06/2bXlRiMTSBvIZGu.png" alt="等待安装完成" class="zoomable"></li><li class="splide__slide" data-caption="安装完成"><img data-src="https://s2.loli.net/2023/10/06/cN5oU1z6kZihFJE.png" alt="安装完成" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-arlehdqrk" class="carousel-caption"> </div>
    </div>
  

<h1 id="安装VSCode扩展"><a href="#安装VSCode扩展" class="headerlink" title="安装VSCode扩展"></a>安装VSCode扩展</h1><p>在VSCode的扩展商店中搜索并安装<code>LaTeX Workshop</code>和<code>LaTeX Utilities</code>两个扩展，前者的作用是为VSCode添加LaTeX支持，后者则是提供一些实用的功能，如自动格式化粘贴的文本，而且可以和Zotero配合使用。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-38ewwk0jc">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="安装扩展.webp"><img data-src="https://s2.loli.net/2023/10/06/xqgKzTueOnMVod9.webp" alt="安装扩展.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-38ewwk0jc" class="carousel-caption"> </div>
    </div>
  

<h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>使用<code>ctrl</code>+<code>,</code>快捷键打开VSCode的设置，接下来的的操作建议使用顶栏的搜索快速定位</p>
<h2 id="自动编译"><a href="#自动编译" class="headerlink" title="自动编译"></a>自动编译</h2>
    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-bemz1tadv">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Auto Build.webp"><img data-src="https://s2.loli.net/2023/10/06/JmdOsAWTgotPQSh.webp" alt="Auto Build.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-bemz1tadv" class="carousel-caption"> </div>
    </div>
  

<p>搜索<code>latex run</code>，调整<code>Latex-workshop &gt; Latex &gt; Auto Build: Run</code>选项，我选择的是OnSave</p>
<ul>
<li><code>never</code>，不进行自动编译</li>
<li><code>OnSave</code>，在保存<code>.tex</code>文件的时候进行自动编译</li>
<li><code>OnFileChange</code>，在检测到任何依赖项中的文件更改后进行自动编译，包括在VSCode之外进行修改。</li>
</ul>
<h2 id="自动清理"><a href="#自动清理" class="headerlink" title="自动清理"></a>自动清理</h2><p>这个选项的作用是自动清理（删除）已编译的辅助文件和输出文件，以确保每次运行 LaTeX 编译时都从头开始，而不受之前编译的影响。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-k4iasholq">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Auto Clean.webp"><img data-src="https://s2.loli.net/2023/10/06/c1vBzWIOdTlP7ZQ.webp" alt="Auto Clean.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-k4iasholq" class="carousel-caption"> </div>
    </div>
  

<p>搜索<code>latex run</code>，调整<code>Latex-workshop &gt; Latex &gt; Auto Clean: Run</code>选项，我选择的是OnFailed</p>
<ul>
<li><code>never</code>，不进行自动清理</li>
<li><code>OnFalied</code>，只在编译失败时进行自动清理</li>
<li><code>OnSucceeded</code>，只在编译成功时进行自动清理</li>
<li><code>OnBuilt</code>，编译后就进行自动清理，不论是否成功</li>
</ul>
<details class="note success"><summary><p>详细说明</p>
</summary>
<p>具体来说，这个选项的作用如下：</p>
<ol>
<li><strong>自动清理</strong>：当你编译 LaTeX 文档时，会生成一些辅助文件（如 <code>.aux</code>, <code>.log</code>, <code>.bbl</code>, <code>.blg</code> 等）以及生成的 PDF 文件。这些文件通常用于记录编译的信息、辅助交叉引用、生成参考文献等。”Auto Clean: Run” 选项启用后，每次你运行 LaTeX 编译时，插件会自动删除这些辅助文件和之前生成的 PDF 文件。</li>
<li><strong>避免旧文件干扰</strong>：如果你在不同的编译之间对文档进行了修改，旧的辅助文件可能会导致问题，例如交叉引用错误或不正确的参考文献。通过自动清理这些文件，你可以确保每次编译都从干净的状态开始，减少潜在的干扰和错误。</li>
<li><strong>节省磁盘空间</strong>：LaTeX 编译会生成许多临时文件，随着时间的推移，这些文件可能占用大量磁盘空间。自动清理可以帮助你定期删除这些不再需要的文件，节省磁盘空间。<br>请注意，使用 “Auto Clean: Run” 选项时，确保你不需要保留编译生成的辅助文件或输出文件，因为它们将被删除。如果你需要保留这些文件以供其他用途（如参考文献的生成），则可以将此选项禁用，手动管理这些文件。</li>
</ol>
<blockquote>
<p>By ChatGPT</p>
</blockquote>

</details>

<h2 id="添加编译链"><a href="#添加编译链" class="headerlink" title="添加编译链"></a>添加编译链</h2><p>LaTeX Workshop默认的编译链中只有<code>pdflatex -&gt; bibtex -&gt; pdflatex * 2</code>包含了<code>bibtex</code>，下面我们再添加一个<code>xelatex -&gt; bibtex -&gt; xelatex*2</code>编译链。</p>
<details class="note success"><summary><p>PdfTeX和XeTeX的区别</p>
</summary>
<p>PdfTeX和XeTeX是两种用于排版文档的TeX引擎，它们有一些重要区别：</p>
<ol>
<li>字体支持：<ul>
<li>PdfTeX：PdfTeX主要支持传统的TeX字体，如Computer Modern。要使用其他字体，通常需要进行复杂的配置和字体映射。</li>
<li>XeTeX：XeTeX更加灵活，可以直接使用系统上安装的字体，包括TrueType和OpenType字体。这使得处理多国语言和不同字体风格的文档变得更加容易。</li>
</ul>
</li>
<li>字符编码：<ul>
<li>PdfTeX：PdfTeX通常需要使用特定的输入编码（如UTF-8）处理文档中的非ASCII字符，而且支持有限。</li>
<li>XeTeX：XeTeX天生支持Unicode编码，因此可以轻松处理各种语言和符号，无需额外配置。</li>
</ul>
</li>
<li>多语言支持：<ul>
<li>PdfTeX：支持多语言，但需要谨慎配置以处理不同语言的特殊要求。</li>
<li>XeTeX：对多语言文档的支持更加直接和简单，尤其适用于包含多种语言和脚本的文档。</li>
</ul>
</li>
<li>输出格式：<ul>
<li>PdfTeX：生成PDF格式的输出。</li>
<li>XeTeX：同样可以生成PDF，但也支持其他格式，如DVI和PostScript。</li>
</ul>
</li>
</ol>
<p>总之，PdfTeX适用于传统的TeX文档排版工作，而XeTeX更适合处理多语言、复杂字体需求和Unicode字符的文档。选择哪个引擎取决于你的具体需求和项目要求。</p>
<blockquote>
<p>By ChatGPT</p>
</blockquote>

</details>

<details class="note success"><summary><p>BibTeX</p>
</summary>
<p>BibTeX是一种用于管理文献引用和参考文献的工具，通常与LaTeX文档一起使用。它允许你创建一个包含文献信息的文本数据库（通常以<code>.bib</code>文件扩展名保存），然后在LaTeX文档中引用这些文献，以自动生成格式良好的参考文献列表。</p>
<p>以下是BibTeX的主要工作原理：</p>
<ol>
<li><p>创建文献数据库：你需要创建一个包含所有引用文献的BibTeX数据库文件（<code>.bib</code>文件）。每个文献条目都包含作者、标题、出版信息等元数据。</p>
</li>
<li><p>在LaTeX文档中引用文献：在LaTeX文档中，你可以使用<code>\cite{key}</code>命令引用文献，其中<code>key</code>是文献在BibTeX数据库中的标识符。</p>
</li>
<li><p>编译文档：使用LaTeX编译你的文档，然后运行BibTeX，它会查找引用并生成参考文献列表。最后再次编译文档，以确保引用在文档中正确显示。</p>
</li>
<li><p>自动生成参考文献：BibTeX会根据你的引用生成格式良好的参考文献，包括适当的引用样式（如APA、MLA等）和排序。</p>
</li>
</ol>
<p>BibTeX的优点是它能够自动处理引用和文献格式，使得文献管理更加方便，特别是对于长篇论文和学术文章。不过，需要注意的是BibTeX样式和格式需要根据期刊或出版机构的要求进行调整，因此在使用时需要注意选择适当的文献样式和进行必要的自定义。</p>
<blockquote>
<p>By ChatGPT</p>
</blockquote>

</details>


    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-wped2vvyu">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Recipe.webp"><img data-src="https://s2.loli.net/2023/10/06/WbyZSiL5dk1MFGo.webp" alt="Recipe.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-wped2vvyu" class="carousel-caption"> </div>
    </div>
  

<p>搜索<code>Latex: Recipes</code>，点击<code>Latex-workshop &gt; Latex: Recipes</code>选项中的<code>在settings.json中编辑</code>，使用ctrl+F搜索定位到<code>latex-workshop.latex.recipes</code>，向其中添加一条新的编译链，如下所示，注意不要漏掉最后面的<code>,</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;xelatexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;xelatexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;xelatexmk&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<details class="note success"><summary><p>为何要进行多次xelatex编译</p>
</summary>
<p>在LaTeX的编译链中，通常需要进行两次<code>xelatex</code>编译的原因与文献引用（使用<code>bibtex</code>或<code>biblatex</code>）有关。以下是两次编译的目的和过程：</p>
<ol>
<li>第一次<code>xelatex</code>编译：<ul>
<li>第一次编译主要用于处理文档内容、生成引用标签和生成参考文献引用的占位符。</li>
<li>当你使用<code>\cite{key}</code>命令引用文献时，第一次编译会在文档中插入占位符，如<code>[?]</code>，以表示引用的位置。</li>
<li>这一步还会生成一个辅助文件（通常是<code>.aux</code>文件），其中包含了文献引用的信息。</li>
</ul>
</li>
<li>使用<code>bibtex</code>编译：<ul>
<li>接下来，你需要运行<code>bibtex</code>工具，它会读取<code>.aux</code>文件中的引用信息，然后根据你的BibTeX数据库（<code>.bib</code>文件）生成参考文献列表和引用的详细信息。</li>
<li><code>bibtex</code>生成的信息存储在一个<code>.bbl</code>文件中。</li>
</ul>
</li>
<li>第二次<code>xelatex</code>编译：<ul>
<li>第二次编译的目的是将生成的参考文献列表和引用的详细信息插入到文档中，以替换占位符。</li>
<li>在这一次编译中，LaTeX知道每个引用的详细信息，并将它们正确地格式化和排列在文档中。</li>
<li>这一次编译还会更新文档的引用标签。</li>
</ul>
</li>
<li>第三次<code>xelatex</code>编译（可选）：<ul>
<li>如果你的文档中有交叉引用（如引用章节或图表），可能需要再次运行<code>xelatex</code>进行编译，以确保所有交叉引用的编号都正确。</li>
</ul>
</li>
</ol>
<p>所以，多次<code>xelatex</code>编译是为了确保文献引用和参考文献列表能够正确地嵌入到文档中。这是LaTeX处理文献引用的标准工作流程。在某些情况下，如果没有交叉引用或文献引用不会影响文档的其他部分，可能只需要两次编译，而不需要第三次编译。</p>
<blockquote>
<p>By ChatGPT</p>
</blockquote>

</details>

<h2 id="首选编译选项"><a href="#首选编译选项" class="headerlink" title="首选编译选项"></a>首选编译选项</h2><p>这个选项定义了在没有明确指定其他编译选项时所使用的默认选项，包括前面设置的自动编译。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-8i4cjcc85">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Default Recipe.webp"><img data-src="https://s2.loli.net/2023/10/06/9CUzAGhcZfNVlLS.webp" alt="Default Recipe.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-8i4cjcc85" class="carousel-caption"> </div>
    </div>
  

<p>搜索<code>latex recipe default</code>，调整<code>Latex-workshop &gt; Latex &gt; Recipe: Default</code>选项，我选择的是lastUsed</p>
<ul>
<li><code>first</code>，配置文件中的第一个编译选项</li>
<li><code>lastUsed</code>，上次使用过的编译选项</li>
</ul>
<h2 id="关闭报错弹窗"><a href="#关闭报错弹窗" class="headerlink" title="关闭报错弹窗"></a>关闭报错弹窗</h2><p>默认情况下，VSCode在编译失败是会在右下角弹出消息提醒，需要手动关闭，报错的信息在终端里都能看到，所以我就把它关掉了。</p>
<p>搜索<code>latex message show</code>，取消勾选<code>Latex-workshop &gt; Message &gt; Error: Show</code>选项和<code>Latex-workshop &gt; Message &gt; Warning: Show</code>选项</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-hea8ztof6">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Warning.webp"><img data-src="https://s2.loli.net/2023/10/06/32T5rc7sRSaAHGf.webp" alt="Warning.webp" class="zoomable"></li><li class="splide__slide" data-caption="Error.webp"><img data-src="https://s2.loli.net/2023/10/06/iTOLUpPYsIFB8l4.webp" alt="Error.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-hea8ztof6" class="carousel-caption"> </div>
    </div>
  

<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>使用VSCode打开.tex文件时，左侧边栏会出现一个TEX选项，可以进行编译选项选择、查看PDF、快速定位等操作。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-ajqc9vtv7">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Build.webp"><img data-src="https://s2.loli.net/2023/10/06/JMpIfran4KEuPic.webp" alt="Build.webp" class="zoomable"></li><li class="splide__slide" data-caption="PDF&Log.webp"><img data-src="https://s2.loli.net/2023/10/06/XGPqzkKINi4AQ6d.webp" alt="PDF&Log.webp" class="zoomable"></li><li class="splide__slide" data-caption="Navigate.webp"><img data-src="https://s2.loli.net/2023/10/06/v9HR26jTgBYypld.webp" alt="Navigate.webp" class="zoomable"></li><li class="splide__slide" data-caption="Citation.webp"><img data-src="https://s2.loli.net/2023/10/06/AiMrFKVxwI3g19P.webp" alt="Citation.webp" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-ajqc9vtv7" class="carousel-caption"> </div>
    </div>
  

<blockquote>
<p>参考：</p>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/166523064">Visual Studio Code (vscode)配置LaTeX</a> by <a href="https://www.zhihu.com/people/Ali-loner">Ali-loner</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/108095566">VS Code + LaTeX</a> by <a href="https://www.zhihu.com/people/Thesharing">柏星</a></li>
<li><a href="https://github.com/James-Yu/LaTeX-Workshop/wiki">LaTeX Workshop Wiki</a> by <a href="https://github.com/James-Yu">James Yu</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>宏碁笔电安装 Linux 后提示 No Bootable Device 的解决方案</title>
    <url>/linux-no-bootable-device.html</url>
    <content><![CDATA[<p><img data-src="https://s2.loli.net/2023/12/24/DWFdJTgk742GY3N.webp" alt="No_Bootable_Device.webp"></p>
<span id="more"></span>

<p>没错，我又在折腾我那可怜的练习时长8年的笔记本电脑了。因为不支持TPM2.0，它安装不了Windows11，即便强行安装上了也不能自动更新，而Windows10会在2025年10月停止支持，8年前的双核CPU也带不动最新的操作系统了，于是乎我决定只给它保留一个Linux系统，原来安装过Fedora和Ubuntu，都不太合我口味，这次换成了Linux Mint。不过在系统安装完成后重启的过程中又遇到了那个十分熟悉的页面：No Bootable Device 🐶</p>
<div class="note warning"><p>提醒：本方案基于Linux Mint系统，引导方式为UEFI，磁盘分区表格式为GPT，安装方式为格式化磁盘并进行全新安装，仅安装Linux Mint单系统，不同的BIOS版本和不同的Linux发行版在操作步骤上可能有些许不同。</p>
</div>

<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>引导项没有了，手动给它添加回去不就完了嘛，添加步骤如下：</p>
<ol>
<li>开机时按<code>F2</code>或者<code>Del</code>进入BIOS（UEFI BIOS firmware）</li>
</ol>
<ul>
<li>如果你现在正卡在No Bootable Device页面上，使用<code>Ctrl + Alt + Del</code>组合键即可重启</li>
<li>顺便说明一下BIOS菜单的操作方法：<ul>
<li>使用左右方向键在不同的菜单之间切换</li>
<li>使用上下方向键在菜单的不同条目之间移动</li>
<li>使用回车键确认</li>
<li>使用Esc键返回</li>
</ul>
</li>
</ul>
<ol start="2">
<li>使用左右方向键切换到<code>Boot</code>菜单，确认<code>Secure Boot</code>处于<code>Enabled</code>开启状态<br>  <img data-src="https://s2.loli.net/2023/12/24/FqLwze7xd1DAYOE.webp" alt="Enable Secure Boot.webp"></li>
<li>使用左右方向键切换到<code>Security</code>菜单</li>
<li>需要先设置BIOS密码，使用上下方向键移动到<code>Set Supervisor Password</code>条目并回车</li>
</ol>
<ul>
<li>一定要记住这个密码，以后每次进入BIOS时都要输入这个密码<br>  <img data-src="https://s2.loli.net/2023/12/24/qJEYpLbgATO8W4e.webp" alt="Set Supervisor Password.webp"></li>
</ul>
<ol start="5">
<li>移动到<code>Select an UEFI file as trusted for executing</code>条目并回车<br>  <img data-src="https://s2.loli.net/2023/12/24/ZmR71YbVOuGa45T.webp" alt="Select an UEFI file as trusted for executing.webp"></li>
<li>使用回车依次选择<code>HDD0/EFI/ubuntu/shimx64.efi</code>  <div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/12/24/Xc5Z8eFfdzBNSnC.webp" alt="HDD0.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/12/24/f9sEFJMVOodZPXG.webp" alt="EFI.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/12/24/BrMdgfptsG1OHoi.webp" alt="ubuntu.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2023/12/24/yOrKf1bpIYCjnGW.webp" alt="shimx64.efi.webp"></div></div></div></li>
<li>在<code>Boot Description</code>中给这个项目起一个别名，例如LinuxMint<br>  <img data-src="https://s2.loli.net/2023/12/24/642xJecumFnU9gH.webp" alt="Boot Description.webp"></li>
<li>选择<code>Yes</code>并回车<br>  <img data-src="https://s2.loli.net/2023/12/24/54NeiQ3sRjhGYZ7.webp" alt="Yes.webp"></li>
<li>使用左右方向键切换到<code>Exit</code>菜单</li>
<li>使用上下方向键移动到<code>Exit Saving Changes</code>条目并回车，或者直接按F10键<br>  <img data-src="https://s2.loli.net/2023/12/24/ZEzWTju1oNOscyA.webp" alt="Exit Saving Changes.webp"></li>
<li>选择<code>Yes</code>并回车，电脑会自动重启</li>
<li>如果不出意外的话，重启后就可以进入系统了</li>
</ol>
<h1 id="如何再次进入BIOS"><a href="#如何再次进入BIOS" class="headerlink" title="如何再次进入BIOS"></a>如何再次进入BIOS</h1><p>引导设置完成后，再次开机时很难通过快捷键进入BIOS，我们可以打开终端，运行以下命令，系统重启后会自动进入BIOS。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl reboot --firmware-setup</span><br></pre></td></tr></table></figure>

<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>简单来说，造成<code>No Bootable Device</code>的原因是电脑使用的是<code>UEFI</code>引导，并启用了<code>Secure Boot</code>功能，<code>Secure Boot</code>需要引导加载器有微软的签名，而多数Linux发行版使用的引导加载器<code>GRUB</code>没有微软的签名，意味着它不被信任，也就不会加载。而我们前面做的就是手动添加了有微软签名的另一个引导加载器<code>shim</code>到可信数据库中，由<code>shim</code>来通过<code>Secure Boot</code>的验证并加载<code>GRUB</code>，这样Linux系统就可以在启用了<code>Secure Boot</code>的电脑上成功启动。</p>
<p>此外，如果你只打算安装Linux单系统，安装系统前启用<code>Legacy Boot</code>功能并关闭<code>Secure Boot</code>功能应该也可以规避这个问题。</p>
<hr>
<p>其实我对这部分内容也是一知半解的状态，所以就借着这个机会把相关知识整理一下，做个笔记，如果你有兴趣了解更多，可以继续往下看。另外本人水平有限，下面的如有纰漏，欢迎指正。</p>
<h1 id="UEFI"><a href="#UEFI" class="headerlink" title="UEFI"></a>UEFI</h1><p><a href="https://en.wikipedia.org/wiki/UEFI">UEFI</a>（统一可扩展固件接口）是一种固件接口标准，用于初始化和管理计算机系统的硬件和软件，以及替代传统的BIOS（基本输入&#x2F;输出系统）。它的主要作用有：</p>
<ol>
<li>启动计算机并加载操作系统，它执行引导加载器（Boot Loader）的任务，引导加载器负责加载操作系统内核并将控制权转交给操作系统。</li>
<li>初始化计算机的硬件组件，如CPU、内存、显卡等。</li>
<li>允许用户配置计算机的各种系统设置，包括启动顺序、硬件设置、日期和时间等。</li>
<li>管理启动设备，它支持多种启动设备，包括硬盘、光盘、U盘等。它能够检测和识别可用的启动设备，并按照预定的启动顺序加载操作系统。</li>
<li>提高系统安全性，它引入了安全启动（Secure Boot）功能，要求启动的操作系统和驱动程序使用数字签名进行验证，防止未经授权的恶意软件在系统启动时加载。</li>
</ol>
<h1 id="GRUB"><a href="#GRUB" class="headerlink" title="GRUB"></a>GRUB</h1><p><a href="https://en.wikipedia.org/wiki/GNU_GRUB">GRUB</a>，全称为 GNU GRUB（GNU GRand Unified Bootloader），是一款开源的、用于引导多个操作系统的引导加载器。它是GNU计划的一部分，被广泛用于许多Linux发行版以及其他操作系统。</p>
<p>然而，GRUB 的一些版本可能没有 Microsoft 的签名，因此在启用了 Secure Boot 的系统上会遇到问题。</p>
<h1 id="Secure-Boot"><a href="#Secure-Boot" class="headerlink" title="Secure Boot"></a>Secure Boot</h1><p><a href="https://wiki.debian.org/SecureBoot">Secure Boot</a>（安全启动） 是UEFI标准引入的一项安全验证机制，旨在确保计算机在引导过程中只能加载由受信任签名机构签名的引导加载程序和操作系统内核,保护系统免受那些在启动过程早期加载和执行的恶意代码（如Rootkits和Bootkits）的影响。</p>
<p>Secure Boot要求引导加载器和操作系统内核必须使用数字签名进行验证。数字签名是由私钥生成的，然后通过相关机构的公钥进行验证。只有使用受信任的密钥签名的引导加载器和操作系统才能通过验证。</p>
<p>大多数基于x86架构的电脑出厂时都预装了微软密钥，所以这些电脑的固件会信任由微软签名的二进制文件。微软作为Secure Boot的认证机构 (CA)，也可以为其他受信任组织的程序签发签名。许多Linux发行版使用的shim引导加载器就包含了微软签名的证书，这样Linux就可以在启用了Secure Boot的电脑上顺利启动。</p>
<h1 id="shim"><a href="#shim" class="headerlink" title="shim"></a>shim</h1><p><a href="https://github.com/rhboot/shim">shim</a> 是一个用于启动在启用 Secure Boot 的电脑上的操作系统的引导加载器，即使这些操作系统的默认引导加载器没有直接由硬件制造商预装或签名。它提供了一种在Secure Boot环境下引导不同操作系统的通用解决方案，同时保持对开源和非受信任签名内核的支持。</p>
<p>为了通过 Secure Boot 的验证，shim 包含了由 Microsoft 签名的证书。这个证书的公钥被内置到许多 UEFI 固件中，因此 shim 的代码签名能够通过 Secure Boot 的验证。除了 Microsoft 的签名之外，shim 还支持加载并运行操作系统的引导加载器。这个引导加载器可以由 Linux 发行版的开发者使用他们自己的密钥签名，以确保其通过 shim 的验证。</p>
<p>当 shim 通过 Secure Boot 的验证后，它会加载 Linux 操作系统的默认引导加载器，通常是 GRUB2。这个过程构建了安全的引导链，确保系统在整个引导过程中都受到信任的代码控制。</p>
<p>shimx64与shim的关系类似于x86-64与x86的关系，shim 用于启动 32 位操作系统，而 shimx64 用于启动 64 位操作系统。</p>
<h1 id="ESP"><a href="#ESP" class="headerlink" title="ESP"></a>ESP</h1><p><a href="https://en.wikipedia.org/wiki/EFI_system_partition">EFI 系统分区</a>（也称为 ESP）是一个与操作系统无关的分区，文件系统通常为FAT或FAT32格式，分区大小通常为100MB。其中存储了由 UEFI 固件的引导加载器、应用程序和驱动，是 UEFI 启动所必须的。</p>
<p>ESP在Windows的文件资源管理器中不会显示，但是在磁盘管理中可以看到。在Linux中，ESP被视为普通分区，可使用mount程序直接挂载其对应的块设备，一般挂载于<code>/boot/efi</code>目录下。</p>
<p>EFI系统分区包含一个名为EFI的顶级目录，下面可能有多个子目录，每个子目录对应一个操作系统或引导加载器。子目录的名称通常是操作系统的名称或引导加载器的标识符。</p>
<h1 id="EFI目录分析"><a href="#EFI目录分析" class="headerlink" title="EFI目录分析"></a>EFI目录分析</h1><p>以下是我的笔记本电脑的EFI目录结构：</p>
<ul>
<li>HDD0&#x2F;EFI&#x2F;<ul>
<li>ubuntu<ul>
<li>grub.efi</li>
<li>shimx64.efi</li>
<li>mmx.efi</li>
</ul>
</li>
<li>boot<ul>
<li>grub.efi</li>
<li>shimx64.efi</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>大多数情况下，我们应该使用<code>/HDD0/EFI/操作系统</code>目录下的主要引导项，<code>/HDD0/EFI/boot</code>目录下的引导项只作为备份。如果主引导加载程序损坏，备份的引导项可以用作替代，以便系统能够继续引导。</p>
<p>至于<code>mmx.efi</code>，我能找到的资料并不多，根据<a href="https://askubuntu.com/questions/903207/refind-shows-multiple-ubuntu-choices">Ask Ubuntu</a>论坛的说法，它原来的名字是<code>MokManager.efi</code>，Ubuntu将它重命名为了<code>mmx.efi</code>，是一个用于管理 Secure Boot 中的密钥的工具。</p>
<h1 id="引导流程"><a href="#引导流程" class="headerlink" title="引导流程"></a>引导流程</h1><p>在Secure Boot启用的情况下，通常的引导流程如下：</p>
<ol>
<li>电脑启动，UEFI固件开始执行引导过程。</li>
<li>UEFI初始化系统硬件，并执行预启动自检。</li>
<li>UEFI加载<code>shimx64.efi</code>并验证它的数字签名。</li>
<li><code>shimx64.efi</code>验证<code>grub.efi</code>的数字签名。</li>
<li>如果<code>grub.efi</code>的签名有效，<code>shimx64.efi</code>将加载并执行它。</li>
<li><code>grub.efi</code>进一步加载操作系统内核和其他必要的组件，启动系统。</li>
<li><code>grub.efi</code>加载并启动Linux内核，将控制权传递给操作系统。</li>
<li>操作系统内核初始化并加载根文件系统，启动Linux Mint操作系统。</li>
</ol>
<h1 id="MBR与GPT"><a href="#MBR与GPT" class="headerlink" title="MBR与GPT"></a>MBR与GPT</h1><p>MBR（Master Boot Record） 和 GPT（GUID Partition Table） 是两种不同的磁盘分区表格式。</p>
<table>
<thead>
<tr>
<th align="left">区别</th>
<th align="left">MBR</th>
<th align="left">GPT</th>
</tr>
</thead>
<tbody><tr>
<td align="left">结构</td>
<td align="left">一个 512 字节的扇区，位于磁盘的第一个扇区（LBA 0）,包含分区表、引导代码和一个磁盘签名</td>
<td align="left">每个磁盘扇区包含一个GPT头和一个或多个GPT条目数组，GPT 头包含磁盘的元数据，包括分区表的位置和大小，以及磁盘的唯一标识符（GUID）等信息</td>
</tr>
<tr>
<td align="left">容量</td>
<td align="left">使用 32 位标志（LBA）来表示分区的起始位置和大小，不能支持超过2TB的磁盘</td>
<td align="left">使用 64 位标志（LBA），支持更大容量的硬盘（18TB）</td>
</tr>
<tr>
<td align="left">分区</td>
<td align="left">支持最多四个主分区，或者三个主分区和一个扩展分区。</td>
<td align="left">支持更多的分区，上限取决于操作系统和实现，在Windows系统下可以支持128个主分区。</td>
</tr>
<tr>
<td align="left">分区标识</td>
<td align="left">每个分区都有一个1字节的标识符，用于指示分区的类型（例如，FAT32、NTFS等）</td>
<td align="left">每个分区都有一个全局唯一标识符（GUID）来标识分区类型，而不再使用 MBR 的分区标识符</td>
</tr>
<tr>
<td align="left">引导</td>
<td align="left">包含引导加载器的代码，该代码被用来引导操作系统。引导由传统的BIOS进行</td>
<td align="left">使用 EFI 分区来存放引导加载器，而不再需要引导代码存储在磁盘的开头。引导过程通常由 UEFI进行</td>
</tr>
</tbody></table>
<p>如果你使用的是UEFI与MBR的组合，则需要启用<code>Legacy Boot/CSM</code>功能来模拟传统BIOS的启动过程，但是并不推荐这么做。</p>
<blockquote>
<p>参考：<br><a href="https://en.wikipedia.org/wiki/UEFI">Wikipedia</a><br><a href="https://wiki.debian.org/SecureBoot">Debian Wiki</a><br><a href="https://wiki.ubuntu.com/UEFI/SecureBoot">Ubuntu Wiki</a><br><a href="https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot">Arch Linux Wiki</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>UEFI</tag>
      </tags>
  </entry>
  <entry>
    <title>npm常用命令</title>
    <url>/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">收集了一些npm的命令，以及主题升级时常用的命令</blockquote>

<span id="more"></span>

<p>npm（全称 Node Package Manager，即“node包管理器”）是Node.js预设的、用JavaScript编写的软体套件管理系统</p>
<h1 id="npm命令"><a href="#npm命令" class="headerlink" title="npm命令"></a>npm命令</h1><div class="note primary"><p>参考了<a class="btn" href="https://segmentfault.com/a/1190000019141975"><i class="fa fa-blog fa-fw"></i>jm365</a>的文章，特此感谢</p></div>

<h2 id="辅助"><a href="#辅助" class="headerlink" title="辅助"></a>辅助</h2><ul>
<li><code>npm -l</code> 查看所有命令的用法</li>
<li><code>npm &lt;command&gt; -h</code> 查看某个命令的用法</li>
<li><code>npm help &lt;command&gt;</code> 查看某个命令的详细用法</li>
<li><code>npm -v</code> 查看npm版本</li>
<li><code>npm config list -l</code> 查看npm的配置</li>
<li><code>npm ls</code> 查看局部安装的所有模块</li>
<li><code>npm ls -g</code> 查看全局安装的所有模块</li>
<li><code>npm ls &lt;moduleName&gt;</code> 查看指定模块的局部安装情况</li>
<li><code>npm ls &lt;moduleName&gt; -g</code> 查看指定模块的全局安装情况</li>
<li><code>npm view &lt;moduleName&gt;</code> 查看当前源中指定模块的信息</li>
<li><code>npm view &lt;moduleName&gt; versions</code> 查看当前源中指定模块的所有历史版本</li>
<li><code>npm view &lt;moduleName&gt; version</code> 查看当前源中指定模块的最新版本</li>
</ul>
<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ul>
<li><code>npm init</code> 在所在目录初始化一个项目</li>
</ul>
<h2 id="安装-卸载"><a href="#安装-卸载" class="headerlink" title="安装&#x2F;卸载"></a>安装&#x2F;卸载</h2><ul>
<li><code>npm i/install &lt;moduleName&gt;</code> 安装模块；i是install的缩写，两者功能是一样的</li>
<li><code>npm i &lt;moduleName&gt;@x.x.x</code> 安装模块的指定版本</li>
<li><code>npm i &lt;moduleName&gt; --save</code> 安装并保存至package.json文件的dependencies中</li>
<li><code>npm i &lt;moduleName&gt; --save-dev</code> 安装并保存至package.json文件的devDependencies中</li>
<li><code>npm i &lt;moduleName&gt; -g</code> 全局安装模块</li>
</ul>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><ul>
<li><code>npm uninstall &lt;moduleName&gt;</code> 卸载指定局部模块</li>
<li><code>npm uninstall &lt;moduleName&gt; -g</code> 卸载指定全局模块</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li><code>npm update</code> 按照package.json中的描述更新模块，且会在package.json文件中保存更新后的版本描述；^a.b.c更新至a下的最新版本，~a.b.c更新至a.b下的最新版本，a.b.c不会做任何更新</li>
<li><code>npm update &lt;moduleName&gt;</code> 更新局部指定模块</li>
<li><code>npm update &lt;moduleName&gt;@x.x.x</code> 更新局部指定模块到指定版本</li>
<li><code>npm update &lt;moduleName&gt; -g</code> 更新全局指定模块</li>
<li><code>npm update &lt;moduleName&gt;@x.x.x -g</code> 更新全局指定模块到指定版本</li>
</ul>
<h2 id="npm源"><a href="#npm源" class="headerlink" title="npm源"></a>npm源</h2><ul>
<li><code>npm config get registry</code> 查看当前npm源地址</li>
<li><code>npm config set registry &lt;registryAddress&gt;</code> 将npm源设置成相应的地址</li>
</ul>
<h1 id="package-json简介"><a href="#package-json简介" class="headerlink" title="package.json简介"></a>package.json简介</h1><p><code>package.json</code>文件是项目的清单，是<code>npm</code>和<code>yarn</code>存储所有已安装软件包的名称和版本的地方。<code>npm install</code>命令根据它来下载所需的模块，下面是<code>package.json</code>的字段说明。</p>
<ul>
<li><code>version</code> 表明了当前的版本。</li>
<li><code>name</code> 设置了应用程序&#x2F;软件包的名称。</li>
<li><code>description</code> 是应用程序&#x2F;软件包的简短描述。</li>
<li><code>main</code> 设置了应用程序的入口点。</li>
<li><code>private</code> 如果设置为 true，则可以防止应用程序&#x2F;软件包被意外地发布到 npm。</li>
<li><code>scripts</code> 定义了一组可以运行的 node 脚本。</li>
<li><code>dependencies</code> 设置了作为依赖安装的 npm 软件包的列表。</li>
<li><code>devDependencies</code> 设置了作为开发依赖安装的 npm 软件包的列表。</li>
<li><code>engines</code> 设置了此软件包&#x2F;应用程序在哪个版本的 Node.js 上运行。</li>
<li><code>browserslist</code> 用于告知要支持哪些浏览器（及其版本）。</li>
</ul>
<h1 id="主题升级常用指令"><a href="#主题升级常用指令" class="headerlink" title="主题升级常用指令"></a>主题升级常用指令</h1><p>列出已经安装的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ls</span><br></pre></td></tr></table></figure>

<p>检查需要升级的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm-check</span><br></pre></td></tr></table></figure>

<p>升级主题到最新版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm update hexo-theme-next</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT 8.20 升级日志</title>
    <url>/next-8-20-update-log.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 博客的升级日志，这次的调整比较少，只有简简单单的刷新了一下版本号，然后提升了一丢丢的阅读体验。 </blockquote>

<span id="more"></span>

<h1 id="升级内容"><a href="#升级内容" class="headerlink" title="升级内容"></a>升级内容</h1><ul>
<li>升级Hexo版本：6.3.0 → 7.3.0</li>
<li>升级NexT版本：8.18.2 → 8.20.0</li>
<li>更换网站图标</li>
<li>更换字体</li>
<li>根据浏览器主题自动切换背景图片</li>
<li>调整归档、目录、标签页的分页设置</li>
<li>重定向部分URL</li>
<li>移除移动端点击特效</li>
<li>加入图片轮播功能</li>
<li>更换鼠标样式</li>
<li>调整有序&#x2F;无序列表以及代码块的与上下元素的间距</li>
</ul>
<h1 id="NPM包升级"><a href="#NPM包升级" class="headerlink" title="NPM包升级"></a>NPM包升级</h1><p>这次升级发现了一个挺好用的包<a href="https://github.com/raineorshine/npm-check-updates">npm-check-updates</a>，它可以检测有哪些包可以升级。</p>
<p>安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i -g npm-check-updates</span><br></pre></td></tr></table></figure>

<p>检测可升级的包：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ncu -u</span><br></pre></td></tr></table></figure>

<p>我的输出如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo                   ^6.3.0  →   ^7.3.0</span><br><span class="line">hexo-blog-encrypt      ^3.1.6  →   ^3.1.9</span><br><span class="line">hexo-deployer-git      ^3.0.0  →   ^4.0.0</span><br><span class="line">hexo-generator-index   ^3.0.0  →   ^4.0.0</span><br><span class="line">hexo-hide-posts        ^0.2.0  →   ^0.4.3</span><br><span class="line">hexo-renderer-marked   ^6.0.0  →   ^6.3.0</span><br><span class="line">hexo-renderer-stylus   ^2.1.0  →   ^3.0.1</span><br><span class="line">hexo-theme-next       ^8.18.2  →  ^8.20.0</span><br><span class="line">hexo-word-counter      ^0.1.0  →   ^0.2.0</span><br></pre></td></tr></table></figure>

<p>直接升级所有组件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure>

<h1 id="更新配置文件"><a href="#更新配置文件" class="headerlink" title="更新配置文件"></a>更新配置文件</h1><p>已经好几年没有更新过NexT的配置文件了，虽然不怎么影响使用，但是强迫症有些难受。</p>
<ol>
<li>将<code>./_config.next.yml</code>重命名为<code>./_old_next_config.yml</code>。</li>
<li>将<code>./node_modules/hexo-theme-next/_config.yml</code>复制到博客根目录，然后重命名为<code>_config.next.yml</code>。</li>
<li>在vscode中打开两个文件，按住shift选择两个文件，右键单击文件标签，选择<code>将已选项进行比较</code>，然后复制粘贴。</li>
</ol>
<h1 id="更换网站图标"><a href="#更换网站图标" class="headerlink" title="更换网站图标"></a>更换网站图标</h1><p>单纯的审美疲劳了，想换一个图片.</p>
<ol>
<li>去PS里瞎画一个，然后导出一个分辨率高一点的图片。</li>
<li>将它上传到 <a href="https://realfavicongenerator.net/">Favicon Generator</a>就可以生成所有需要的图标。</li>
<li>将生成的图片放到<code>./source/images/</code>路径下，替换原有图片。</li>
<li>注意将<code>./_config.next.yml</code>中的<code>android_manifest</code>改成<code>/images/site.webmanifest</code>，因为网站自动生成的文件名不同。</li>
</ol>
<h1 id="更换网站字体"><a href="#更换网站字体" class="headerlink" title="更换网站字体"></a>更换网站字体</h1><p>将网站的全局字体换成了无衬线的思源黑体，博客正文部分还是更加适合阅读的思源宋体。在<code>./_config.next.yml</code>中做如下修改：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Font options:</span></span><br><span class="line"><span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line"><span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line"><span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">family:</span> <span class="string">Noto</span> <span class="string">Sans</span></span><br><span class="line">  <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line">  <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">family:</span></span><br><span class="line">  <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line"><span class="attr">headings:</span></span><br><span class="line">  <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">family:</span></span><br><span class="line">  <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line"><span class="attr">posts:</span></span><br><span class="line">  <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">family:</span> <span class="string">Noto</span> <span class="string">Serif</span> <span class="string">SC</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line"><span class="attr">codes:</span></span><br><span class="line">  <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">family:</span> <span class="string">Fira</span> <span class="string">Code,</span> <span class="string">Noto</span> <span class="string">Serif</span> <span class="string">SC</span></span><br></pre></td></tr></table></figure>

<h1 id="背景图片调整"><a href="#背景图片调整" class="headerlink" title="背景图片调整"></a>背景图片调整</h1><p>更换原因同上，审美疲劳了。调整如下：</p>
<ol>
<li>原有的背景图片太亮了，在深色模式下不太协调，特别是深夜看时有些刺眼，索性就为浅色&#x2F;深色两种模式设置了不同的背景图片。</li>
<li>取消了背景图片的半透明显示，让文字更加易读。</li>
<li>取消了移动端的渐变背景。</li>
</ol>
<p>在<code>D:\Project\Blog\cn_Siriusq\source\_data\styles.styl</code>中添加以下样式：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 背景图片</span><br><span class="line"><span class="comment">/* 桌面端背景图片设置 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="comment">/* 亮模式背景 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: light) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://s2.loli.net/2024/09/11/ZyWBVcA5F2bodgw.webp&#x27;</span>);</span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">      <span class="attribute">background-attachment</span>: fixed;//是否随着网页上下滚动而滚动，fixed为固定</span><br><span class="line">      <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">      <span class="attribute">background-position</span>: center;//图片位置</span><br><span class="line">      -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      <span class="selector-tag">footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#ffffff</span>;//底部文字颜色</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 暗模式背景 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: dark) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://s2.loli.net/2024/09/11/YHxg9RsTUDKvBPr.webp&#x27;</span>);</span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat;//是否重复平铺</span><br><span class="line">      <span class="attribute">background-attachment</span>: fixed;//是否随着网页上下滚动而滚动，fixed为固定</span><br><span class="line">      <span class="attribute">background-size</span>: cover;//图片展示大小</span><br><span class="line">      <span class="attribute">background-position</span>: center;//图片位置</span><br><span class="line">      -webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -moz-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      -ms-<span class="attribute">background-size</span>: cover;</span><br><span class="line">      <span class="selector-tag">footer</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#dddddd</span>;//底部文字颜色</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 移动端不显示背景图片 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="页面分页调整"><a href="#页面分页调整" class="headerlink" title="页面分页调整"></a>页面分页调整</h1><p>开启动画时，NexT主题会通过类似瀑布的动画来渐显页面中的元素，也包括归档等页中的博文标题，这样就会导致一个问题：如果一页中显示的标题太多，靠后的标题就需要等待动画播放完成后才能显示，我原来设置的一页显示50个标题，等待动画播放完成需要花费数秒，不太方便，这次就统一设置成一页只显示20个标题。</p>
<p>在Hexo的配置文件<code>_config.yml</code>中调整以下设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Archive Pagination</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tag Pagination</span></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category Pagination</span></span><br><span class="line"><span class="attr">category_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<h1 id="URL重定向"><a href="#URL重定向" class="headerlink" title="URL重定向"></a>URL重定向</h1><p>目前博客的URL是根据markdown文件的文件名生成的，有几个文件的名字我很久之前就想改了，但是直接改的话会造成原有的URL变成死链，于是安装了<a href="https://github.com/hexojs/hexo-generator-alias">hexo-generator-alias</a>插件来解决这个问题。</p>
<p>安装命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-alias --save</span><br></pre></td></tr></table></figure>

<p>使用方法：</p>
<ol>
<li>重命名相关的markdown文件。</li>
<li>打开文件，在<code>front-matter</code>部分添加<code>alias: [markdown文件旧名字的相对路径].html</code></li>
</ol>
<p>示例：<br>我的老文件名为<code>Win10重装指北.md</code>，先将它重命名为<code>Windows重装指北.md</code>，然后打开文件并修改：</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: Windows重装指北</span><br><span class="line">date: 2020-07-13 12:28:34</span><br><span class="line">lang: zh-CN</span><br><span class="line">tags: [Win10,Office,重装]</span><br><span class="line">categories: Windows</span><br><span class="line"><span class="addition">+ alias: Win10重装指北.html</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure>

<h1 id="移除移动端点击特效"><a href="#移除移动端点击特效" class="headerlink" title="移除移动端点击特效"></a>移除移动端点击特效</h1><p>目前的点击特效在移动端上比较卡顿，就先移除它，等过几年移动端设备性能涨一涨再加回来。在原有的<code>./source/js/firework.js</code>中找到<code>CursorSpecialEffects</code>类，向其中的<code>init</code>方法添加一个条件语句<code>if (window.innerWidth &gt; 768)&#123;&#125;</code>然后将原有内容移入其中即可。</p>
<details class="note success"><summary><p>完整文件</p>
</summary>
<p><code>./source/js/firework.js</code>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span> = &#123; ...<span class="variable language_">this</span>.<span class="property">origin</span> &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">color</span> = color</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">speed</span> = speed</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">angle</span> = angle</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCount</span> = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">beginPath</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">fill</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> = (<span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> = (<span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> + (<span class="variable language_">this</span>.<span class="property">renderCount</span> * <span class="number">0.3</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCount</span>++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Boom</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circleCount</span> = circleCount</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">area</span> = area</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">false</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span> = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomArray</span>(<span class="params">range</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.<span class="property">length</span></span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length * <span class="title class_">Math</span>.<span class="title function_">random</span>())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">randomRange</span>(<span class="params">start, end</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="title class_">Math</span>.<span class="title function_">random</span>() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">circleCount</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">Circle</span>(&#123;</span><br><span class="line">        <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">context</span>,</span><br><span class="line">        <span class="attr">origin</span>: <span class="variable language_">this</span>.<span class="property">origin</span>,</span><br><span class="line">        <span class="attr">color</span>: <span class="variable language_">this</span>.<span class="title function_">randomColor</span>(),</span><br><span class="line">        <span class="attr">angle</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="title class_">Math</span>.<span class="property">PI</span> - <span class="number">1</span>, <span class="title class_">Math</span>.<span class="property">PI</span> + <span class="number">1</span>),</span><br><span class="line">        <span class="attr">speed</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">push</span>(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.<span class="property">position</span>.<span class="property">x</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">width</span> || circle.<span class="property">position</span>.<span class="property">y</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">height</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.<span class="title function_">move</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">circles</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">circle</span> =&gt;</span> circle.<span class="title function_">draw</span>())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CursorSpecialEffects</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerContext</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalWidth</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalHeight</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handleMouseDown</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> <span class="title class_">Boom</span>(&#123;</span><br><span class="line">      <span class="attr">origin</span>: &#123; <span class="attr">x</span>: e.<span class="property">clientX</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> &#125;,</span><br><span class="line">      <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">computerContext</span>,</span><br><span class="line">      <span class="attr">area</span>: &#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="variable language_">this</span>.<span class="property">globalWidth</span>,</span><br><span class="line">        <span class="attr">height</span>: <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.<span class="title function_">init</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">push</span>(boom)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> || <span class="variable language_">this</span>.<span class="title function_">run</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">handlePageHide</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 只在桌面端生效，判断屏幕宽度是否大于 768px</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">innerWidth</span> &gt; <span class="number">768</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> style = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">style</span></span><br><span class="line">      style.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">      style.<span class="property">top</span> = style.<span class="property">left</span> = <span class="number">0</span></span><br><span class="line">      style.<span class="property">zIndex</span> = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">      style.<span class="property">pointerEvents</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">      style.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">globalWidth</span></span><br><span class="line">      style.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line"></span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">renderCanvas</span>)</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousedown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleMouseDown</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pagehide&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handlePageHide</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">booms</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable language_">this</span>.<span class="property">run</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">computerContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.<span class="property">stop</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.<span class="title function_">move</span>()</span><br><span class="line">      boom.<span class="title function_">draw</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">drawImage</span>(<span class="variable language_">this</span>.<span class="property">computerCanvas</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> <span class="title class_">CursorSpecialEffects</span>()</span><br><span class="line">cursorSpecialEffects.<span class="title function_">init</span>()</span><br></pre></td></tr></table></figure>

<p>然后在<code>./source/_data/body-end.njk</code>中引入它：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</details>

<h1 id="更换鼠标样式"><a href="#更换鼠标样式" class="headerlink" title="更换鼠标样式"></a>更换鼠标样式</h1><p>原来用的鼠标主题文件有问题，在火狐上不能被正确识别，只能显示黑白图标，所以决定更换一下鼠标主题，顺便修补一下样式文件，让鼠标主题覆盖更多元素。</p>
<p>这次选用的鼠标主题是和背景图片搭配的芙莉莲主题，来源：<a href="https://ko-fi.com/s/2ab74796a0">Frieren Cursor (2 packs) by NOiiRE ❖</a>。原文件是ANI格式的动态光标，但是很遗憾，目前的主流浏览器都不支持它，所以只能将它们都转换为PNG格式。我也尝试了下APNG格式，虽然它们可以被浏览器读取，但是并不会动。</p>
<p>然后就是和原来一样的操作：</p>
<ol>
<li>在<code>./node_modules/hexo-theme-next/source/css/</code>中新建文件夹<code>cursor</code>。</li>
<li>将收集到的鼠标样式文件移动到新建的文件夹中。</li>
<li>打开<code>_config.next.yml</code>。</li>
<li>定位到到<code>custom_file_path:</code>。</li>
<li>取消<code>style: source/_data/styles.styl</code> 的注释。</li>
<li>打开<code>./source/_data/styles.styl</code>，粘贴并根据自己的需要修改下面的代码。</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--cursor-arrow</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/arrow.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-alt</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/alt.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-button</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/button.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-ban</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/ban.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-busy</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/busy.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-handwriting</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/handwriting.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-help</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/help.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-link</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/link.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-move</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/move.png&quot;</span>);</span><br><span class="line">    <span class="attr">--cursor-input</span>: <span class="built_in">url</span>(<span class="string">&quot;/css/cursor/input.png&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 全局默认鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-arrow),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停图片时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">img</span>, <span class="selector-class">.gt-container</span> <span class="selector-class">.gt-avatar-github</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-handwriting),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择链接标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-link),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选中输入框时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">textarea</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-input),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停文字时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">article</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">article</span> <span class="selector-tag">p</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:hover</span>, <span class="selector-tag">code</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.fancybox__caption</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-input),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 帮助时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">summary</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-help),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停按钮时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.back-to-top</span>, <span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span>, <span class="selector-tag">span</span><span class="selector-class">.nav-text</span>, <span class="selector-tag">span</span><span class="selector-class">.nav-number</span>, <span class="selector-class">.gt-container</span> <span class="selector-class">.gt-user-inner</span>, <span class="selector-class">.gt-container</span> <span class="selector-class">.gt-popup</span> <span class="selector-class">.gt-action</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-button),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停列表标签时的鼠标指针 */</span></span><br><span class="line"><span class="selector-tag">i</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.copy-btn</span>, <span class="selector-class">.post-title</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-link),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 可拖拽时的鼠标指针 */</span></span><br><span class="line"><span class="selector-class">.fancybox__viewport</span><span class="selector-class">.is-draggable</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-move),auto <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-alt),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停页码时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#pagination</span> <span class="selector-class">.page-number</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-alt),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 悬停菜单栏时的鼠标指针 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.site-page</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">var</span>(--cursor-alt),auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="列表-代码块行前间距调整"><a href="#列表-代码块行前间距调整" class="headerlink" title="列表&#x2F;代码块行前间距调整"></a>列表&#x2F;代码块行前间距调整</h1><p>NeXT主题默认的列表和代码块的 margin-top 是 20px，显得很不协调，所以我进行了一些微调，在<code>D:\Project\Blog\cn_Siriusq\source\_data\styles.styl</code>中添加以下样式：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 代码块减小行前间距</span><br><span class="line"><span class="selector-tag">figure</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 特殊处理列表中的代码块</span><br><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 列表与上一行间距缩小</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">ul</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 嵌套列表</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span>, <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 标题下的列表</span><br><span class="line"><span class="selector-tag">h1</span> + <span class="selector-tag">li</span>, <span class="selector-tag">h2</span> + <span class="selector-tag">li</span>, <span class="selector-tag">h3</span> + <span class="selector-tag">li</span>, <span class="selector-tag">h4</span> + <span class="selector-tag">li</span>, <span class="selector-tag">h5</span> + <span class="selector-tag">li</span>, <span class="selector-tag">h6</span> + <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="加入图片轮播功能"><a href="#加入图片轮播功能" class="headerlink" title="加入图片轮播功能"></a>加入图片轮播功能</h1><p>基于 Splide 自己写了个插件<code>hexo-splide-carousel</code>，详见</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>在线预览</p><p>一个为 Hexo 博客提供的包，通过 Splide.js 和 medium-zoom 库提供图片轮播和图片缩放功能，适配 NexT 主题。</p>
<a href="https://siriusq.top/splide-demo.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Github 仓库</p><p>hexo-splide-carousel 的 GitHub 仓库链接</p>
<a href="https://github.com/Siriusq/hexo-splide-carousel"></a>
</div></div>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 系统设置开机延迟启动 OneDrive</title>
    <url>/onedrive-delay-startup.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 在Windows系统启动时，OneDrive和Clash的自启动时间几乎相同，导致OneDrive在准备自动登录时，Clash啪一下给切了网络，从而使OneDrive卡在登录过程中。此时，必须退出并重启OneDrive才能正常登录，十分烦人。为了解决这个问题，我决定通过任务计划程序设置在开机后延迟1分钟再启动OneDrive，以下是设置过程的记录。 </blockquote>

<span id="more"></span>

<p>设置步骤如下，下面的图片顺序与每一步相对应：</p>
<ol>
<li>首先，打开任务管理器，右键单击并禁用OneDrive的开机自启。</li>
<li>接着，右键单击任务栏上的开始菜单按钮（Windows图标），打开<code>计算机管理</code>。</li>
<li>在左侧边栏中依次点击<code>系统工具</code> &gt; <code>任务计划程序</code> &gt; <code>任务计划程序库</code>，然后在右侧点击<code>创建基本任务</code>。填写任务名称和描述后，点击<code>下一页</code>。</li>
<li>接下来，选择<code>当前用户登录时</code>，然后点击<code>下一页</code>。</li>
<li>在接下来的页面中选择<code>启动程序</code>，点击<code>下一页</code>。</li>
<li>在程序或脚本中选择或直接粘贴<code>&quot;C:\Program Files\Microsoft OneDrive\OneDrive.exe&quot;</code>，然后在添加参数中填写<code>/background</code>以静默启动OneDrive，点击<code>下一页</code>。</li>
<li>勾选<code>当单击“完成”时，打开此任务属性的对话框</code>，然后点击<code>完成</code>。</li>
<li>在弹出的窗口中，切换到<code>触发器</code>标签，选择刚刚创建的任务，点击下方的<code>编辑</code>。</li>
<li>勾选<code>延迟任务时间</code>，在下拉菜单中选择<code>30秒</code>或<code>1分钟</code>。最后点击两次确定保存。</li>
<li>如果以后需要修改延迟时间，可以选择该任务，点击右侧的<code>属性</code>来打开设置窗口。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-avggi358k">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1. 首先，打开任务管理器，右键单击并禁用OneDrive的开机自启"><img data-src="https://s2.loli.net/2024/11/05/Al4pHeQWVC89ZIO.webp" alt="1. 首先，打开任务管理器，右键单击并禁用OneDrive的开机自启" class="zoomable"></li><li class="splide__slide" data-caption="2. 接着，右键单击任务栏上的开始菜单按钮（Windows图标），打开计算机管理"><img data-src="https://s2.loli.net/2024/11/05/UeFtRKpVu8QMkJW.webp" alt="2. 接着，右键单击任务栏上的开始菜单按钮（Windows图标），打开计算机管理" class="zoomable"></li><li class="splide__slide" data-caption="3. 在左侧边栏中依次点击系统工具 > 任务计划程序 > 任务计划程序库，然后在右侧点击创建基本任务。填写任务名称和描述后，点击下一页"><img data-src="https://s2.loli.net/2024/11/05/3oX7sgmlytrjBMV.webp" alt="3. 在左侧边栏中依次点击系统工具 > 任务计划程序 > 任务计划程序库，然后在右侧点击创建基本任务。填写任务名称和描述后，点击下一页" class="zoomable"></li><li class="splide__slide" data-caption="4. 接下来，选择当前用户登录时，然后点击下一页"><img data-src="https://s2.loli.net/2024/11/10/mntOCklJujHeoN4.webp" alt="4. 接下来，选择当前用户登录时，然后点击下一页" class="zoomable"></li><li class="splide__slide" data-caption="5. 在接下来的页面中选择启动程序，点击下一页"><img data-src="https://s2.loli.net/2024/11/05/mnKB9LNtOMiyxf3.webp" alt="5. 在接下来的页面中选择启动程序，点击下一页" class="zoomable"></li><li class="splide__slide" data-caption="6. 在程序或脚本中选择或直接粘贴C:\Program Files\Microsoft OneDrive\OneDrive.exe，然后在添加参数中填写/background以静默启动OneDrive，点击下一页"><img data-src="https://s2.loli.net/2024/11/05/mQRXIEbkT3LfFvw.webp" alt="6. 在程序或脚本中选择或直接粘贴C:\Program Files\Microsoft OneDrive\OneDrive.exe，然后在添加参数中填写/background以静默启动OneDrive，点击下一页" class="zoomable"></li><li class="splide__slide" data-caption="7. 勾选当单击“完成”时，打开此任务属性的对话框，然后点击完成"><img data-src="https://s2.loli.net/2024/11/05/mh9tcyuNK3bwf6e.webp" alt="7. 勾选当单击“完成”时，打开此任务属性的对话框，然后点击完成" class="zoomable"></li><li class="splide__slide" data-caption="8. 在弹出的窗口中，切换到触发器标签，选择刚刚创建的任务，点击下方的编辑"><img data-src="https://s2.loli.net/2024/11/10/aFsHlRvUDBdpqbT.webp" alt="8. 在弹出的窗口中，切换到触发器标签，选择刚刚创建的任务，点击下方的编辑" class="zoomable"></li><li class="splide__slide" data-caption="9. 勾选延迟任务时间，在下拉菜单中选择30秒或1分钟。最后点击两次确定保存"><img data-src="https://s2.loli.net/2024/11/10/luAo9Gihvx8yKO6.webp" alt="9. 勾选延迟任务时间，在下拉菜单中选择30秒或1分钟。最后点击两次确定保存" class="zoomable"></li><li class="splide__slide" data-caption="10. 如果以后需要修改延迟时间，可以选择该任务，点击右侧的属性来打开设置窗口"><img data-src="https://s2.loli.net/2024/11/05/cOwYLPDKrG7d8C1.webp" alt="10. 如果以后需要修改延迟时间，可以选择该任务，点击右侧的属性来打开设置窗口" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-avggi358k" class="carousel-caption"> </div>
    </div>
  

<p>最后重启系统来验证效果，OneDrive在Clash完全启动后才启动，然后很快就登陆成功。</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>OneDrive</tag>
        <tag>Task Scheduler</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows LTSC 文件资源管理器侧边栏 OneDrive 图标异常修复</title>
    <url>/onedrive-explorer-icon-bug-fix.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 安装完 Windows11 LTSC 后，我发现文件资源管理器侧边栏中的OneDrive图标不能正常使用，点击时完全没有反应，属性页面显示一片空白。查了一下发现这是一个微软祖传的老Bug，在LTSC版本的Windows上安装个人版OneDrive时，安装程序没有为侧边栏图标注册指向OneDrive文件夹的路径值，导致这个图标指向空值，所以无法正常使用。只能说不愧是微软，这么多年了就是没修这个Bug。 </blockquote>

<span id="more"></span>

<h1 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h1><p>下面我们通过注册表为OneDrive图标注册正确的指向路径。首先新建一个txt文件，然后复制粘贴下面的内容，保存后将文件后缀修改为<code>.reg</code>，然后双击合并到注册表中即可。如果没有立即生效的话就重启一下文件资源管理器。</p>
<p>如果你的OneDrive文件夹不在默认位置<code>C:\User\你的用户名\OneDrive</code>，则需要根据情况修改下面的内容。</p>
<ul>
<li>如果OneDrive文件夹仍然在用户目录下，如<code>C:\User\你的用户名\NewFolder</code>，只需要将<code>RelativePath</code>的值更改为<code>NewFolder</code>。</li>
<li>如果OneDrive文件夹不在用户目录下，则需要将<code>RelativePath</code>中的值修改为当前OneDrive文件夹的绝对路径，如<code>&quot;RelativePath&quot;=&quot;E:\OneDrive&quot;</code>，然后删除<code>&quot;ParentFolder&quot;=&quot;&#123;5E6C858F-0E22-4760-9AFE-EA3317B67173&#125;&quot;</code>这一行。</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Windows</span> <span class="title class_">Registry</span> <span class="title class_">Editor</span> <span class="title class_">Version</span> <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line">[<span class="variable constant_">HKEY_LOCAL_MACHINE</span>\<span class="variable constant_">SOFTWARE</span>\<span class="title class_">Microsoft</span>\<span class="title class_">Windows</span>\<span class="title class_">CurrentVersion</span>\<span class="title class_">Explorer</span>\<span class="title class_">FolderDescriptions</span>\&#123;<span class="variable constant_">A52BBA46</span>-<span class="variable constant_">E9E1</span>-435f-<span class="variable constant_">B3D9</span>-28DAA648C0F6&#125;]  </span><br><span class="line"><span class="string">&quot;Attributes&quot;</span>=<span class="attr">dword</span>:<span class="number">00000001</span>  </span><br><span class="line"><span class="string">&quot;Category&quot;</span>=<span class="attr">dword</span>:<span class="number">00000004</span>  </span><br><span class="line"><span class="string">&quot;DefinitionFlags&quot;</span>=<span class="attr">dword</span>:<span class="number">00000040</span>  </span><br><span class="line"><span class="string">&quot;Icon&quot;</span>=<span class="title function_">hex</span>(<span class="number">2</span>):<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6d,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,6f,<span class="number">00</span>,6f,<span class="number">00</span>,<span class="number">74</span>,\  </span><br><span class="line"><span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6d,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">69</span>,<span class="number">00</span>,\  </span><br><span class="line">6d,<span class="number">00</span>,<span class="number">61</span>,<span class="number">00</span>,<span class="number">67</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">72</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,2d,\  </span><br><span class="line"><span class="number">00</span>,<span class="number">31</span>,<span class="number">00</span>,<span class="number">30</span>,<span class="number">00</span>,<span class="number">34</span>,<span class="number">00</span>,<span class="number">30</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>  </span><br><span class="line"><span class="string">&quot;LocalizedName&quot;</span>=<span class="title function_">hex</span>(<span class="number">2</span>):<span class="number">40</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6d,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,\  </span><br><span class="line">6f,<span class="number">00</span>,6f,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6d,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,\  </span><br><span class="line"><span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">69</span>,<span class="number">00</span>,6e,<span class="number">00</span>,<span class="number">67</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,6e,<span class="number">00</span>,<span class="number">63</span>,<span class="number">00</span>,\  </span><br><span class="line"><span class="number">43</span>,<span class="number">00</span>,6f,<span class="number">00</span>,<span class="number">72</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,2d,<span class="number">00</span>,<span class="number">31</span>,<span class="number">00</span>,<span class="number">30</span>,<span class="number">00</span>,<span class="number">32</span>,\  </span><br><span class="line"><span class="number">00</span>,<span class="number">34</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>  </span><br><span class="line"><span class="string">&quot;LocalRedirectOnly&quot;</span>=<span class="attr">dword</span>:<span class="number">00000001</span>  </span><br><span class="line"><span class="string">&quot;Name&quot;</span>=<span class="string">&quot;OneDrive&quot;</span>  </span><br><span class="line"><span class="string">&quot;ParentFolder&quot;</span>=<span class="string">&quot;&#123;5E6C858F-0E22-4760-9AFE-EA3317B67173&#125;&quot;</span>  </span><br><span class="line"><span class="string">&quot;ParsingName&quot;</span>=<span class="string">&quot;shell:::&#123;018D5C66-4533-4307-9B53-224DE2ED1FE6&#125;&quot;</span>  </span><br><span class="line"><span class="string">&quot;RelativePath&quot;</span>=<span class="string">&quot;OneDrive&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="可能出现的新Bug"><a href="#可能出现的新Bug" class="headerlink" title="可能出现的新Bug"></a>可能出现的新Bug</h1><p>这又涉及到了微软的另一项优良传统：Bug买一送一。我在修复了上述Bug后重启了电脑，然后微软就给了我新的惊喜，现在我的侧边栏中出现了两个OneDrive图标，并且两个图标都能正常工作，我可真是谢谢您啊微软。</p>
<p>这个Bug依然是通过注册表修复，有两种方法，第一种不行的话就试第二种，我起初用的第一种方法，但是过了几天侧栏又出现了两个OneDrive图标，然后换了第二种，目前还没再出现这个Bug。</p>
<h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><ol>
<li>通过<code>Windows+R</code>组合键打开运行窗口。</li>
<li>输入<code>regedit</code>打开注册表编辑器。</li>
<li>打开<code>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\​Explorer\Desktop\NameSpace</code>。</li>
<li>查看NameSpace下是否存在多个数据值为OneDrive的文件夹，如果有的话就删除多余的文件夹，只保留<code>&#123;018D5C66-4533-4307-9B53-224DE2ED1FE6&#125;</code>这一个数据值为OneDrive的文件夹。</li>
</ol>
<p><img data-src="https://s2.loli.net/2024/10/24/xq7KUlRdng3HIic.webp" alt="方法1"></p>
<h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><ol>
<li>通过<code>Windows+R</code>组合键打开运行窗口。</li>
<li>输入<code>regedit</code>打开注册表编辑器。</li>
<li>打开<code>HKEY_CURRENT_USER\Software\Classes\CLSID\&#123;04271989-C4D2-EFBF-85D9-31CFA598C756&#125;</code>。</li>
<li>双击打开<code>System.IsPinnedToNameSpaceTree</code>，将数值设置为<code>0</code>。</li>
<li>点击<code>确定</code>保存更改</li>
</ol>
<p><img data-src="https://s2.loli.net/2024/11/07/v8SuqANCo3WBFaf.webp" alt="方法2"></p>
<blockquote>
<p>解决方法来源：</p>
<ul>
<li><a href="https://rentry.org/od_problem">Malfunctioning Onedrive Icon in Windows 10 Explorer Navigation Panel</a></li>
<li><a href="https://www.reddit.com/r/WindowsLTSC/comments/1eymzyg/solution_to_onedrive_in_left_hand_panel_of_file/">Solution to OneDrive in left hand panel of file explorer does not work</a></li>
<li><a href="https://superuser.com/questions/1144868/duplicated-onedrive-icon-in-explorer">Duplicated Onedrive icon in explorer</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>OneDrive</tag>
        <tag>LTSC</tag>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Rider R2 5.0 伪评测</title>
    <url>/rider-r2.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">经历了几次风扇坏轴之后，我对吊装风扇产生了心理阴影，于是闲着没事就去某宝刷刷 ITX 机箱，打算换一个机箱，然后某宝在 Rider R2 5.0 上架的第二天就给我精准推送了它，这种电源下置，其他结构倒置的结构简直是我的梦中情箱，整机只有电源的风扇是吊装的，而海盗船电源的风扇买回来就没转过几次，于是果断下单，换掉了原来的小闷罐。</blockquote>

<p><img data-src="https://s2.loli.net/2024/03/23/xPpEDrCqBygOb1t.webp" alt="封面.webp"></p>
<span id="more"></span>

<p>Rider R2 5.0 目前售价 499 元，包邮，商品页面有黑色和白色两种颜色，目前只有白色在售，黑色据说会在月底开售，个人感觉白色要比黑色的好看。</p>
<p>更新：鸽了好几天，结果我还没写完评测，白色也卖完了，下一批要四月上。</p>
<h1 id="包装"><a href="#包装" class="headerlink" title="包装"></a>包装</h1><p>快递包装就是很简约的瓦楞纸箱，箱体上印着 Rider R2 的字样，拆开后有一袋螺丝配件包，机箱的脚垫也在里面，没有预装，值得一提的是配件包里提供了安装风扇用的对锁螺丝，这点好评。机箱主体被包裹在一个白色的袋子中，顶部和底部有泡棉减震。</p>
<h1 id="硬件兼容性"><a href="#硬件兼容性" class="headerlink" title="硬件兼容性"></a>硬件兼容性</h1><ul>
<li>机箱的体积约为 8.5L，三围尺寸为 206mm 长 * 149mm 宽 * 278mm 高，重 2 千克。</li>
<li>支持ITX与DTX主板。</li>
<li>风冷限高 126mm，这个高度只能放下压散热或者是使用 9cm 风扇的小塔散热器。我比较推荐用利民的 SI100 白色版，颜值和性能兼得。由于主板是倒装的，SS110 这种小塔装上去位置偏下，大约 20% 会被钢化玻璃的白边挡住，封印颜值。</li>
<li>显卡尺寸限制为 196mm * 130mm * 46mm，如果卡的宽度小于 122mm，则可以伸到前面板6mm长的空腔中，此时最大尺寸为 202mm * 122mm * 42mm。考虑到显卡供电线的弯折，不建议上过于极限的显卡。七彩虹的 4060Ti Mini 就是非常极限的一款卡，不过它的颜值应该是最高的。</li>
<li>前面板支持 12cm 厚扇，最大厚度 28mm。</li>
<li>尾部支持两个 8025 的风扇。</li>
<li>只支持 SFX 和 SFX-L 的电源，但是 SFX-L 的电源走线应该非常地狱。</li>
<li>电源两边的空隙可以塞入两个 2.5 寸的SATA硬盘，厚度不超过 7mm。</li>
<li>IO 接口拉满，耳机、麦克风、USB2.0、USB3.0 A口、Type C 接口全都有。</li>
</ul>
<h1 id="结构与外观"><a href="#结构与外观" class="headerlink" title="结构与外观"></a>结构与外观</h1><p>我购买这款机箱就是冲着它的结构去的，个人认为这是直插 ITX 机箱中对散热最友好的设计了。纯白的小盒子放在桌面上也很好看。提前说明一下，机箱的金属材质是我拿吸铁石一个一个试出来的，可能不准。</p>
<ul>
<li>机箱右侧的下半部分是铝合金材质，上半部分是一块厚度为 3mm 的正方形钢化玻璃，玻璃的四周有约 1.8cm 宽的白边，玻璃的颜色偏向绿色。铝板有前侧有类似雪糕棒的凹陷（我实在想不起来这个形状叫什么了），从上到下依次是开机键、10Gbps Type-C 接口、两个 USB 2.0 A口，没有电源与硬盘指示灯。</li>
<li>左侧的侧板是一整块铝板，除了 IO 接口外没有其他开口，也没有任何螺丝孔。IO接口处也是采用的类似雪糕棒的凹陷，从上到下依次是 5Gbps USB 3.0 A口、麦克风接口、音频输出口以及第二个 5Gbps USB 3.0 A口。</li>
<li>前面板是可拆卸的，左右两边应该是铝合金材质的长条，中间部分是铁质冲孔 mesh 网板，孔径大约是 0.8mm，比较密集。铝条与铁板在背面使用螺丝连接在一起。</li>
<li>顶板与底板都是铁的 mesh 冲孔网板。</li>
<li>机箱尾部也是铁的，在左右两侧有 90 度的弯折，弯折处通过黑色螺丝与左右两侧的铝板连接起来，装机后看不到这些螺丝，右侧显卡位附近是没有弯折的，目的应该是方便显卡的安装。风扇处的开孔是类似雪糕棒的形状，通风面积很大。</li>
<li>电源下置，独立进出风，不需要和 CPU 抢风。</li>
<li>前面板一个 12cm 厚扇进风，后面两个 8cm 厚扇出风，给 CPU 散热搭建了很完美的水平风道。CPU 的热气可以及时的排出，不会烘烤显卡和固态。</li>
<li>主板倒置，显卡在机箱的最顶部独自美丽，很适合散热鳍片左右开口的显卡。低负载风扇停转的情况下热气直接向上排出，负载上来之后风扇启动，从顶部吸入冷空气，然后从前面板和后挡板排出。唯一的缺点就是顶部容易积灰，需要定期擦拭一下。</li>
<li>可以放入 SI100 这种巨大的下压散热器，12cm 的风扇可以兼顾正面的 M.2 固态以及供电散热。</li>
<li>只有电源的风扇处于吊装状态，如果电源带有低负载风扇自动停转的功能，就不用太担心有风扇吊装坏轴的情况出现。</li>
<li>主要部件都是垂直排列，所以机箱的占地面积就很小，大致相当于三部手机排列在一起。</li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/89ks7XLhCJ6mlDc.webp" alt="空机箱.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/DJugyeKZtLICABU.webp" alt="占地面积约为3部手机并排.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/ViRO8KeILsx74Sg.webp" alt="与手机对比大小.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/GQf4WYX1hnCU7TH.webp" alt="前面板.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/rjXwWczkMInJGoe.webp" alt="左侧.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/M2WIvD16NK7xFCr.webp" alt="右侧.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/sg9R5w6YpQF2cIU.webp" alt="背面.webp"></div></div></div>

<h1 id="做工"><a href="#做工" class="headerlink" title="做工"></a>做工</h1><p>对于一款售价499的机箱来说，Rider R2 5.0 的做工一般般，毕竟是个人小批量的加工，好像第一批白色的机箱只做了100个，肯定不如大厂的批量生产，设计师也在详情页说明了漆面会存在瑕疵。</p>
<ul>
<li>机箱整体的漆面都是喷涂的，铝板的漆面很平整，铁板的漆面近看上去有种类似皮革的纹理。</li>
<li>漆面质量一般，我的机箱有几个螺丝孔位的漆面不完整，不过拧上螺丝也看不见。我个人对漆面不是很在意，拆装机箱早晚都会掉漆，几块钱买个补漆笔或者指甲油就解决了，我买了一瓶纯白色的指甲油来补漆，效果还不错。</li>
<li>两侧的铝板很厚实，厚度大约在3mm。机箱棱角和网孔的处理都不错，没有割手的地方，摸上去也比较顺滑。其他部位的铁板强度也还可以，但是尾部显卡位置的铁板是悬挑着的，另一侧没有竖向支撑，装机时有被掰弯的风险，我的到手就是弯的，被我用力掰回来了。</li>
<li>钢化玻璃侧板的固定方式比较独特，是在玻璃的上下两边用胶粘上了两块铁片，然后通过铁片上的螺丝与主体连接在一起。但是涂胶的位置就在显卡旁边，在显卡的长期烘烤下不知道会不会脱胶，钢化玻璃恐惧症患者已经在考虑换亚克力侧板了。</li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/FPijmIsRLEvocnK.webp" alt="指甲油补漆.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/WSi8dc6hOuIG2PZ.webp" alt="显卡挡板.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/VNUWPBj23rikqDg.webp" alt="钢化侧板与连接件之间的胶.webp"></div></div></div>

<h1 id="装机"><a href="#装机" class="headerlink" title="装机"></a>装机</h1><p>首先是我的配置，这套硬件是我从老机箱上拆下来的，标准的刀把机。</p>
<table>
<thead>
<tr>
<th align="left">硬件</th>
<th>型号</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">CPU</td>
<td>Intel i5 10500</td>
<td></td>
</tr>
<tr>
<td align="left">主板</td>
<td>华硕 ROG Strix B460i</td>
<td></td>
</tr>
<tr>
<td align="left">内存</td>
<td>芝奇幻光戟 DDR4 3000MHz</td>
<td>两条共32G</td>
</tr>
<tr>
<td align="left">显卡</td>
<td>蓝宝石 RX6500XT 4GB</td>
<td>平平无奇亮机卡</td>
</tr>
<tr>
<td align="left">固态</td>
<td>三星 SM961 256GB</td>
<td>17年买的MLC传家宝</td>
</tr>
<tr>
<td align="left"></td>
<td>铠侠 RC10 512GB</td>
<td>背部M.2</td>
</tr>
<tr>
<td align="left"></td>
<td>三星 860EVO 512GB</td>
<td>SATA</td>
</tr>
<tr>
<td align="left">散热</td>
<td>利民 SI-100 白色单塔体</td>
<td>只有塔体，没有原装风扇</td>
</tr>
<tr>
<td align="left">电源</td>
<td>海盗船 SF450 白金</td>
<td></td>
</tr>
<tr>
<td align="left">机箱</td>
<td>Rider R2 5.0 白色</td>
<td>主角</td>
</tr>
<tr>
<td align="left">风扇</td>
<td>零度世家风尊T30</td>
<td>两把，一把前进风，一把CPU散热器</td>
</tr>
<tr>
<td align="left"></td>
<td>Arctic F8 PWM</td>
<td>两把后排风</td>
</tr>
<tr>
<td align="left">其他</td>
<td>小辣椒天线</td>
<td>替换主板自带的鲨鱼鳍</td>
</tr>
<tr>
<td align="left"></td>
<td>白色压纹硅胶定制线</td>
<td>一条显卡的6+2，一条SATA的单头</td>
</tr>
<tr>
<td align="left"></td>
<td>纯白指甲油（手动狗头）</td>
<td>给机箱补漆，比补漆笔好使</td>
</tr>
</tbody></table>
<p>B站已经有好几个装机视频了，我就不搞了，这里简单说一下装机时的注意事项：</p>
<ul>
<li>主板背面的空间非常有限，无法给背面的固态安装散热片，我第一次装的时候没注意，带着散热片装上去了，上主板螺丝的时候发现孔位怎么都对不上，还以为是品控问题，检查了一遍才发现主板被固态散热片顶的翘起来了。</li>
<li>前面板的风扇建议用几个附赠的垫片垫起来，不然有概率顶到主板供电插头的卡扣，我主板供电线用的是海盗船原装线，将风扇垫起来3mm才能用，和卡扣紧贴在一起。</li>
<li>下压散热安装时建议将鳍片开口朝向机箱前后两侧，构建水平风道。</li>
<li>利民SI-100这种巨型下压散热朝上安装的话，热管末端会顶到显卡的背板，如果你的显卡没有金属背板建议换个方向安装，有的话就无所谓了，散热器可以兼职做显卡支架了。</li>
<li>显卡供电线强烈建议用定制硅胶线，我一开始用的电源原装线，电源线顶侧板，需要用力压才能盖上侧板，后来换了个压纹硅胶线就好多了。</li>
</ul>
<p>建议的装机顺序：</p>
<ol>
<li>先将内存、固态、散热器安装到主板上，提前接好CPU和主板供电线，记得撕掉散热器的膜。</li>
<li>将主板固定到机箱铜柱上，插好开机跳线、USB线和音频线。</li>
<li>安装显卡，并提前插好供电线</li>
<li>安装尾部排风扇。</li>
<li>接好电源端的供电线，再安装电源。</li>
<li>安装前面板风扇，这个风扇要安装在附带的支架上。</li>
<li>如果你有SATA硬盘，将它安装在底板上，插好线再塞电源的空隙里去。</li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/3q5P4upsxHVTAdQ.webp" alt="理线-从入门到摆烂.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/TQqYAoINJnSFmDx.webp" alt="前面板风扇支架及对锁螺丝.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/AgnQBbMSDKqxRV3.webp" alt="风扇支架安装示意.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/kKvwg5Z9oISbclG.webp" alt="前面板风扇已安装.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/jo7SdYUMGO3wuW2.webp" alt="主板供电卡扣紧贴风扇.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/LNqE9an3MkWIeDb.webp" alt="热管顶显卡背板.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/aph1TglqtfeVIAs.webp" alt="显卡出挑位置.webp"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/Qdl4Ia5gnFK8zmc.webp" alt="小辣椒天线.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/3pxXoRuTFCsfDEY.webp" alt="Sata硬盘固定到底板.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/I3wJVWj2zrslqtG.webp" alt="Sata硬盘塞入电源一侧的空隙.webp"></div></div></div>

<h1 id="水水的烤个机"><a href="#水水的烤个机" class="headerlink" title="水水的烤个机"></a>水水的烤个机</h1><p>用AIDA64简单的烤了11分钟，烤完发现风扇策略忘记调了，用的静音策略，懒得再烤一遍了，将就看吧。北方地暖室温25度，CPU封装平均70度，显卡平均62度，大火炉SM961平均60度，前进风和CPU散热风扇平均转速835转（最高1800），8cm排风扇平均转速1105转（最高2000）。</p>
<p>对比我之前用的C24小闷罐（非Air版）+乔思伯CR1400EVO塔式散热+满速风扇策略，新机箱的风扇转速只有最大转速的一半，CPU温度平均低了8度左右，内存温度低了十几度，显卡温度倒是差不多，6500xt作为一张亮机卡实在是没什么发热。</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/25/SpavXLx1Ck9dKoh.webp" alt="风道.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/Kap7ETu6SiWAOsV.jpg" alt="rider双烤十分钟.jpg"></div></div><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/03/23/n63tLCSiR8D79r4.webp" alt="人位视角.webp"></div></div></div>]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>ITX</tag>
        <tag>搞机</tag>
        <tag>Rider R2 5.0</tag>
      </tags>
  </entry>
  <entry>
    <title>Steam开机静默启动</title>
    <url>/steam-silent-startup.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 最近沉迷于更换 Wallpaper Engine 的壁纸，但是更换时总需要启动Steam来连接到创意工坊，为了省事我就设置了Steam开机自启动，但是每次启动时都会显示商店页面，设置里也没有关闭的选项，谷歌了下发现开机显示商店页面是个玄学问题，有些人什么也不设置它也不会显示，很迷惑。要解决这个问题也很简单，在开始菜单的快捷方式上加个启动参数就完事了。 </blockquote>

<span id="more"></span>

<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>以下是简简单单的解决方案：</p>
<ol>
<li>打开<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Steam</code>文件夹。</li>
<li>右键单击Steam快捷方式，打开属性。</li>
<li>在目标后面加上<code> -silent</code>，然后确定。注意横线前面有个空格。</li>
</ol>
<p><img data-src="https://s2.loli.net/2024/08/13/qyAvJwDYR64Baku.png" alt="步骤"></p>
<h1 id="迷惑点"><a href="#迷惑点" class="headerlink" title="迷惑点"></a>迷惑点</h1><p>虽然解决的方式很简单，但是这背后的原理却很让人疑惑。</p>
<ol>
<li>按理说Steam是通过注册表中<code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code>来实现开机自启动的，但是我查看过这里的数据是<code>&quot;D:\Software\Steam\steam.exe&quot; -silent</code>，是存在<code> -silent</code>后缀的，那么它自启动时是不应该显示商店页面的，但是不知道为何这个参数没有生效，查了半天也没查到为什么，去问ChatGPT也把它给问懵了。</li>
<li><code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</code>文件夹存放的是开始菜单中的快捷方式，按理说这个文件夹和开机自启动半毛钱关系都没有，只看到一个说法是这里存放的是全局快捷方式，无法确定对错。</li>
</ol>
<h1 id="启动参数"><a href="#启动参数" class="headerlink" title="启动参数"></a>启动参数</h1><p><code>-silent</code> 这一类参数通常被称为命令行参数或启动参数，显然它们的作用是控制程序启动时的行为。常见的Steam启动参数包括：</p>
<ul>
<li><code>-silent</code>：以静默模式运行，不显示用户界面或弹出窗口。</li>
<li><code>-tcp</code>：使用TCP协议启动。</li>
<li><code>-clearbeta</code>：退出测试版客户端并回滚至正式版。</li>
<li><code>-login username password</code>：跳过Steam登录窗口，直接使用参数中的用户名和密码登录。</li>
</ul>
<div class="note default"><p>参考：</p>
<blockquote>
<p><a href="https://help.steampowered.com/en/faqs/view/0188-6BB7-D467-08E1">Setting Steam Launch Options</a><br><a href="https://help.ggcircuit.com/knowledge/what-are-additional-parameters">What are additional parameters?</a></p>
</blockquote>
</div>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>软件</tag>
        <tag>Steam</tag>
      </tags>
  </entry>
  <entry>
    <title>utools本地搜索结果显示不全的某种解决方案</title>
    <url>/utools%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%85%A8.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">前几天发现utools的本地搜索只能加载出来约20条结果，滚动条拉到底部后不会加载新的搜索结果，而单独使用everything搜索结果正常。折腾了半天想起来调整过系统字体大小，去设置里将字体大小调回默认后问题解决</blockquote>

<span id="more"></span>

<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><div class="note success"><p>先上解决方案：<br>如果更改了屏幕缩放，就到<code>设置-系统-屏幕-自定义缩放</code>中取消自定义缩放，改用系统提供的缩放选项。<br>如果更改了系统字体大小，就到<code>辅助功能-文本大小</code>（win10中叫做轻松使用）中将文本大小调整为100&#x2F;125&#x2F;150等系统缩放中提供的值</p>
</div>

<p>下面的又是太长不看版</p>
<h1 id="折腾过程记录"><a href="#折腾过程记录" class="headerlink" title="折腾过程记录"></a>折腾过程记录</h1><p>在折腾的过程中，我尝试过卸载重装utools及everything，清理注册表等操作，但是都没有卵用。尝试过安装wox和listary，但是都出现了和utools相同的问题，都是滚动条触底时页面内容不会自动加载。同时在utools本地搜索插件的评论区发现了几条有相同问题的评论，贴图如下：</p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/07/23/kznj3rHmXQTe1vW.png" alt="评论区.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/07/23/9V4WyqmBiXL31ps.png" alt="另一种解决方案.png"></div></div></div>

<p>评论区提到的拖动窗口边缘调整大小以及设置高DPI缩放的两种办法让我想起来好像刚改过系统的字体大小，于是跑回去将字体大小复位，一切都恢复了正常。<br><img data-src="https://s2.loli.net/2022/07/23/HaVnI7ZcKBGEDbl.jpg" alt="痴呆.jpg"></p>
<h2 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h2><p>实在是很好奇为什么会这个样子，于是又去调整字体大小吗，复现了这个问题，其中字体大小为100（默认值）&#x2F;125&#x2F;150等25倍值时utools在触底后可以自动加载，其他值都不行。而这几个值也是屏幕缩放选项提供的几个预设值。于是我又去尝试了自定义缩放，发现也是这几个值可以，剩下的值都会出问题，这就很迷惑了。</p>
<h2 id="触底加载机制"><a href="#触底加载机制" class="headerlink" title="触底加载机制"></a>触底加载机制</h2><p>utools是基于Electron和React构建的，而本地搜索使用的是滚动自动加载机制。在搜索React滚动加载的时候发现某些实现方式确实存在页面缩放时，判断是否触底的函数失效的问题。</p>
<blockquote>
<p>参考：<a href="https://www.shouxicto.com/article/1589.html">React之触底加载实现方式-3.7问题：页面缩放</a></p>
</blockquote>
<h2 id="解包尝试"><a href="#解包尝试" class="headerlink" title="解包尝试"></a>解包尝试</h2><p>为了找出时是何种原因，我解包了本地搜索插件的asar文件。utools的插件所在的位置为<code>C:\Users\[用户名]\AppData\Roaming\uTools\plugins</code>，而本地搜索文件由于内置了免安装版Everything，会单独列出来一个文件夹，此文件夹的名称和下面asar文件名称相对应，所以很好找。</p>
<p>解包前使用npm全局安装asar包，命令为<code>npm install -g asar</code>，解包命令为<code>asar extract [需要解包的文件.asar] [解包路径]</code></p>
<details class="note primary"><summary><p>asar文件格式</p>
</summary>
<h3 id="asar"><a href="#asar" class="headerlink" title="asar"></a>asar</h3><p>ASAR文件是一个归档文件，用于使用Electron（一个用于构建跨平台程序的开源库）为应用程序打包源代码。它以类似于.TAR存档的格式保存，其中包含在存档中的文件（如.HTML、.JS和.CSS文件）在不使用压缩的情况下连接在一起。<br>asar 属于无压缩类型的，也没有经过加密处理的，所有包含的文件的二进制数据都直接添加到 .asar 文件中，该文件头部包含一个 JSON 格式的字符串，记录其中包含的文件结构以及所有文件的起始位置以及文件长度。</p>
<blockquote>
<p>引用：<a href="https://fileinfo.cn/extension/asar">.ASAR 文件格式</a><br>引用：<a href="https://www.iguan7u.cn/2019/03/19/Electron-asar-%E6%A0%BC%E5%BC%8F%E8%AF%A6%E8%A7%A3/">Electron asar 格式详解</a></p>
</blockquote>

</details>

<p>解包后找到index.js文件，使用<a href="https://tool.lu/js/">在线工具</a>美化，让它变成人类能够看懂的样子，然后。。。看懵了。。。三万多行没有注释的代码，前端只有菜狗水平的我根本看不懂。。。不过确实出现了<code>load scroll toggle</code>这几个关键词</p>
<p><img data-src="https://s2.loli.net/2022/07/23/M1vH2GF8srOjbW5.jpg" alt="挠头.jpg"></p>
<h2 id="不负责任的推断"><a href="#不负责任的推断" class="headerlink" title="不负责任的推断"></a>不负责任的推断</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/07/23/o2AH6WfKIScvT1F.png" alt="100缩放.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/07/23/x2TVyXqu4WNlrQ9.png" alt="121缩放.png"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/07/23/OKe5lihyJQBXru3.png" alt="125缩放.png"></div></div></div>

<p>上面三张图对应的文本字体大小分别是100、121、125，可以看到结果列表区域显示的条目并没有变，只是每一条所占的高度增加了。</p>
<p>根据搜索到的几种滚动记载机制，我不负责任的推断（毕竟对前端不熟）。滚动加载机制的判断条件是<code>可视区高度 + 滚动距离 &gt;= 内容实际高度</code>。当系统缩放改变后，搜索结果每一列所占用的高度增加，<code>内容实际高度</code>发生改变，导致无法达成触发条件。</p>
<h2 id="未解之谜"><a href="#未解之谜" class="headerlink" title="未解之谜"></a>未解之谜</h2><p>那么问题又来了，为啥125%和150%等缩放可以正常使用呢？查了半天也没找到啥有用的信息，那就摆烂吧</p>
<p><img data-src="https://s2.loli.net/2022/07/23/ZM45HSNl7UjdbTY.gif" alt="摆烂.gif"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Bug</tag>
        <tag>utools</tag>
        <tag>滚动加载</tag>
        <tag>React</tag>
        <tag>缩放</tag>
      </tags>
  </entry>
  <entry>
    <title>Vivo TWS Air 电池更换记录</title>
    <url>/vivo-tws-air-battery-replacement.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 最近天气转凉，我那个练习时长两年半的无线耳机的续航终究还是崩了，即使我不用耳机，充电仓的电量也会在两天之内耗尽。那就换个电池吧，能用6块钱解决的问题就没有必要花160。 </blockquote>

<span id="more"></span>

<p>更换中使用到的工具有：</p>
<ul>
<li>撬棒</li>
<li>牙签</li>
<li>电烙铁</li>
<li>吸锡带</li>
<li>焊锡丝</li>
<li>松香</li>
<li>双面胶</li>
<li>EVA 海绵胶带</li>
<li>剪刀</li>
</ul>
<p>充电仓使用的电池型号为：601737，3.8V，425mAh，1.61Wh，品牌是VDL紫建电子，但是淘宝上买不到这个牌子的，我买到的是LJXH的。</p>
<p>另外我担心拆完了装不回去还特意录了个视频，结果发现耳机充电仓的结构巨简单。但是录都录了，索性剪辑了一下传到B站了，传送门在下面。因为一开始没打算上传，所以我就把手机放在了机箱上面，所以视角比较奇特。</p>
<iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113487833662961&bvid=BV1CpmZYcEDY&cid=26778338607&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>

<p>本来还想换一下两个耳机的电池，耳机电池型号为：9249，3.85V，27mAh，0.103Wh，但是找了半天也没找到相同型号的。而且目前耳机电池的电量成谜，使用1小时后就会播放低电量提示音，但是只播放了一次，看了眼手机上显示的剩余电量是32%，所以我就没管它。接着又用了1个多小时，它还是有电，手机上显示的剩余电量是4%，然后右耳的耳机报了一声低电量后就没声了，2个多小时的续航还是够用的，所以就不换了，等到彻底没法用就换新的了。</p>
<p>最后附上文字版的步骤和注意事项，虽然可能没啥卵用。</p>
<details class="note warning"><summary><p>焊接注意事项</p>
</summary>
<ul>
<li>有条件一定要用自带助焊剂的低温焊锡，我用的买烙铁送的焊锡巨难用，除了烙铁头啥都不粘。</li>
<li>注意通风，如果用的是含铅焊锡，建议戴个口罩，然后用完洗手。</li>
<li>能用吸锡器就不用吸锡带，吸锡带导热，容易烫到手。</li>
</ul>

</details>

<ol>
<li>先把耳机取出来。</li>
<li>用撬棒撬开外壳，讲究一个大力出奇迹，干就完了。比较合适的插入点是背面转轴两端，插入后慢慢向正面移动，一边挪动一边翘。但是不要超过正面的中点，不然的话，已经翘起来的部分会因为杠杆作用被压回去。这一部分的视频过于滑稽（丢人），我就把它删掉了。</li>
<li>扣掉充电口上的海绵垫，注意海绵垫下面有双面胶。</li>
<li>拧掉两颗螺丝。</li>
<li>用牙签挑开正面指示灯上面的海绵垫。</li>
<li>接着把检测开盖用的霍尔传感器和指示灯排线揭开，指示灯排线下面也有双面胶。</li>
<li>挑开背面按钮的微动开关的排线，它下面也是很黏的双面胶。</li>
<li>用电烙铁熔化四个焊点，可以补一些焊锡，方便把四个点一起加热。然后一边加热一边往上推主板，使得主板和下面的另一层给耳机充电的PCB板分离。</li>
<li>用电烙铁加热焊点，断开电池和主板的连接，注意红线和黑线不要接触，防止短路。</li>
<li>慢慢把电池揭下来，下面的双面胶可粘了。</li>
<li>焊接上新的电池，注意线序，最外层是正极红线，最内侧是负极黑线。</li>
<li>插上充电线，检查一下能否正常充电。</li>
<li>把主板装回去，然后焊好四个焊点。</li>
<li>用双面胶把新电池固定好。</li>
<li>把背面按钮的排线贴回去，然后装上海绵垫。</li>
<li>在电池上贴一段海绵，我用的这个5mm的背胶海绵太厚了，用剪刀剪掉了三分之二，然后在中间单独给排线开了个槽，才勉强能塞回去。</li>
<li>把霍尔传感器塞回去。</li>
<li>把指示灯排线贴回去，然后装上海绵垫。</li>
<li>拧上主板固定螺丝。</li>
<li>把充电口海绵垫贴回去</li>
<li>把壳子装回去，也得大力出奇迹。</li>
</ol>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>维修</tag>
        <tag>TWS</tag>
      </tags>
  </entry>
  <entry>
    <title>在VMware Fusion中安装macOS Sonoma虚拟机</title>
    <url>/vmware-fusion-install-macos-sonoma.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 被苹果背刺了，MBP 2017不能升级到Sonoma，而XCode的版本又是和macOS版本绑定的，升级不了系统也就升级不了XCode。而老版本的XCode又不支持最新的iOS系统，就没法向手机部署应用，老Mac也就变成了美丽废物。我在重新装个黑苹果、装KVM直通和装虚拟机中纠结了很久，最后还是选择在macOS Sonoma的虚拟机中安装最新版本的XCode进行开发，又不是不能用🐶🐶 </blockquote>

<span id="more"></span>

<div class="note warning"><p>本文中使用的软件为 VMware Fusion 13.5.2，虚拟机系统版本为 macOS Sonoma 14.5，宿主机为MacBook Pro 2017，系统为macOS Venture 13.6.7。请注意时效。</p>
</div>

<h1 id="下载VMware安装包"><a href="#下载VMware安装包" class="headerlink" title="下载VMware安装包"></a>下载VMware安装包</h1><p>VMware去年被博通收购之后，官网就被改的乱七八糟，下载安装包又是要跳转到博通网站，又是要注册博通的账号，麻烦得很，更气人的是，注册完之后点击列出所有产品的按钮，直接没有反应，根本没法下载，只能说改的是依托答辩。建议找个靠谱的第三方下载站下载算了，想治疗低血压的话可以去官网试试。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>从 TechSpot 下载</p><p>VMware Fusion for macOS</p>
<a href="https://www.techspot.com/downloads/2755-vmware-fusion-mac.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>官网专治低血压下载</p><p>VMware Fusion for macOS</p>
<a href="https://www.vmware.com/products/desktop-hypervisor.html"></a>
</div></div>

<h1 id="激活VMware"><a href="#激活VMware" class="headerlink" title="激活VMware"></a>激活VMware</h1><p>VMware今年5月<a href="https://blogs.vmware.com/teamfusion/2024/05/fusion-pro-now-available-free-for-personal-use.html">宣布对个人用户免费</a>，安装过程中出现激活页面时，不需要输入激活码，选择下面的<code>个人用途</code>选项即可激活。</p>
<h1 id="下载macOS安装文件"><a href="#下载macOS安装文件" class="headerlink" title="下载macOS安装文件"></a>下载macOS安装文件</h1><p>在开始安装虚拟机前，请先获取macOS的安装文件，获取方法详见我的上一篇博文：<a href="/create-macos-iso.html">在Mac上创建macOS镜像安装文件</a></p>
<h1 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h1><p>VMware Fusion 是原生支持安装macOS虚拟机的，所以就不需要像Workstation那样使用unlocker额外解锁，直接干就完事。步骤中没有提到的暂时保持默认即可。</p>
<ol>
<li>在<strong>选择安装方法</strong>页面选择<code>创建自定虚拟机</code>。</li>
<li>在<strong>选择操作系统</strong>页面选择<code>Apple OS X</code> -&gt; <code>macOS 14</code>。</li>
<li>在<strong>选择虚拟磁盘</strong>页面选择<code>新建虚拟磁盘</code>。</li>
<li>完成虚拟机配置。</li>
<li>先不要启动虚拟机，如果已经启动的话先关闭虚拟机，注意是关闭，不是挂起。</li>
<li>点击顶部菜单栏中的<code>设置</code>按钮进行配置，我这里就是已经启动了虚拟机，所以配置页面里全是灰色的，不能调节。</li>
<li>根据需要调节CPU数量、内存与虚拟硬盘大小。</li>
<li>在<code>CD/DVD(SATA)</code>中选择前面获取的macOS安装镜像，并勾选<code>连接 CD/DVD 驱动器</code>。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-bid5ex7az">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1.选择创建自定虚拟机"><img data-src="https://s2.loli.net/2024/07/16/4uxgbVHFCcPkQKX.webp" alt="1.选择创建自定虚拟机" class="zoomable"></li><li class="splide__slide" data-caption="2.选择 Apple OS X -> macOS 14"><img data-src="https://s2.loli.net/2024/07/16/QjuoCkn1eVqAPS3.webp" alt="2.选择 Apple OS X -> macOS 14" class="zoomable"></li><li class="splide__slide" data-caption="3.选择新建虚拟磁盘"><img data-src="https://s2.loli.net/2024/07/16/g6OytREumQjNBiz.webp" alt="3.选择新建虚拟磁盘" class="zoomable"></li><li class="splide__slide" data-caption="4.完成虚拟机配置"><img data-src="https://s2.loli.net/2024/07/16/WLXZJ6prOx5sEwq.webp" alt="4.完成虚拟机配置" class="zoomable"></li><li class="splide__slide" data-caption="6.1.点击顶部菜单栏中的设置按钮进行配置"><img data-src="https://s2.loli.net/2024/07/16/FeBJZ3WCSLEbVrQ.webp" alt="6.1.点击顶部菜单栏中的设置按钮进行配置" class="zoomable"></li><li class="splide__slide" data-caption="6.2.配置页面"><img data-src="https://s2.loli.net/2024/07/16/1AbfjE4vyiazmd3.webp" alt="6.2.配置页面" class="zoomable"></li><li class="splide__slide" data-caption="7.1.调节CPU数量、内存大小"><img data-src="https://s2.loli.net/2024/07/16/1srgYDVbeQXyWPm.webp" alt="7.1.调节CPU数量、内存大小" class="zoomable"></li><li class="splide__slide" data-caption="7.2.调节虚拟硬盘大小"><img data-src="https://s2.loli.net/2024/07/16/j4eJvaHFhYGlUD9.webp" alt="7.2.调节虚拟硬盘大小" class="zoomable"></li><li class="splide__slide" data-caption="8.选择安装镜像"><img data-src="https://s2.loli.net/2024/07/16/Sm3Pb1hQrUIRXw8.webp" alt="8.选择安装镜像" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-bid5ex7az" class="carousel-caption"> </div>
    </div>
  

<h1 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h1><ol>
<li>关闭配置页面，启动虚拟机。</li>
<li>选择<code>磁盘工具</code>。</li>
<li>点击顶部下拉菜单，选择<code>显示所有设备</code>。</li>
<li>选择<code>VMware Virtual SATA Hard Drive Media</code>，重命名后然后抹掉它，格式与方案保持默认。</li>
<li>剩下的没什么好说的，按照正常步骤安装<code>macOS Sonoma</code>即可。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-mzq1f0go3">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="2.选择磁盘工具"><img data-src="https://s2.loli.net/2024/07/16/iHsJgtrIvMnbwkY.webp" alt="2.选择磁盘工具" class="zoomable"></li><li class="splide__slide" data-caption="3.点击顶部下拉菜单，选择显示所有设备"><img data-src="https://s2.loli.net/2024/07/16/YtLhyUQxf1VaI8s.webp" alt="3.点击顶部下拉菜单，选择显示所有设备" class="zoomable"></li><li class="splide__slide" data-caption="4.选择VMware Virtual SATA Hard Drive Media，重命名后然后抹掉它"><img data-src="https://s2.loli.net/2024/07/16/1C49wUPHtJZ35Yr.webp" alt="4.选择VMware Virtual SATA Hard Drive Media，重命名后然后抹掉它" class="zoomable"></li><li class="splide__slide" data-caption="5.按照正常步骤安装"><img data-src="https://s2.loli.net/2024/07/16/sTrdJ8eSgbW7V6k.webp" alt="5.按照正常步骤安装" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-mzq1f0go3" class="carousel-caption"> </div>
    </div>
  

<h1 id="安装VMware-Tools"><a href="#安装VMware-Tools" class="headerlink" title="安装VMware Tools"></a>安装VMware Tools</h1><ol>
<li>安装完成进入桌面后，右键单击桌面右上角的安装镜像，推出它</li>
<li>在宿主机的顶部菜单栏中打开<code>虚拟机</code>下拉菜单，选择<code>安装 Vmware Tools</code></li>
<li>双击安装</li>
<li>安装过程中会有几个请求权限的弹窗，包括一个需要跳转到设置中操作的，全部允许即可</li>
<li>重启虚拟机</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-cxkh2fli3">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="1.右键单击桌面右上角的安装镜像，推出它"><img data-src="https://s2.loli.net/2024/07/16/Im1tpiVS8FBq9gK.webp" alt="1.右键单击桌面右上角的安装镜像，推出它" class="zoomable"></li><li class="splide__slide" data-caption="2.在宿主机的顶部菜单栏中打开虚拟机下拉菜单，选择安装 Vmware Tools"><img data-src="https://s2.loli.net/2024/07/16/2bjFUndiO6X4JtA.webp" alt="2.在宿主机的顶部菜单栏中打开虚拟机下拉菜单，选择安装 Vmware Tools" class="zoomable"></li><li class="splide__slide" data-caption="3.双击安装 Vmware Tools"><img data-src="https://s2.loli.net/2024/07/16/Dl7iQkXY1esW4Ec.webp" alt="3.双击安装 Vmware Tools" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-cxkh2fli3" class="carousel-caption"> </div>
    </div>
  

<h1 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h1><p>如果没有网络连接的话，点击顶部菜单栏中的<code>设置</code>按钮，点击<code>网络适配器</code>，选择<code>桥接模式网络连接</code>下的<code>自动检测</code>选项，并勾选<code>连接网络适配器</code></p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-wchle1h3z">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="设置 -> 网络适配器"><img data-src="https://s2.loli.net/2024/07/16/1qihBpKv8aJX3Cz.webp" alt="设置 -> 网络适配器" class="zoomable"></li><li class="splide__slide" data-caption="选择桥接模式网络连接下的自动检测选项，并勾选连接网络适配器"><img data-src="https://s2.loli.net/2024/07/16/qlMkejoZAfKwLmO.webp" alt="选择桥接模式网络连接下的自动检测选项，并勾选连接网络适配器" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-wchle1h3z" class="carousel-caption"> </div>
    </div>
  

<h1 id="关于图形界面"><a href="#关于图形界面" class="headerlink" title="关于图形界面"></a>关于图形界面</h1><p>macOS虚拟机默认情况下是不能直接调用显卡的，所有的画面都是CPU吭哧吭哧模拟出来的，所以会显得很卡顿。另外Sonoma默认的桌面背景是个视频，根本就播放不出来，所以桌面背景会是一片白。但好在我们的宿主机是一台真正的Mac，可以通过编辑<code>.vmx</code>文件强行开启显卡3D加速，请注意这个方法并不是十全十美的，在某些情况下可能导致崩溃。感兴趣的朋友可以查看我的下一篇博文<a href="/enable-gpu-acceleration-in-macos-vm.html">为 VMware Fusion 中的 macOS 虚拟机开启 3D 加速</a>。</p>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>修复 VMware Fusion 虚拟机无法访问USB设备</title>
    <url>/vmware-fusion-usb-fix.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 虚拟机装完了，3D加速也开启了，XCode也整好了，正当我打算连上iPhone大干一场的时候，我突然发现虚拟机识别不到USB设备？？？然后又是漫长的搜索试错，发现是vmware-usbarbitrator的锅，这个服务的作用是管理连接到虚拟机的USB设备，而启动虚拟机时它不知为何没有运行，奇奇怪怪的bug增加了，而解决方法就是为它设置开机自动运行。</blockquote>

<span id="more"></span>

<div class="note warning"><p>在开始前，请在宿主机中打开活动监视器，搜索usb，如果没有出现<code>vmware-usbarbitrator</code>进程，则可以通过本文的方法解决，否则请继续排查其他可能的原因。</p>
</div>

<ol>
<li>打开<code>自动操作</code>APP，这是一个系统自带的古董级软件，类似于iOS上的捷径，如果找不到就直接用<code>聚焦</code>搜索。</li>
<li>文稿类型选择<code>应用程序</code>。</li>
<li>在<code>实用工具</code>中找到<code>运行Shell脚本</code>，把它拖动到右侧的空白位置。</li>
<li>粘贴下面的命令，别忘了把<code>你的密码</code>四个字<strong>替换成你的开机密码</strong>，这个命令的作用就是以管理员身份运行vmware-usbarbitrator服务。<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 你的密码 | sudo -S /Applications/VMware\ Fusion.app/Contents/Library/vmware-usbarbitrator</span><br></pre></td></tr></table></figure></li>
<li>保存，记得保存的位置和程序名称，我起的名字是<code>LaunchVMusbService</code>。</li>
<li>打开<code>设置-通用-登陆项</code>，将上一步创建的应用程序添加到登录时打开的程序列表中，这样开机时就会自动运行上面的shell命令，启动vmware-usbarbitrator服务。</li>
<li>重启mac，再次打开<code>活动监视器</code>，搜索<code>usb</code>，查看<code>vmware-usbarbitrator</code>进程是否已运行。</li>
<li>在<strong>虚拟机的设置</strong>中找到<code>USB和蓝牙</code>选项，选择连接相关设备。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-k4l36qsc9">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="文稿类型选择应用程序"><img data-src="https://s2.loli.net/2024/07/17/jgYI6M4BVm9Fube.jpg" alt="文稿类型选择应用程序" class="zoomable"></li><li class="splide__slide" data-caption="在实用工具中找到运行Shell脚本，把它拖动到右侧的空白位置，粘贴命令"><img data-src="https://s2.loli.net/2024/07/17/s56fYbt1OaXBd89.jpg" alt="在实用工具中找到运行Shell脚本，把它拖动到右侧的空白位置，粘贴命令" class="zoomable"></li><li class="splide__slide" data-caption="打开设置-通用-登陆项，将上一步创建的应用程序添加到登录时打开的程序列表中"><img data-src="https://s2.loli.net/2024/07/17/KoB1Lk8AHG9wnli.jpg" alt="打开设置-通用-登陆项，将上一步创建的应用程序添加到登录时打开的程序列表中" class="zoomable"></li><li class="splide__slide" data-caption="重启mac，再次打开活动监视器，搜索usb，查看vmware-usbarbitrator进程是否已运行"><img data-src="https://s2.loli.net/2024/07/17/nDKVTAfjF2bwk9q.jpg" alt="重启mac，再次打开活动监视器，搜索usb，查看vmware-usbarbitrator进程是否已运行" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-k4l36qsc9" class="carousel-caption"> </div>
    </div>
  

<div class="note default"><p>参考：<a href="https://sleele.com/2023/07/09/vmware-fusion-does-not-share-external-usb-devices-from-host-os-to-guest-os-with-solutions/">解决Mac VMware Fusion 无法无法识别USB设备问题 | sleele的博客</a></p>
</div>]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware Workstation 桥接网络无连接的一种解决方案</title>
    <url>/vmware-workstation-net-fix.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 最近听说 VMWare 宣布 Workstation 和 Fusion 对个人使用完全免费之后，我啪一下就站起来了，很快啊！就打算用WMware装一个Windows的虚拟机，因为原来用VirtualBox做的虚拟机拖放功能经常出Bug。但是，安装完成后联网的时候发现我大意了啊，没有闪，桥接网络无连接。经过一番查找，我发现是VMWare自动选择桥接网卡这个年轻人，不讲武德，来，骗，来，偷袭，我69岁的，老同志。</blockquote>

<span id="more"></span>
<p>因为我先前安装过VirtualBox，clash使用的又是Tun模式，所以系统中存在多张虚拟网卡，如果VMware自动桥接到这些虚拟网卡上，那肯定是不会有网络连接的。要解决这个问题也很简单，只需要手动指定要桥接到的网卡即可。</p>
<p>步骤如下：</p>
<ol>
<li>打开开始菜单，搜索<code>虚拟网络编辑器</code>。</li>
<li>选择<code>以管理员身份运行</code>。</li>
<li>在<code>已桥接至</code>后面的下拉菜单中选择自己目前正在使用的物理网卡。</li>
<li><code>确定</code>保存并退出。</li>
</ol>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/07/15/VdH4r6AJlIQ9Kac.webp" alt="虚拟网络编辑器.webp"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2024/07/15/cfjCqrTlFHxZ5b7.webp" alt="下拉菜单.webp"></div></div></div>

<p>我劝，这位年轻人，好自为之，好好反思，不要再犯这样的聪明，小聪明，啊！</p>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>VMware</tag>
        <tag>桥接网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 11 IoT LSTC 重装记录</title>
    <url>/win-11-iot-ltsc-installation.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 听说微软在月初发布了正式版的Windows 11 LTSC，受够了微软三天两头往系统里塞AI屎山的我啪一下就站起来了，很快啊！火速给手头的三台电脑全装上了新系统。而且我的上一篇Windows系统重装指南还是4年前写的，许多内容已经出现了偏差。于是我决定借此机会重新写一版专注于 Windows11 IoT LTSC 的重装指南。 </blockquote>

<span id="more"></span>

<details class="note primary"><summary><p>LTSC 版本对比</p>
</summary>
<p>LTSC，即长期服务支持版（Long-Term Servicing Channel），相较于普通Windows版本，删减了很多系统自带软件，如照片、视频、Copilot等，也没有微软应用商店（但可以手动安装）。在后续的更新中，LTSC只会接收安全更新和Bug修复，不会有功能性更新，这样可以有效防止微软向系统中加一些乱七八糟的功能（和Bug）。至于IoT LTSC，它是专为物联网设备设计的LTSC版本，尽管它叫IoT，但普通家用电脑同样可以安装使用。以下是这两者的详细对比：</p>
<table>
<thead>
<tr>
<th><strong>特性</strong></th>
<th><strong>Enterprise LTSC</strong></th>
<th><strong>IoT Enterprise LTSC</strong></th>
</tr>
</thead>
<tbody><tr>
<td>硬件限制：TPM &#x2F; 安全启动 &#x2F; UEFI &#x2F; 4GB 以上内存</td>
<td>有限制</td>
<td>无限制</td>
</tr>
<tr>
<td>BitLocker 加密</td>
<td>启用</td>
<td>关闭</td>
</tr>
<tr>
<td>更新支持时长</td>
<td>5年</td>
<td>10 年</td>
</tr>
<tr>
<td>数字许可证激活</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>可以卸载 Edge 浏览器</td>
<td>是</td>
<td>需要将地区设置为欧洲国家</td>
</tr>
<tr>
<td>多语言支持</td>
<td>支持</td>
<td>仅支持英文，安装完成后可以设置其他语言</td>
</tr>
</tbody></table>

</details>

<div class="note danger"><h1 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a>备份文件</h1><p>此教程提供的方法会抹除所有磁盘内容来进行全新安装，请一定做好备份！</p>
<p>全新安装的好处是不会继承老系统的某些奇奇怪怪的问题（比如一些无论如何也删不掉的文件），坏处就是磁盘上所有的内容都会被删除。</p>
<p>有条件的建议用空闲的U盘或移动硬盘拷贝出所有重要资料。或者激进一些，直接拆机拔掉多余的硬盘，只保留系统盘，避免格式化时选择错误的硬盘。</p>
</div>

<h1 id="系统镜像下载"><a href="#系统镜像下载" class="headerlink" title="系统镜像下载"></a>系统镜像下载</h1><p>首先，我们需要下载系统镜像。可以通过以下两个网站获取镜像文件。NEXT, I TELL YOU 提供BT和ED2K下载链接，而MAS则提供微软官方源下载和自建网盘下载。你可以同时尝试这两个网站，选择下载速度较快的那个。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>NEXT, I TELL YOU</p><p>原来的MSDN, I TELL YOU</p>
<a href="https://next.itellyou.cn/"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Microsoft Activation Scripts (MAS)</p><p>Open-source Windows and Office activator featuring HWID, Ohook, KMS38, and Online KMS activation methods, along with advanced troubleshooting.</p>
<a href="https://massgrave.dev/windows_ltsc_links#download-links"></a>
</div></div>


    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-bcehm9ipg">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="NEXT, I TELL YOU 下载位置"><img data-src="https://s2.loli.net/2024/11/05/9kS6BxRmCuoTi25.webp" alt="NEXT, I TELL YOU 下载位置" class="zoomable"></li><li class="splide__slide" data-caption="MAS 下载位置"><img data-src="https://s2.loli.net/2024/11/05/N5mbXJTqh8GwWkt.webp" alt="MAS 下载位置" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-bcehm9ipg" class="carousel-caption"> </div>
    </div>
  

<h1 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h1><p>然后我们需要制作一块启动U盘，用于新系统的安装，步骤如下：</p>
<ol>
<li>首先，下载并安装启动U盘制作工具Rufus，建议下载便携版，反正系统待会儿就要重装了。 <div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>Rufus</p><p>Rufus 是一款格式化和创建 USB 启动盘的辅助工具。</p>
<a href="https://rufus.ie/zh/"></a>
</div></div></li>
<li>接着，将一块容量≥8G的空闲U盘插入电脑，此U盘会被格式化，请提前备份数据。</li>
<li>双击打开Rufus。设置设备为U盘，选择刚刚下载的系统镜像作为引导类型，其他设置保持默认，然后点击“开始”。</li>
<li>此时，Rufus会弹出提示，询问是否自定义安装选项，比如去除硬件限制等。由于IoT LTSC版本本身就没有这些限制，可以直接点击“OK”跳过。接着，软件会提醒格式化U盘，点击“确定”继续。</li>
<li>最后，等待刻录完成，整个过程大约需要十几分钟。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-x25rqcwu2">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="下载便携版 Rufus"><img data-src="https://s2.loli.net/2024/11/05/25ax1rDZUPs4mSA.webp" alt="下载便携版 Rufus" class="zoomable"></li><li class="splide__slide" data-caption="将设备设置为U盘，引导类型选择刚刚下载的系统镜像"><img data-src="https://s2.loli.net/2024/11/05/B5t9xOuZkzbRNoD.webp" alt="将设备设置为U盘，引导类型选择刚刚下载的系统镜像" class="zoomable"></li><li class="splide__slide" data-caption="自定义安装选项"><img data-src="https://s2.loli.net/2024/11/05/pvbLgnUCcxZ7TwI.webp" alt="自定义安装选项" class="zoomable"></li><li class="splide__slide" data-caption="格式化U盘警告"><img data-src="https://s2.loli.net/2024/11/05/lsydOHqW9XPrjQg.webp" alt="格式化U盘警告" class="zoomable"></li><li class="splide__slide" data-caption="等待刻录完成"><img data-src="https://s2.loli.net/2024/11/05/WDlPhRfyLEXCmO1.webp" alt="等待刻录完成" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-x25rqcwu2" class="carousel-caption"> </div>
    </div>
  

<h1 id="调整启动顺序"><a href="#调整启动顺序" class="headerlink" title="调整启动顺序"></a>调整启动顺序</h1><p>接下来，我们需要进入BIOS页面调整启动顺序，这是重装过程中难度最高的部分了，完成这一步意味着你的重装成功了80%，步骤如下：</p>
<ol>
<li>不同品牌的主板进入BIOS的快捷键不同，但通常是F2、F10、F12或Del中的一个。开机时不断按下这些快捷键，直到进入BIOS设置页面。</li>
<li>BIOS页面的默认语言通常为英文，进入后使用Tab键切换到<code>Boot</code>子页面。然后，将启动U盘设置为第一启动项（<code>Boot Option 1</code>），具体设置方法会根据设备有所不同。</li>
<li>设置完成后，使用Tab键切换到<code>Save &amp; Exit</code>子页面，选择<code>Save Changes</code>或类似选项，最后按<code>Esc</code>键退出BIOS。此时，可能会弹出确认是否保存更改的提示，选择保存即可。</li>
</ol>
<details class="note success"><summary><p>Surface设备调整启动顺序</p>
</summary>
<p>如果你的设备是Surface（例如我的老古董Surface 3），是无需进入BIOS的，当设备仅插入一块U盘时，Surface会默认将U盘作为首选启动项。具体操作如下：</p>
<ol>
<li>拔掉所有USB设备，别忘了背面那块TF卡。</li>
<li>插入系统U盘。</li>
<li>按住音量下键，同时按一下开机键。</li>
<li>一直保持按住音量下键，直到出现Windows开机时的转圈图标。</li>
<li>系统将进入安装程序，准备开始重装。</li>
<li>安装过程中需要用磁吸键盘及其附带的触控板进行操作，触摸屏以及手写笔因为缺少驱动，在安装过程中无法使用。</li>
</ol>

</details>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>如果不出意外的话，重启后电脑会进入Windows安装程序。接下来的步骤很简单，跟着引导一步一步走就可以，只不过步骤比较多。另外我截取了安装过程中的每一个关键帧，所以就只放图片了，把每一步都写出来的话想想都麻烦。另外部分内容的详细介绍我会放在下面的黄色文本框里。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-zwn052pgm">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="安装程序启动中"><img data-src="https://s2.loli.net/2024/11/06/W72mP8Aoiuyc6nY.webp" alt="安装程序启动中" class="zoomable"></li><li class="splide__slide" data-caption="选择安装使用的语言、时间与地区"><img data-src="https://s2.loli.net/2024/11/06/HXtBLrM5IAihyvQ.webp" alt="选择安装使用的语言、时间与地区" class="zoomable"></li><li class="splide__slide" data-caption="选择输入法"><img data-src="https://s2.loli.net/2024/11/06/ftS3gQPpMUywdnT.webp" alt="选择输入法" class="zoomable"></li><li class="splide__slide" data-caption="选择安装选项（删除资料并全新安装）"><img data-src="https://s2.loli.net/2024/11/06/hGOSfovCLkjTQp5.webp" alt="选择安装选项（删除资料并全新安装）" class="zoomable"></li><li class="splide__slide" data-caption="密钥填写，直接跳过"><img data-src="https://s2.loli.net/2024/11/06/FIkM3NZgbp8BHAw.webp" alt="密钥填写，直接跳过" class="zoomable"></li><li class="splide__slide" data-caption="选择IoT版本"><img data-src="https://s2.loli.net/2024/11/06/1hQgS9eHmBZvJcU.webp" alt="选择IoT版本" class="zoomable"></li><li class="splide__slide" data-caption="接受协议"><img data-src="https://s2.loli.net/2024/11/06/OBU7KHylfhFYbvi.webp" alt="接受协议" class="zoomable"></li><li class="splide__slide" data-caption="（高风险操作）命令行清除硬盘内容，详情请看下面的命令行清除硬盘内容说明"><img data-src="https://s2.loli.net/2024/11/06/UIrTj3Hlxd54kcf.webp" alt="（高风险操作）命令行清除硬盘内容，详情请看下面的命令行清除硬盘内容说明" class="zoomable"></li><li class="splide__slide" data-caption="刷新硬盘列表"><img data-src="https://s2.loli.net/2024/11/06/9Ue5wY7PxtiOl4A.webp" alt="刷新硬盘列表" class="zoomable"></li><li class="splide__slide" data-caption="（高风险操作）创建新分区，详情请看下面的分区说明"><img data-src="https://s2.loli.net/2024/11/06/WXQBDEasUCGMx9I.webp" alt="（高风险操作）创建新分区，详情请看下面的分区说明" class="zoomable"></li><li class="splide__slide" data-caption="（高风险操作）选择分区"><img data-src="https://s2.loli.net/2024/11/06/OcP1A6y9TIjfBGi.webp" alt="（高风险操作）选择分区" class="zoomable"></li><li class="splide__slide" data-caption="开始安装"><img data-src="https://s2.loli.net/2024/11/06/yrGs71WeC4ziQfa.webp" alt="开始安装" class="zoomable"></li><li class="splide__slide" data-caption="安装中，可能会多次重启"><img data-src="https://s2.loli.net/2024/11/06/kAsjCpH31ZuU85t.webp" alt="安装中，可能会多次重启" class="zoomable"></li><li class="splide__slide" data-caption="重启了"><img data-src="https://s2.loli.net/2024/11/06/nJdHUP7qZhvS3gF.webp" alt="重启了" class="zoomable"></li><li class="splide__slide" data-caption="安装中..."><img data-src="https://s2.loli.net/2024/11/06/1Uq8s3RVt6fwgkl.webp" alt="安装中..." class="zoomable"></li><li class="splide__slide" data-caption="安装即将完成"><img data-src="https://s2.loli.net/2024/11/06/eVRIBowjn5OTxlZ.webp" alt="安装即将完成" class="zoomable"></li><li class="splide__slide" data-caption="选择所在国家和地区"><img data-src="https://s2.loli.net/2024/11/06/Qe4rUqAa25PG9v7.webp" alt="选择所在国家和地区" class="zoomable"></li><li class="splide__slide" data-caption="选择键盘排列方式"><img data-src="https://s2.loli.net/2024/11/06/LbsZ1KiVghdeNv6.webp" alt="选择键盘排列方式" class="zoomable"></li><li class="splide__slide" data-caption="添加第二种键盘排列"><img data-src="https://s2.loli.net/2024/11/06/CcJrZ1F6B5Dk3Xl.webp" alt="添加第二种键盘排列" class="zoomable"></li><li class="splide__slide" data-caption="添加简体中文键盘排列"><img data-src="https://s2.loli.net/2024/11/06/GNw6h5MixUkKvJj.webp" alt="添加简体中文键盘排列" class="zoomable"></li><li class="splide__slide" data-caption="添加微软拼音输入法"><img data-src="https://s2.loli.net/2024/11/06/A2qr9jkolXREsg3.webp" alt="添加微软拼音输入法" class="zoomable"></li><li class="splide__slide" data-caption="连接WiFi，如果你的电脑接入了网线则没有这两步"><img data-src="https://s2.loli.net/2024/11/06/YG5dE6XUgLBeWz8.webp" alt="连接WiFi，如果你的电脑接入了网线则没有这两步" class="zoomable"></li><li class="splide__slide" data-caption="连接WiFi成功后继续安装"><img data-src="https://s2.loli.net/2024/11/06/lvBGXgYJVj8D4uf.webp" alt="连接WiFi成功后继续安装" class="zoomable"></li><li class="splide__slide" data-caption="检查更新"><img data-src="https://s2.loli.net/2024/11/06/vgHsmN8SpfxPXCk.webp" alt="检查更新" class="zoomable"></li><li class="splide__slide" data-caption="可能再次重启"><img data-src="https://s2.loli.net/2024/11/06/dE9cFUg1tWS42GH.webp" alt="可能再次重启" class="zoomable"></li><li class="splide__slide" data-caption="更改登录方式，企业版系统不能使用微软个人账号登录"><img data-src="https://s2.loli.net/2024/11/06/LY5hqoVrfHpSXJn.webp" alt="更改登录方式，企业版系统不能使用微软个人账号登录" class="zoomable"></li><li class="splide__slide" data-caption="选择域加入，也就是创建本地账户，安装完成后可以替换成微软个人账户"><img data-src="https://s2.loli.net/2024/11/06/BlwKtMk1C5sOgmY.webp" alt="选择域加入，也就是创建本地账户，安装完成后可以替换成微软个人账户" class="zoomable"></li><li class="splide__slide" data-caption="输入用户名，建议使用全英文字母"><img data-src="https://s2.loli.net/2024/11/06/PxuntjBMpZyGq85.webp" alt="输入用户名，建议使用全英文字母" class="zoomable"></li><li class="splide__slide" data-caption="输入密码，不想要密码就空着不填，直接点下一步"><img data-src="https://s2.loli.net/2024/11/06/3t7vYjoe2ERTyLJ.webp" alt="输入密码，不想要密码就空着不填，直接点下一步" class="zoomable"></li><li class="splide__slide" data-caption="确认密码"><img data-src="https://s2.loli.net/2024/11/06/l4uzFRD7QGmhAnU.webp" alt="确认密码" class="zoomable"></li><li class="splide__slide" data-caption="没有卵用的安全问题，胡乱填胡乱选"><img data-src="https://s2.loli.net/2024/11/06/8UEQ1yMHaBcLq67.webp" alt="没有卵用的安全问题，胡乱填胡乱选" class="zoomable"></li><li class="splide__slide" data-caption="第二个没有卵用的安全问题"><img data-src="https://s2.loli.net/2024/11/06/QShzGoWVI6PB1lM.webp" alt="第二个没有卵用的安全问题" class="zoomable"></li><li class="splide__slide" data-caption="最后一个没有卵用的安全问题"><img data-src="https://s2.loli.net/2024/11/06/8WrIMvNhznyTlGE.webp" alt="最后一个没有卵用的安全问题" class="zoomable"></li><li class="splide__slide" data-caption="隐私选项1，建议只保留位置选项"><img data-src="https://s2.loli.net/2024/11/06/OLXV31Pf67scQph.webp" alt="隐私选项1，建议只保留位置选项" class="zoomable"></li><li class="splide__slide" data-caption="隐私选项2，关掉"><img data-src="https://s2.loli.net/2024/11/06/zgeDkV1iSLR6txl.webp" alt="隐私选项2，关掉" class="zoomable"></li><li class="splide__slide" data-caption="隐私选项3，同样关掉"><img data-src="https://s2.loli.net/2024/11/06/RmWsnUOoGfTA7DP.webp" alt="隐私选项3，同样关掉" class="zoomable"></li><li class="splide__slide" data-caption="检查系统更新"><img data-src="https://s2.loli.net/2024/11/06/EQhWxiRnotqzfgD.webp" alt="检查系统更新" class="zoomable"></li><li class="splide__slide" data-caption="下载系统更新"><img data-src="https://s2.loli.net/2024/11/06/yM12vLztBwmRXdG.webp" alt="下载系统更新" class="zoomable"></li><li class="splide__slide" data-caption="安装系统更新"><img data-src="https://s2.loli.net/2024/11/06/TKXYL6NaoPMzCte.webp" alt="安装系统更新" class="zoomable"></li><li class="splide__slide" data-caption="重启并完成系统更新"><img data-src="https://s2.loli.net/2024/11/06/3Pt7cvgi86uLdFa.webp" alt="重启并完成系统更新" class="zoomable"></li><li class="splide__slide" data-caption="系统更新安装完成，进入登录页面"><img data-src="https://s2.loli.net/2024/11/06/fYCakens3mlbtrH.webp" alt="系统更新安装完成，进入登录页面" class="zoomable"></li><li class="splide__slide" data-caption="初始化"><img data-src="https://s2.loli.net/2024/11/06/65kz8jSN3dx2H7q.webp" alt="初始化" class="zoomable"></li><li class="splide__slide" data-caption="再等一会"><img data-src="https://s2.loli.net/2024/11/06/vpDUK1bg8SCh7kV.webp" alt="再等一会" class="zoomable"></li><li class="splide__slide" data-caption="同意数据跨境传输"><img data-src="https://s2.loli.net/2024/11/06/xXwegpNvLo6KZOC.webp" alt="同意数据跨境传输" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-zwn052pgm" class="carousel-caption"> </div>
    </div>
  

<details class="note warning"><summary><p>命令行清除硬盘内容说明</p>
</summary>
<p>这部分内容适合强迫症，比如我，每次重装我都会格式化所有硬盘。</p>
<p><strong>如果你的电脑安装了多块硬盘，或者只有一块物理硬盘分了多个分区，但是你只想格式化C盘，请不要是使用此方法！</strong></p>
<ol>
<li>在选择安装位置页面（Select location to install Windows 11）通过<code>Shift</code>+<code>F10</code>快捷键（部分设备可能需要结合<code>Fn</code>键）打开<code>cmd</code>窗口。</li>
<li>输入<code>diskpart</code>并回车。</li>
<li>使用<code>list disk</code>命令列出已挂载的硬盘。</li>
<li>使用<code>select disk [编号]</code>命令，选择根据实际情况选择硬盘。<ul>
<li>我这里是虚拟机里安装的，所以只有一个硬盘，也就是Disk 0，所以我这里输入的命令就是<code>select disk 0</code>。</li>
<li>正常情况系统会列出至少两个硬盘（U盘和电脑的主硬盘），你电脑上插了多少物理硬盘这里就有多少个，注意不要选错成U盘。可以根据硬盘大小来分辨。</li>
<li>请注意这里选择的是物理层面上的硬盘，即使你的一块硬盘有多个分区，也会被视为同一块硬盘！</li>
</ul>
</li>
<li>输入<code>clean</code>并回车，抹除已选择硬盘上的全部内容。</li>
<li>输入<code>convert gpt</code>并回车，将硬盘转换为GPT格式。</li>
<li>再次使用<code>list disk</code>命令，检查硬盘状况。</li>
</ol>

</details>

<details class="note warning"><summary><p>分区说明</p>
</summary>
<p>如果你前面使用命令行清除了硬盘内容，那么直接跟随图片进行操作，选择主硬盘并创建新分区。</p>
<p>在未分区的硬盘上执行第一次创建新分区操作时，会默认将磁盘分为三部分，即：</p>
<ul>
<li>100MB的系统分区（System），用于EFI引导</li>
<li>几百MB的恢复分区（MSR(Reversed)）</li>
<li>最大的主分区（Primary），系统最终要安装到的分区，也就是C盘。选中它并点击<code>Next</code>来开始系统安装。</li>
</ul>
<p>你可以在这里完成其他硬盘的分区，也可以等系统安装完成后使用磁盘工具进行分区。</p>
<p>如果你没有通过命令行清除硬盘，那么请选择你原来系统的C盘分区，然后格式化它（<code>Format Partiton</code>）</p>

</details>

<h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>以下是两种激活方式，使用它们激活的系统在法律层面上并不属于正版，去官网买的Key才算法律层面的正版，微软只是对这种行为睁一只眼闭一只眼罢了，以下内容仅供测试使用。</p>
<p>首先右键单击任务栏上的开始菜单按钮（Windows图标），打开<code>Windows Powershell（管理员）</code>。</p>
<p>在激活之前，先查看一下PowerShell的执行策略：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">get-executionpolicy</span><br></pre></td></tr></table></figure>

<p>如果返回值是<code>Restricted</code>，则需要更改执行策略，否则脚本可能无法执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>

<p>最后输入<code>a</code>并回车确认更改。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-c4emk4z76">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="右键单击任务栏上的开始菜单按钮（Windows图标）"><img data-src="https://s2.loli.net/2024/11/07/ihq5tQBysETFMJV.webp" alt="右键单击任务栏上的开始菜单按钮（Windows图标）" class="zoomable"></li><li class="splide__slide" data-caption="打开Windows Powershell（管理员）"><img data-src="https://s2.loli.net/2024/11/07/FwcdEOVel4Abtui.webp" alt="打开Windows Powershell（管理员）" class="zoomable"></li><li class="splide__slide" data-caption="查看及更改PowerShell的执行策略"><img data-src="https://s2.loli.net/2024/11/07/XNSYqR5lpEzPwg9.webp" alt="查看及更改PowerShell的执行策略" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-c4emk4z76" class="carousel-caption"> </div>
    </div>
  

<details class="note primary"><summary><p>关于PowerShell的执行策略</p>
</summary>
<blockquote>
<p>以下内容来自ChatGPT</p>
</blockquote>
<p>PowerShell 的执行策略（Execution Policy）是一个安全功能，用于控制在 Windows 上运行脚本的权限和行为。执行策略限制了脚本和配置文件的执行，帮助防止恶意脚本或未经授权的代码在系统上运行。执行策略本身并不是真正的安全措施，它只是一个控制脚本运行的机制，并不防止恶意脚本的执行，更多的是用于帮助用户避免不小心运行不受信任的脚本。</p>
<p>PowerShell 有几种执行策略级别，每个级别的权限和限制不同。常见的执行策略如下：</p>
<ol>
<li><strong>Restricted（默认设置）</strong>：<ul>
<li><strong>描述</strong>：这是 PowerShell 默认的执行策略。在此模式下，不允许运行任何脚本，只有 PowerShell 命令和函数（命令行输入）可以运行。用户可以在交互模式下执行命令，但不能直接执行 <code>.ps1</code> 脚本文件。</li>
<li><strong>适用场景</strong>：最安全的设置，防止任何脚本或自动化程序运行。</li>
</ul>
</li>
<li><strong>AllSigned</strong>：<ul>
<li><strong>描述</strong>：要求所有脚本和配置文件（包括你自己的脚本）都必须由受信任的发布者进行数字签名才能执行。即使是本地脚本，也需要签名，否则会被阻止执行。</li>
<li><strong>适用场景</strong>：对于需要执行的脚本进行强控制，并确保所有脚本都是由受信任的开发者签名。</li>
</ul>
</li>
<li><strong>RemoteSigned</strong>：<ul>
<li><strong>描述</strong>：要求从 Internet 下载的脚本必须由受信任的发布者签名，才能执行。对于本地创建的脚本（没有下载自网络），不需要签名。</li>
<li><strong>适用场景</strong>：这是一个常用的设置，允许本地脚本自由运行，但从 Internet 下载的脚本需要签名验证。</li>
</ul>
</li>
<li><strong>Unrestricted</strong>：<ul>
<li><strong>描述</strong>：允许执行任何脚本，无论是否签名。对于从 Internet 下载的脚本，用户会看到警告提示，但仍然可以执行。这个设置没有签名验证限制，因此安全性较低。</li>
<li><strong>适用场景</strong>：适用于不考虑安全性或信任所有脚本来源的环境。</li>
</ul>
</li>
<li><strong>Bypass</strong>：<ul>
<li><strong>描述</strong>：没有任何限制，所有脚本都被允许执行，完全绕过了所有的执行策略检查。此策略适用于某些自动化任务，或者需要在没有任何安全警告或提示的情况下运行脚本。</li>
<li><strong>适用场景</strong>：通常用于特定的自动化或测试环境，但因为安全性最低，通常不建议在生产环境中使用。</li>
</ul>
</li>
<li><strong>Undefined</strong>：<ul>
<li><strong>描述</strong>：表示没有为此作用域（如用户、计算机、会话等）设置执行策略。如果某个作用域的执行策略是 “Undefined”，则会继承父作用域的设置。</li>
<li><strong>适用场景</strong>：这种状态表示执行策略没有设置。如果系统的所有作用域都是 “Undefined”，则 PowerShell 会使用默认策略（通常是 Restricted）。</li>
</ul>
</li>
</ol>

</details>

<h2 id="MAS-PowerShell-脚本激活"><a href="#MAS-PowerShell-脚本激活" class="headerlink" title="MAS PowerShell 脚本激活"></a>MAS PowerShell 脚本激活</h2><p><a href="https://massgrave.dev/">Microsoft Activation Scripts (MAS)</a>是一组由第三方开发的开源自动化脚本，用于 Windows 和 Office 的激活。它们通常用于绕过正版验证，或在没有合适的正式密钥的情况下激活 Windows 或 Office 产品。</p>
<p>在 Powershell 中执行下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">irm https://get.activated.win | iex</span><br></pre></td></tr></table></figure>

<p>由于<code>get.activated.win</code>是一个新域名，可能会被ISP或DNS阻断，如果Powershell报错无法连接的话，就用下面这个命令代替，不过需要注意的是这个命令随时可能被废弃。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">irm https://massgrave.dev/get | iex</span><br></pre></td></tr></table></figure>

<p>然后在弹出的新窗口中输入<code>1</code>进行HWID数字许可证激活。等到脚本执行完成后，按任意键退出脚本。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-4t8nqmdec">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="Powershell可能报错无法连接"><img data-src="https://s2.loli.net/2024/11/07/vROeDrC2h5oqZwz.webp" alt="Powershell可能报错无法连接" class="zoomable"></li><li class="splide__slide" data-caption="在弹出的新窗口中输入1进行HWID数字许可证激活"><img data-src="https://s2.loli.net/2024/11/07/B5m8LEYxzI6AXo9.webp" alt="在弹出的新窗口中输入1进行HWID数字许可证激活" class="zoomable"></li><li class="splide__slide" data-caption="等待脚本执行完成后，按任意键退出脚本"><img data-src="https://s2.loli.net/2024/11/07/yMIjS1TXtuOnwYc.webp" alt="等待脚本执行完成后，按任意键退出脚本" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-4t8nqmdec" class="carousel-caption"> </div>
    </div>
  

<details class="note primary"><summary><p>命令解释</p>
</summary>
<blockquote>
<p>以下内容来自ChatGPT</p>
</blockquote>
<p>上述 PowerShell 命令包含两个部分，它们通过管道 <code>|</code> 链接在一起。整个命令的作用是从一个远程 URL 下载脚本，并将其直接执行。具体来说：</p>
<ol>
<li><code>irm https://get.activated.win</code>：<ul>
<li><code>irm</code> 是 <code>Invoke-RestMethod</code> 的缩写，它是 PowerShell 中的一个命令，用于从指定的 URL 下载数据（通常是 JSON、XML、文本等格式的响应）。它是一个类似 <code>curl</code> 或 <code>wget</code> 的工具，但用于 PowerShell 环境中。</li>
<li>这里的 URL <code>https://get.activated.win</code> 是一个远程网站地址，命令会尝试访问该网站并下载数据。通常，这种数据是一个 PowerShell 脚本，或者是其他可以被 PowerShell 处理的内容。</li>
</ul>
</li>
<li><code>|</code>（管道符号）：<ul>
<li>管道符号 <code>|</code> 将 <code>irm</code> 命令的输出传递给 <code>iex</code> 命令作为输入。即将从 URL 下载的数据传递给 <code>iex</code> 命令。</li>
</ul>
</li>
<li><code>iex</code>：<ul>
<li><code>iex</code> 是 <code>Invoke-Expression</code> 的缩写，它用于执行传递给它的字符串作为 PowerShell 命令。换句话说，<code>iex</code> 会将它接收到的内容（在这里是通过 <code>irm</code> 下载的内容）当作 PowerShell 代码来执行。</li>
</ul>
</li>
</ol>
<p>总之，这条命令会从 URL <code>https://get.activated.win</code> 下载内容，并将下载的内容（应该是一个 PowerShell 脚本）直接传递给 <code>iex</code> 执行。通常，这样的脚本会在后台执行某些操作，比如激活软件、安装某些程序，或者修改系统设置等。</p>

</details>

<p>如果你无法成功执行上面的命令，还可以直接从GitHub下载脚本源文件，在本地直接执行。步骤如下：</p>
<ol>
<li>首先访问<a href="https://github.com/massgravel/Microsoft-Activation-Scripts">MAS脚本的GitHub仓库</a>，然后点击右上角的<code>Code</code>按钮，选择<code>Download ZIP</code>来下载压缩文件。</li>
<li>Edge浏览器可能提醒是否下载及保留文件，确认保留。</li>
<li>下载完成解压文件，然后打开<code>./Microsoft-Activation-Scripts-master/MAS/All-In-One-Version-KL</code>目录。</li>
<li>右键单击<code>MAS_AIO.cmd</code>并选择<code>Run as administrator</code>。</li>
<li>然后在弹出的新窗口中输入<code>1</code>进行HWID数字许可证激活。</li>
<li>等待脚本执行完成后，按任意键退出脚本。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-bvljghle9">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="访问MAS脚本的GitHub仓库，然后点击右上角的Code按钮，选择Download ZIP来下载压缩文件"><img data-src="https://s2.loli.net/2024/11/07/dQ9uFCxNDKU7GpW.webp" alt="访问MAS脚本的GitHub仓库，然后点击右上角的Code按钮，选择Download ZIP来下载压缩文件" class="zoomable"></li><li class="splide__slide" data-caption="保留文件"><img data-src="https://s2.loli.net/2024/11/07/EBJNXQaHDzZY9x1.webp" alt="保留文件" class="zoomable"></li><li class="splide__slide" data-caption="确认保留文件"><img data-src="https://s2.loli.net/2024/11/07/B8TjLolkxWFJbn5.webp" alt="确认保留文件" class="zoomable"></li><li class="splide__slide" data-caption="下载完成解压文件，然后打开All-In-One-Version-KL目录，右键单击MAS_AIO.cmd并选择Run as administrator"><img data-src="https://s2.loli.net/2024/11/07/mxhRKLkOdr9CNIQ.webp" alt="下载完成解压文件，然后打开All-In-One-Version-KL目录，右键单击MAS_AIO.cmd并选择Run as administrator" class="zoomable"></li><li class="splide__slide" data-caption="在弹出的新窗口中输入1进行HWID数字许可证激活"><img data-src="https://s2.loli.net/2024/11/07/B5m8LEYxzI6AXo9.webp" alt="在弹出的新窗口中输入1进行HWID数字许可证激活" class="zoomable"></li><li class="splide__slide" data-caption="等待脚本执行完成后，按任意键退出脚本"><img data-src="https://s2.loli.net/2024/11/07/yMIjS1TXtuOnwYc.webp" alt="等待脚本执行完成后，按任意键退出脚本" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-bvljghle9" class="carousel-caption"> </div>
    </div>
  

<h2 id="KMS-激活"><a href="#KMS-激活" class="headerlink" title="KMS 激活"></a>KMS 激活</h2><p>如果MAS脚本无法激活你的系统，你还可以尝试更传统的KMS激活。KMS全称Key Management Service，主要用于企业内的计算机批量激活，激活有效期为180天，但是可以设置自动续期。</p>
<p>激活方式如下：</p>
<ol>
<li>右键单击任务栏上的开始菜单按钮（Windows图标），打开<code>Windows Powershell（管理员）</code>。然后依次输入下面的命令并回车，激活需要网络连接，后两个命令执行后会有激活信息弹窗，点确定即可。</li>
<li>设置KMS服务器 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slmgr -skms kms.03k.org</span><br></pre></td></tr></table></figure></li>
<li>设置密钥，如果你安装的是其他版本，请替换密钥 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slmgr -ipk KBN8V-HFGQ4-MGXVD-347P6-PDQGT</span><br></pre></td></tr></table></figure></li>
<li>启动 Windows 激活 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slmgr -ato</span><br></pre></td></tr></table></figure></li>
<li>（可选）显示详细的许可证和激活信息 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">slmgr -dlv</span><br></pre></td></tr></table></figure></li>
</ol>
<details class="note default"><summary><p>slmgr KMS密钥</p>
</summary>
<p>相应版本的密钥如下，Win11和Win10的密钥一样，没有变，更多KMS密钥请到<a href="https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys"><strong>微软官方文档</strong></a>查找，其中版本后缀有N的为欧洲专供版，后缀有G的为政府专供版，不过这些和一般用户没啥关系。</p>
<table>
<thead>
<tr>
<th align="left">操作系统版本</th>
<th align="left">KMS 客户端安装程序密钥</th>
</tr>
</thead>
<tbody><tr>
<td align="left">专业版</td>
<td align="left">W269N-WFGWX-YVC9B-4J6C9-T83GX</td>
</tr>
<tr>
<td align="left">专业版 N</td>
<td align="left">MH37W-N47XK-V7XM9-C7227-GCQG9</td>
</tr>
<tr>
<td align="left">专业工作站版</td>
<td align="left">NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J</td>
</tr>
<tr>
<td align="left">专业工作站版 N</td>
<td align="left">9FNHH-K3HBT-3W4TD-6383H-6XYWF</td>
</tr>
<tr>
<td align="left">专业教育版</td>
<td align="left">6TP4R-GNPTD-KYYHQ-7B7DP-J447Y</td>
</tr>
<tr>
<td align="left">专业教育版 N</td>
<td align="left">YVWGF-BXNMC-HTQYQ-CPQ99-66QFC</td>
</tr>
<tr>
<td align="left">教育版</td>
<td align="left">NW6C2-QMPVW-D7KKK-3GKT6-VCFB2</td>
</tr>
<tr>
<td align="left">教育版 N</td>
<td align="left">2WH4N-8QGBV-H22JP-CT43Q-MDWWJ</td>
</tr>
<tr>
<td align="left">企业版</td>
<td align="left">NPPR9-FWDCX-D2C8J-H872K-2YT43</td>
</tr>
<tr>
<td align="left">企业版 N</td>
<td align="left">DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4</td>
</tr>
<tr>
<td align="left">企业版 G</td>
<td align="left">YYVX9-NTFWV-6MDM3-9PT4T-4M68B</td>
</tr>
<tr>
<td align="left">企业版 G N</td>
<td align="left">44RPN-FTY23-9VTTB-MP9BX-T84FV</td>
</tr>
<tr>
<td align="left">企业版 LTSC 2024&#x2F;2021&#x2F;2019</td>
<td align="left">M7XTQ-FN8P6-TTKYV-9D4CC-J462D</td>
</tr>
<tr>
<td align="left">企业版 N LTSC 2024&#x2F;2021&#x2F;2019</td>
<td align="left">92NFX-8DJQP-P6BBQ-THF9C-7CG2H</td>
</tr>
<tr>
<td align="left">IoT 企业版 LTSC 2024&#x2F;21</td>
<td align="left">KBN8V-HFGQ4-MGXVD-347P6-PDQGT</td>
</tr>
<tr>
<td align="left">Server 2025 标准</td>
<td align="left">TVRH6-WHNXV-R9WG3-9XRFY-MY832</td>
</tr>
<tr>
<td align="left">Server 2025 数据中心</td>
<td align="left">D764K-2NDRG-47T6Q-P8T8W-YP6DF</td>
</tr>
</tbody></table>

</details>

<details class="note primary"><summary><p>slmgr 命令</p>
</summary>
<blockquote>
<p>以下内容来自ChatGPT</p>
</blockquote>
<p>在 Windows 操作系统中，<code>slmgr</code>（Software Licensing Management Tool）是一个命令行工具，通常用于管理和配置 Windows 的激活和许可证信息。你提到的四个命令与 KMS（Key Management Service）激活相关，下面是每个命令的详细解释：</p>
<ol>
<li><code>slmgr -skms kms.03k.org</code><ul>
<li><strong>作用</strong>：这个命令将 Windows 激活服务器的地址设置为 <code>kms.03k.org</code>，也就是说，指定 KMS 服务器的地址。</li>
<li><strong>解释</strong>：<ul>
<li><code>-skms</code> 是用来指定 KMS 服务器地址的参数。</li>
<li><code>kms.03k.org</code> 是你指定的 KMS 服务器域名。通过这个服务器，Windows 系统将与该服务器通信并进行激活。</li>
</ul>
</li>
<li>这个命令的目的是告诉操作系统，接下来应该通过该 KMS 服务器来进行激活。</li>
</ul>
</li>
<li><code>slmgr -ipk 相应版本的密钥</code><ul>
<li><strong>作用</strong>：这个命令用于输入 Windows 的产品密钥（Product Key）。</li>
<li><strong>解释</strong>：<ul>
<li><code>-ipk</code> 是用来安装产品密钥的参数。</li>
<li><code>相应版本的密钥</code> 需要替换成你想要激活的 Windows 版本的密钥（如 Windows 10 Professional 的密钥）。</li>
</ul>
</li>
<li>使用此命令将指定的密钥安装到系统中，以便在激活时使用。对于 KMS 激活，通常会输入与特定版本 Windows 对应的 KMS 激活密钥。</li>
</ul>
</li>
<li><code>slmgr -ato</code><ul>
<li><strong>作用</strong>：这个命令用于启动 Windows 激活。</li>
<li><strong>解释</strong>：<ul>
<li><code>-ato</code> 是自动激活的命令参数，表示立即使用设置的 KMS 服务器来激活操作系统。</li>
</ul>
</li>
<li>这个命令会促使 Windows 系统尝试与 KMS 服务器连接，并进行激活。如果 KMS 服务器和密钥设置正确，激活会成功。</li>
</ul>
</li>
<li><code>slmgr -dlv</code><ul>
<li><strong>作用</strong>：这个命令显示详细的许可证和激活信息。</li>
<li><strong>解释</strong>：<ul>
<li><code>-dlv</code> 是用来显示详细信息的参数。</li>
</ul>
</li>
<li>执行此命令后，Windows 会显示有关当前操作系统许可证的详细信息，包括激活状态、许可证类型、KMS 服务器信息、到期时间等。这对于检查激活是否成功或获取有关系统激活状态的更多细节非常有用。</li>
</ul>
</li>
</ol>

</details>

<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>使用<code>Windows</code>+<code>I</code>组合键打开设置。</p>
<h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>在进行更多设置前，先把语言更改为中文：</p>
<ol>
<li>点击左侧边栏中的<code>Time &amp; language</code>选项，然后点击右侧的<code>Language &amp; region</code>。</li>
<li>点击Chinese项后面的三个小圆点，在菜单中选择<code>Language options</code>。</li>
<li>点击<code>Language pack</code>后面的<code>Download</code>按钮来下载语言包。</li>
<li>回退到<code>Language &amp; region</code>页面，将<code>Windows display language</code>切换为<code>中文（中华人民共和国）</code>。</li>
<li>重启，虽然系统提示注销，但是我在注销后遇到了中英文混杂的Bug。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-y88l3o8y0">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="点击左侧边栏中的Time & language选项，然后点击右侧的Language & region"><img data-src="https://s2.loli.net/2024/11/07/eXu2U1fNZlFskaR.webp" alt="点击左侧边栏中的Time & language选项，然后点击右侧的Language & region" class="zoomable"></li><li class="splide__slide" data-caption="点击Chinese项后面的三个小圆点，在菜单中选择Language options"><img data-src="https://s2.loli.net/2024/11/07/4NFhq5PsRaeHjoY.webp" alt="点击Chinese项后面的三个小圆点，在菜单中选择Language options" class="zoomable"></li><li class="splide__slide" data-caption="点击Language pack后面的Download按钮来下载语言包"><img data-src="https://s2.loli.net/2024/11/07/yqXGAlZKzfwe1HJ.webp" alt="点击Language pack后面的Download按钮来下载语言包" class="zoomable"></li><li class="splide__slide" data-caption="回退到Language & region页面，将Windows display language切换为中文（中华人民共和国）"><img data-src="https://s2.loli.net/2024/11/07/oyin6A4BzeKOCjT.webp" alt="回退到Language & region页面，将Windows display language切换为中文（中华人民共和国）" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-y88l3o8y0" class="carousel-caption"> </div>
    </div>
  

<h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h2><p>默认情况下桌面上只有回收站一个图标，这里我将计算机（也就是我的电脑）的图标添加到桌面上：</p>
<ol>
<li>点击左侧边栏中的<code>个性化</code>选项。</li>
<li>打开<code>主题</code>设置。</li>
<li>点击<code>桌面图标设置</code>。</li>
<li>勾选<code>计算机</code>。</li>
<li><code>确定</code>更改。</li>
</ol>
<p>然后再将设置、文件资源管理器等图标添加到开始菜单中：</p>
<ol>
<li>切换到<code>开始</code>设置</li>
<li>点击最下面的<code>文件夹</code></li>
<li>打开相关选项的开关</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-6954t0w4x">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="添加桌面图标"><img data-src="https://s2.loli.net/2024/11/07/Scts5awfVrAbD4J.webp" alt="添加桌面图标" class="zoomable"></li><li class="splide__slide" data-caption="添加开始菜单图标"><img data-src="https://s2.loli.net/2024/11/07/8dzC9QJthfbxWL6.webp" alt="添加开始菜单图标" class="zoomable"></li><li class="splide__slide" data-caption="开始菜单图标展示"><img data-src="https://s2.loli.net/2024/11/07/NnTbpHXtK3wQxIG.webp" alt="开始菜单图标展示" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-6954t0w4x" class="carousel-caption"> </div>
    </div>
  

<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>最后后建议到<code>设置</code>-<code>Windows更新</code>-<code>检查更新</code>中手动检查一次更新，等待所有更新安装完成后点击下面出现的<code>立即重启</code>。此过程耗时较长，取决于网速与电脑性能。另外系统会自动在后台安装驱动，如果当前屏幕分辨率很怪的话不用担心，过一会安装完显卡驱动就正常了。</p>
<h1 id="硬盘分区"><a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h1><p>如果你在安装系统时还留有没分区的硬盘，那么此时可以使用磁盘管理工具进行分区。</p>
<p>首先右键单击任务栏上的开始菜单按钮（Windows图标），打开<code>磁盘管理</code>。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-i4mbmm8yf">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="右键单击任务栏上的开始菜单按钮（Windows图标），打开磁盘管理"><img data-src="https://s2.loli.net/2024/11/07/nU7jfQ1cWKw36ld.webp" alt="右键单击任务栏上的开始菜单按钮（Windows图标），打开磁盘管理" class="zoomable"></li><li class="splide__slide" data-caption="磁盘管理工具"><img data-src="https://s2.loli.net/2024/11/07/lIOGULTjqVz8dYK.webp" alt="磁盘管理工具" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-i4mbmm8yf" class="carousel-caption"> </div>
    </div>
  

<h2 id="创建新分区"><a href="#创建新分区" class="headerlink" title="创建新分区"></a>创建新分区</h2><p>如果磁盘上有黑色的未分配的空间，你可以创建一个新的分区：</p>
<ol>
<li>右键单击黑色的<code>未分配</code>空间。</li>
<li>选择<code>新建简单卷</code>，然后跟随向导进行设置。</li>
<li>选择分区的大小（可以选择最大容量或手动设置，单位是MB，1GB &#x3D; 1024MB），点击<code>下一步</code>。</li>
<li>选择盘符（例如D:或 E:），然后点击<code>下一步</code>。</li>
<li>选择分区格式，保持默认，即NTFS格式+快速格式化。点击<code>下一步</code>。</li>
<li>完成设置后点击 <code>完成</code>。系统将开始创建新的分区。</li>
</ol>
<p>如果你的固态硬盘小于512G，没啥必要多分区。另外在基本磁盘上创建新分区时，会将前三个分区格式化为主分区。从第四个分区开始，每一个分区会配置为扩展分区内的逻辑驱动器。</p>
<h2 id="删除分区"><a href="#删除分区" class="headerlink" title="删除分区"></a>删除分区</h2><p>如果你想删除现有的分区并释放空间（注意，删除分区会丢失所有数据），可以按以下步骤操作：</p>
<ol>
<li>右键点击你要删除的分区。</li>
<li>选择<code>删除卷</code>。</li>
<li>在弹出的确认窗口中，点击<code>是</code>进行确认。</li>
<li>删除后，空间将变为黑色的<code>未分配</code>，可以用来创建新的分区。</li>
</ol>
<h2 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h2><p>格式化一个分区会清除其中的所有数据并重新建立文件系统:</p>
<ol>
<li>右键点击你要格式化的分区。</li>
<li>选择 <code>格式化</code>。</li>
<li>保持默认选项。</li>
<li>点击 <code>确定</code> 进行格式化。</li>
</ol>
<h2 id="扩展分区"><a href="#扩展分区" class="headerlink" title="扩展分区"></a>扩展分区</h2><p>如果某个分区的空间快用完了，但磁盘上有未分配的空间，可以通过扩展分区来增加容量：</p>
<ol>
<li>右键点击你要扩展的分区。</li>
<li>选择 <code>扩展卷</code>。</li>
<li>在弹出的向导中，选择要分配的空间量（默认情况下是最大可用空间）。</li>
<li>点击 <code>下一步</code>，然后点击 <code>完成</code>。</li>
</ol>
<h2 id="压缩分区"><a href="#压缩分区" class="headerlink" title="压缩分区"></a>压缩分区</h2><p>如果你想缩小分区，可以通过压缩分区来实现：</p>
<ol>
<li>右键点击你要压缩的分区。</li>
<li>选择 <code>压缩卷</code>。</li>
<li>输入压缩的空间量。</li>
<li>点击 <code>压缩</code>。压缩后的空间将变为黑色的<code>未分配</code>状态。</li>
</ol>
<h2 id="更改盘符和路径"><a href="#更改盘符和路径" class="headerlink" title="更改盘符和路径"></a>更改盘符和路径</h2><p>你可以为分区分配一个不同的字母：</p>
<ol>
<li>右键点击分区或驱动器。</li>
<li>选择 <code>更改驱动器字母和路径</code>。</li>
<li>在弹出的窗口中，选择 <code>更改</code>，然后选择新的字母。</li>
<li>点击 <code>确定</code>。</li>
</ol>
<h1 id="安装微软应用商店"><a href="#安装微软应用商店" class="headerlink" title="安装微软应用商店"></a>安装微软应用商店</h1><p>LTSC版本是不含微软应用商店的，需要手动安装。</p>
<ol>
<li>首先直接下载<code>LTSC-Add-MicrosoftStore</code>项目提供的安装包。<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>LTSC-Add-MicrosoftStore 的GitHub仓库</p><p>Add Windows Store to Windows 11 24H2 LTSC</p>
<a href="https://github.com/minihub/LTSC-Add-MicrosoftStore"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>直接下载</p><p>直接下载微软应用商店安装包</p>
<a href="https://github.com/minihub/LTSC-Add-MicrosoftStore/releases/download/LTSC-Add-MicrosoftStore-24H2/LTSC-Add-MicrosoftStore-24H2.zip"></a>
</div></div></li>
<li>解压后打开文件夹。</li>
<li>右键以管理员身份运行<code>Add-Store</code>脚本。</li>
<li>安装过程中可能出现几个无法安装的报错，属于正常现象，因为有部分组件已经预装在系统上了，版本冲突自然无法安装。</li>
<li>安装完成后按任意键退出脚本。</li>
<li>项目的还提供了一些商店内应用的离线安装包，按需下载，双击即可安装。</li>
<li>LTSC还缺少一些媒体扩展包，比如查看webp图像的包，可以直接在商店中搜索安装：<ul>
<li>MPEG-2 视频扩展</li>
<li>VP9 视频扩展</li>
<li>原始图像扩展</li>
<li>Web 媒体扩展</li>
<li>HEIF图像扩展</li>
<li>Webp图像扩展</li>
</ul>
</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-2b17binhb">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="右键以管理员身份运行Add-Store脚本"><img data-src="https://s2.loli.net/2024/11/07/KuYV3iTRqwtjfdQ.webp" alt="右键以管理员身份运行Add-Store脚本" class="zoomable"></li><li class="splide__slide" data-caption="安装过程中可能出现几个无法安装的报错，属于正常现象"><img data-src="https://s2.loli.net/2024/11/07/GMANhIYmrtQRspZ.webp" alt="安装过程中可能出现几个无法安装的报错，属于正常现象" class="zoomable"></li><li class="splide__slide" data-caption="商店内应用的离线安装包"><img data-src="https://s2.loli.net/2024/11/07/tUn1VIpRTSWAYQd.webp" alt="商店内应用的离线安装包" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-2b17binhb" class="carousel-caption"> </div>
    </div>
  

<h1 id="Office-LTSC-2024"><a href="#Office-LTSC-2024" class="headerlink" title="Office LTSC 2024"></a>Office LTSC 2024</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>我安装的Office也同样是LTSC版本，步骤如下：</p>
<ol>
<li>首先下载安装工具 Office Tool Plus。<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/download.webp"></object>
<p>Office Tool Plus</p><p>下载 Office Tool Plus</p>
<a href="https://otp.landian.vip/zh-cn/download.html"></a>
</div></div></li>
<li>解压后打开文件夹，右键以管理员身份运行<code>Office Tool Plus</code>应用程序。</li>
<li>点击<code>是</code>同意许可条款。</li>
<li>点击左侧边栏中的<code>部署</code>标签。</li>
<li>将体系结构设置为<code>64位</code>。</li>
<li>更新通道按需选择，这里我设置的是<code>Office 2024 企业长期版</code>。</li>
<li>选择是否<code>创建桌面快捷方式</code>。</li>
<li>点击<code>选择产品</code>按钮。</li>
<li>输入<code>LTSC 2024</code>进行搜索。</li>
<li>选择<code>Office LTSC 专业增强版 2024 - 批量许可证</code>。</li>
<li>点击<code>确定</code>。</li>
<li>选择需要安装的应用程序。</li>
<li>点击<code>添加语言</code>按钮。</li>
<li>输入<code>中文</code>进行搜索。</li>
<li>选择<code>简体中文（中国）</code>。</li>
<li>点击<code>确定</code>。</li>
<li>回到页面最上方，点击开始部署。</li>
<li>在弹出窗口中确认信息无误，点击<code>是</code>开始安装。</li>
<li>可能提示无法验证签名，点击<code>是</code>继续。</li>
<li>等待安装程序完成。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-3rnzm5k9a">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="4-7. 点击左侧边栏中的部署标签，将体系结构设置为64位，更新通道按需选择，这里我设置的是Office 2024 企业长期版，选择是否创建桌面快捷方式"><img data-src="https://s2.loli.net/2024/11/07/Ihc79F4oY3WqmRr.webp" alt="4-7. 点击左侧边栏中的部署标签，将体系结构设置为64位，更新通道按需选择，这里我设置的是Office 2024 企业长期版，选择是否创建桌面快捷方式" class="zoomable"></li><li class="splide__slide" data-caption="8-11. 点击选择产品按钮，输入LTSC 2024进行搜索，选择Office LTSC 专业增强版 2024 - 批量许可证，点击确定"><img data-src="https://s2.loli.net/2024/11/07/rXAEIsvKz8mtdyo.webp" alt="8-11. 点击选择产品按钮，输入LTSC 2024进行搜索，选择Office LTSC 专业增强版 2024 - 批量许可证，点击确定" class="zoomable"></li><li class="splide__slide" data-caption="12. 选择需要安装的应用程序"><img data-src="https://s2.loli.net/2024/11/07/adRpB5PbDvrXn7q.webp" alt="12. 选择需要安装的应用程序" class="zoomable"></li><li class="splide__slide" data-caption="13-16. 点击添加语言按钮，输入中文进行搜索，选择简体中文（中国），点击确定"><img data-src="https://s2.loli.net/2024/11/07/u26CVs9lOWoTwL3.webp" alt="13-16. 点击添加语言按钮，输入中文进行搜索，选择简体中文（中国），点击确定" class="zoomable"></li><li class="splide__slide" data-caption="17. 回到页面最上方，点击开始部署"><img data-src="https://s2.loli.net/2024/11/07/NnsktB2f76EPyeK.webp" alt="17. 回到页面最上方，点击开始部署" class="zoomable"></li><li class="splide__slide" data-caption="18. 在弹出窗口中确认信息无误，点击是开始安装"><img data-src="https://s2.loli.net/2024/11/07/CUBvngkpsH2IXPF.webp" alt="18. 在弹出窗口中确认信息无误，点击是开始安装" class="zoomable"></li><li class="splide__slide" data-caption="20. 等待安装程序完成"><img data-src="https://s2.loli.net/2024/11/07/mxfPeDhgGvKXpWj.webp" alt="20. 等待安装程序完成" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-3rnzm5k9a" class="carousel-caption"> </div>
    </div>
  

<h2 id="激活-1"><a href="#激活-1" class="headerlink" title="激活"></a>激活</h2><p>Office 也可以使用 MAS 脚本激活，使用和系统激活时相同的命令执行脚本，在弹出的窗口中输入<code>2</code>使用<code>Ohook</code>方式激活，然后输入<code>1</code>进行激活。</p>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-ijpqiwju1">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="输入2使用Ohook方式激活"><img data-src="https://s2.loli.net/2024/11/07/VG9jILA4J378dPs.webp" alt="输入2使用Ohook方式激活" class="zoomable"></li><li class="splide__slide" data-caption="输入1进行激活"><img data-src="https://s2.loli.net/2024/11/07/O1syprM9Wg7ldRF.webp" alt="输入1进行激活" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-ijpqiwju1" class="carousel-caption"> </div>
    </div>
  

<h1 id="系统调整与Bug修复"><a href="#系统调整与Bug修复" class="headerlink" title="系统调整与Bug修复"></a>系统调整与Bug修复</h1><p>以下是我对系统进行的一些调整以及一些Bug的修复方法。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/blog.webp"></object>
<p>OneDrive 图标异常修复</p><p>修复 Windows 11 LTSC 文件资源管理器侧边栏中无法点击的 OneDrive 图标</p>
<a href="https://siriusq.top/onedrive-explorer-icon-bug-fix.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/blog.webp"></object>
<p>Windows 11 右键菜单改回 Windows 10 样式</p><p>通过修改注册表，将Windows11的右键菜单样式改为更直观好用的老样式</p>
<a href="https://siriusq.top/Windows-11-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%94%B9%E5%9B%9E-Windows-10-%E6%A0%B7%E5%BC%8F.html"></a>
</div></div>

<p>此外我的台式机还遇到了部分软件启动巨慢的Bug，通过任务管理器排查了一下，发现是Windows Defender的锅，相关软件启动时，Windows Defender 的 antimalware service executable 进程占用了很多的资源。这个Bug只出现在我额外安装了杀毒软件的电脑上，另外两台完全正常，就很迷惑。请在安装了其他有效杀毒软件的情况下关闭此选项，否则你的系统可能会暴露在风险中！</p>
<ol>
<li>首先右键开始菜单按钮，点击<code>运行</code>，输入<code>gpedit.msc</code>，打开<code>本地组策略编辑器</code>。</li>
<li>依次打开<code>计算机配置</code>-<code>管理模板</code>-<code>Windows组件</code>-<code>Microsoft Defender 防病毒</code>。</li>
<li>双击打开右侧的<code>关闭 Microsoft Defender 防病毒</code>。</li>
<li>勾选<code>已启用</code>，然后点击<code>确定</code>保存更改。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-v60z5hkwr">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="依次打开计算机配置-管理模板-Windows组件-Microsoft Defender 防病毒"><img data-src="https://s2.loli.net/2024/11/07/q18DhrdNTieJkUC.webp" alt="依次打开计算机配置-管理模板-Windows组件-Microsoft Defender 防病毒" class="zoomable"></li><li class="splide__slide" data-caption="双击打开右侧的关闭 Microsoft Defender 防病毒，勾选已启用，然后点击确定保存更改"><img data-src="https://s2.loli.net/2024/11/07/MyEiOc25RTFw9j3.webp" alt="双击打开右侧的关闭 Microsoft Defender 防病毒，勾选已启用，然后点击确定保存更改" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-v60z5hkwr" class="carousel-caption"> </div>
    </div>
  

<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/blog.webp"></object>
<p>软件整理</p><p>这是我的另一篇博文，收录了各种好用的软件</p>
<a href="https://siriusq.top/%E8%BD%AF%E4%BB%B6%E6%95%B4%E7%90%86.html"></a>
</div></div>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Office</tag>
        <tag>重装</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows中开启HEIC格式图片预览</title>
    <url>/windows-heic.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 重装完系统后，我发现iPhone拍摄的heic格式图片文件无法在Windows文件资源管理器中进行预览，然后我就去微软应用商店中搜索相关扩展，但是搜到的扩展居然是收费的。我寻思也没买过这个扩展，重装前的系统咋就能正常预览HEIC格式的图片呢？ </blockquote>

<span id="more"></span>

<p>经过查询，我发现 HEVC 编码是需要支付专利费用的，我之前安装的扩展名为<code>来自设备制造商的HEVC视频扩展</code>，相关的专利费已经由硬件制造商支付过了，所以我并不需要为它额外付费，而且我在之前的系统中也可以免费使用HEVC扩展。但是不知道微软又抽什么风，在商店中隐藏了这个免费扩展，现在搜索时只会显示售价 0.99 美元的收费扩展。即使我通过网页链接直接跳转到免费扩展的详情页，微软也会提示此应用在你的设备上将无法工作，同时获取安装的按钮也处于灰色不可点击状态。这我肯定不能当冤大头花这笔冤枉钱，于是我找到了原来免费扩展的离线安装包，并成功安装到了我的电脑上，恢复了原有的功能。</p>
<h1 id="获取步骤"><a href="#获取步骤" class="headerlink" title="获取步骤"></a>获取步骤</h1><ol>
<li>访问 <a href="https://store.rg-adguard.net/">Online link generator for Microsoft Store</a></li>
<li>将左侧下拉菜单选项更改为<code>ProductId</code></li>
<li>粘贴<code>9N4WGH0Z6VHQ</code></li>
<li>点击最右侧的对勾来搜索</li>
<li>会搜到两个结果，点击下载最下面的<code>Microsoft.HEVCVideoExtension_2.2.9.0_neutral_~_8wekyb3d8bbwe.appxbundle</code></li>
<li>双击打开离线安装包，然后点击安装即可</li>
</ol>
<p><img data-src="https://s2.loli.net/2024/11/19/zL63g7utQcT2AmO.webp" alt="下载扩展"></p>
<div class="note primary"><h1 id="HEIC、HEIF、HEVC-的区别与关系"><a href="#HEIC、HEIF、HEVC-的区别与关系" class="headerlink" title="HEIC、HEIF、HEVC 的区别与关系"></a>HEIC、HEIF、HEVC 的区别与关系</h1><p>以下内容部分由ChatGPT总结：</p>
<table>
<thead>
<tr>
<th align="left"><strong>名称</strong></th>
<th align="left"><strong>定义</strong></th>
<th align="left"><strong>主要用途</strong></th>
<th align="left"><strong>与其他两者的关系</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left"><strong>HEIC</strong></td>
<td align="left">基于 HEIF 的文件格式实现</td>
<td align="left">存储单张图片或动态图片</td>
<td align="left">是 HEIF 的具体实现，通常使用 HEVC 编码</td>
</tr>
<tr>
<td align="left"><strong><a href="https://zh.wikipedia.org/wiki/HEIF">HEIF</a></strong></td>
<td align="left">一种高效图像文件格式</td>
<td align="left">存储和管理图像及元数据</td>
<td align="left">是 HEIC 的基础，支持多种编码，包括 HEVC</td>
</tr>
<tr>
<td align="left"><strong><a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E6%95%88%E7%8E%87%E8%A7%86%E9%A2%91%E7%BC%96%E7%A0%81">HEVC</a></strong></td>
<td align="left">高效视频编码标准（H.265）</td>
<td align="left">压缩视频或图像数据</td>
<td align="left">常作为 HEIF&#x2F;HEIC 的图片压缩算法</td>
</tr>
</tbody></table>
<p><strong>总结</strong>：HEIF 是一种文件格式，HEIC 是基于 HEIF 的具体实现，通常使用 HEVC 作为图片压缩编码技术。</p>
</div>

<blockquote>
<p>参考：<br><a href="https://www.reddit.com/r/microsoft/comments/17d575a/why_are_hevc_video_extensions_sold_separately/">Why are HEVC Video extensions sold separately? @reddit</a><br><a href="https://www.reddit.com/r/Windows11/comments/1exjk98/microsoft_want_me_to_pay_up_form_hevc_extension/">Microsoft want me to pay up form HEVC extension. Should I ? @reddit</a><br><a href="https://www.streamingmedia.com/Articles/News/Online-Video-News/HEVC-Advance-Makes-Some-Software-Royalty-Free-114938.aspx">HEVC Advance Makes Some Software Royalty Free</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>HEIC</tag>
      </tags>
  </entry>
  <entry>
    <title>借助Windows无线显示器功能将老旧设备设为副屏</title>
    <url>/windows-wireless-display.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 总觉得PC的显示器不够用，但如果直接购置新显示器，又得花上一笔不小的开销。手边有台闲置许久 Surface 3，已经很少使用了，不妨把它拿来做副屏。然而，像这样的老设备没有视频输入接口，仅支持视频输出，无法直接用视频线连接。于是我又想到了视频采集卡，它可以通过USB接口将PC的画面传输到 Surface 3上。不过，经过一番研究，我发现廉价的采集卡延迟也是很高，而高质量的采集卡价格又接近新显示器，实在不划算。最终，我选择了最简单、成本最低的方法：借助 Windows 系统自带的无线显示器功能，让这台老 Surface 3 变身为副屏。 </blockquote>

<span id="more"></span>

<h1 id="老设备设置"><a href="#老设备设置" class="headerlink" title="老设备设置"></a>老设备设置</h1><p>首先我们需要再老设备上安装并开启无线显示器功能，步骤如下：</p>
<ol>
<li>打开<code>设置</code> &gt; <code>系统</code>。</li>
<li>打开最下面的<code>可选功能</code>。</li>
<li>点击右上角的<code>查看功能</code>按钮。</li>
<li>搜索并勾选<code>无线显示器</code>功能，点击<code>下一步</code></li>
<li>点击<code>添加</code>。</li>
<li>等待功能添加完成，老设备嘛，安装速度非常慢。</li>
<li>回到<code>系统</code>页面，打开<code>投影到此电脑</code>。</li>
<li>设置相关选项：<ol>
<li>将<code>当你同意时，部分Windows和Android设备可以投影到这台电脑</code>设置为<code>在安全网络中随处可用</code>。</li>
<li>将<code>要求投影到这台电脑</code>设置为<code>仅第一次</code>。</li>
<li>关闭<code>仅当此电脑接通电源时，才能发现此电脑以进行投影</code>，但是如果老设备的电池很拉跨就不要关了，老老实实插电用。</li>
</ol>
</li>
<li>点击最顶部的<code>启动无线显示应用以投影到这台电脑</code>。</li>
<li>可以选择把<code>Wireless Display</code>无线显示应用程序固定到任务栏或开始菜单，方便快速开启。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-0jsf77am4">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="打开设置 > 系统 > 可选功能"><img data-src="https://s2.loli.net/2024/11/12/fz3RwVFQGythH47.webp" alt="打开设置 > 系统 > 可选功能" class="zoomable"></li><li class="splide__slide" data-caption="点击右上角的查看功能按钮"><img data-src="https://s2.loli.net/2024/11/12/6tqbeBu2Xs4nyPh.webp" alt="点击右上角的查看功能按钮" class="zoomable"></li><li class="splide__slide" data-caption="搜索并勾选无线显示器功能，点击下一步"><img data-src="https://s2.loli.net/2024/11/12/JRwhmL18fEPUNHy.webp" alt="搜索并勾选无线显示器功能，点击下一步" class="zoomable"></li><li class="splide__slide" data-caption="点击添加"><img data-src="https://s2.loli.net/2024/11/12/fFmZokucpvUO54P.webp" alt="点击添加" class="zoomable"></li><li class="splide__slide" data-caption="回到系统页面，打开投影到此电脑"><img data-src="https://s2.loli.net/2024/11/12/PfTxXulwC2gUNeD.webp" alt="回到系统页面，打开投影到此电脑" class="zoomable"></li><li class="splide__slide" data-caption="设置相关选项，点击最顶部的启动无线显示应用以投影到这台电脑"><img data-src="https://s2.loli.net/2024/11/12/BWyboeu6zJmqOcw.webp" alt="设置相关选项，点击最顶部的启动无线显示应用以投影到这台电脑" class="zoomable"></li><li class="splide__slide" data-caption="无线显示应用"><img data-src="https://s2.loli.net/2024/11/12/HDfBtebcEvzLxV8.webp" alt="无线显示应用" class="zoomable"></li><li class="splide__slide" data-caption="把Wireless Display无线显示应用程序固定到任务栏或开始菜单"><img data-src="https://s2.loli.net/2024/11/12/PbiIBDk3yw7EzvL.webp" alt="把Wireless Display无线显示应用程序固定到任务栏或开始菜单" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-0jsf77am4" class="carousel-caption"> </div>
    </div>
  

<h1 id="主机设置"><a href="#主机设置" class="headerlink" title="主机设置"></a>主机设置</h1><p>接下来在主机中与无线显示器建立连接。</p>
<ol>
<li>打开<code>设置</code> &gt; <code>系统</code> &gt; <code>屏幕</code>。</li>
<li>单击以展开<code>缩放和布局</code>中的<code>多显示器</code>菜单。</li>
<li>点击<code>连接到无线显示器</code>后面的<code>连接</code>按钮。</li>
<li>在右下角弹出的<code>投放</code>窗口中选择老设备进行连接。</li>
<li>打开任务栏右下角的控制中心，使用滚轮下翻，找到投放按钮，然后左键长按将它拖动到常用位置，方便以后直接通过这个按钮进行连接。</li>
<li>点击任务栏右侧的投放图标，勾选<code>允许此设备中的鼠标、键盘和其他输入</code>，然后就能用 Surface 3 的触控和手写笔了。</li>
</ol>

    <div class="carousel-container">
      <div class="splide" data-splide='{"heightRatio":0.618,"lazyLoad":false,"type":"slide","autoplay":false,"interval":3000,"pauseOnHover":true}' data-caption-id="carousel-caption-si15sonlq">
        <div class="splide__track">
          <ul class="splide__list"><li class="splide__slide" data-caption="打开设置 > 系统 > 屏幕，单击以展开缩放和布局中的多显示器菜单，点击连接到无线显示器后面的连接按钮"><img data-src="https://s2.loli.net/2024/11/12/Z8eu7FNdCBtEsSh.webp" alt="打开设置 > 系统 > 屏幕，单击以展开缩放和布局中的多显示器菜单，点击连接到无线显示器后面的连接按钮" class="zoomable"></li><li class="splide__slide" data-caption="在右下角弹出的投放窗口中选择老设备进行连接"><img data-src="https://s2.loli.net/2024/11/12/i3lfdLNeS5Anbo4.webp" alt="在右下角弹出的投放窗口中选择老设备进行连接" class="zoomable"></li><li class="splide__slide" data-caption="打开任务栏右下角的控制中心，使用滚轮下翻，找到投放按钮，然后左键长按将它拖动到常用位置，方便以后直接通过这个按钮进行连接"><img data-src="https://s2.loli.net/2024/11/12/bFoUmOejZ7qaSiy.webp" alt="打开任务栏右下角的控制中心，使用滚轮下翻，找到投放按钮，然后左键长按将它拖动到常用位置，方便以后直接通过这个按钮进行连接" class="zoomable"></li><li class="splide__slide" data-caption="点击任务栏右侧的投放图标，勾选允许此设备中的鼠标、键盘和其他输入，然后就能用 Surface 3 的触控和手写笔了"><img data-src="https://s2.loli.net/2024/11/12/3RWIHGkVolQvyUi.webp" alt="点击任务栏右侧的投放图标，勾选允许此设备中的鼠标、键盘和其他输入，然后就能用 Surface 3 的触控和手写笔了" class="zoomable"></li></ul>
        </div>
      </div>
      <div id="carousel-caption-si15sonlq" class="carousel-caption"> </div>
    </div>
  

<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li>每次连接时，要先启动老设备上的<code>Wireless Display</code>应用程序，然后在主机上通过控制中心的<code>投放</code>按钮进行连接。</li>
<li><code>投放</code>按钮的名称可能会变成<code>有线显示器</code>。</li>
<li>如果无线显示器延迟非常高，请检查老设备的网卡驱动。微软自动给我的老 Surface 3 安装的驱动是有问题的，打开网页都费劲，后来手动安装了新版本的驱动后网速就很快了，放在墙角用测速网也能测得一百多兆的带宽，完全够用。</li>
<li>尽量使用5GHz的WiFi，减少延迟。</li>
<li>我的主机给老 Surface 3 设置的刷新率是24Hz，需要手动到<code>设置</code> &gt; <code>系统</code> &gt; <code>屏幕</code> &gt; <code>高级显示器设置</code> 中将刷新率调整为60Hz，但是这个设置不能保存，下次连接时还是会用24Hz的刷新率。</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Wireless Display</tag>
        <tag>Surface</tag>
      </tags>
  </entry>
  <entry>
    <title>华硕AuraSync无法识别幻光戟解决方案</title>
    <url>/%E5%8D%8E%E7%A1%95AuraSync%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB%E5%B9%BB%E5%85%89%E6%88%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">本文又名为关于我手贱把 Armoury Crate 升级之后引发的一系列坑爹事件。下面有请本场主角华硕 B460-I GAMING 与两条幻光戟</blockquote>

<span id="more"></span>

<div class="note danger"><h1 id="灾厄的开端"><a href="#灾厄的开端" class="headerlink" title="灾厄的开端"></a>灾厄的开端</h1><p>华硕真的是用心做灯，用脚做灯控软件，Armoury Crate 这玩意自从安装后就问题不断，经常卡死崩溃，上次升级之后打开主页面需要5-10秒才能有响应，于是升级到最新版本3.1.4.0想看看能否解决问题，没想到带来了新的Bug，浪费了我一下午的时间。升级到3.1.4.0版本后，发现光标每隔几秒钟就会转一会圈圈，一开始以为是某个程序在后台更新，就没管它，没想到过了半个小时还是这种状态，光标在正常状态与转圈圈之间反复横跳，如下图所示。<br><img data-src="https://s2.loli.net/2022/07/10/AgmkZLu5vVEKocO.png" alt="aura0.png"></p>
<p>于是去任务管理器挨个结束任务来抓出罪魁祸首，最后锁定嫌疑人为<code>ArmourySocketServer.exe</code>。但是在服务里找了一圈也没找到是谁开机启动的它，正巧谷歌的时候发现灯控原来有单独的软件，叫做<code>Aura Sync</code>，就很烦躁的用官方的卸载工具卸载了Armoury Crate，然后安装了Aura Sync。</p>
<p>不过嘛，重启后尴尬而又熟悉的一幕出现了，Aura Sync识别不到内存，两根幻光戟像脱缰的野狗，颜色逐渐失控，然后就开始采用老方法，安装芝奇的灯控软件<code>Trident Z Lighting Control</code>，然后去BIOS关掉了<code>SPD Write Disabled</code>。重启之后更加尴尬了，Aura Sync现在虽然能识别到内存了，但是只能识别到一根，而芝奇的灯控也是只能识别到一根，最尴尬的是它们识别的是同一根，完全不在乎另一根的感受。</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Trident Z Lighting Control</p><p>Trident Z Family (RGB, Neo, Royal, Royal Elite, Z5 RGB) - Lighting Control Software</p>
<a href="https://www.gskill.com/download/1502180912/1551690847/Trident-Z-Family-(RGB,-Royal,-Neo)"></a>
</div></div>

<p>于是卸磨杀驴，卸载掉芝奇的灯控，断电重启后Aura Sync还是只能识别一根。无奈之下又重新安装了Armoury Crate，Armoury Crate倒是可以识别两根内存，不过ArmourySocketServer引起的卡顿转圈问题依旧。对比了下两者后台进程以及安装的附加软件数量的差异，发现Aura Sync相对于Armoury Crate少了很多与灯效有关的附加软件。于是先干掉了ArmourySocketServer.exe，解决掉转圈圈的问题，刚好也不想用Armoury Crate这个臃肿的家伙，就继续挨个卸载看起来与灯控无关的软件，只保留那些缺少的灯控软件，保证了Aura Sync可以正常控制全部灯效。</p>
</div>

<div class="note success"><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol>
<li>保险起见先使用官方卸载工具卸载Armoury Crate<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Armoury Crate Uninstall Tool</p><p>Use the Uninstall tool to remove Armoury Crate and AURA Creator</p>
<a href="https://dlcdnets.asus.com/pub/ASUS/mb/14Utilities/Armoury_Crate_Uninstall_Tool.zip"></a>
</div></div></li>
<li>重启进入BIOS，搜索<code>SPD Write Disable</code>，将其设置为<code>False</code></li>
<li>重新安装Armoury Crate<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Armoury Crate</p><p>Armoury Crate & Aura Creator Installer</p>
<a href="https://www.asus.com.cn/supportonly/Armoury%20Crate/HelpDesk_Download/"></a>
</div></div></li>
<li>卸载 Asus Framework 还有那几个顶着Armoury Crate图标的软件，我最终只保留了下面的这些软件<br><img data-src="https://s2.loli.net/2022/07/10/DgLJVQk4zreyEPw.webp" alt="aura2.webp"></li>
<li>删掉<code>C:\Program Files (x86)\ASUS\ArmouryDevice</code>整个文件夹，删之前需要先在任务管理器结束掉相关进程，可以使用LockHunter软件来辅助干掉这些进程</li>
<li>下载Aura Sync，注意真正的下载链接在下面的那行小字里<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Aura Sync</p><p>Note: The standalone version of Aura Sync Utility will stop receiving updates soon.</p>
<a href="https://www.asus.com/campaign/aura/us/download.php"></a>
</div></div>

<img data-src="https://s2.loli.net/2022/07/10/JMeo6KSnfUgjmEW.png" alt="aura1.png"></li>
<li>下载后解压，然后挨个打开所有<code>.exe</code>文件的属性，勾选解除锁定，注意子文件夹中的应用程序也要解锁<br><img data-src="https://s2.loli.net/2022/12/18/qHkQsetM4TmLJEF.png" alt="aura11.png"></li>
<li>以管理员身份运行<code>Setup.exe</code></li>
<li>安装完成后重启，灯光正常的话就可以去BIOS里恢复<code>SPD Write Disable</code>为<code>True</code>了</li>
</ol>
<p><strong>希望Armoury Crate以后能够改过自新，好好做人（手动狗头）</strong></p>
</div>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>ITX</tag>
        <tag>搞机</tag>
        <tag>华硕</tag>
        <tag>Aura Sync</tag>
        <tag>Armoury Crate</tag>
        <tag>幻光戟</tag>
        <tag>芝奇</tag>
        <tag>RGB</tag>
      </tags>
  </entry>
  <entry>
    <title>更改Adobe软件安装位置并禁止自动更新</title>
    <url>/%E6%9B%B4%E6%94%B9Adobe%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E5%B9%B6%E7%A6%81%E6%AD%A2%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">因为最近换了张显卡，因为驱动问题被迫把练习时长两年半的系统重装了，因为C盘还是祖传的256G固态，Adobe的几个软件一上去就给用掉不少，看着很不爽，于是尝试更改了Adobe全家桶的安装位置，顺带屏蔽了全家桶的联网权限，防止它们自动更新。需要注意我安装的是cc2018，新版不一定适用</blockquote>

<span id="more"></span>

<div class="note warning"><p>注意，下面的所有操作都需要断开网络连接！</p>
</div>

<h1 id="更改安装位置"><a href="#更改安装位置" class="headerlink" title="更改安装位置"></a>更改安装位置</h1><p>首先找到安装包目录中的<code>./products/Driver.xml</code>，在<code>&lt;RequestInfo&gt;</code>中插入下面的代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RequestInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InstallDir</span>&gt;</span>D:\Software\Program Files\Adobe<span class="tag">&lt;/<span class="name">InstallDir</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RequestInfo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将<code>&lt;InstallDir&gt;</code>中的内容替换为你想要的安装目录，改完后大概是这个亚子</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span><br><span class="line">&lt;DriverInfo&gt;</span><br><span class="line"><span class="addition">+    &lt;RequestInfo&gt;</span></span><br><span class="line"><span class="addition">+        &lt;InstallDir&gt;D:\Software\Program Files\Adobe&lt;/InstallDir&gt;</span></span><br><span class="line"><span class="addition">+    &lt;/RequestInfo&gt;</span></span><br><span class="line">    &lt;ProductInfo&gt;</span><br><span class="line">        &lt;Name&gt;Photoshop CC (2018)&lt;/Name&gt;</span><br><span class="line">        &lt;SAPCode&gt;PHSP&lt;/SAPCode&gt;</span><br><span class="line">        &lt;CodexVersion&gt;19.0&lt;/CodexVersion&gt;</span><br><span class="line">        &lt;Platform&gt;win64&lt;/Platform&gt;</span><br><span class="line">        &lt;EsdDirectory&gt;./PHSP&lt;/EsdDirectory&gt;</span><br><span class="line">        &lt;Dependencies&gt;</span><br><span class="line">            &lt;Dependency&gt;</span><br><span class="line">                &lt;SAPCode&gt;ACR&lt;/SAPCode&gt;</span><br><span class="line">                &lt;BaseVersion&gt;9.6&lt;/BaseVersion&gt;</span><br><span class="line">                &lt;EsdDirectory&gt;./ACR&lt;/EsdDirectory&gt;</span><br><span class="line">            &lt;/Dependency&gt;</span><br><span class="line">            &lt;Dependency&gt;</span><br><span class="line">                &lt;SAPCode&gt;COCM&lt;/SAPCode&gt;</span><br><span class="line">                &lt;BaseVersion&gt;1.0&lt;/BaseVersion&gt;</span><br><span class="line">                &lt;EsdDirectory&gt;./COCM&lt;/EsdDirectory&gt;</span><br><span class="line">            &lt;/Dependency&gt;</span><br><span class="line">            &lt;Dependency&gt;</span><br><span class="line">                &lt;SAPCode&gt;COPS&lt;/SAPCode&gt;</span><br><span class="line">                &lt;BaseVersion&gt;1.0&lt;/BaseVersion&gt;</span><br><span class="line">                &lt;EsdDirectory&gt;./COPS&lt;/EsdDirectory&gt;</span><br><span class="line">            &lt;/Dependency&gt;</span><br><span class="line">            &lt;Dependency&gt;</span><br><span class="line">                &lt;SAPCode&gt;CORE&lt;/SAPCode&gt;</span><br><span class="line">                &lt;BaseVersion&gt;1.0&lt;/BaseVersion&gt;</span><br><span class="line">                &lt;EsdDirectory&gt;./CORE&lt;/EsdDirectory&gt;</span><br><span class="line">            &lt;/Dependency&gt;</span><br><span class="line">            &lt;Dependency&gt;</span><br><span class="line">                &lt;SAPCode&gt;CORG&lt;/SAPCode&gt;</span><br><span class="line">                &lt;BaseVersion&gt;1.0&lt;/BaseVersion&gt;</span><br><span class="line">                &lt;EsdDirectory&gt;./CORG&lt;/EsdDirectory&gt;</span><br><span class="line">            &lt;/Dependency&gt;</span><br><span class="line">        &lt;/Dependencies&gt;</span><br><span class="line">    &lt;/ProductInfo&gt;</span><br><span class="line">&lt;/DriverInfo&gt;</span><br></pre></td></tr></table></figure>

<p>然后按照老办法安装就可以了</p>
<h1 id="卸载-Creative-Cloud"><a href="#卸载-Creative-Cloud" class="headerlink" title="卸载 Creative Cloud"></a>卸载 Creative Cloud</h1><ul>
<li><p>这玩意对我来说没什么卵用，还很招人烦，直接用官方的卸载工具卸载掉，下载链接如下</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Creative Cloud Cleaner tool</p><p>卸载 Adobe Creative Cloud</p>
<a href="https://swupmf.adobe.com/webfeed/CleanerTool/win/AdobeCreativeCloudCleanerTool.exe"></a>
</div></div>
</li>
<li><p>下载后右键以管理员身份运行，输入e并回车，然后再输入y并回车<br><img data-src="https://s2.loli.net/2022/12/18/YJI7N1nHkKGDoZx.png" alt="Adobe02.png"></p>
</li>
<li><p>输入6并回车，选择Creative Cloud Only<br><img data-src="https://s2.loli.net/2022/12/18/QNLFdru9sJPKkv2.png" alt="Adobe03.png"></p>
</li>
<li><p>输入2并回车，选择清除所有<br><img data-src="https://s2.loli.net/2022/12/18/YKbwQ4akud2z7rA.png" alt="Adobe04.png"></p>
</li>
<li><p>完成后退出即可</p>
</li>
</ul>
<h1 id="禁止自动更新"><a href="#禁止自动更新" class="headerlink" title="禁止自动更新"></a>禁止自动更新</h1><p>禁止Adobe全家桶的自动更新分三步，前面两步主要针对Acrobat，第三步是通杀</p>
<h2 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h2><p>首先干掉三个Acrobat的开机启动项，在<code>任务管理器-启动应用</code>中找到下列三个启动项并右键禁用</p>
<ul>
<li>acrotray.exe</li>
<li>updaterstartuputility.exe</li>
<li>AGCInvokerUtility.exe</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/12/18/zAUyIbtwmB26VZl.png" alt="adobe11.png"></p>
<h2 id="任务计划程序"><a href="#任务计划程序" class="headerlink" title="任务计划程序"></a>任务计划程序</h2><p>然后干掉Acrobat的三个计划任务，在开始菜单的Windows图标上右键，打开<code>计算机管理-任务计划程序-任务计划程序库</code>，禁用下列三项</p>
<ul>
<li>Adobe Acrobat Update Task</li>
<li>AdobeAAMUpdater</li>
<li>AdobeGCInvoker</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/12/18/ium6JdaqA1SNDvk.png" alt="adobe21.png"></p>
<h2 id="防火墙规则"><a href="#防火墙规则" class="headerlink" title="防火墙规则"></a>防火墙规则</h2><p>最后一步是禁止所有的Adobe程序联网，没有网络更新个锤子，但是Adobe狡兔三窟，这里需要添加的规则比较多，建议使用脚本添加，脚本如下。</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">Echo</span> Off</span><br><span class="line"><span class="built_in">SetLocal</span></span><br><span class="line"></span><br><span class="line">:begin</span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">echo:</span></span><br><span class="line"><span class="function"><span class="title">echo</span> ****** 禁止文件夹联网 ******</span></span><br><span class="line"><span class="function"><span class="title">echo</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">set</span> /<span class="title">p</span> <span class="title">folder</span>=请输入文件夹（退出请直接关闭窗口）： </span></span><br><span class="line"><span class="function"><span class="title">If</span> <span class="title">Not</span> <span class="title">Exist</span> &quot;%<span class="title">folder</span>%\&quot; <span class="title">Exit</span>/<span class="title">B</span></span></span><br><span class="line"><span class="function"><span class="title">If</span> /<span class="title">I</span> &quot;%<span class="title">CD</span>%&quot; <span class="title">NEq</span> &quot;%<span class="title">folder</span>%&quot; <span class="title">PushD</span> %<span class="title">folder</span>%</span></span><br><span class="line"><span class="function"><span class="title">Set</span> &quot;<span class="title">Cmnd</span>=<span class="title">netsh</span> <span class="title">advfirewall</span> <span class="title">firewall</span> <span class="title">add</span> <span class="title">rule</span> <span class="title">action</span>=<span class="title">block</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">echo</span>:</span></span><br><span class="line"><span class="function"><span class="title">For</span> /<span class="title">R</span> %%<span class="title">a</span> <span class="title">In</span> (*.<span class="title">exe</span>) <span class="title">Do</span> (<span class="title">For</span> %%<span class="title">b</span> <span class="title">In</span> (<span class="title">in</span> <span class="title">out</span>) <span class="title">Do</span> (</span></span><br><span class="line"><span class="function">      <span class="title">echo</span> 创建禁止 %%<span class="title">b</span> 规则【%%<span class="title">a</span>】</span></span><br><span class="line"><span class="function">      %<span class="title">Cmnd</span>% <span class="title">name</span>=&quot;<span class="title">blocked</span> %%<span class="title">a</span> <span class="title">via</span> <span class="title">script</span>&quot; <span class="title">dir</span>=%%<span class="title">b</span> <span class="title">program</span>=&quot;%%<span class="title">a</span>&quot;))</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">echo</span>:</span></span><br><span class="line"><span class="function"><span class="title">echo</span> 搞定了，%<span class="title">folder</span>% 中所有 <span class="title">exe</span> 文件的禁止入站、出站规则都已成功创建！</span></span><br><span class="line"><span class="function"><span class="title">echo</span> ----------------------------</span></span><br><span class="line"><span class="function"><span class="title">echo</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">goto</span> <span class="title">begin</span></span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>脚本来自<a href="https://www.zhihu.com/question/308632323/answer/2792089638">知乎@数据分析</a></p>
</blockquote>
<p>将脚本复制到记事本中，然后另存为<code>Firewall Blocker.bat</code>，注意另存的时候将编码方式选择为<code>ANSI</code>，否则运行的时候会乱码。<br><img data-src="https://s2.loli.net/2022/12/19/c3Kk1qlBg8RJx2o.png" alt="Adobe41.png"></p>
<p>需要输入的文件夹路径有两个，分别为：</p>
<ul>
<li>上面更改的安装路径</li>
<li>C:\Program Files (x86)\Common Files\Adobe</li>
</ul>
<p>脚本跑完之后不放心的话可以去防火墙确认一下，在开始菜单中搜索防火墙<br><img data-src="https://s2.loli.net/2022/12/18/qowZlkK8MXg4PA7.png" alt="adobe0.png"><br>然后打开<code>高级安全 Windows Defender 防火墙</code>，查看是否新增了很多Adobe相关的入站和出站规则</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win11</tag>
        <tag>Win10</tag>
        <tag>Adobe</tag>
        <tag>防火墙</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>格拉斯哥大学IT选课指南</title>
    <url>/%E6%A0%BC%E6%8B%89%E6%96%AF%E5%93%A5%E5%A4%A7%E5%AD%A6IT%E9%80%89%E8%AF%BE%E6%8C%87%E5%8D%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">很久很久之前说过的选课指南哈哈哈，根据本人21年上课体验以及专业群道听途说总结，仅供参考，注意时效</blockquote>

<span id="more"></span>

<h1 id="Semester-1"><a href="#Semester-1" class="headerlink" title="Semester 1"></a>Semester 1</h1><p>第一学期全都是必修课，一共5门，整个IT+的课表都一样。为了<del>偷懒</del>方便，下面的课程名全用缩写表示</p>
<table>
<thead>
<tr>
<th align="left">缩写</th>
<th align="left">课程名</th>
<th align="left">难度</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">SN</td>
<td align="left">Systems and Networks</td>
<td align="left">⭐</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PR</td>
<td align="left">Programming</td>
<td align="left">⭐</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DTA</td>
<td align="left">Database Theory &amp; App</td>
<td align="left">⭐</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SE</td>
<td align="left">Software Engineering</td>
<td align="left">⭐⭐</td>
<td align="left">下学期还会见到它</td>
</tr>
<tr>
<td align="left">ECS</td>
<td align="left">Enterprise Cyber Security</td>
<td align="left">⭐⭐⭐⭐⭐</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="Systems-and-Networks"><a href="#Systems-and-Networks" class="headerlink" title="Systems and Networks"></a>Systems and Networks</h2><p>主讲操作系统+一丢丢的计算机网络，还有汇编语言（大概算吧），用的是某位教授自己编写的软件<code>Sigma16</code>，很简单。</p>
<h2 id="Programming"><a href="#Programming" class="headerlink" title="Programming"></a>Programming</h2><p>主讲JAVA基础知识，开学的第一周全是这门课，上午上课下午Lab，疯狂填鸭哈哈哈。如果自己学过一些JAVA的话就非常简单了，我第一周全程划水（不是），然后后面会讲到对象、IO、异常、Swing这些。</p>
<h2 id="Database-Theory-App"><a href="#Database-Theory-App" class="headerlink" title="Database Theory &amp; App"></a>Database Theory &amp; App</h2><p>主讲数据库基本知识，如范式、E-R图、关系代数、SQL等，软件用的<code>PostgreSQL</code>，有Lab。</p>
<h2 id="Software-Engineering"><a href="#Software-Engineering" class="headerlink" title="Software Engineering"></a>Software Engineering</h2><p>面向产品经理编程🐶，这门课两个学期都有，第一学期会讲一些Java的基本知识，和Programming有些重复，还有用户故事、UML图、看板、敏捷开发等，会使用<code>Trello</code>看板。注意第一学期的作业和第二学期的作业是密切相关的，不要给自己挖坑，第一学期作业是根据需求编写用户故事啥的，第二学期就是按照编的用户故事把软件开发出来（小组作业预警⚠️小组不可以更换）。虽然两学期都有，但是考试只有一次。</p>
<h2 id="Enterprise-Cyber-Security"><a href="#Enterprise-Cyber-Security" class="headerlink" title="Enterprise Cyber Security"></a>Enterprise Cyber Security</h2><p>emmm纯理论课程，非常的枯燥，作业还特别麻烦（小组作业预警⚠️）。教授的上课方式也是独树一帜，开直播然后共享屏幕播放他提前录好的课。。。。。。而且他的网络还不好，经常就看不清楚课件。总之一言难尽吧。</p>
<h2 id="AWSP"><a href="#AWSP" class="headerlink" title="AWSP"></a>AWSP</h2><p>AWSP应该不算一门课，和语言班比较像，开学后大概一个月会收到邮件，要求去做一个英语测试，包含选择和写作，然后根据得分情况判断你是不是需要上额外的写作课。完成的话成绩单上会标记CP，不算分，不影响学位。</p>
<h1 id="Semester-2"><a href="#Semester-2" class="headerlink" title="Semester 2"></a>Semester 2</h1><p>第二学期是一门必修课+4门选修课+一个必修小组项目，IT可以随便选，SD必须选ADS和AP。21年一共有9门选修课供选择，除ADS和AP外剩下的课是和CS+一起上的。下面我自己上过的课难度用⭐表示，道听途说的用💡表示，仅供参考。</p>
<table>
<thead>
<tr>
<th align="left">缩写</th>
<th align="left">课程名</th>
<th align="left">难度</th>
<th align="left">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">SE</td>
<td align="left">Software Engineering</td>
<td align="left">⭐⭐⭐</td>
<td align="left">必修（没错还是它）</td>
</tr>
<tr>
<td align="left">TP</td>
<td align="left">Team Project</td>
<td align="left">⭐⭐</td>
<td align="left">必修小组项目</td>
</tr>
<tr>
<td align="left">CSysF</td>
<td align="left">Cyber Security Fundamentals</td>
<td align="left">⭐⭐</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">HCI-DE</td>
<td align="left">HCI Design &amp; Evaluation</td>
<td align="left">💡💡</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">CSFor</td>
<td align="left">Cyber System Forensics</td>
<td align="left">💡💡💡💡💡</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">HCS</td>
<td align="left">Human-Centred Security for MSc</td>
<td align="left">💡💡</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">IV</td>
<td align="left">Information Visualisation</td>
<td align="left">💡💡💡</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">CSD</td>
<td align="left">Cryptography &amp; Secure Development</td>
<td align="left">💡💡💡</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">ITECH</td>
<td align="left">Internet Technology</td>
<td align="left">⭐⭐⭐</td>
<td align="left">选修</td>
</tr>
<tr>
<td align="left">ADS</td>
<td align="left">Algorithms &amp; Data Structures</td>
<td align="left">⭐⭐⭐</td>
<td align="left">选修（SD必修）</td>
</tr>
<tr>
<td align="left">AP</td>
<td align="left">Advanced Programming</td>
<td align="left">⭐⭐</td>
<td align="left">选修（SD必修）</td>
</tr>
</tbody></table>
<h2 id="Software-Engineering-1"><a href="#Software-Engineering-1" class="headerlink" title="Software Engineering"></a>Software Engineering</h2><p>第二学期主要讲设计模式，比较枯燥，作业也比较麻烦。</p>
<h2 id="Team-Project"><a href="#Team-Project" class="headerlink" title="Team Project"></a>Team Project</h2><p>五人组队，完成一个项目的开发，和SE契合度很高，也要完成用户故事，遵循敏捷开发流程等。作业是完成一个战棋游戏，前端的东西老师都写好了，主要完成后端的逻辑，要设计人机对战的AI，比较麻烦的是要做工作记录。只有项目没有考试（小组预警⚠️）。</p>
<h2 id="Cyber-Security-Fundamentals"><a href="#Cyber-Security-Fundamentals" class="headerlink" title="Cyber Security Fundamentals"></a>Cyber Security Fundamentals</h2><p>讲解网络安全的基础知识，包括网络攻击技术（钓鱼、SQL注入等）、计算机网络基础、道德黑客、数字取证等。实践操作很多，比较有意思，推荐选择。作业要求通过<code>OWASP Vulnerable Web Application Project</code>来进行模拟攻击，并编写报告（小组作业预警⚠️）。</p>
<h2 id="HCI-Design-Evaluation"><a href="#HCI-Design-Evaluation" class="headerlink" title="HCI Design &amp; Evaluation"></a>HCI Design &amp; Evaluation</h2><p>人机交互的课，我没选，据说有丢丢麻烦。</p>
<h2 id="Cyber-System-Forensics"><a href="#Cyber-System-Forensics" class="headerlink" title="Cyber System Forensics"></a>Cyber System Forensics</h2><p>快跑❌❌❌，和ECS差不多的东西。</p>
<h2 id="Human-Centred-Security-for-MSc"><a href="#Human-Centred-Security-for-MSc" class="headerlink" title="Human-Centred Security for MSc"></a>Human-Centred Security for MSc</h2><p>安全类的课，我没选，据说还阔以。</p>
<h2 id="Information-Visualisation"><a href="#Information-Visualisation" class="headerlink" title="Information Visualisation"></a>Information Visualisation</h2><p>可视化，俺还是没选，据说有丢丢麻烦。</p>
<h2 id="Cryptography-Secure-Development"><a href="#Cryptography-Secure-Development" class="headerlink" title="Cryptography &amp; Secure Development"></a>Cryptography &amp; Secure Development</h2><p>安全类的课，会讲加密，俺又双叒叕没选，据说作业难度较高。</p>
<h2 id="Internet-Technology"><a href="#Internet-Technology" class="headerlink" title="Internet Technology"></a>Internet Technology</h2><p>主讲网站开发，内容很翔实，实操很多，压力略大，不过个人比较推荐（小组作业预警⚠️，需要提前掌握Python预警⚠️）。内容包括架构、Django框架、CSS、AJAX、HTTP协议、客户端、XML等等。个人作业是根据<code>Tango with Django</code>教程写一个半成品网站。然后小组作业是4人组队，写一个网站，基本都写的是评测类的网站。Quiz比较多。</p>
<h2 id="Algorithms-Data-Structures"><a href="#Algorithms-Data-Structures" class="headerlink" title="Algorithms &amp; Data Structures"></a>Algorithms &amp; Data Structures</h2><p>SD的必修课，数据结构和算法，将来打算做开发的话这是绕不过去的坎。比较推荐，讲的不是很深，有Lab。</p>
<h2 id="Advanced-Programming"><a href="#Advanced-Programming" class="headerlink" title="Advanced Programming"></a>Advanced Programming</h2><p>SD的必修课，将来做Java开发的话推荐，会讲泛型、多线程、序列化、数据结构等内容，有Lab，作业难度稍高。</p>
<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p>有小组作业的课程组队的时候一定要慎重，来自被一次小组作业深深伤害过的人的忠告🐶<br>小组作业也要注意自己的工作量哦，毕竟小组作业的得分有一部分就是组员打分，懂得都懂🐶</p>
<p>最后祝大家都能拿<code>Distinction</code>😊</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>攻略</tag>
        <tag>英国</tag>
        <tag>选课</tag>
      </tags>
  </entry>
  <entry>
    <title>欧卡2涂装MOD制作教程</title>
    <url>/%E6%AC%A7%E5%8D%A12%E6%B6%82%E8%A3%85MOD%E5%88%B6%E4%BD%9C%E6%95%99%E7%A8%8B.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">说出来你可能不信，我用欧卡是想学在英国开车来着，但是没啥满意的涂装，就自己做了一个</blockquote>

<span id="more"></span>

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>制作MOD前需要先下载一些工具和模板</p>
<ul>
<li>Paint Job Packer，用来生成MOD文件夹，包括一些涂装模版的dds文件，下载时建议选择带有模版的那个安装包<code>Windows with included templates</code></li>
<li>ETS 2 Template Pack，包含了所有可能用到的涂装模版，包括各个型号的车头与挂车，支持卡车改装dlc和挂车dlc。作为Paint Job Packer的补充，因为Paint Job Packer生成的模版不全</li>
<li>PhotoShop DDS 插件，因为PS是不能直接保存dds文件的</li>
<li>TOBJ文件编辑器，TOBJ，即Texture Object文件，是SCS用来配置贴图纹理信息的文件格式。TOBJ文件有一部分内容是用十六进制编写的，修改起来很不方便，所以有大佬制作了这款编辑器。</li>
</ul>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>Paint Job Packer</p><p>Windows with included templates</p>
<a href="https://carsmani.ac/paint-job-packer"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>涂装模板文件</p><p>Complete ETS 2 Template Pack</p>
<a href="https://forum.scssoft.com/viewtopic.php?f=33&t=272386"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>PhotoShop DDS 插件</p><p>DDS plug-in for After Effects and Photoshop</p>
<a href="https://fnordware.blogspot.com/2014/09/dds-plug-in-for-after-effects-and.html"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>TOBJ文件编辑器</p><p>TOBJEditor</p>
<a href="https://github.com/MatthijsdeGoede/TOBJEditor"></a>
</div></div>

<p>涂装的贴图文件使用的是DDS格式，下列软件都可以编辑DDS文件，这里我用的是PhotoShop</p>
<ul>
<li>PhotoShop（需要额外安装DDS插件）</li>
<li>GIMP</li>
<li>Paint.NET</li>
</ul>
<div class="note success"><h2 id="安装dds插件"><a href="#安装dds插件" class="headerlink" title="安装dds插件"></a>安装dds插件</h2><p>把下载的插件文件（.8bi）放在PS目录下的“&#x2F;Required&#x2F;Plug-ins&#x2F;File Formats”这个文件夹里面，随后打开PS，在<code>帮助-关于增效工具</code>中出现DDS就说明安装成功<br><img data-src="https://s2.loli.net/2022/12/21/iHYn4SOTl6cIybz.png" alt="moddds.png"></p>
</div>

<h1 id="创建本地MOD文件"><a href="#创建本地MOD文件" class="headerlink" title="创建本地MOD文件"></a>创建本地MOD文件</h1><p>下面我会一步步创建一个支持斯堪尼亚R系和S系、本体自带挂车以及克劳耐dlc挂车的涂装，作为演示<br>首先安装并打开Paint Job Packer，这款工具支持同时支持欧卡和美卡，这里我选择欧卡并继续<br><img data-src="https://s2.loli.net/2022/12/21/KojRCaZeTlzFQYD.png" alt="modp2.png"></p>
<p>这里可以选择制作单一车型（如Scania R系）或者单一挂车（如Krone冷藏车）的涂装，也可以选择制作多种车型与多种挂车的涂装合集，这里我选择后者，即Paint Job Pack<br><img data-src="https://s2.loli.net/2022/12/21/p65Rr1tv98uyj24.png" alt="modp3.png"></p>
<p>下面填写MOD的基本信息，有不明白的就点击每一项后面的问号，会弹出说明。重点说明下列三项：</p>
<ul>
<li>Internal Name，这个相当于涂装的身份证号码，尽量填的独特一点，防止与其它涂装冲突</li>
<li>Supported Cabins，选择Large Cabin Only的话就只会生成最大号座舱的模版，比如Scania就只会生成High Roof而不会生成Normal Roof。另外8x4车型的涂装只能选择All Cabins才会生成</li>
<li>Split Paint Jobs，如果想生成多款车型的涂装建议选择Split, one per cabin，比如同时选择Scania S系和R系。因为S系和R系的贴图纹理是不同的，如果选择Don’t split的话，生成的模版会让S系和R系共用一张贴图纹理，涂装可能出现在你不想看到的地方</li>
</ul>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/12/21/xq1OtdZWywfeUFn.png" alt="单一车型"></div><div class="group-picture-column"><img data-src="https://s2.loli.net/2022/12/21/GQVHc2C6FzwEYgh.png" alt="多种组合"></div></div></div>

<p>填写完成后就点击Generate进入下一步，这里可以选择是否生成上传创意工坊需要的文件以及是否使用预制贴图代替空白占位符，也可以改变输出路径，这里先随便找个地方输出，然后把<code>./Paint Job Packer Output/【MOD名称】</code>文件夹单独拷贝到欧卡的本地MOD文件夹中，路径一般为<code>C:\Users\Documents\Euro Truck Simulator 2\mod</code><br><img data-src="https://s2.loli.net/2022/12/21/v8qnkZLs26IBrMA.png" alt="modp5.png"></p>
<h2 id="MOD文件结构分析"><a href="#MOD文件结构分析" class="headerlink" title="MOD文件结构分析"></a>MOD文件结构分析</h2><p>下面我们来梳理一下MOD文件夹的结构，建议打开<code>./Paint Job Packer Output/【MOD名称】</code>对照着看，我会在文件名后面进行注释说明</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Demo</span></span><br><span class="line"><span class="operator">│</span>  manifest.sii <span class="comment">//记录MOD的版本、作者、类型，以及MOD缩略图与简介文件的路径名称（就是下面两个）</span></span><br><span class="line"><span class="operator">│</span>  <span class="type">Mod_Manager_Description</span>.txt <span class="comment">//在这里编写MOD的简介，可在MOD管理器中查看</span></span><br><span class="line"><span class="operator">│</span>  <span class="type">Mod_Manager_Image</span>.jpg <span class="comment">//MOD的缩略图，可以理解为封面，会显示在MOD管理器中</span></span><br><span class="line"><span class="operator">│</span>  </span><br><span class="line"><span class="operator">├─</span>def <span class="comment">//涂装的配置文件</span></span><br><span class="line"><span class="operator">│</span>  <span class="operator">└─</span>vehicle</span><br><span class="line"><span class="operator">│</span>      <span class="operator">├─</span>trailer_owned <span class="comment">//挂车涂装的配置文件夹</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">├─</span>krone.coolliner <span class="comment">//克劳耐的冷藏车配置文件夹</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>  <span class="operator">└─</span>paint_job</span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1.sii <span class="comment">//控制车身底色的TOBJ文件的路径，一般不用管</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1_settings.sui <span class="comment">//设置涂装的名称、价格、解锁等级以及图标</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>      <span class="operator">│</span>  </span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>      <span class="operator">└─</span>accessory</span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>              demo_pj1.sii <span class="comment">//设置车身各种改装件的涂装由哪一个TOBJ文件管理</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">│</span>              </span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>  <span class="operator">└─</span>scs.box <span class="comment">//本体自带挂车的涂装配置文件夹，同上</span></span><br><span class="line"><span class="operator">│</span>      <span class="operator">│</span>                  </span><br><span class="line"><span class="operator">│</span>      <span class="operator">└─</span>truck <span class="comment">//卡车车头涂装的配置文件夹</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">├─</span>scania.r_2016 <span class="comment">//Scania R 2016的涂装配置文件夹</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>  <span class="operator">└─</span>paint_job <span class="comment">//车头底漆的涂装配置文件夹</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1_8.sii <span class="comment">//8x4底盘的配置文件，后缀是8</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1_a.sii <span class="comment">//High Roof 的配置文件，后缀是a</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1_b.sii <span class="comment">//Normal Roof 的配置文件，后缀是b</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">│</span>  demo_pj1_settings.sui <span class="comment">//设置涂装的名称、价格、解锁等级以及图标</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">│</span>  </span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>      <span class="operator">└─</span>accessory <span class="comment">//车头改装件的涂装配置文件夹</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>              demo_pj1_8.sii <span class="comment">//8x4底盘的</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>              demo_pj1_a.sii <span class="comment">//High Roof</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>              demo_pj1_b.sii <span class="comment">//Normal Roof</span></span><br><span class="line"><span class="operator">│</span>          <span class="operator">│</span>              </span><br><span class="line"><span class="operator">│</span>          <span class="operator">└─</span>scania.s_2016 <span class="comment">//Scania S 2016的涂装配置文件夹，同上</span></span><br><span class="line"><span class="operator">│</span>                          </span><br><span class="line"><span class="operator">├─</span>material</span><br><span class="line"><span class="operator">│</span>  <span class="operator">└─</span>ui</span><br><span class="line"><span class="operator">│</span>      <span class="operator">└─</span>accessory</span><br><span class="line"><span class="operator">│</span>              <span class="type">Demo</span> <span class="type">Paint</span> <span class="type">Job</span> <span class="number">1</span> <span class="type">Icon</span>.dds <span class="comment">//改装页面显示的涂装图标</span></span><br><span class="line"><span class="operator">│</span>              <span class="type">Demo</span> <span class="type">Paint</span> <span class="type">Job</span> <span class="number">1</span> <span class="type">Icon</span>.tobj <span class="comment">//不用管</span></span><br><span class="line"><span class="operator">│</span>              demo_pj1_icon.mat <span class="comment">//不用管</span></span><br><span class="line"><span class="operator">│</span>              </span><br><span class="line"><span class="operator">└─</span>vehicle <span class="comment">//dds纹理贴图文件夹</span></span><br><span class="line">    <span class="operator">├─</span>trailer_owned <span class="comment">//挂车涂装的贴图文件夹</span></span><br><span class="line">    <span class="operator">│</span>  <span class="operator">└─</span>upgrade</span><br><span class="line">    <span class="operator">│</span>      <span class="operator">└─</span>paintjob</span><br><span class="line">    <span class="operator">│</span>          <span class="operator">└─</span><span class="type">Demo</span> <span class="type">Paint</span> <span class="type">Job</span> <span class="number">1</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">├─</span><span class="type">Krone</span> <span class="type">Cool</span> <span class="type">Liner</span> <span class="comment">//克劳耐冷藏车的贴图文件夹</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      <span class="type">Base</span> <span class="type">Colour</span>.dds <span class="comment">//底色贴图</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      <span class="type">Base</span> <span class="type">Colour</span>.tobj <span class="comment">//指定底色贴图文件的路径</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      <span class="comment">//中间的省略。。。。。。。。。。</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      <span class="type">Trailer</span> <span class="type">Front</span> <span class="operator">-</span> <span class="type">Cool</span> <span class="type">Master</span>.dds <span class="comment">//制冷器的贴图</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      <span class="type">Trailer</span> <span class="type">Front</span> <span class="operator">-</span> <span class="type">Cool</span> <span class="type">Master</span>.tobj <span class="comment">//指定制冷器贴图文件的路径</span></span><br><span class="line">    <span class="operator">│</span>              <span class="operator">│</span>      </span><br><span class="line">    <span class="operator">│</span>              <span class="operator">└─</span><span class="type">SCS</span> <span class="type">Box</span> <span class="type">Trailer</span> <span class="comment">//本体自带挂车的贴图文件夹，同上</span></span><br><span class="line">    <span class="operator">│</span>                      </span><br><span class="line">    <span class="operator">└─</span>truck <span class="comment">//车头涂装的贴图文件夹</span></span><br><span class="line">        <span class="operator">└─</span>upgrade</span><br><span class="line">            <span class="operator">└─</span>paintjob</span><br><span class="line">                <span class="operator">└─</span><span class="type">Demo</span> <span class="type">Paint</span> <span class="type">Job</span> <span class="number">1</span></span><br><span class="line">                    <span class="operator">├─</span><span class="type">Scania</span> <span class="type">R</span> <span class="comment">//Scania R系的涂装贴图文件夹</span></span><br><span class="line">                    <span class="operator">│</span>      <span class="type">Cabin</span> <span class="type">A</span> (<span class="type">High</span> <span class="type">Roof</span>).dds <span class="comment">//High Roof 底漆贴图</span></span><br><span class="line">                    <span class="operator">│</span>      <span class="type">Cabin</span> <span class="type">A</span> (<span class="type">High</span> <span class="type">Roof</span>).tobj <span class="comment">//指定 High Roof 底漆贴图文件的路径</span></span><br><span class="line">                    <span class="operator">│</span>      <span class="comment">//其余文件省略</span></span><br><span class="line">                    <span class="operator">│</span>      </span><br><span class="line">                    <span class="operator">└─</span><span class="type">Scania</span> <span class="type">S</span> <span class="comment">//同上省略</span></span><br></pre></td></tr></table></figure>

<div class="note success"><h2 id="sii、tobj与dds文件之间的关系"><a href="#sii、tobj与dds文件之间的关系" class="headerlink" title="sii、tobj与dds文件之间的关系"></a>sii、tobj与dds文件之间的关系</h2><ul>
<li>def文件夹中的sii文件用于指定控制某些车身改装件涂装的tobj文件，举个例子，就是告诉游戏挂车的箱式托盘的涂装由箱式托盘.tobj这个文件管理。这里一个tobj文件可以管理多个改装件的涂装。</li>
<li>tobj与dds文件都在 vehicle 子文件夹中</li>
<li>tobj文件用于指定使用的具体dds贴图文件，举个例子，箱式托盘.tobj负责告诉游戏箱式托盘的贴图纹理是箱式托盘.dds。一个tobj文件仅对应一个dds贴图纹理。Paint Job Packer自动生成的tobj文件及其控制的dds文件的名称是相同的。</li>
<li>dds文件就是贴图了。</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/12/21/4oq6w9TS8xX2vHn.png" alt="1.drawio.png"></p>
</div>

<h1 id="制作涂装"><a href="#制作涂装" class="headerlink" title="制作涂装"></a>制作涂装</h1><p>打开贴图文件夹，把自动生成的模板dds文件拖入ps作为底图，然后就可以开始制作自己的涂装了。如果某个需要使用的模板是16x16像素的占位符的话，就到前面现在的ETS 2 Template Pack寻找对应的模板。</p>
<h2 id="导出涂装贴图"><a href="#导出涂装贴图" class="headerlink" title="导出涂装贴图"></a>导出涂装贴图</h2><p>制作完成后选择<code>文件-存储为</code>，保存类型选择DDS，然后点击保存，在弹出的对话框中选择Format为DXT5，勾选Mipmap，Alpha Channel勾选None。可以直接替换掉MOD文件夹里的模板贴图，另外导出的时候记得隐藏模板图层。<br><img data-src="https://s2.loli.net/2022/12/21/OkgL76KBjZ1yMi9.png" alt="modsave2.png"></p>
<h2 id="查看涂装效果"><a href="#查看涂装效果" class="headerlink" title="查看涂装效果"></a>查看涂装效果</h2><p>建议用游戏中的车辆查看器来查看涂装效果，修改时不需要退出游戏，在PS中修改导出后回到游戏，只需要先切换到别的涂装，再切换回自己的涂装就可以看到变化了。</p>
<h2 id="修改改装件贴图"><a href="#修改改装件贴图" class="headerlink" title="修改改装件贴图"></a>修改改装件贴图</h2><p>在自动生成的配置文件中，多个改装件可能是由同一个tobj文件控制的，而这些改装件的贴图模板可能会有细微差别，在游戏中可能出现错位，这是可以修改def文件夹中对应的sii文件与vehicle文件夹中的tobj文件来为某一个改装件指定一个新的dds贴图。举个例子，下面是控制遮阳板涂装的sii文件，五种遮阳板使用的是同一个贴图，在游戏中会有错位</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//./def/vehicle/truck/scania.s_2016/paint_job/accessory/xxx_a.sii</span></span><br><span class="line"><span class="comment">//原文件</span></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr3</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.stock&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_01&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_04&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_05&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_06&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>如果想要让每种遮阳板的涂装不同，可以这样修改：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改后</span></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr3</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.stock&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr13</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor 01.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_01&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr14</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor 04.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_04&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr15</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor 05.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_05&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">simple_paint_job_data<span class="punctuation">:</span> .ovr16</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">	paint_job_mask<span class="punctuation">:</span> <span class="string">&quot;/vehicle/truck/upgrade/paintjob/Demo Paint Job 1/Scania S/Sun Visor 06.tobj&quot;</span></span><br><span class="line">	acc_list<span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">:</span> <span class="string">&quot;sunshld.sunshld_06&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>每一个.ovr就是一个设定集，acc_list[]后面的就是改装件的名称，一个.ovr可以控制多个改装件。</p>
<p>修改后到ETS 2 Template Pack中找到对应的贴图模板，编辑完成后将dds存储到<code>./vehicle/truck/upgrade/paintjob/xxx/车型</code>中，建议贴图的命名与sii中tobj命名一致。</p>
<p>此时我们只是为不同的遮阳板制定了tobj文件的路径，而这个tobj文件目前还不存在，需要用TOBJEditor辅助创建。将mod文件夹的路径粘贴到Generate TOBJs一栏的Mod folder中，然后将上一步存储的dds贴图文件直接拖动到下面的框里，可以同时拖动多个dds文件，然后点击Generate生成即可。<br><img data-src="https://s2.loli.net/2022/12/21/EmskvBd3PKog6RO.png" alt="modtobj.png"></p>
<h2 id="MOD简介与封面"><a href="#MOD简介与封面" class="headerlink" title="MOD简介与封面"></a>MOD简介与封面</h2><p>直接编辑MOD文件夹根目录下的<code>Mod_Manager_Description.txt</code>即可修改MOD简介。<br>而根目录下的<code>Mod_Manager_Image.jpg</code>就是MOD封面，导出时尺寸必须选择276x162像素，格式为jpeg。</p>
<p><img data-src="https://s2.loli.net/2022/12/21/TFjkHbEQDBLdz5q.png" alt="MOD简介与封面"></p>
<h2 id="涂装图标"><a href="#涂装图标" class="headerlink" title="涂装图标"></a>涂装图标</h2><p>涂装图标指的是在改装页面看到的涂装图标，如下图所示。<br><img data-src="https://s2.loli.net/2022/12/21/Y9KUwFaHd1Be8L2.png" alt="涂装图标"></p>
<p>图标路径为<code>./material/ui/accessory/xxx.dds</code>。同样建议直接拖到ps里作为参考底图。导出隐藏底图图层，选择Format为DXT5，勾选Mipmap，Alpha Channel勾选Alpha 1，同时勾选Premultiply。<br><img data-src="https://s2.loli.net/2022/12/21/UO7EagcYLWIS9x1.png" alt="modicon.png"></p>
<h2 id="一个MOD中如何包含多种涂装"><a href="#一个MOD中如何包含多种涂装" class="headerlink" title="一个MOD中如何包含多种涂装"></a>一个MOD中如何包含多种涂装</h2><p>依然按照上面的流程走一遍，创建另一个mod文件夹，然后将其中def、material和vehicle三个文件夹直接复制到现有的mod文件夹中即可。注意涂装名字不要相同。</p>
<h1 id="上传到创意工坊"><a href="#上传到创意工坊" class="headerlink" title="上传到创意工坊"></a>上传到创意工坊</h1><h2 id="安装上传工具"><a href="#安装上传工具" class="headerlink" title="安装上传工具"></a>安装上传工具</h2><p>在steam的库中勾选工具，然后下拉找到<code>SCS Workshop Uploader</code>并安装<br><img data-src="https://s2.loli.net/2022/12/31/n3wuIR5M7SGm9EF.png" alt="mod_uploader.png"></p>
<h2 id="打包MOD"><a href="#打包MOD" class="headerlink" title="打包MOD"></a>打包MOD</h2><p>将mod文件夹压缩为<code>.zip</code>格式并重命名为<code>universal.zip</code>，然后复制到先前生成的<code>Workshop uploading</code>文件夹中<br><img data-src="https://s2.loli.net/2022/12/31/LN8AlFK2IimQOGh.png" alt="mod_uploader_folder.png"></p>
<h2 id="制作封面"><a href="#制作封面" class="headerlink" title="制作封面"></a>制作封面</h2><p>上传之前还需要为mod单独制作一个创意工坊里的封面，它也是别人搜索你的mod时看到的缩略图。图片规格为640x360像素，格式为JPEG，大小不超过1MB</p>
<h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>打开<code>SCS Workshop Uploader</code></p>
<ul>
<li>Game选欧卡</li>
<li>Mod data中的Folder选择<code>Workshop uploading</code>文件夹，Preview image选择前面制作的创意工坊封面</li>
<li>Visibility里面有三个选项，Private就是仅自己可见，Friends only是好友可见，Public就是公开的大家都可以搜到的了</li>
<li>简介字数必须多余50个字符，<a href="https://modding.scssoft.com/wiki/Documentation/Tools/SCS_Workshop_Uploader/Steam_formatting">语法格式参考</a></li>
<li>Tags中Type选择<code>Truck parts</code>，剩下两项选不选都行</li>
<li>Change note里简要说明一下更新了啥</li>
</ul>
<p>完事后Upload即可<br><img data-src="https://s2.loli.net/2022/12/31/mrpSwbIhHzQ68gv.png" alt="mod_uploader_setting.png"></p>
]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>MOD</tag>
        <tag>欧卡2</tag>
      </tags>
  </entry>
  <entry>
    <title>添加 Windows Terminal 至右键菜单</title>
    <url>/%E6%B7%BB%E5%8A%A0-Windows-Terminal-%E8%87%B3%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">Windows Terminal 已经在微软应用商店上架了，所以我把终端从 Fluent Terminal 换成了 Windows Terminal，记录一下将它添加到右键菜单的过程</blockquote>

<span id="more"></span>

<div class="note danger"><p>Windows 11 现在已经在右键菜单里默认添加了在终端中打开，所以不需要再单独添加了，已经添加过的去注册表里删掉[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]就好了</p></div>

<h1 id="添加图标"><a href="#添加图标" class="headerlink" title="添加图标"></a>添加图标</h1><p>首先在<code>C:\Users\[YOUR_USER_NAME]\AppData\Local</code>新建文件夹<code>Terminal</code>，可以直接使用下面的命令创建，<strong>记得把[YOUR_USER_NAME]换成自己的用户名！</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> C:\Users\[YOUR_USER_NAME]\AppData\Local\Terminal</span><br></pre></td></tr></table></figure>

<p>然后下载 Windows Terminal 图标到刚才创建的文件夹，如果浏览器没有自动下载的话就右键另存为terminal.ico</p>
<a class="btn" href="https://raw.githubusercontent.com/microsoft/terminal/master/res/terminal.ico"><i class="fa fa-arrow-right fa-fw"></i>terminal.ico 下载</a>

<h1 id="注册表写入"><a href="#注册表写入" class="headerlink" title="注册表写入"></a>注册表写入</h1><p>新建一个txt文件，添加下面的内容，然后把文件后缀改为<code>.reg</code>。<strong>记得把[YOUR_USER_NAME]换成自己的用户名！</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5</span>.<span class="number">00</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]</span><br><span class="line">@=&quot;Windows terminal here&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\\Users\\[YOUR_USER_NAME]\\AppData\\Local\\Terminal\\terminal.ico&quot;</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command]</span><br><span class="line">@=&quot;C:\\Users\\[YOUR_USER_NAME]\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe&quot;</span><br></pre></td></tr></table></figure>

<p>完成后双击文件，合并到注册表中</p>
<h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>这个时候右键菜单中已经出现了<code>Windows terminal here</code>的选项，但是点击后所在的目录并不是当前的目录，这就需要修改<code>Windows Terminal</code>的配置文件了</p>
<p>打开<code>Windows Terminal</code>，点击顶部的下拉菜单，打开<code>设置</code>，此时会打开名为<code>settings.json</code>的配置文件，要修改的部分是这个亚子</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line"><span class="comment">// Each one of them will appear in the &#x27;New Tab&#x27; dropdown,</span></span><br><span class="line"><span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line"><span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line"><span class="attr">&quot;profiles&quot;</span><span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows PowerShell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powershell.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;命令提示符&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Azure Cloud Shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows.Terminal.Azure&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<p>要想在当前文件夹启动<code>Windows Terminal</code>，需要在每一段的下面添加<code>&quot;startingDirectory&quot;: &quot;./&quot;</code>，修改完成后是这个亚子</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A profile specifies a command to execute paired with information about how it should look and feel.</span></span><br><span class="line"><span class="comment">// Each one of them will appear in the &#x27;New Tab&#x27; dropdown,</span></span><br><span class="line"><span class="comment">//   and can be invoked from the commandline with `wt.exe -p xxx`</span></span><br><span class="line"><span class="comment">// To learn more about profiles, visit https://aka.ms/terminal-profile-settings</span></span><br><span class="line"><span class="attr">&quot;profiles&quot;</span><span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// Put settings here that you want to apply to all profiles.</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// Make changes here to the powershell.exe profile.</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows PowerShell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;powershell.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// Make changes here to the cmd.exe profile.</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;0caa0dad-35be-5f56-a8ff-afceeeaa6101&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;命令提示符&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;guid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;b453ae62-4e3d-5e58-b989-0a998ec441b8&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hidden&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Azure Cloud Shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Windows.Terminal.Azure&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;startingDirectory&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<p>保存后就能够使用右键菜单在当前文件夹运行<code>Windows Terminal</code>了</p>
<h1 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h1><p>在使用Powershell的时候可能会出现报错<code>无法加载文件balabala.ps1，因为在此系统上禁止执行脚本，有关详细信息，请参阅balabala</code>，这是因为默认的<code>ExecutionPolicy</code>是<code>Restricted</code>，即不允许执行任何脚本。解决方法是以管理员身份运行，并输入命令<code>set-executionpolicy remotesigned</code>即可解除限制</p>
<blockquote>
<p>参考：</p>
<ol>
<li><a href="https://github.com/microsoft/terminal/issues/1060#issuecomment-497539461">https://github.com/microsoft/terminal/issues/1060#issuecomment-497539461</a></li>
<li><a href="https://blog.csdn.net/Jioho_chen/article/details/101159291">https://blog.csdn.net/Jioho_chen/article/details/101159291</a></li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Win10</tag>
        <tag>Windows Terminal</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记本改造计划</title>
    <url>/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">准备折腾一下笔记本，毕竟不用做建筑狗了，这个笔记本是当年高考完暑假买的，年少无知买了个商务本，众所周知，商务本=性能垃圾+贵，所以大二配完台式后给笔记本装了个Fedora，然后就一直在吃灰，这几天升级Fedora的时候崩了，但是今年9月要去国外读书，笔记本还是得用。计划安装 Win10 LTSC，Ubuntu 18.04 LTS，Macos Mojave三系统，把机械硬盘换成固态，升级网卡</blockquote>

<span id="more"></span>

<p>老规矩先上配置<br>型号：Acer TravelMate P645-SG<br>CPU：Intel Core i7-5500U （2.4GHz&#x2F;2C4T）（垃圾的一批）<br>GPU：NVIDIA 840M 2G (拆掉独显提升性能系列)<br>内存：8G DDR3L 1600Mhz<br>SSD：建兴L8T 128G msata接口<br>HDD：西数 500G 5400转蓝盘<br>网卡：Intel 7265NGW</p>
<p>准备升级硬件<br>网卡：换成DW1560，方便黑苹果用，淘宝330<br>硬盘：机械硬盘换成三星860EVO 500G，京东559<br>内存：这个还在纠结，准备把插槽4G的换成8G</p>
<h1 id="硬件升级"><a href="#硬件升级" class="headerlink" title="硬件升级"></a>硬件升级</h1><p>实不相瞒，我这几天拆了四五次电脑，螺丝都给拧花了一个，下面是拆机图，红色框里是网卡的位置，我已经拆了，绿框是内存，黄框是新换的SSD<br><img data-src="https://s2.loli.net/2022/05/13/hlnmf9TeY4is6Xp.jpg" alt="拆机图"><br>估计当年脑子里进了不少水，选了建筑专业就算了，买个笔记本也这么奇葩，青黄不接的5代低压CPU + 青黄不接的8系亮机显卡，唯一的优点就是续航长？</p>
<h2 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h2><p>原装的英特尔网卡当然是不能用了，所以要去某宝买黑苹果可以用的网卡，买之前注意接口和网卡长度，一般都是<code>ngff</code>的小卡</p>
<p>安装的时候把原来的天线接口断开，用指甲挑一下就开了，然后拧螺丝换上新的，再把天线接上</p>
<p>DW1560在我的笔记本上有一点问题，蓝牙不能用，三个系统都搜索不到蓝牙设备，查阅资料后发现需要屏蔽背面两个识别针脚，最简单粗暴的方法就是用胶带把这两个贴上，下面上图</p>
<p><img data-src="https://s2.loli.net/2022/05/13/6t4XJmzknyBwLg7.jpg" alt="网卡"></p>
<p>需要屏蔽的就是红圈里右侧的两个针脚，手残党最好找个镊子贴胶带，注意不要贴到左边的两个。屏蔽之后BIOS自检时间会变长一点，问题不大</p>
<h2 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h2><p>老电脑，只有一个MSATA和一个SATA3的接口，上不了M.2就很难受</p>
<p>把原来的500G蓝盘拆下来扔到硬盘盒里做了移动硬盘，虽然速度很垃圾但是勉强能用，分个区给mac做备份</p>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>这个笔记本内存是板载4G + 插槽4G的，就更难受了，升级内存的话只能是4G+8G这种逼死强迫症的组合，所以暂时搁置，到时候不够用了再说</p>
<h1 id="Win10-LTSC-安装"><a href="#Win10-LTSC-安装" class="headerlink" title="Win10 LTSC 安装"></a>Win10 LTSC 安装</h1><p>首先安装的是老坛酸菜，放在128G的固态中，选择它主要是为了省电+节省硬盘空间</p>
<h2 id="下载镜像文件"><a href="#下载镜像文件" class="headerlink" title="下载镜像文件"></a>下载镜像文件</h2><p>Win10的镜像文件都可以在<code>MSDN, I Tell You</code>上面下载，下面是传送门</p>
<a class="btn" href="https://msdn.itellyou.cn/?tdsourcetag=s_pcqq_aiomsg"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>在左侧操作系统栏中找到相对应的版本下载即可，上面的都是<code>ed2k</code>链接，建议使用迅雷下载（莫得办法），另外有能力的话可以给站长一些支持，毕竟坚持十几年也很不容易</p>
<h2 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>win10的镜像越来越大了，现在1903的<code>install.wim</code>已经超过4G。所以还是要用UltraISO来刻录，以前<code>install.wim</code>都不到4个G，制作安装盘的时候直接把iso解压到U盘就可以用了。</p>
<p>老坛酸菜的镜像没有大于4G的文件，所以找一个8G及以上的U盘，把镜像直接解压到U盘就可以了</p>
<h3 id="UltraISO刻录教程"><a href="#UltraISO刻录教程" class="headerlink" title="UltraISO刻录教程"></a>UltraISO刻录教程</h3><p>安装ltsc的请跳过，这个是制作1903启动盘的步骤</p>
<ul>
<li>插入U盘</li>
<li>以管理员身份运行UltraISO</li>
<li>选择<code>文件</code>——<code>打开</code></li>
<li>在弹出窗口中找到要用的ISO文件，点击<code>打开</code></li>
<li>点击<code>启动</code>——<code>写入硬盘镜像</code></li>
<li>在弹出窗口中选择好自己的U盘</li>
<li>写入方式使用默认的<code>USB-HDD+</code></li>
<li>点击<code>写入</code></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>插上启动盘，然后开机狂按<code>F2</code>进入<code>BIOS</code></li>
<li>设置U盘为首选启动项</li>
<li>保存并退出BIOS</li>
<li>系统转一会圈之后就会进入语言选择界面，一般默认就行，点击<code>下一步</code></li>
<li>使用<code>Shift</code>+<code>F10</code>打开终端</li>
<li>输入<code>diskpart</code>打开磁盘管理</li>
<li>输入<code>list disk</code>，列出硬盘</li>
<li>找到安装目标磁盘的序号，输入<code>select disk 序号</code>回车</li>
<li>输入<code>clean</code>回车</li>
<li>输入<code>convert gpt</code>转换gpt格式</li>
<li>点击<code>现在安装</code></li>
<li>接受条款然后点击<code>下一步</code></li>
<li>选择<code>自定义</code></li>
<li>选择目标磁盘，点击<code>下一步</code></li>
<li>重启的时候拔下启动U盘</li>
<li>剩下的一路无脑下一步就装完了</li>
</ul>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>LTSC没有数字权利激活(明明LTSB有的，咋到新版本就没了呢，强迫症表示不爽)，所以要用<code>KMS激活</code><br>右键单击开始菜单微软图标，使用管理员身份运行<code>PowerShell</code>，依次输入下列指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">slmgr -ipk M7XTQ-FN8P6-TTKYV-9D4CC-J462D</span><br><span class="line">slmgr -skms kms.03k.org</span><br><span class="line">slmgr -ato</span><br><span class="line">slmgr -dlv</span><br></pre></td></tr></table></figure>

<p>中途会弹出对话框，全点确定就行</p>
<p>剩下的过程就是安装软件，我另一篇文章总结了一些好用的软件，附上传送门</p>
<a class="btn" href="https://siriusq.top/%E8%BD%AF%E4%BB%B6%E6%95%B4%E7%90%86.html"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h1 id="Ubuntu-18-04-LTS-安装"><a href="#Ubuntu-18-04-LTS-安装" class="headerlink" title="Ubuntu 18.04 LTS 安装"></a>Ubuntu 18.04 LTS 安装</h1><h2 id="下载镜像文件-1"><a href="#下载镜像文件-1" class="headerlink" title="下载镜像文件"></a>下载镜像文件</h2><p>Ubuntu的镜像文件去官网下，传送门</p>
<a class="btn" href="https://ubuntu.com/download/desktop"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="制作启动盘-1"><a href="#制作启动盘-1" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>Ubuntu的启动盘可以使用软件刻录，我比较懒，就直接把iso镜像解压到U盘里了，然后在bios页面添加U盘对应的efi启动项，就可以就如安装程序了</p>
<h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><ul>
<li>选择<code>install ubuntu</code>并回车开始安装</li>
<li>选择语言以及键盘布局</li>
<li>选择<code>最小安装</code>节省时间</li>
<li><code>装Ubuntu更新</code>这个看心情选</li>
<li><code>安装类型</code>选择<code>其他选项</code></li>
<li>找到要安装Ubuntu的目标磁盘</li>
<li>点击左下角的<code>+</code>进行分区，分区方法有很多种，我分了三个区<ul>
<li>第一个是<code>EFI系统分区</code>，我分了512M</li>
<li>第二个是<code>交换空间</code>，也就是虚拟内存，和你的实际内存一样大就行，我分了8192M，也就是8G</li>
<li>第三个是主分区，挂载点是<code>/</code>，用于<code>Ext4日志文件系统</code>，看个人需求，我分了160G</li>
</ul>
</li>
<li>分区完成后选中<code>efi</code>分区然后点击<code>现在安装</code></li>
<li>选择时区，创建用户名和密码</li>
<li>安装完成后会要求重启</li>
</ul>
<h2 id="添加grub引导"><a href="#添加grub引导" class="headerlink" title="添加grub引导"></a>添加grub引导</h2><p>重启后你会神奇的发现直接俄进入了windows系统，因为ubuntu没有添加引导，我又用懒人方法在bios中添加了grub的efi启动项，然后把他设为首选启动项，这样Ubuntu和Win就可以共存了</p>
<h1 id="Macos-Mojave-10-14-6-折腾"><a href="#Macos-Mojave-10-14-6-折腾" class="headerlink" title="Macos Mojave 10.14.6 折腾"></a>Macos Mojave 10.14.6 折腾</h1><p>最后一个也是最难搞的一个就是黑苹果了，折腾了好几天，绕了不少弯，安装流派依旧是<code>Vanilla</code></p>
<p>我制作安装盘的过程嘛。一言难尽，直接放上参考教程，<a href="https://fewtarius.gitbook.io/laptopguide/">The Vanilla Laptop Guide</a>，这个网站我到最后修复睡眠问题的时候才发现，早点发现的话就不用绕那么多圈子了。</p>
<p><strong>建议直接使用上面的方法，下面是本人的折腾记录</strong>，我会把我的EFI上传到github，下载下来替换掉刻录启动盘的时候生成的，直接用就行，记得在修改机型的相关信息</p>
<p>完美程度95%</p>
<ul>
<li>读卡器和视频输出我用不到就没搞</li>
<li>读卡器据说有<code>Sinetek-rtsx.kext</code>可以驱动，有需要的可以试一下，我没有SD卡没法测试</li>
<li>手头没有多余的视频线，不知道能不外接显示器，等回学校再测试一下</li>
</ul>
<table>
<thead>
<tr>
<th align="center">类别</th>
<th align="center">驱动</th>
</tr>
</thead>
<tbody><tr>
<td align="center">电池</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">显示器</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">亮度调节</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">睡眠</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">USB</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">键盘</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">触摸板</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">声卡</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">CPU变频</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">Airdrop</td>
<td align="center">OK</td>
</tr>
<tr>
<td align="center">读卡器</td>
<td align="center">N&#x2F;A</td>
</tr>
<tr>
<td align="center">HDMI输出</td>
<td align="center">N&#x2F;A</td>
</tr>
<tr>
<td align="center">VGA输出</td>
<td align="center">N&#x2F;A</td>
</tr>
</tbody></table>
<hr>
<p>下面是我一言难尽的折腾过程，请点击下面传送门跳过</p>
<a class="btn" href="#EFI%E4%B8%8B%E8%BD%BD"><i class="fa fa-paper-plane fa-fw"></i>我是传送门</a>

<h2 id="制作启动盘-2"><a href="#制作启动盘-2" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><p>下面只是我九曲十八弯的安装盘翻车记录，仅供参考，因为一些细节记不清了，启动盘我是用台式机上的黑果刻的，安装第二台黑果的时候有另一台黑果用会简单不少</p>
<ul>
<li>一开始的我还是在win上用gibmacos制作，因为这个方法用的是恢复镜像，所以安装的时候要在线下载安装镜像，然而我的网卡一直不能驱动，所以就很尴尬的卡住了</li>
<li>然后我就满世界的找教程，慌不择路的选了一个，跟着它一步一步的走，然后发现，我怎么搞了个PE盘？这镜像明明是Mojave 10.14.6 啊？？？</li>
<li>然后我又下载了Mojave的官方镜像，刻录完后用Clover添加了EFI分区，换上了Vanilla的plist，开机发现没有install macos这个选项，再次尬住</li>
<li>最后我是这么解决掉。。。把最后一次刻录的EFI分区文件整个替换成了第一步在win上刻录的那个EFI分区文件，然后再换上Vanilla的plist文件，简直蠢到家了</li>
</ul>
<h3 id="Mojave-原版镜像下载"><a href="#Mojave-原版镜像下载" class="headerlink" title="Mojave 原版镜像下载"></a>Mojave 原版镜像下载</h3><p>原版镜像可以用<code>macOS Mojave Patcher Tool</code>下载</p>
<a class="btn" href="http://dosdude1.com/mojave/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>下载完成后打开软件，在顶栏中选择<code>Tools</code>-<code>Download macOS Mojave</code>即可</p>
<h3 id="刻录安装盘"><a href="#刻录安装盘" class="headerlink" title="刻录安装盘"></a>刻录安装盘</h3><p>这一步我用的软件是<code>DiskMaker X 8 for MacOS Mojave</code></p>
<a class="btn" href="https://diskmakerx.com/download/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>注意不要下载最新的，那是给Catalina用的</p>
<ul>
<li>下载完成后打开软件，会提示你是否更新，选择<code>Not now, thanks</code>即可</li>
<li>选择<code>Select a macOS Installation App</code>，找到上一步下载的安装镜像，点击选取</li>
<li>选择<code>An 8 GB USB thumb drive（ERASE ALL DISL）</code></li>
<li>选择你的U盘然后点击<code>Choose this disk</code></li>
<li>最后会要求你输入密码，然后等待一段时间会提示你安装盘刻录完成</li>
</ul>
<h3 id="创建EFI分区"><a href="#创建EFI分区" class="headerlink" title="创建EFI分区"></a>创建EFI分区</h3><p>这一步需要使用<code>Clover EFI bootloader</code></p>
<a class="btn" href="https://sourceforge.net/projects/cloverefiboot/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>下载安装，一路继续，在<code>安装类型</code>那里点击左下角的<code>自定</code>，<code>安装位置</code>选择自己的U盘</p>
<p><strong>UEFI设置</strong></p>
<ul>
<li>仅安装UEFI开机版本</li>
<li>安装Clover到EFI系统区</li>
<li>在UEFI Drivers里面勾选这三个选项<ul>
<li>AptioMemoryFix</li>
<li>PartitionDxe</li>
<li>ApfsLoader</li>
</ul>
</li>
</ul>
<p>不知道为什么，我这样创建的安装盘没能成功进入安装页面，所以我把第一次用gibmacos创建的EFI文件夹直接复制到U盘上替换掉了原来的EFI文件夹</p>
<h3 id="替换config-plist"><a href="#替换config-plist" class="headerlink" title="替换config.plist"></a>替换config.plist</h3><p>这一步要找到自己的CPU所对应的<code>config.plist</code>文件，下载后替换EFI文件中的<code>config.plist</code>。github上已经有大神按照CPU代数制作了相应的文件，记得把机型设置成<code>MacBook Air7,2</code></p>
<a class="btn" href="https://github.com/corpnewt/Hackintosh-Guide/tree/master/Configs"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>这里说明一下CPU的代号对应问题</p>
<ul>
<li>CoffeeLake - 第八代CPU</li>
<li>Haswell - 第四代CPU</li>
<li>Ivy Bridge - 第三代CPU</li>
<li>KabyLake -第七代CPU</li>
<li>Skylake - 第六代CPU</li>
</ul>
<p>没错，中间单单少了我那奇葩的第五代CPU-Broadwell，所以我就用第四代的文件代替了，第五代就是第四代的一个小升级，差不多能用</p>
<p>由于Github上并没有下载按钮，所以我们需要点击要下载的文件，然后点击页面上方的<code>Raw</code>，右键另存为<code>config.plist</code></p>
<h3 id="加载kext"><a href="#加载kext" class="headerlink" title="加载kext"></a>加载kext</h3><p>kext就相当于驱动，由于苹果的官方驱动只针对特定型号的硬件，所以我们需要找到适合自己硬件的kext来驱动，需要的文件有</p>
<ul>
<li><a href="https://github.com/acidanthera/VirtualSMC/releases">VirtualSMC.kext</a> - 最核心的kext，下载下来的压缩包里有几个附属kext，也要一起使用</li>
<li><a href="https://github.com/acidanthera/Lilu/releases">Lilu.kext</a> - 我觉得这是个类似运行库的东西</li>
<li><a href="https://github.com/acidanthera/WhateverGreen/releases">WhateverGreen.kext</a> - 显卡补丁</li>
<li><a href="https://github.com/acidanthera/VoodooPS2/releases">VoodooPS2.kext</a> - 键盘和触摸板的驱动</li>
<li><a href="https://github.com/acidanthera/AppleALC/releases">AppleALC.kext</a> - 声卡补丁</li>
<li><a href="https://github.com/Mieze/IntelMausiEthernet">IntelMausiEthernet.kext</a> - 有线网卡补丁</li>
<li><a href="https://github.com/acidanthera/AirportBrcmFixup/releases">AirportBrcmFixup.kext</a> - 无线补丁</li>
<li><a href="https://bitbucket.org/RehabMan/os-x-brcmpatchram/downloads/">BrcmFirmwareData.kext</a> - 无线网卡补丁</li>
<li><a href="https://bitbucket.org/RehabMan/os-x-brcmpatchram/downloads/">BrcmPatchRAM2.kext</a> - 和上一个在一个压缩包里</li>
<li><a href="https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/">FakePCIID.kext</a> - pci补丁</li>
<li><a href="https://bitbucket.org/RehabMan/os-x-fake-pci-id/downloads/">FakePCIID_Broadcom_WiFi.kext</a> - 和上一个在一个压缩包里</li>
</ul>
<p>把这些文件放到<code>./EFI/CLOVER/kext/Other</code>路径中</p>
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>上一篇中写过一部分，复制粘贴大法</p>
<h3 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h3><ol>
<li>开机进入BIOS(快捷键为F2)，将所有设置设为默认</li>
<li>关闭<code>Secure boot</code>,保存退出</li>
<li>重启再次进入BIOS，选择<code>Boot Device</code>的首选项为<strong>U盘</strong></li>
<li>从U盘引导后会进入Clover菜单，选择<code>Boot macOS Install from OS X Base System</code>回车，Clover默认会开启啰嗦模式，就是在屏幕上滚动显示状态，跑完就会进入MacOS安装程序，出现选择语言的菜单</li>
</ol>
<h3 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h3><p>安装之前需要对目标磁盘进行格式化</p>
<ol>
<li>双击<code>磁盘工具</code></li>
<li>点击左上角<code>显示</code>选项的下拉菜单并选择<code>显示所有设备</code></li>
<li>点击顶部的<code>抹掉</code></li>
<li>选择用于安装MacOS的硬盘，并将其设置为<ul>
<li>名称: （设置硬盘的名称）</li>
<li>格式： Mac OS 扩展（日志式）</li>
<li>方案: GUID 分区图</li>
</ul>
</li>
<li>点击右下方的<code>抹掉</code></li>
<li>关闭<code>Disk Utility</code></li>
</ol>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><ol>
<li>选择<code>安装macOS</code>，点击继续</li>
<li>选择用于安装的磁盘</li>
<li>等待大概十几分钟，安装完成后会自动重启</li>
</ol>
<h3 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h3><p>重启后再次选择U盘引导，进入Clover，选择<code>Boot macOS from 你硬盘的名字</code>，等待Clover啰嗦模式跑完就会进入欢迎使用页面，选择国家和键盘balabala的不多说</p>
<ul>
<li>传输信息到这台Mac - 现在不传输任何信息</li>
<li>AppleID登陆可以先跳过，后面可能需要修改机型，修改完后还要重新登录</li>
<li>条款与条件 - 全部同意</li>
<li>快捷设置 - 选择自定设置，然后把<code>分析</code>里面的勾选取消，黑苹果就没有必要来分析了hhhhh</li>
</ul>
<p>等待一会就能够进入系统了</p>
<h2 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h2><p>现在我们仍然需要通过安装U盘进行启动，这一步我们将把EFI文件从U盘复制到启动盘，然后就不需要U盘了<br>首先需要下载下面的两个软件</p>
<ul>
<li><a href="https://sourceforge.net/projects/cloverefiboot/">Clover EFI bootloader</a></li>
<li><a href="https://mackie100projects.altervista.org/download-clover-configurator/">clover Configurator</a></li>
</ul>
<h3 id="Clover-EFI-bootloader设置"><a href="#Clover-EFI-bootloader设置" class="headerlink" title="Clover EFI bootloader设置"></a>Clover EFI bootloader设置</h3><p>下载安装，一路继续，在<code>安装类型</code>那里点击左下角的<code>自定</code>，具体设置如下</p>
<ul>
<li>仅安装UEFI开机版本</li>
<li>安装Clover到EFI系统区</li>
<li>在UEFI Drivers里面勾选这三个选项<ul>
<li>AptioMemoryFix</li>
<li>PartitionDxe</li>
<li>ApfsLoader</li>
</ul>
</li>
<li>安装RC Scripts到目标磁区</li>
</ul>
<h3 id="EFI文件替换"><a href="#EFI文件替换" class="headerlink" title="EFI文件替换"></a>EFI文件替换</h3><ol>
<li>下载安装然后打开<code>Clover Configurator</code></li>
<li>点击左侧菜单里的<code>挂载分区</code></li>
<li>在右下找到安装macOS的硬盘，点击旁边的<code>挂载分区</code></li>
<li>再点击旁边的<code>打开分区</code>，会打开<code>EFI</code>文件夹</li>
<li>打开安装U盘<code>CLover</code>，把里面的文件拷贝到上一步打开的文件夹</li>
<li>此时系统会提醒有重复文件，点击替换</li>
</ol>
<p>此时重启就可以进入bios把首选启动项改成clover了，U盘可以推出了</p>
<h2 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p>部分驱动使用<code>Clover Configurator</code>安装，在<code>安装驱动</code>的<code>UEFI驱动</code>里面勾选下面的选项，我不太确定那些是必须的hhh</p>
<ul>
<li>ApfsDriverLoader</li>
<li>AptioInputFix</li>
<li>AptioMemoryFix</li>
<li>AudioDce</li>
<li>DataHubDxe</li>
<li>FSInject</li>
<li>HFSPlus</li>
<li>PartitionDxe</li>
<li>Ps2MouseDxe</li>
<li>SMCHelper</li>
<li>UsbKbDxe</li>
<li>UsbMouseDxe</li>
</ul>
<p><strong>下面的步骤需要使用<code>Hackintool</code>来进行设置</strong></p>
<a class="btn" href="https://www.tonymacx86.com/threads/release-hackintool-v2-8-6.254559/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="声卡"><a href="#声卡" class="headerlink" title="声卡"></a>声卡</h3><p>前面已经安装了AppleALC的声卡驱动，但是此时还没有声音</p>
<ol>
<li>点击<code>音频</code></li>
<li>在下面的<code>Layout ID</code>中选择数值，我选择的是127</li>
</ol>
<h3 id="核显"><a href="#核显" class="headerlink" title="核显"></a>核显</h3><ol>
<li>点击<code>应用补丁</code></li>
<li>在<code>CPU架构</code>中选择<code>Broadwell</code>，平台ID选择<code>0x16160002</code></li>
<li>点击下面的<code>应用补丁</code></li>
<li>在通用中勾选<ol>
<li>设备属性</li>
<li>自动侦测变化</li>
<li>全部</li>
<li>接口</li>
<li>基本显存</li>
<li>图形卡</li>
<li>音频</li>
</ol>
</li>
<li>在高级中勾选<ol>
<li>DVMT 32MB预分配</li>
<li>禁用eGPU</li>
<li>将DP映射到HDMI</li>
<li>仿冒图形卡ID</li>
<li>显存2048MB</li>
<li>启用HDMI20（4K）</li>
<li>USB端口数限制</li>
</ol>
</li>
<li>点击生成补丁</li>
</ol>
<h3 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h3><ol>
<li>点击<code>显示器</code></li>
<li>选中自己的显示器</li>
<li>在注入EDID中选择合适的比例，选择合适的分辨率</li>
<li>点击下面的加号</li>
<li>点击右下角的导出按钮</li>
<li>把生成的kext文件复制到<code>./EFI/CLOVER/kext/Other</code>路径中</li>
</ol>
<p>点击顶栏的<code>文件</code>，选择导出引导工具Config.plist，替换掉EFI分区中的文件，重启</p>
<h3 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h3><p>USB和睡眠的关系比较大，很多时候睡眠失败都是USB的锅，USB需要使用Hackintool定制端口</p>
<ul>
<li>首先先到<code>Clover Configurator</code>的内核与驱动补丁中打开解除USB端口数量限制的补丁，相关补丁在注释中会标明</li>
<li>打开<code>Hackintool</code>，点击USB，可以在下面看到，已经连接过的端口是绿色的</li>
<li>准备好一个USB3.0的U盘，一个USB2.0的设备，比如键盘鼠标，打开记事本</li>
<li>把笔记本的USB接口依次用2.0和3.0的设备插一遍，记录下对应的名称</li>
<li>如果有Type-C的话要正反插，端口不变的就是Type-C+sw，变化的就是Type-C</li>
<li>根据记录选择连接器类型，没有插过的就选择internal</li>
<li>选中没有变绿的接口，点击下面的减号删掉</li>
<li>注意，保证接口数量小于等于15个，USB3.0的算两个</li>
<li>点击右下角的导出图标</li>
<li>把生成的ssdt文件放到<code>./EFI/CLOVER/ACPI/patched</code>路径中</li>
<li>把生成的USBport.kext放到<code>./EFI/CLOVER/kext/Other</code>路径中</li>
<li>回到<code>Clover Configurator</code>的内核与驱动补丁中关闭解除USB端口数量限制的补丁</li>
<li>重启</li>
</ul>
<p><strong>下面的这些设置需要使用SSDT进行设置，首先下载maciASL</strong></p>
<a class="btn" href="https://github.com/acidanthera/MaciASL/releases"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="亮度"><a href="#亮度" class="headerlink" title="亮度"></a>亮度</h3><p>亮度设置其实有两个方法，第一种是在<code>Clover Configurator</code>中勾选添加PLNF，简单粗暴，但是这个方法和电池驱动有冲突，水火不容，所以建议采用ssdt的方法，下载下面的ssdt文件，然后放到<code>./EFI/CLOVER/ACPI/patched</code>路径中</p>
<a class="btn" href="https://raw.githubusercontent.com/acidanthera/WhateverGreen/master/Manual/SSDT-PNLF.dsl"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>重启之后在偏好设置中会出现显示器亮度滑块，但是不能用键盘调节屏幕亮度，这个我试了很多种方法是都没能成功使用原来的键位调节亮度，所以只用了一个简单粗暴的方法，打开系统偏好设置-键盘-快捷键，点击显示器，点击降低和提高显示器亮度，按下想用的快捷键，注意不要发生冲突</p>
<h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><p>CPU部分主要是变频的问题，不打补丁的话cpu一直处在睿频模式，很耗电，打补丁使用的是<a href="https://github.com/Piker-Alpha/ssdtPRGen.sh">ssdtPRGen</a></p>
<ul>
<li>打开终端</li>
<li>输入命令<code>curl -o ~/ssdtPRGen.sh https://raw.githubusercontent.com/Piker-Alpha/ssdtPRGen.sh/Beta/ssdtPRGen.sh</code>下载</li>
<li>输入命令<code>chmod +x ~/ssdtPRGen.sh</code>授予运行权限</li>
<li>运行脚本，根据提示进行选择，最后会生成ssdt文件</li>
<li>把生成的ssdt文件放到<code>./EFI/CLOVER/ACPI/patched</code>路径中</li>
<li>重启</li>
</ul>
<p>通过安装软件来判断cpu是否能变频，我用的是<code>Intel Power Gadget</code></p>
<a class="btn" href="https://software.intel.com/en-us/articles/intel-power-gadget"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>做完这些之后基本就是完美黑苹果了，登陆你的Apple ID，接着设置就好了</p>
<p>以上</p>
<hr>
<h2 id="EFI下载"><a href="#EFI下载" class="headerlink" title="EFI下载"></a>EFI下载</h2><p>下载后解压，在<code>Clover Configurator</code>中生成自己的机型相关参数</p>
<a class="btn" href="https://github.com/Siriusq/Acer-TMP645-Hackintosh/releases/download/v1.0/EFI.zip"><i class="fa fa-arrow-right fa-fw"></i>Acer TravelMate P645-SG</a>

<p>到BIOS里设置clover默认启动就能愉快的用三系统了</p>
<h1 id="Ubuntu的美化"><a href="#Ubuntu的美化" class="headerlink" title="Ubuntu的美化"></a>Ubuntu的美化</h1><p>实在是看不惯Ubuntu的基佬紫风格，美化一下。打开终端安装插件<code>apt install chrome-gnome-shell</code></p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>使用的主题是<code>Arc Theme</code></p>
<a class="btn" href="https://github.com/arc-design/arc-theme"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<ul>
<li>打开终端输入<code>sudo apt install arc-theme</code>直接安装</li>
<li>安装完成后打开<code>优化</code></li>
<li>把<code>主题</code>的<code>应用程序</code>和<code>Shell</code>设置为arc主题即可</li>
</ul>
<h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><p>主题换完后图标也要换，我用的是Papirus</p>
<ul>
<li>打开终端，依次输入下面三条命令</li>
<li><code>sudo add-apt-repository ppa:papirus/papirus</code></li>
<li><code>sudo apt-get update</code></li>
<li><code>sudo apt-get install papirus-icon-theme</code></li>
<li>安装完成后打开<code>优化</code></li>
<li>把<code>主题</code>的<code>图标</code>设置为papirus即可</li>
</ul>
<h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><ul>
<li>打开终端</li>
<li>点击顶栏-<code>配置文件首选项</code></li>
<li>选择配置文件</li>
<li>点击<code>颜色</code></li>
<li>勾选<code>使用透明背景</code></li>
</ul>
<h1 id="一点微小的工作"><a href="#一点微小的工作" class="headerlink" title="一点微小的工作"></a>一点微小的工作</h1><p>三系统装完之后进入win10会发现时间不对，慢了8个小时，因为Win10默认BIOS时间为本地时间，而Mac和Linux则是把BIOS时间作为UTC，正好和北京时间相差8小时，所以需要做一点微小的工作调整一下</p>
<ul>
<li>使用<code>Win+R</code>打开运行窗口</li>
<li>输入<code>regedit</code>打开注册表编辑器</li>
<li>打开路径<code>HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/TimeZoneInformation/</code></li>
<li>右键新建<code>DWORD</code></li>
<li>命名为<code>RealTimeIsUniversal</code></li>
<li>设置数值为<code>1</code></li>
<li>重启</li>
</ul>
<p>折腾的差不多了，开学前的日子就要愉快的肝代码了hhh</p>
<blockquote>
<p>感谢：<a href="https://vanilla.amd-osx.com/">AMD OS X Vanilla</a>、<a href="https://fewtarius.gitbook.io/laptopguide/">The Vanilla Laptop Guide</a>、<a href="https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide/config.plist-per-hardware/haswell">hackintosh.gitbook.io</a>、<a href="https://sleele.com/2019/06/07/%e4%bd%bf%e7%94%a8hackintool%e5%ae%9a%e5%88%b6%e9%bb%91%e8%8b%b9%e6%9e%9cusb%e9%a9%b1%e5%8a%a8/">sleele的博客</a>、<a href="https://blog.daliansky.net/">黑果小兵</a>、<a href="https://www.cnblogs.com/SemiconductorKING/p/7702410.html">SemiconductorKING</a> 提供的帮助！</p>
</blockquote>
]]></content>
      <categories>
        <category>macOS &amp; Hackintosh</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>黑苹果</tag>
        <tag>多系统</tag>
      </tags>
  </entry>
  <entry>
    <title>英国CS转专业申请指北</title>
    <url>/%E8%8B%B1%E5%9B%BDCS%E8%BD%AC%E4%B8%93%E4%B8%9A%E7%94%B3%E8%AF%B7%E6%8C%87%E5%8C%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">申请季正式结束，网站咕咕咕了快半年，是时候开始一波高产了。开一贴讲一下转专业申请英国 CS MSc 的那些事</blockquote>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我本科的专业是建筑学，高考报志愿的时候脑子可能进了点水，把计算机的志愿放在了建筑学的后面，然后就稀里糊涂的上了这个五年制的天坑专业，还白白搭上了一个暑假的时间学素描，因为建筑学入学还要加试美术，现在想想，这个暑假拿来学 C 学 Java 它不香吗？</p>
<p>（当事人：现在就是后悔，非常后悔）</p>
<p>这里本来打了很多转专业的起因经过，想了想还是略去不表吧，总之如果你是一只学建筑学的很痛苦的建筑狗且对 CS 有一定的兴趣，希望这篇文章能够帮到你</p>
<p>这篇文章只针对转换课程，即 conversion 课程，此类课程对申请人的背景要求较低，针对本科非CS专业的申请人开设，部分学校要求提供数学能力证明以及STEM背景。至于大佬们可以试试直接申请科班的 CS MSc ，我水平太菜 &amp; 担心毕不了业所以没有尝试申请科班的课程</p>
<p>另外我也会简单说一下留学申请DIY的那些事，出国读书真的蛮不容易的，从语言到文书再到申请，一路上充满了想赚你钱的人，作为2020年即将被消灭的贫困人口，DIY就是最好的选择，既能省钱，也能提升自己的能力</p>
<span id="more"></span>


<h1 id="时间线"><a href="#时间线" class="headerlink" title="时间线"></a>时间线</h1><p>申请时间线仅供参考，针对五年制本科，四年制本科请减去一年食用</p>
<ul>
<li>五年制大四及以前 - 努力刷高GPA，英国学校都用GPA来做硬性标准，双非尽量刷到85+。另外可以尝试进行语言考试（雅思、托福、PTE等）以及选校</li>
<li>大四暑假 - 开始准备文书（PS、CV、RL等），同时继续考语言&#x2F;选校</li>
<li>大五开学 - 这时候英国大学就陆续开放申请了，回学校找教务处开具相关证明材料，准备投递申请</li>
<li>大五剩下的时间 - 没有考过语言的继续准备，考完的可以当咸鱼了hhh</li>
</ul>
<h1 id="选校指南"><a href="#选校指南" class="headerlink" title="选校指南"></a>选校指南</h1><p>英国的大学对于转专业的申请还是很友好的，有不少 CS Conversion 的专业，建议大家选校的时候参考QS排名以及学校官网的课程信息，此外大学所在的城市也需要考虑。下面是我当时找到的大学名单，只收录了QS前200的大学。</p>
<ul>
<li>布里斯托大学</li>
<li>格拉斯哥大学</li>
<li>谢菲尔德大学</li>
<li>诺丁汉大学</li>
<li>伯明翰大学</li>
<li>纽卡斯尔大学</li>
<li>卡迪夫大学</li>
<li>巴斯大学</li>
<li>贝尔法斯特女王大学</li>
<li>利物浦大学</li>
<li>都柏林大学（爱尔兰）</li>
</ul>
<h2 id="布里斯托大学"><a href="#布里斯托大学" class="headerlink" title="布里斯托大学"></a>布里斯托大学</h2><p>布大算是开设转专业课程排名最高的学校了，2020年QS排名49，坐标英格兰西南</p>
<h3 id="Computer-Science-conversion"><a href="#Computer-Science-conversion" class="headerlink" title="Computer Science (conversion)"></a>Computer Science (conversion)</h3><p>学制1年，学费 ￡24700，仅有全日制，需要提供数学能力证明，开设课程如下</p>
<ul>
<li>Programming in C</li>
<li>Overview of Computer Architecture</li>
<li>Software Engineering and Group Project</li>
<li>Object Oriented Programming with Java</li>
<li>Research Skills</li>
<li>Web Technologies</li>
<li>MSc Project Computer Science</li>
<li>Databases</li>
</ul>
<a class="btn" href="https://www.bristol.ac.uk/study/postgraduate/2020/eng/msc-computer-science-conversion/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="格拉斯哥大学"><a href="#格拉斯哥大学" class="headerlink" title="格拉斯哥大学"></a>格拉斯哥大学</h2><p>格大就是我最后选择的学校，3天来offer，吹爆格大的校园，充满霍格沃茨的感觉，2020年QS排名69，坐标苏格兰中西部，共有三个专业可选</p>
<h3 id="INFORMATION-TECHNOLOGY"><a href="#INFORMATION-TECHNOLOGY" class="headerlink" title="INFORMATION TECHNOLOGY"></a>INFORMATION TECHNOLOGY</h3><p>俗称IT，也是今年拿offer人最多的专业，全日制1年，非全日制2年，学费 ￡ 23500，开设课程如下</p>
<ul>
<li>DATABASE THEORY AND APPLICATION (M)</li>
<li>ENTERPRISE CYBER SECURITY (M)</li>
<li>PROGRAMMING</li>
<li>SOFTWARE ENGINEERING (M)</li>
<li>SYSTEMS AND NETWORKS</li>
<li>MSC IT+ TEAM PROJECT (M)</li>
<li>ADVANCED PROGRAMMING (M)（选修）</li>
<li>ALGORITHMS AND DATA STRUCTURES (M)（选修）</li>
<li>CRYPTOGRAPHY AND SECURE DEVELOPMENT (M)（选修）</li>
<li>CYBER SECURITY FUNDAMENTALS (M)（选修）</li>
<li>CYBER SYSTEM FORENSICS (M)（选修）</li>
<li>HUMAN COMPUTER INTERACTION DESIGN AND EVALUATION (M)（选修）</li>
<li>INTERNET TECHNOLOGY (M)（选修）</li>
<li>SAFETY-CRITICAL SYSTEMS DEVELOPMENT (M)（选修）</li>
</ul>
<a class="btn" href="https://www.gla.ac.uk/postgraduate/taught/informationtechnology/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="SOFTWARE-DEVELOPMENT"><a href="#SOFTWARE-DEVELOPMENT" class="headerlink" title="SOFTWARE DEVELOPMENT"></a>SOFTWARE DEVELOPMENT</h3><p>这个是我申请的专业，是IT的特化专业，针对软件开发方向，全日制1年，非全日制2年，学费 ￡ 23500，开设课程如下</p>
<ul>
<li>ADVANCED PROGRAMMING (M)</li>
<li>ALGORITHMS AND DATA STRUCTURES (M)</li>
<li>DATABASE THEORY AND APPLICATION (M)</li>
<li>ENTERPRISE CYBER SECURITY (M)</li>
<li>PROGRAMMING</li>
<li>SOFTWARE ENGINEERING (M)</li>
<li>SYSTEMS AND NETWORKS</li>
<li>MSC IT+ TEAM PROJECT (M)</li>
<li>CRYPTOGRAPHY AND SECURE DEVELOPMENT (M)（选修）</li>
<li>CYBER SECURITY FUNDAMENTALS (M)（选修）</li>
<li>CYBER SYSTEM FORENSICS (M)（选修）</li>
<li>HUMAN COMPUTER INTERACTION DESIGN AND EVALUATION (M)（选修）</li>
<li>INTERNET TECHNOLOGY (M)（选修）</li>
<li>SAFETY-CRITICAL SYSTEMS DEVELOPMENT (M)（选修）</li>
</ul>
<a class="btn" href="https://www.gla.ac.uk/postgraduate/taught/softwaredevelopment/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="IT-CYBER-SECURITY"><a href="#IT-CYBER-SECURITY" class="headerlink" title="IT CYBER SECURITY"></a>IT CYBER SECURITY</h3><p>同样是IT的特化专业，针对网络安全方向，全日制1年，非全日制2年，学费 ￡ 23500，开设课程如下</p>
<ul>
<li>DATABASE THEORY AND APPLICATION (M)</li>
<li>ENTERPRISE CYBER SECURITY (M)</li>
<li>PROGRAMMING</li>
<li>SOFTWARE ENGINEERING (M)</li>
<li>SYSTEMS AND NETWORKS</li>
<li>MSC IT+ TEAM PROJECT (M)</li>
<li>CRYPTOGRAPHY AND SECURE DEVELOPMENT (M)（选修）</li>
<li>CYBER SECURITY FUNDAMENTALS (M)（选修）</li>
<li>CYBER SYSTEM FORENSICS (M)（选修）</li>
<li>HUMAN-CENTRED SECURITY (M)（选修）</li>
<li>SAFETY-CRITICAL SYSTEMS DEVELOPMENT (M)（选修）</li>
</ul>
<a class="btn" href="https://www.gla.ac.uk/postgraduate/taught/itcybersecurity/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="谢菲尔德大学"><a href="#谢菲尔德大学" class="headerlink" title="谢菲尔德大学"></a>谢菲尔德大学</h2><p>谢大今年非常的飘，985均分90+都给无理由拒，上个月它的CS专业群只有十几个中国人，不知道它咋想的，一个月给我拒信。2020QS排名78，坐标英格兰</p>
<h3 id="Software-Systems-and-Internet-Technology"><a href="#Software-Systems-and-Internet-Technology" class="headerlink" title="Software Systems and Internet Technology"></a>Software Systems and Internet Technology</h3><p>这个专业名字巨长，全日制1年，学费 ￡ 23750，开设课程如下</p>
<ul>
<li>Foundations of Object-Oriented Programming</li>
<li>Network and Internetwork Architectures</li>
<li>Professional Issues</li>
<li>Software Engineering for Internet Technology</li>
<li>Team Project (SSIT)</li>
<li>Advanced Java Programming</li>
<li>Web Technologies</li>
<li>Software Re-Engineering</li>
<li>Dissertation Project</li>
</ul>
<a class="btn" href="https://www.sheffield.ac.uk/postgraduate/taught/courses/2020/software-systems-and-internet-technology-msc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="诺丁汉大学"><a href="#诺丁汉大学" class="headerlink" title="诺丁汉大学"></a>诺丁汉大学</h2><p>没错就是宁波诺丁汉的那个诺丁汉，2020QS排名96，坐标英格兰，专业有两个，<strong>需要缴纳申请费 ￡ 50</strong>，不交钱不会进行审核</p>
<p>我就是心疼这些钱，一直拖着没提交申请，拖着拖着格拉的offer就来了，前几天诺大一天给我发了三封邮件催我交钱，感觉自己像个渣男hhh</p>
<h3 id="Computer-Science-or-Computer-Science-Artificial-Intelligence"><a href="#Computer-Science-or-Computer-Science-Artificial-Intelligence" class="headerlink" title="Computer Science or Computer Science (Artificial Intelligence)"></a>Computer Science or Computer Science (Artificial Intelligence)</h3><p>这个专业既接受本科CS的申请人也接受其他背景的申请人，其他专业的申请人在第一学期需要学习CS的基础知识，第二学期可以选择选修课程，全日制1年，非全日制2年，学费 ￡ 24390，开设课程如下</p>
<ul>
<li>Research Methods</li>
<li>Programming</li>
<li>Systems and Networks</li>
<li>Databases, Interfaces and Software Design Principles</li>
</ul>
<p>上面这些是转专业的必修课，它的选修课非常多，我就不列了</p>
<a class="btn" href="https://www.nottingham.ac.uk/pgstudy/course/taught/Computer-Science-or-Computer-Science-(Artificial-Intelligence)-MSc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="Human-Computer-Interaction-MSc"><a href="#Human-Computer-Interaction-MSc" class="headerlink" title="Human Computer Interaction MSc"></a>Human Computer Interaction MSc</h3><p>人机交互专业，其实非常适合建筑学背景的同学申请，这个学科是心理学、设计以及CS的交叉学科，其他学校也有开设这个专业，不过我没怎么了解，感兴趣的请自行百度</p>
<p>全日制1年，学费 ￡ 24390，开设课程如下</p>
<ul>
<li>Design Ethnography</li>
<li>Studying Human Performance</li>
<li>Mixed Reality Technologies</li>
<li>Human-Computer Systems</li>
<li>Advanced Methods in Human Factors and Human-Computer Interaction</li>
<li>Individual Project: Human-Computer Interaction</li>
<li>Cognitive Ergonomics in Design（选修）</li>
<li>Programming（选修）</li>
<li>Collaboration and Communication Technologies（选修）</li>
<li>Fundamentals of Information Visualisation（选修）</li>
<li>Games（选修）</li>
<li>Information Visualisation Project（选修）</li>
<li>Data Modelling and Analysis（选修）</li>
<li>Simulation and Optimisation for Decision Support（选修）</li>
<li>Physical Ergonomics（选修）</li>
<li>Simulation, Virtual Reality and Advanced Human-Machine Interface（选修）</li>
</ul>
<a class="btn" href="https://www.nottingham.ac.uk/pgstudy/course/taught/Human-Computer-Interaction-MSc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="伯明翰大学"><a href="#伯明翰大学" class="headerlink" title="伯明翰大学"></a>伯明翰大学</h2><p>伯明翰大学有两个校区，本部在伯明翰，分部在迪拜，想体验土豪生活的可以了解一下迪拜校区，2020QS排名81，坐标英格兰中部</p>
<h3 id="Computer-Science"><a href="#Computer-Science" class="headerlink" title="Computer Science"></a>Computer Science</h3><p>全日制1年，学费 ￡ 24120，开设课程如下</p>
<ul>
<li>Data Structures, Algorithms, and Databases</li>
<li>Software Workshop 1</li>
<li>Software Workshop 2</li>
<li>Artificial Intelligence and Machine Learning</li>
<li>Building Useable Software</li>
<li>Computer Science</li>
<li>Research Project</li>
</ul>
<a class="btn" href="https://www.birmingham.ac.uk/postgraduate/courses/taught/computer-science/computer-science.aspx"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="纽卡斯尔大学"><a href="#纽卡斯尔大学" class="headerlink" title="纽卡斯尔大学"></a>纽卡斯尔大学</h2><p>澳洲有个重名的大学hhh，不要搞混了hhh，1个月来offer。2020QS排名146，坐标英格兰东北部</p>
<h3 id="Computer-Science-1"><a href="#Computer-Science-1" class="headerlink" title="Computer Science"></a>Computer Science</h3><p>全日制1年，学费 ￡ 23400，开设课程如下</p>
<ul>
<li>Programming and Data Structures</li>
<li>Advanced Programming</li>
<li>Research Methods for Computer Science</li>
<li>Computer Environments</li>
<li>Networks and Web Technologies</li>
<li>Software Engineering with Group Project</li>
<li>Information Systems</li>
<li>Project and Dissertation for MSc Computer Science</li>
</ul>
<a class="btn" href="https://www.ncl.ac.uk/postgraduate/courses/degrees/computer-science-msc/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="卡迪夫大学"><a href="#卡迪夫大学" class="headerlink" title="卡迪夫大学"></a>卡迪夫大学</h2><p>卡大开设有带1年实习的专业，但是实习还是要自己找，并不包分配，带实习的和不带实习的可以互转。3天来offer。2020QS排名154，坐标威尔士（首府）</p>
<h3 id="Computing"><a href="#Computing" class="headerlink" title="Computing"></a>Computing</h3><p>全日制1年，非全日制2年，学费 ￡ 22950，开设课程如下</p>
<ul>
<li>Dissertation</li>
<li>Web Application Development</li>
<li>Python for Computation</li>
<li>Object-Oriented Development with Java</li>
<li>Software Engineering</li>
<li>Computational Systems（选修）</li>
<li>Distributed and Cloud Computing（选修）</li>
<li>Human Centric Computing（选修）</li>
<li>Information Modelling and Database Systems（选修）</li>
<li>Data Visualisation（选修）</li>
<li>E-Commerce and Innovation（选修）</li>
</ul>
<a class="btn" href="https://www.cardiff.ac.uk/study/postgraduate/taught/courses/group/computing"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="Computing-with-Placement"><a href="#Computing-with-Placement" class="headerlink" title="Computing with Placement"></a>Computing with Placement</h3><p>全日制2年，带1年实习，学费 ￡ 22950，开设课程如下</p>
<ul>
<li>Dissertation</li>
<li>Placement</li>
<li>Web Application Development</li>
<li>Python for Computation</li>
<li>Object-Oriented Development with Java</li>
<li>Software Engineering</li>
<li>Computational Systems（选修）</li>
<li>Distributed and Cloud Computing（选修）</li>
<li>Human Centric Computing（选修）</li>
<li>Information Modelling and Database Systems（选修）</li>
<li>Data Visualisation（选修）</li>
<li>E-Commerce and Innovation（选修）</li>
</ul>
<a class="btn" href="https://www.cardiff.ac.uk/study/postgraduate/taught/courses/course/computing-with-placement-msc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="Computing-and-IT-Management"><a href="#Computing-and-IT-Management" class="headerlink" title="Computing and IT Management"></a>Computing and IT Management</h3><p>这个专业与商科有些交叉，全日制1年，非全日制2年，学费 ￡ 22950，开设课程如下</p>
<ul>
<li>Dissertation</li>
<li>Web Application Development</li>
<li>Information Modelling and Database Systems</li>
<li>Business and IT Management</li>
<li>E-Commerce and Innovation</li>
<li>Python for Data Analysis（选修）</li>
<li>Python for Computation（选修）</li>
<li>Distributed and Cloud Computing（选修）</li>
<li>Human Centric Computing（选修）</li>
<li>Data Visualisation（选修）</li>
</ul>
<a class="btn" href="https://www.cardiff.ac.uk/study/postgraduate/taught/courses/course/computing-and-it-management-msc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h3 id="Computing-and-IT-Management-with-Placement"><a href="#Computing-and-IT-Management-with-Placement" class="headerlink" title="Computing and IT Management with Placement"></a>Computing and IT Management with Placement</h3><p>这个专业与商科有些交叉，全日制2年，带1年实习，学费 ￡ 22950，开设课程如下</p>
<ul>
<li>Dissertation</li>
<li>Placement</li>
<li>Web Application Development</li>
<li>Information Modelling and Database Systems</li>
<li>Business and IT Management</li>
<li>E-Commerce and Innovation</li>
<li>Python for Data Analysis（选修）</li>
<li>Python for Computation（选修）</li>
<li>Distributed and Cloud Computing（选修）</li>
<li>Human Centric Computing（选修）</li>
<li>Data Visualisation（选修）</li>
</ul>
<a class="btn" href="https://www.cardiff.ac.uk/study/postgraduate/taught/courses/course/computing-And-it-management-with-placement-msc"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="巴斯大学"><a href="#巴斯大学" class="headerlink" title="巴斯大学"></a>巴斯大学</h2><p>戏称澡（Bath）大，2020QS排名172，坐标英格兰</p>
<h3 id="Computer-Science-2"><a href="#Computer-Science-2" class="headerlink" title="Computer Science"></a>Computer Science</h3><p>全日制1年，学费 ￡ 20500，开设课程如下</p>
<ul>
<li>Principles of programming</li>
<li>Software engineering</li>
<li>Databases</li>
<li>Foundations of computation</li>
<li>Research seminar</li>
<li>Research project preparation</li>
<li>Functional programming</li>
<li>Plus optional units</li>
<li>Dissertation</li>
<li>Entrepreneurship（选修）</li>
<li>Artificial intelligence（选修）</li>
<li>Theory of human computer interaction（选修）</li>
<li>Cryptography（选修）</li>
<li>Collaborative systems（选修）</li>
<li>Interactive communication design（选修）</li>
<li>Intelligent control and cognitive systems（选修）</li>
<li>Security and integrity（选修）</li>
</ul>
<a class="btn" href="https://www.bath.ac.uk/courses/postgraduate-2020/taught-postgraduate-courses/msc-computer-science/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="贝尔法斯特女王大学"><a href="#贝尔法斯特女王大学" class="headerlink" title="贝尔法斯特女王大学"></a>贝尔法斯特女王大学</h2><p>2020QS排名173，坐标北爱尔兰（首府）</p>
<h3 id="Software-Development"><a href="#Software-Development" class="headerlink" title="Software Development"></a>Software Development</h3><p>全日制1年，学费 ￡ 21400，开设课程如下</p>
<ul>
<li>Programming</li>
<li>Databases</li>
<li>Software Engineering</li>
<li>Web Development</li>
<li>Computing Fundamentals</li>
</ul>
<a class="btn" href="http://www.qub.ac.uk/courses/postgraduate-taught/software-development-msc/#overview"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="利物浦大学"><a href="#利物浦大学" class="headerlink" title="利物浦大学"></a>利物浦大学</h2><p>2020QS排名181，坐标英格兰</p>
<h3 id="Computer-Science-3"><a href="#Computer-Science-3" class="headerlink" title="Computer Science"></a>Computer Science</h3><p>全日制1年，非全日制2年，学费 ￡ 21600，开设课程如下</p>
<ul>
<li>Research Methods in Computer Science</li>
<li>Object Oriented Software Development</li>
<li>Database and Information Systems</li>
<li>Web Programming</li>
<li>MSc Project</li>
<li>Safety and Dependability（选修）</li>
<li>Reasoning About Action and Change（选修）</li>
<li>Applied Algorithmics（选修）</li>
<li>Data Mining and VIsualisation（选修）</li>
<li>Multi-agent Systems（选修）</li>
<li>Technologies for E-commerce（选修）</li>
<li>Semantics of Programming Languages（选修）</li>
<li>Ontologies and Semantic Web（选修）</li>
<li>Machine Learning and Bioinspired Optimisation（选修）</li>
<li>Web Mapping and Analysis（选修）</li>
<li>Computational Intelligence（选修）</li>
</ul>
<a class="btn" href="https://www.liverpool.ac.uk/study/postgraduate-taught/taught/computer-science-msc/"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<h2 id="都柏林大学"><a href="#都柏林大学" class="headerlink" title="都柏林大学"></a>都柏林大学</h2><p>爱尔兰TOP2的大学，2020QS排名185，坐标爱尔兰首都都柏林。</p>
<p>学校在爱尔兰口碑很好，相对英国的优势是比较好留下找工作，毕业给两年工签（英国也恢复了PSW）。大家申请的时候可以英爱联申，反正都差不多，需要申请费 €50。</p>
<p>我拿了offer但是不打算去了，因为英国也放开了工作签证，心疼我的50欧元。这是我最早开始申请的大学，也是最晚才来offer的大学，2个月才来，等的我快自闭了，以为自己被拒了或者被放进WL里了，结果他来offer的时候我格拉的留位费都交了233333</p>
<p>另外要说一下都柏林的物价，那是真的高，堪比伦敦，毕竟也是首都，房租也把我给劝退了，离学校很远的house都要七八百欧元一个月</p>
<h3 id="Computer-Science-Conversion"><a href="#Computer-Science-Conversion" class="headerlink" title="Computer Science (Conversion)"></a>Computer Science (Conversion)</h3><p>这个专业是16个月的，学费 € 25600，需要提供数学能力证明，开设课程如下</p>
<ul>
<li>Programming I (Conversion)</li>
<li>Data Structures &amp; Algorithms (Conversion)</li>
<li>Relational Databases &amp; Information Systems (Conversion)</li>
<li>Python OOP (Conv)</li>
<li>Operating Systems (Conversion)</li>
<li>Networks &amp; Internet Systems (Conversion)</li>
<li>Computer Architecture &amp; Organistion (Conversion)</li>
<li>Web Application Development (Conversion)</li>
<li>Java Programming (Conv)</li>
<li>Software Engineering (Conv)</li>
<li>Computational Thinking (Conversion)</li>
<li>Data Analytics (Conversion)</li>
<li>Research Practicum (MSc Conversion)</li>
</ul>
<a class="btn" href="https://sisweb.ucd.ie/usis/!W_HU_MENU.P_PUBLISH?p_tag=PROG&MAJR=T195"><i class="fa fa-arrow-right fa-fw"></i>传送门</a>

<p>因为这是我一开始的 Dream School，所以也收集了很多的信息（再次感觉自己像个渣男），下面有几个知乎相关问题的链接，仅供参考，另外不要听信留学中介的忽悠，说什么爱尔兰留学贼便宜，一年15-20万就够balabala，这个课程光学费就20万了，再加上16个月的房租吃喝，分分钟奔着40万去了</p>
<ul>
<li><a href="https://www.zhihu.com/question/66110486">感觉出国读了一个很水的CS硕士，很迷茫，应该退学回国考985的计算机研吗？</a></li>
<li><a href="https://www.zhihu.com/question/56900096/answer/582812606">布里斯托和都柏林大学计算机CS（conversion）专业，应该如何选择？</a></li>
</ul>
<h1 id="语言考试"><a href="#语言考试" class="headerlink" title="语言考试"></a>语言考试</h1><ul>
<li>语言考试和GPA是申请英国的两个硬性指标，如果你的语言成绩不能再规定时间内达标的话，也可以选择用较低的语言成绩入读语言班</li>
<li>语言班的花费不低，足够你考几十次语言考试了，所以能考过还是尽量考过，毕竟语言班也不是保过班，读完语言班仍然需要参加学校组织的考试，考不过就只能把你传送回家喽</li>
<li>考过了语言考试也可以去参加语言班的，因为语言班会讲一些 essay 写作的技巧方法，不差钱的话随便喽</li>
<li>目前被大多数院校承认的语言考试有三种：雅思（IELTS）、托福（TOEFL）以及培生（PTE）</li>
<li>申请英国的绝大多数同学考的都是雅思，而且如果你想读语言班的话，那么UKVI的雅思就是你唯一的选择</li>
<li>目前三种考试的成绩有效期均为2年，也就是说大三之前没有必要考，但是可以开始准备，英语学习毕竟是一个长期过程，需要漫长的积累</li>
<li>雅思考试的听力和阅读相对好提分，而口语和写作较难；PTE的听力阅读难度较大，但是口语写作容易拿分；托福我没有考过，不做评价，据说听力难度很大。这三门考试根据自己听说读写的强弱选择一款门最适合自己的，毕竟一次考试2000，考一次一部手机就没有了</li>
<li>雅思的口语和写作在国内存在一定的压分情况，因为中国人可是最会考试的，遇到压分的话可以去东南亚或者韩国考，比国内能高个0.5</li>
<li>关于PTE考试我在上一篇文章有详细描述，<a href="https://siriusq.top/PTE%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97.html">传送门</a></li>
<li>我的语言考试时间线是这样的<ul>
<li>2018年初就想复习雅思，但是重度拖延症一直没复习</li>
<li>2018年11月第一次裸考雅思考试，口语写作不达标</li>
<li>2019年4月第二次雅思考试，口语写作一点没涨</li>
<li>2019年12月第一次PTE考试，一次过</li>
</ul>
</li>
<li>个人并不建议报考辅导机构学语言，因为现在各种资料都可以在网上获取到，懒得找的话淘宝也有整理好的</li>
</ul>
<h1 id="文书"><a href="#文书" class="headerlink" title="文书"></a>文书</h1><p>文书大概分三部分，个人陈述（PS&#x2F;SOP），个人简历（CV）以及推荐信（RL），其中个人陈述最为重要。这三个材料我写了差不多一个月。下面是一些个人建议</p>
<ul>
<li>首先给大家分享两个论坛，上面有大神们总结的文书写作方法，建议大家仔细看一下精华帖。<ul>
<li><a href="http://bbs.gter.net/">寄托天下</a>，这个论坛也会有申请经验的分享，管理者也很不错</li>
<li><a href="https://www.1point3acres.com/bbs/">一亩三分地</a>，这个论坛的管理者我很反感，设置各种门槛难为新人，但不能否认上面有很多有价值的经验分享，文书方面有一个专栏</li>
</ul>
</li>
<li>写文书这种东西还是自己来比较放心，毕竟最了解自己的人还是你自己。中介大多数都是套用的模版，千篇一律的论调，审核的老师早就看腻了</li>
<li>对于自己的英语水平不放心的话可以找人帮自己修改一下语法错误，平台也不少，我用的papersogay，淘宝也有文书润色服务</li>
<li>善用Google，参考一下别人的文书是怎么写的,用英文搜索，中文是搜不到什么有价值的文书信息的，你只会看到多家机构的广告</li>
</ul>
<h2 id="PS-SOP"><a href="#PS-SOP" class="headerlink" title="PS&#x2F;SOP"></a>PS&#x2F;SOP</h2><p>PS和SOP，前者是个人陈述（personal statement），后者是动机信（statement of purpose），绝大部分大学只要求其中之一，当然也有大学两个都要。</p>
<p>只要一个的情况下，这两者可以看作一个东西，因为研究生申请中的PS&#x2F;SOP所要陈述的都是你申请这个专业的动机，比如</p>
<ul>
<li>你为什么选择这个学校</li>
<li>你为什么选择这个专业</li>
<li>你希望从这个专业中获得什么</li>
<li>你未来的规划是什么</li>
<li>为什么这个课程适合你&#x2F;你为什么适合这个课程</li>
<li>与你申请相关的经历，注意不要写成CV的扩大版，挑几件最能体现你能力和素质的事情来写</li>
</ul>
<p>在写作的时候要注意字数限制&#x2F;页数限制，我个人建议写1页就可以，大概500词，写多了招生官也不愿意看的，另外注意下格式</p>
<ul>
<li>字体选用<code>Times New Roman</code>，<code>Arial</code>或者<code>Calibri</code></li>
<li>字号在10.5-12号之间，根据排版调整</li>
<li>行间距在1.4-1.5倍之间，根据排版调整</li>
<li>使用分散对齐</li>
<li>每一段话顶格写，段落之间加大行间距</li>
<li>可以在页眉处写学校的名字</li>
</ul>
<p>为了显示你的诚意，可以根据不同的学校来一句不同的彩虹屁，改几句话不怎么费时间</p>
<h2 id="CV"><a href="#CV" class="headerlink" title="CV"></a>CV</h2><p>CV就是个人简历，在文书写作中是难度最低的，基本按照格式走就没没问题，下面是一些个人建议</p>
<ul>
<li>用word排版就可以，没必要用latex，latex上手难度较大，我们的目的是写文书不是学软件</li>
<li>使用<code>bullet point</code>的形式写作，更直观</li>
<li>平平淡淡才是真，不要搞得太花哨，黑白即可</li>
<li>不要放照片</li>
<li>一般1页纸就够了，当然也有学校要求2页纸的</li>
</ul>
<h2 id="RL"><a href="#RL" class="headerlink" title="RL"></a>RL</h2><p>RL就是推荐信，一般需要两封，个别学校一封就够了</p>
<ul>
<li>一般找自己比较熟悉的老师帮忙，要不然没有东西写的，只能用套话</li>
<li>如果你的老师不是行业大牛的话，完全不用纠结老师的职称，没什么区别的，了解你最重要</li>
<li>只提优点不提缺点</li>
<li>打印的时候一般用带有学校校徽和名字的信纸打印，有特殊格式要求的学校按照要求打印</li>
<li>老师的签字用拼音或者中文名都可以</li>
<li>少部分学校会发邮件向老师进行确认，请老师帮忙看下邮箱</li>
<li>老师的邮箱用<code>edu</code>后缀的最好，没有的话用<code>163</code>的也可以，最好不要用<code>qq</code>邮箱</li>
</ul>
<h1 id="GPA"><a href="#GPA" class="headerlink" title="GPA"></a>GPA</h1><p>GPA是英国学校筛选申请人的最关键的指标，一般来说，英国大学G5是第一档，QS世界排名前50是第二档，排名50-100是三档，100往后是四档</p>
<p>对于双非来说，第一档基本需要90+的GPA和很好的背景，第二档需要GPA85+，第三档GPA80+，第四档GPA75+，211&#x2F;985则相应降低3-5分</p>
<p>另外有些学校会有自己的内部 list，如果你的学校不在这个 list 上的话基本秒拒，不需要任何理由，部分 list 可以百度到，申请之前看一下，免得白费功夫</p>
<h1 id="其他材料"><a href="#其他材料" class="headerlink" title="其他材料"></a>其他材料</h1><h2 id="学校官方证明"><a href="#学校官方证明" class="headerlink" title="学校官方证明"></a>学校官方证明</h2><p>学校的官方证明一般在学校教务处或者导员处开具，然后加盖学校公章。如果没有英语版本则需要自己翻译成英语然后再加盖公章，学校不给自己翻译的文件盖章的话就需要找公证处公证。下面是清单</p>
<ul>
<li>前几年的成绩单</li>
<li>学校的官方GPA及排名（这个可选）</li>
<li>在读证明（未毕业的申请人开）</li>
<li>数学能力证明（非必需）</li>
<li>绩点换算说明（非必需）</li>
<li>毕业证书（已毕业的申请人开）</li>
<li>学位证书（已毕业的申请人开）</li>
</ul>
<p>这里拿母校举个例子，成绩单、官方GPA以及排名需要到学院办公室（建筑馆312-2）进行预约，周一周三下午四点前预约，一天后领取。在读证明再导员办公室开具。数学能力证明自己写一个，绩点换算说明按照学校算法自己做一个。我母校这几个文件都只有中文，需要自己翻译成英文，然后带着原件和翻译件去教务处（图书馆学生服务中心4号窗户）找老师盖章。</p>
<p>下面是我自己翻译的范例，格式我没调，需要原件的可以发邮件给我</p>
<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1"><i class="fa fa-text-width"></i>在读证明</a></li><li class="tab"><a href="#first-unique-name-2"><i class="fa fa-text-width"></i>Studying Certificate</a></li><li class="tab"><a href="#first-unique-name-3"><i class="fa fa-pencil"></i>数学能力证明</a></li><li class="tab"><a href="#first-unique-name-4"><i class="fa fa-pencil"></i>Mathematical Ability Certificate</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>在读证明</strong></p>
<p>兹证明 XX ，性别 X ，身份证号：XXXXXXXXXXXXXXXXXX，系XX大学建筑与城乡规划学院XX班学生，学号：XX，于X年X月至今在我校就读，目前为本科X年级在读学生。<br>特此证明。</p>
<p>XX大学XX学院<br>X年X月X日</p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>Studying Certificate</strong></p>
<p>This is to certify that XX, student No. xx, ID No. xx, has been studying in the College of xx in xx University since mm, yyyy. His major is x. Now he is a senior of the Department of x, the time of graduating will be mm, yyyy. We hereby certify.</p>
<p>College of x<br>x University<br>mm&#x2F;dd,yyyy</p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>数学能力证明</strong></p>
<p>兹证明 xx ，性别 x ，学号：xx，身份证号：XXXXXXXXXXXXXXXXXX，于x年x月至x年x月在我校学习高等数学课程并通过期末考试。<br>特此证明。</p>
<p>XX大学<br>X年X月X日</p></div><div class="tab-pane" id="first-unique-name-4"><p><strong>Mathematical Ability Certificate</strong></p>
<p>This is to certify that xx, male&#x2F;female, student No. xx, ID No. XXXXXXXXXXXXXXXXXX, has finished our Advanced Algebra course from mm yyyy to mm yyyy. We hereby certify.</p>
<p>x University<br>mm&#x2F;dd,yyyy</p></div></div></div>

<h2 id="护照"><a href="#护照" class="headerlink" title="护照"></a>护照</h2><p>申请的时候需要上传你的护照，一般扫描带有你照片的那一页</p>
<h2 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h2><p>其实这个起不了多大作用，扫描传上去就可以了</p>
<h2 id="语言成绩证明"><a href="#语言成绩证明" class="headerlink" title="语言成绩证明"></a>语言成绩证明</h2><p>这里只说雅思和PTE的，托福不了解</p>
<ul>
<li>雅思 - 把官方邮寄来的成绩单扫描上传到网申系统即可</li>
<li>PTE - PTE需要在PTE查询成绩的网站上将成绩单发送给对应的学校，发送成绩是免费的，自己上传的PDF版本无效</li>
</ul>
<h2 id="申请费"><a href="#申请费" class="headerlink" title="申请费"></a>申请费</h2><p>部分大学申请的时候需要支付申请费，一般换算成人名币都是几百元，对于这样的学校，如果你不是特别想去就不要申请了，俗话说<code>没有offer急死，有了offer愁死</code>，来了offer之后你会纠结好久的，交了申请费又不去的话，钱包会痛</p>
<p>申请费的支付一般是通过信用卡支付，请认准<code>Visa</code>以及<code>MasterCard</code>，国内的银联卡是不能用的，另外可能出现支付失败的情况，这个时候换一张信用卡试试，我当时交都柏林大学申请费的时候用建行的 Visa 卡一直支付失败，后来换了招行的 MasterCard 才支付成功。</p>
<h1 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h1><p>申请的事大概就这么多了，准备好材料去网申系统上传然后等offer就好了，一般未毕业的申请人来的都是<code>con offer</code>，即有条件录取，需要你毕业的时候上传毕业证和学位证的原件与翻译件，然后换取无条件录取和CAS。</p>
<p>等到6月我毕业以及办签证的时候会新开一篇文章讲签证办理以及换CAS的相关注意事项（绝不咕咕咕）</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>攻略</tag>
        <tag>英国</tag>
        <tag>转码</tag>
      </tags>
  </entry>
  <entry>
    <title>英国留学后续日志</title>
    <url>/%E8%8B%B1%E5%9B%BD%E7%95%99%E5%AD%A6%E5%90%8E%E7%BB%AD%E6%97%A5%E5%BF%97.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">今天终于等到了格拉的uncon，开一贴记录一下换取uncon及后续签证申请的相关事宜。另外格拉上个月正式宣布部分专业延期开学至21年1月，CS院的所有专业都包含在内，所以下半年就要上家里蹲大学了，慢慢更</blockquote>

<span id="more"></span>

<h1 id="预定住宿"><a href="#预定住宿" class="headerlink" title="预定住宿"></a>预定住宿</h1><p>英国留学住宿的选择主要有：校内的宿舍（或者学校官方的宿舍）、合租House、校外的学生公寓。大多数人都会选择校外的学生公寓，比较方便，不需要管水电煤等费用，相较house更加安全。公寓的房型主要分En-suite和Studio两种，En-suite一般是有4-6间卧室的套间，每个卧室内有独立卫浴，共享厨房与起居室，类似于国内的合租；Studio则是单人单间，房间内带有厨房和卫浴，类似于自己单独租的房子。Studio相对于En-suite隐私性更好，更安静，<del>也更贵。</del></p>
<p>一般来说拿到offer之后就可以定房间了，比较想去的几个学校都可以先定上，订的越早越便宜，而且选择的空间也比较大。尽量找不需要押金的公寓，这样跑路的话直接找人转租或者取消就可以了。</p>
<p>格拉附近比较热门的公寓有 West View（西景）、West Village（西村）、Vita、KC、TS、DM等，下边是出自格拉CS微信群的对比（图片来自某位不愿透露姓名的翟翟）</p>
<p><img data-src="https://s2.loli.net/2022/05/13/UjZV4PTEzoOiKXk.jpg" alt="英国留学后续日志"></p>
<p>预定的话可以直接去公寓官网订，也可以找中介，中介有异乡好居和学旅家，我找了学旅家，两家都说有（薛定谔的）返现，不知道什么时候能拿到，拿到回来更。</p>
<h1 id="换取Uncon"><a href="#换取Uncon" class="headerlink" title="换取Uncon"></a>换取Uncon</h1><p>本科毕业之前大家的offer都是conditional offer，毕业后收集好缺少的材料并扫描成PDF，传到申请系统里去，就可以坐等发uncon了。我是6月24号上传到全部材料，7月7号在申请系统里查到了uncon，8号凌晨收到了邮件。一般毕业季换uncon的时间会长一些，因为换的人太多了。</p>
<p>换uncon需要扫描上传的材料有</p>
<ul>
<li>毕业证原件</li>
<li>学位证原件</li>
<li>毕业证翻译件（自己翻译完盖学校的章就可以，不需要放照片）</li>
<li>学位证翻译件（同上）</li>
<li>包含所有课程的英文成绩单</li>
<li>包含所有课程的中文成绩单（这个看具体学校，我在格拉只上传了英文的成绩单）</li>
</ul>
<p>下面是我用的毕业证与学位证的翻译件，格式没法调，需要word的康康百度云吧</p>
<a class="btn" href="https://pan.baidu.com/s/1APNgOpkZaNnytagDF3rhYg"><i class="fa fa-arrow-right fa-fw"></i>密码uwbt</a>

<div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1"><i class="fa fa-pencil"></i>学士学位证书翻译</a></li><li class="tab"><a href="#first-unique-name-2"><i class="fa fa-pencil"></i>毕业证书翻译</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>学士学位证明翻译</strong></p>
<p>Bachelor’s Degree Certificate</p>
<p>This is to certify that XXX, male, born on June 26, 1997, has completed an undergraduate program in Architecture at XXXXX University and graduated. According to Regulations of the People’s Republic of China on Academic Degrees, he is awarded the degree of Bachelor of Science in Architecture.</p>
<p>Chairman of Degree Evaluation Committee: Xxxxx Xxx      XXXXX University<br>Certificate No.: XXXXXXXXXXXXXX      June 18th, 2020</p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>毕业证书翻译</strong></p>
<p>Graduation Certificate</p>
<p>XXX XXX, male, born on June 26, 1997, studied a five-year program in Architecture at our school from September 2015 to June 2020. Having completed all courses specified in the teaching plan and passed the examinations, he is allowed to graduate.</p>
<p>School: XXXXX University      President: Xxxxx Xxx<br>Certificate No.: XXXXXXXXXXXXXXXX      June 12th, 2020</p></div></div></div>

<h1 id="保证金"><a href="#保证金" class="headerlink" title="保证金"></a>保证金</h1><p>保证金是一项英国政府判断你是否有足够的经济能力完成学业的依据，具体的操作是开一个存款证明，办签证时会随机抽查存款证明，抽到了会发邮件给你。</p>
<ul>
<li>保证金金额大概在30w人民币，具体数额是按照学费+所在地区9个月生活费来算的，为了保险起见会在这个数额上再加几千英镑，生活费伦敦地区标准为1265镑&#x2F;月，其他地区为1015镑&#x2F;月</li>
<li>一般存定期并设置自动转存</li>
<li>存满28天之后就可以在网上预约签证了</li>
<li>然后在办理签证的前几天去银行开存款证明和流水，不用开太早，因为存款证明开具日期和网上签证预约日期的间隔不能超过31天</li>
<li>英镑和人民币可以混存，总金额够了就行</li>
<li>最好存在自己名下，存在父母名下需要多开具亲子关系证明以及授权使用资金的证明</li>
<li>建议存在中农工建这类大行，不建议存在农村信用社一类的地方</li>
<li>不能用理财产品代替</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/05/13/K2Eq8rUmZeNtBgY.png" alt="英国留学后续日志"></p>
<h1 id="换汇"><a href="#换汇" class="headerlink" title="换汇"></a>换汇</h1><p>在去英国之前建议提前换好英镑，在常用的银行换就可以，到英国办好当地银行卡后通过跨境汇款转过去。下面是一些情报</p>
<ul>
<li>购买英镑的时候分为<strong>现汇</strong>和<strong>现钞</strong>两个选项，现汇就是存在银行卡里的钱，现钞就是换取的纸币</li>
<li>换汇一般就是购买英镑现汇存在银行卡里</li>
<li>临行前可以换一部分现钞，供落地后应急用，不用太多，海关不允许携带5000美元以上的等值外币出境</li>
<li>每人每年的换汇额度是5万美元</li>
<li>换汇的时候看的是<strong>购汇汇率</strong>而不是<strong>结汇汇率</strong>。购汇汇率是你向银行购买英镑的汇率，结汇汇率是你向银行出售英镑的汇率</li>
<li>建议像我一样的贫困人口每天多看两眼汇率，万一英镑再跌到8.1呢</li>
<li>英镑存定期的利息非常低，三个月存期利率只有0.1%，而人民币的是1.35%</li>
<li>跨境汇款有被锁的风险，建议出国前把身份证银行卡留给父母，以防万一</li>
<li>换汇之后可以在手机银行APP上预约到银行网点去现钞，我取了1000英镑，小城市里只有50英镑的大额纸钞，大城市可能会换到5磅10磅这样的小面值</li>
</ul>
<h1 id="肺结核体检"><a href="#肺结核体检" class="headerlink" title="肺结核体检"></a>肺结核体检</h1><p>肺结核体检是办理T4签证的必要材料，一般在办签证前两三个月就可以做了。</p>
<ul>
<li>肺结核体检需要到指定的医院做，否则无效。定点医院共有15家，医院地址以及联系方式请看<a href="https://www.gov.uk/government/publications/tuberculosis-test-for-a-uk-visa-clinics-in-china/approved-tuberculosis-testing-clinics-in-china"><strong>签证官网</strong></a></li>
<li>费用为550元人民币，收费方式为现金或支付宝，不支持医保卡、信用卡或其他支付方式</li>
<li>需要提前预约，通常提前一或两个工作天预约即可</li>
<li>预约方式有电话和邮件两种，部分医院（如济南出国移民体检中心）还可以在网站上预约</li>
<li>无需空腹，正常饮食</li>
<li>需要携带的材料<ul>
<li>有效期半年以上的护照原件，不接受任何其他证件</li>
<li>护照复印件一张</li>
<li>两张半年内35mmx45mm免冠白底彩照（需要露出眉毛及耳朵）</li>
</ul>
</li>
<li>流程很快，耗时约为半小时，换上衣服拍下胸片，然后医生询问下病史就结束了</li>
<li>体检结果正常的话，上午体检下午可以出结果并发出证书，下午体检则需第二天早上才能发出证书。</li>
<li>凭护照取证书，如果不方便可以发快递到付，建议自取</li>
<li>证书有效期通常为六个月，特殊情况下为三个月</li>
<li>如果出现问题的话，医院会要求做痰培养了，这个过程就很漫长了，需要等两个月。但是如果你认为身体没有问题的话建议换一家医院重新做体检，不要说自己在其他医院做过（信息来源：知乎）</li>
<li>英国地址填自己的学校，懒的话可以不填，没什么影响</li>
</ul>
<p>下面是我10月13日在济南做肺结核的记录</p>
<ul>
<li>济南的肺结核检测在山医大三院的出国体检中心做，地址是天桥区无影山路38号，进门后右手边红屋顶的房子就是</li>
<li>我是七点四十五到的，医院大门口会有保安测体温。</li>
<li>我到的时候前面只有三个人。进入体检中心后出示身份证和健康码，然后在门口机器上取号</li>
<li>取号后领两张表，再测一次体温，工作人员会把体温写在表的右上角，过程中有什么疑问随时可以问工作人员</li>
<li>填完表等到八点半，拿着护照去拍照，拍完给一张黑白的照片</li>
<li>拍完照出来等待叫号，叫到自己的号就拿着材料去最里面的服务台</li>
<li>把护照原件、复印件、刚拍的黑白照片、两张小两寸白底照片（要在背面也上自己名字）、填写的两张表格交给工作人员</li>
<li>然后会拍照，还有在一张表上签字</li>
<li>然后付款，支付宝现金均可</li>
<li>付完款后工作人员把护照原件还给你，并给一个手环，手环是开储物柜用的，上面有对应的柜子编号</li>
<li>拿着手环去玻璃门那里刷脸进去，进去之后有工作人员引导你到更衣室并给一件蓝色的上衣</li>
<li>把上衣首饰全部摘掉，穿上那件蓝色的衣服，只带着护照和手环出去</li>
<li>工作人员会告诉你去哪个房间做检测，在机器上做一个类似叉腰的动作，双肩向上同时贴到机器上，然后工作人员会让深吸一口气憋住，然后等工作人员喊可以了就可以出来了</li>
<li>出来之后回到更衣室把衣服换好，然后把蓝色上衣扔进门口的回收箱</li>
<li>走廊里的工作人员会让你到另一侧的医生室，医生会问一些问题，比如有没有得过肺结核、有没有和结合病人有过接触</li>
<li>然后摘口罩拍照</li>
<li>然后出去找走廊里的小姐姐把你带出去</li>
<li>出去之后回到大门口的前台把手环还回去就可以溜了</li>
<li>工作人员说因为疫情的原因，第二天下午三点后才能取报告，但是实测当天下午四点半就可以拿到，可以打电话问一下</li>
</ul>
<h1 id="国际旅行健康证"><a href="#国际旅行健康证" class="headerlink" title="国际旅行健康证"></a>国际旅行健康证</h1><p>这个健康证还有一个疫苗接种证都是很迷惑的东西，俗称小红本和小黄本。根据目前了解的信息，两者都是可做可不做的，入境时有非常小的概率抽查国际旅行健康证，被查到没有证也没什么事，只是耽误一点时间去做个免费体检，大概半小时，疫苗接种证则没听说过有被查到的。所以这俩我就不打算做了</p>
<h1 id="签证"><a href="#签证" class="headerlink" title="签证"></a>签证</h1><h2 id="预约"><a href="#预约" class="headerlink" title="预约"></a>预约</h2><p>签证需要等CAS下来才能去办，CAS一般在入学前的3个月开始陆续发放，办理签证前需要在网上预约，最近学生签证也改名了，原来叫 Tier 4，现在直接叫 student visa。预约的时候建议挂全局代理，预约网站在国内的使用体验极差。</p>
<a class="btn" href="https://apply-to-visit-or-stay-in-the-uk.homeoffice.gov.uk/sort/country-nationality?p=student_out_uk&_ga=2.246378372.1460787317.1603017805-1850455343.1600247708"><i class="fa fa-home fa-fw"></i>预约网址</a>

<p>预约的步骤可以去看<a href="https://weibo.com/u/7305573611">@PhD威宇</a>的微博文章<a href="https://weibo.com/ttarticle/p/show?id=2309404537047783178301">保姆级手把手教你申请T4签证</a>，大佬写的非常详细，佩服大佬的耐心。T4和现在的 student visa 稍有出入，大体的步骤都是一样的。（我才不是因为懒不想写）</p>
<p><strong>注意下载checklist</strong></p>
<p>按照步骤交完签证申请费和IHS之后会跳转到VFS的网站上，这个网站是用来上传材料和预约递签日期地点用的，有一些增(keng)值(qian)服务可以选。这个网站深得学校教务选课系统的真传，同款土豆服务器，而且不挂全局代理基本没法用，挂了全局代理也会有各种各样的bug。</p>
<p>Student visa 一般只有两个材料需要上传，checklist 会有说明</p>
<ul>
<li>护照信息页</li>
<li>肺结核报告</li>
</ul>
<p>建议提前在网站上上传好材料，如果去签证中心现场上传的话会收取100块钱的扫描费用（奸商！）。</p>
<p>另外一些签证中心（说的就是你济南，还有西安）还会收取服务费，大概500块钱，在VFS那个网站上交。</p>
<p>预约的时候可以隔几个小时上去一次，看看有没有更早的位置。我一开始预约的是23号递签，后来刷出来了14号和16号的，就在网站上更改了预约时间，更改免费。</p>
<p>预约好时间、传完材料、交完钱之后会发给你一个<code>Appointment Confirmation Notice</code>，记得打印出来带着</p>
<h2 id="递签"><a href="#递签" class="headerlink" title="递签"></a>递签</h2><p>我最终去递签的时候只带了下面几个材料</p>
<ul>
<li>护照原件</li>
<li>checklist</li>
<li>Appointment Confirmation Notice</li>
<li>肺结核报告原件</li>
</ul>
<p>最后工作人员收走了这些材料</p>
<ul>
<li>护照原件</li>
<li>checklist 的第一页</li>
<li>Appointment Confirmation Notice</li>
</ul>
<p>下面是我在济南递签的流程，我是12:13进去的，12:25就出来了</p>
<ul>
<li>济南签证中心地址在济南市历下区经十路11890号北京银行5楼</li>
<li>从北京银行大厦的南门进，进去后在右手边向保安大叔出示健康码并测量体温</li>
<li>用微信扫描桌面立牌上的二维码，填写姓名手机号等个人信息进行登记</li>
<li>做四号电梯（最里面右手边那个）上5楼</li>
<li>出电梯后左手边可以看到工作人员在柜台前面，会问是不是来办签证，然后带你到签证中心门口，测量体温后经过安检门进入</li>
<li>进入之后出示护照、checklist、notice这几个材料，然后工作人员会问姓名和出生日期，并给你一张号码纸</li>
<li>进去等叫号，左手边有几排椅子，椅子前面的柱子上挂着电视，会显示叫号信息</li>
<li>人少的话工作人员就让直接去柜台，去柜台交护照、checklist、notice</li>
<li>工作人员会问你办不办加急，问护照是自取还是快递，快递的话会给你一张快递单填写，然后交现金80元，可以找零</li>
<li>工作人员没有提起过短信服务，短信也确实没什么用</li>
<li>等一会工作人员会把不要的材料都退给你，快递的会给一张EMS快递单回执</li>
<li>再回去等叫号，叫到号去7号室拍照录指纹</li>
<li>先会让你报一下姓名和出生日期，然后摘眼镜和口罩拍照</li>
<li>然后采指纹，先是右手四个手指并排，然后左手四个手指，最后是两个大拇指一起</li>
<li>结束之后会给你张回执，就可以走了</li>
<li>回家默默等快递把护照寄回来</li>
</ul>
<h1 id="订机票"><a href="#订机票" class="headerlink" title="订机票"></a>订机票</h1><p>机票我是在携程买的，也可以直接官网购买或者打电话购买</p>
<p>机票最好早买，早买一般都很便宜。我亲眼见证了我的机票从4200元涨价到了5500元，现在涨到了15000元。我在5500的时候买入的，买入第二天晚上就涨到了15000。</p>
<p>我们买的一般都是留学生机票，会有额外的行李额度，一般是两件不超过23kg的28寸托运行李和一件不超过20寸的手提行李，我一开始以为需要签证才能购买留学生机票，所以错过了4200的低价，其实买的时候完全不需要签证等证明材料。携程的要求是在飞机起飞前三天上传好签证、cas、offer、护照等证明材料就可以。能早买就早买吧。</p>
<p>另外由于今年疫情的影响，有些飞机是不一定能飞的，没有经过民航局审批，但是他也在卖票，建议买票之前先查询一下。因为有些航空公司退票只给退代金券，就很坑。</p>
<p>飞英国的机票除了去伦敦的，基本都要转机，转机机场一般有荷兰阿姆斯特丹、芬兰赫尔辛基、阿联酋迪拜、伦敦希思罗等。购票时看好是否是行李直挂，不是直挂的话转机的时候需要重新办理行李托运手续，麻烦且耗时，要留足充分的时间。</p>
<p>此外如果飞到大学所在城市的机票很贵的话可以看一下飞往临近城市的机票，举个栗子，我是一开始打算从上海飞格拉斯哥，但是去格拉斯哥的机票已经都在一万多了，然鹅去爱丁堡的机票只有五千多，所以我就买了去爱宝的机票，落地后再几个人一起包车直接到格拉宿舍楼下，包车大概在100胖，三四个人一起分担也不贵。</p>
<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>注册一般分为学术注册（Academic Registration）和财务注册（Financial Registration），学校会给提前发一封邮件告诉你注册的网址、用户名和密码，记得修改自己的密码。</p>
<h2 id="学术注册"><a href="#学术注册" class="headerlink" title="学术注册"></a>学术注册</h2><p>这里以格拉为例，学术注册包含以下内容</p>
<ul>
<li>确认课程信息</li>
<li>确认姓名、性别、出生日期以及学生ID</li>
<li>填写宗教信仰与国籍</li>
<li>填写在英国的住址（Term Address）</li>
<li>填写个人邮箱地址与电话号码</li>
<li>是否有残疾</li>
<li>添加紧急联系人</li>
<li>填写 Statistical Information，就跟查户口一样，包括性取向、有没有孩子等问题</li>
<li>上传照片，这个照片会用在学生证上，照片的标准和护照的一样</li>
<li>上传护照ID页</li>
</ul>
<p>学术注册完成后就可以选课（Enroll）了</p>
<h2 id="财务注册"><a href="#财务注册" class="headerlink" title="财务注册"></a>财务注册</h2><p>财务注册就是交学费，常见的方式有电汇、信用卡付款等，也有部分学校支持支付宝或银联卡支付。</p>
<p>我用的方法是信用卡分期付款，部分学校对于全款付学费会有优惠折扣，然而格拉并没有。。。如果学校对全款支付学费没有优惠的话建议使用分期付款，毕竟能把暂时不用交的前放在英国的银行账户里吃利息，几万英镑产生的利息也不少的。</p>
<p>我交学费的过程比较曲折。。。一开始我用的信用卡是建行的VISA卡，但是这张卡只能用人民币还款，我早买下的英镑不能拿来还款，所以果断办新卡。我先把建设银行账户里的英镑跨行转账到了中国银行的账户里，然后办了中国银行的卓隽英镑卡，可以直接用英镑还款。</p>
<p>这张卡建议在中国银行的APP上申请，下卡非常快，我从申请到拿到卡只用了3天。注意申请的时候职业不要选择学生，直接选择待业，剩下的收入啥的胡乱写就行。咱也不知道为啥，这张卡明明是给留学生用的，但是选择学生身份申请的话大概率直接秒拒，很迷惑。另外不建议到网点去办理，工作人员对这类卡不太了解，而且办卡速度很慢，我还在微博上看到有人网点办英镑卡，结果拿到手是美元卡，没法用。</p>
<p>我当时拿到的额度是1000英镑，少得可怜，而格拉分期付款的第一笔款需要2933磅。如果不嫌麻烦的话可以分三次刷1000英镑，刷完一次就还款。然而我比较懒，就我直接向信用卡里转账了3000磅，一次划掉。</p>
<h1 id="行李指南"><a href="#行李指南" class="headerlink" title="行李指南"></a>行李指南</h1><p>我在国内买了很多杂七杂八的行李，也不知道行李箱里能不能装得下hhh</p>
<p>下面只是我想到的行李，到时候不一定会全带</p>
<h2 id="登机行李"><a href="#登机行李" class="headerlink" title="登机行李"></a>登机行李</h2><h3 id="文件证件类"><a href="#文件证件类" class="headerlink" title="文件证件类"></a>文件证件类</h3><ol>
<li>护照</li>
<li>与护照一起寄回来的BRP说明</li>
<li>CAS</li>
<li>租房合同</li>
<li>语言成绩单</li>
<li>学术成绩单</li>
<li>毕业证学位证（记得把外面的壳子拔下来，壳子没用）</li>
<li>证件照</li>
<li>入境前48小时填写的那张表</li>
<li>肺结核报告</li>
</ol>
<h3 id="现金卡片"><a href="#现金卡片" class="headerlink" title="现金卡片"></a>现金卡片</h3><ol>
<li>银行卡</li>
<li>英国手机卡</li>
<li>卡针</li>
<li>英镑现金</li>
<li>签字笔</li>
</ol>
<h3 id="防疫物资（少量）"><a href="#防疫物资（少量）" class="headerlink" title="防疫物资（少量）"></a>防疫物资（少量）</h3><ol>
<li>口罩</li>
<li>一次性手套</li>
<li>护目镜或面罩</li>
</ol>
<h3 id="电子产品"><a href="#电子产品" class="headerlink" title="电子产品"></a>电子产品</h3><ol>
<li>手机</li>
<li>充电宝</li>
<li>相机</li>
<li>电脑</li>
<li>平板</li>
<li>充电器</li>
<li>数据线</li>
<li>耳机</li>
<li>多国旅行转换插头</li>
</ol>
<h3 id="葛优瘫用品"><a href="#葛优瘫用品" class="headerlink" title="葛优瘫用品"></a>葛优瘫用品</h3><ol>
<li>拖鞋</li>
<li>颈枕</li>
<li>眼罩</li>
<li>耳塞</li>
<li>旅行洗漱包</li>
<li>小零食</li>
</ol>
<h2 id="托运行李"><a href="#托运行李" class="headerlink" title="托运行李"></a>托运行李</h2><h3 id="药品防疫类"><a href="#药品防疫类" class="headerlink" title="药品防疫类"></a>药品防疫类</h3><ol>
<li>口罩</li>
<li>一次性手套</li>
<li>面罩</li>
<li>创可贴</li>
<li>酒精棉片&#x2F;酒精湿巾</li>
<li>感冒灵</li>
<li>藿香正气胶囊</li>
<li>西瓜霜</li>
<li>甲硝锉</li>
<li>诺氟沙星</li>
<li>皮炎平</li>
<li>红霉素软膏</li>
<li>体温计&#x2F;测温枪</li>
<li>个人日常用药</li>
<li>紫外线杀毒灯</li>
</ol>
<h3 id="电子产品及配件"><a href="#电子产品及配件" class="headerlink" title="电子产品及配件"></a>电子产品及配件</h3><ol>
<li>英标转换插头</li>
<li>插排</li>
<li>充电电池套装</li>
<li>鼠标键盘</li>
<li>剃须刀</li>
<li>各种充电器</li>
<li>耳机</li>
<li>计算器</li>
<li>移动硬盘</li>
<li>U盘&#x2F;读卡器</li>
<li>路由器</li>
<li>手机壳</li>
<li>钢化膜</li>
<li>手机平板折叠支架</li>
<li>笔记本电脑支架</li>
<li>相机三脚架</li>
<li>网线</li>
<li>鼠标垫</li>
</ol>
<h3 id="生活用品及工具"><a href="#生活用品及工具" class="headerlink" title="生活用品及工具"></a>生活用品及工具</h3><ol>
<li>指甲钳挖耳勺套装</li>
<li>无痕挂钩</li>
<li>肥皂盒</li>
<li>零钱包</li>
<li>筷子</li>
<li>饭盒</li>
<li>保温杯</li>
<li>折叠盆</li>
<li>吸盘花洒支架</li>
<li>螺丝刀</li>
<li>瑞士军刀&#x2F;多功能工具钳</li>
<li>洗衣袋</li>
<li>地漏防堵塞过滤网</li>
<li>折叠衣架</li>
<li>镊子</li>
<li>折叠烧水壶</li>
<li>烘鞋器</li>
<li>台灯</li>
<li>USB小风扇</li>
<li>加湿器</li>
<li>牙刷</li>
</ol>
<h3 id="衣物"><a href="#衣物" class="headerlink" title="衣物"></a>衣物</h3><ol>
<li>冲锋衣</li>
<li>内衣内裤</li>
<li>袜子</li>
<li>两三双鞋子</li>
<li>卫衣</li>
<li>外套</li>
<li>羽绒服</li>
<li>毛巾</li>
</ol>
<h3 id="行李箱配件"><a href="#行李箱配件" class="headerlink" title="行李箱配件"></a>行李箱配件</h3><p>主要是为了让自己的箱子更醒目，在转盘领行李的时候可以一眼看到，防止拿错</p>
<ol>
<li>彩色行李箱绑带</li>
<li>行李挂牌</li>
<li>行李箱套</li>
</ol>
<h1 id="落地后续"><a href="#落地后续" class="headerlink" title="落地后续"></a>落地后续</h1><p>预计1月到英国更新，另开一个新的博文记录</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>攻略</tag>
        <tag>英国</tag>
      </tags>
  </entry>
  <entry>
    <title>英国落地日记</title>
    <url>/%E8%8B%B1%E5%9B%BD%E8%90%BD%E5%9C%B0%E6%97%A5%E8%AE%B0.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">落地英国一个月的老鸽子又回来了~~~这可能又是一篇巨长的博文，打算记录下在英国这一年的生活，内含BRP、GP、银行卡等攻略，或许还能放个Vlog？（咕咕咕）</blockquote>

<span id="more"></span>

<h1 id="反向跑毒"><a href="#反向跑毒" class="headerlink" title="反向跑毒"></a>反向跑毒</h1><p>我买的是芬航 AY088 + AY1373 的航班，上海浦东机场转芬兰赫尔辛基机场，最后落地爱丁堡机场，全程约15个小时。</p>
<h2 id="浦东国际机场-起飞"><a href="#浦东国际机场-起飞" class="headerlink" title="浦东国际机场-起飞"></a>浦东国际机场-起飞</h2><p>第一程飞机的起飞时间是上午 10：20，我大概是 7：30到的机场，建议提前3个小时到，因为托运行李啥的要排很长时间的队，如果遇上芬航这种随身行李卡的很死的航司还要当场收拾行李，很花时间。</p>
<h3 id="值机"><a href="#值机" class="headerlink" title="值机"></a>值机</h3><p>值机口上会有工作人员称重随身行李，不超重的才能进去办理托运手续，超重的话就要摊开行李收拾半天，然后再去称重。我的行李是在家里提前称过的，随身行李1个20寸登机箱 + 1个小背包一共8KG，工作人员给我用手掂量了一下就放我过去了，连上称的资格都没有（手动狗头）。其实一些重的东西（比如充电宝）可以提前放到衣服兜里，办理完托运手续再找个地方塞回去（再次狗头）。</p>
<p>进去之后大概排了半个小时的队伍才终于到了值机柜台，出示护照办理登机牌和托运。我的托运行李额是两件23KG，实测稍微超一点，比如23.5KG是OK的。如果随身行李超过太多的话就需要多交一千多块钱，把随身行李作为第三件托运行李处理。所以如果你的行李超重太多的话建议提前买好行李额度，现场买太贵了。</p>
<h3 id="安检"><a href="#安检" class="headerlink" title="安检"></a>安检</h3><p>下一步是安检了，首先需要扫描二维码填写一个海关出境申报登记，填完后会给一个二维码，给入口的工作人员看一下填好了就可以进去了，如果家人来送的话就要在这里分别了。进去给里面的工作人员扫描，然后就是常规的X光机啥的了。后面登机啥的就不讲了。</p>
<h3 id="飞行体验"><a href="#飞行体验" class="headerlink" title="飞行体验"></a>飞行体验</h3><p>好评一下芬航的灰机，座位屏幕上可以看到飞机机腹和垂尾两个角度的相机的实时直播，我醒着的时间里有一半都是盯着这个直播在看。另一半时间在玩愤怒的小鸟（狗头）。第一班航程中会发两次飞机餐，味道一般，然后会供应芬航的特产蓝莓汁，我脑子宕机忘记了蓝莓怎么说。。。。。。</p>
<p>疫情期间选座的话建议往后面选，我选的48排，一个人占了一整排，后面一排也没有人，全程躺尸，40排向前人就会很多。防护方面，第一班是从中国起飞的，所以大部分人都只戴了口罩，一些人会在飞机降落前换好防护服，戴上护目镜或者面罩，还有人会戴手套，个人不建议戴手套，出的汗会把手泡得发白，过海关的时候可能会按不上指纹。如果穿防护服的话建议里面少穿，我刚开始在里面穿了羽绒服，差点没闷死。另外飞机上也会发一小袋酒精凝胶，酒味非常大。</p>
<h2 id="赫尔辛基机场-转机"><a href="#赫尔辛基机场-转机" class="headerlink" title="赫尔辛基机场-转机"></a>赫尔辛基机场-转机</h2><h3 id="转机"><a href="#转机" class="headerlink" title="转机"></a>转机</h3><p>转机的时候跟着指示牌和大部队走就可以，下楼梯后需要重新过安检，随身行李重新打开检查，如果穿了防护服的话不需要脱掉，工作人员会让你直接穿过安检门。我这班飞机的转机时间有两个多小时，非常充足，机场内还有部分免税店开门营业，无聊的话可以逛一逛。机场内人非常少，而且歪果仁都也佩戴口罩，总体来说比较安全。</p>
<h3 id="登机"><a href="#登机" class="headerlink" title="登机"></a>登机</h3><p>登机的时候会分批，机票上会写Group，喊到Group的时候再去排队，排队需要保持2米的距离，按照地上贴的小脚印站就行。建议上飞机之前补充点水分，上个厕所，第二班飞机风险还是比较高的。飞机上会正常供应饮料，外国人都会把口罩摘下来，该吃吃该喝喝，就很危险。如果有一起飞的朋友的话建议提前选好座位坐在一起。</p>
<h2 id="爱丁堡机场-落地"><a href="#爱丁堡机场-落地" class="headerlink" title="爱丁堡机场-落地"></a>爱丁堡机场-落地</h2><p>第二班飞机非得比较快，基本会提前半个小时落地。落地后爬一段楼梯，然后绕来绕去走到海关那里。苏格兰地区的海关还是比较松的，根本不会检查你的行李。去了之后就是排队过海关。过海关的时候工作人员看你的护照，会问你一些问题，如实回答就好。然后他会在你的签证页上盖一个入境章。建议拿回护照的时候仔细检查一下这个入境章清不清楚，我的当时就只给我盖出来个框框，里面的字都看不清，后面去学校拿BRP的时候还得出示机票才能拿。过完海关后去行李转盘等行李，取完行李就可以开溜了，从下飞机到出机场的整个过程大概40分钟</p>
<h2 id="格拉斯哥-接机"><a href="#格拉斯哥-接机" class="headerlink" title="格拉斯哥-接机"></a>格拉斯哥-接机</h2><p>我本来和朋友约好了一起飞一起包车的，结果朋友都跑路了。。。。所以我就血亏的自己找了一辆华人的接机，花了90磅，和打Uber差不多钱。我当时是在一个微信公众号上找的包车，公众号相当于中介，会抽成20磅。。。。如果在英国有认识的人的话建议问一下，最好可以直接联系司机。从爱丁堡到格拉宿舍大约1个小时。</p>
<p>如果你是飞格拉机场的话就更简单了，出机场后直接打出租车就可以，从格拉机场到KC大概十几分钟。</p>
<h1 id="办理入住手续"><a href="#办理入住手续" class="headerlink" title="办理入住手续"></a>办理入住手续</h1><p>我住的公寓是 Kelvin Court，属于Unite Student集团，入住前需要提前在公寓的APP <code>MyUnite</code> 上填写预计到达时间。如果像我一样到的比较晚，Reception没有开门的话可以敲一敲右边亮灯的窗子，会有工作人员出来开门的。进去之后把护照给工作人员，等他劈里啪啦一顿操作后就会给你一个信封，里面会有你的房卡和信箱的钥匙，建议检查下钥匙在不在，我的里面就没有钥匙，过了几天又去找前台小哥要的。前台的光头小哥非常负责，怕我迷路还把我送到了Block的门口hhh。另外格大还在公寓发放了一些零食礼包，入住的时候小哥会给你，礼包里东西还不少，有饼干、果汁、薯片、意面、牛奶、果酱、罐头等等（可以做几天快乐肥宅了）。</p>
<h1 id="领取BRP-校园卡"><a href="#领取BRP-校园卡" class="headerlink" title="领取BRP&#x2F;校园卡"></a>领取BRP&#x2F;校园卡</h1><h2 id="预约"><a href="#预约" class="headerlink" title="预约"></a>预约</h2><p>如果申请签证的时候你填写了学校CAS给的 <code>Additional Collection Location Code (ACL) for Biometric Residence Permit delivery</code> ,你的BRP就会被寄到学校。学校收到你的BRP后就会给你发一封邮件，提醒你预约时间领取BRP。建议在收到这封邮件之后再去预约领取BRP，否则极大概率白跑一趟。预约网址如下，使用学校账户登录，然后选择预约的时间段。</p>
<a class="btn" href="https://frontdoor.spa.gla.ac.uk/AppointmentBookingService/NotLoggedIn.aspx?Page=FastBook.aspx&Query=%3fMeetingTypeId%3d110"><i class="fa fa-home fa-fw"></i>预约网址</a>

<p>预约完成后会收到一封邮件，告诉你领取BRP的时间和地点。正常情况下会在图书馆对面的 <code>Fraser Building</code> 领取，但是不知为何我被分到了主楼里的 <code>Kelvin Gallery</code>，如果不知道这些地方的话可以去下面的学校地图网站上搜索。</p>
<a class="btn" href="https://www.gla.ac.uk/explore/maps/"><i class="fa fa-home fa-fw"></i>学校地图</a>

<h2 id="领取"><a href="#领取" class="headerlink" title="领取"></a>领取</h2><p>建议领取当天提前5-10分钟到达，不用去的太早，我提前了20分钟到的，被赶出来了。。。。。。</p>
<p><strong>必须带的材料</strong></p>
<ul>
<li>护照</li>
<li>BRP Letter</li>
</ul>
<p><strong>建议带的材料</strong></p>
<ul>
<li>机票（防止入境章不清楚）</li>
</ul>
<p>Kelvin Gallery 的领取流程如下：</p>
<ul>
<li>从主楼后面进入，门口正对着两个红色电话亭</li>
<li>右手边楼梯上四楼，到达Kelvin Gallery</li>
<li>工作人员会带你到一个小桌子前，看一下你的护照和BRP信，入境章不清楚的话会再看一下机票</li>
<li>确认是本人后就会带你到领取BRP的窗口</li>
<li>把护照交给工作人员，然后工作人员会让你往后退一下，保持社交距离（手动狗头）</li>
<li>等工作人员噼里啪啦操作一会后，会让你拿下口罩，确认一下是不是本人</li>
<li>确认后就会给你brp</li>
<li>然后他会让你绕到另一边的8号窗口领取校园卡</li>
<li>把BRP和护照给工作人员</li>
<li>稍等一小会工作人员会拿出学生卡，隔着玻璃展示一下，确认是否正确</li>
<li>确认完成后就可以拿着卡跑路了</li>
</ul>
<h1 id="办理银行卡"><a href="#办理银行卡" class="headerlink" title="办理银行卡"></a>办理银行卡</h1><p>我是从国内带了一张中国银行的卓隽信用卡过来的，日常使用起来基本没有问题。但是英镑存在国内的银行里利息少的可怜，基本可以忽略不计。另外在国外可能会接到中国银行的风控电话，有一丢丢被锁卡的风险，所以我就去办了一张当地苏格兰银行的卡，以及一张网络银行 Starling 的信用卡。</p>
<p>Starling 和 Monzo 一样，都是属于线上银行，在线下没有网点，要向卡里存入先进的话需要去邮局。这些卡比较适合日常使用，在里面存入少量英镑平常买东西用，这样即使被盗刷损失也不会很高。我选择 Starling 主要还是卡面颜值问题，Monzo 的荧光橙实在是太扎眼了，我个人还是比较喜欢 Starling 的青色。</p>
<p>线上银行的办卡流程比较简单，下载APP之后一步一步走就结束了，就不在多讲了，下面主要说一下苏格兰银行的开户流程</p>
<h2 id="打印-Bank-Letter"><a href="#打印-Bank-Letter" class="headerlink" title="打印 Bank Letter"></a>打印 Bank Letter</h2><p>格拉斯哥大学的 Bank Letter 可以在 My Glasgow 线上下载PDF文件打印</p>
<a class="btn" href="https://sharepoint.gla.ac.uk/students/myglasgow/"><i class="fa fa-home fa-fw"></i>My Glasgow</a>

<ul>
<li>登陆 <code>My Glasgow</code></li>
<li>点击右侧边栏里的 <code>My Student Center</code></li>
<li>在左上方找到 <code>My Academic Record</code></li>
<li>点击 <code>Bank and Certifying Letters</code></li>
<li>选择 <code>Bank Letter</code></li>
<li>学校提供了一些学校周边的银行网点，住的近的话可以直接在 <code>Please Select Bank</code> 立面选择</li>
<li>如果里面没有你要去的支行的话就在下面的框里手动填写，填写完提交，下载PDF，然后打印出来就ok了</li>
</ul>
<p>银行地址格式如下（以我去的 Glasgow Partick branch 为例）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bank of Scotland </span><br><span class="line">258/262 Dumbarton Road</span><br><span class="line">Glasgow</span><br><span class="line">G11 6TU</span><br></pre></td></tr></table></figure>

<p>苏格兰银行的地址可以在官网上找到，输入邮编搜索即可</p>
<a class="btn" href="https://branches.bankofscotland.co.uk/search"><i class="fa fa-home fa-fw"></i>Find a branch</a>

<p><strong>注意事项</strong><br>苏格兰银行在填写地址的时候只有两栏，第一栏是你的 Flat number，第二栏是门牌号和道路名。地址不需要具体到房间号，银行没有地方录入。我当时的地址格式如下，如果地址格式不对的话记得到 My Glasgow 里面修改自己的 Term address。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S818</span><br><span class="line">30, Yorkhill Street</span><br><span class="line"></span><br><span class="line">Glasgow</span><br><span class="line">G3 8RY</span><br></pre></td></tr></table></figure>

<h2 id="在线申请"><a href="#在线申请" class="headerlink" title="在线申请"></a>在线申请</h2><p>我办理的是苏格兰银行的卡，首先需要去银行的官网上申请开卡，选择<code>Classic Account</code>即可。<code>Student Account</code>需要在英国居住三年以上才可以申请，一年制的硕士是不能申请的。</p>
<p>申请的时候注意时间，长时间无操作的话申请会被自动取消，前面填写的所有信息都会消失，申请网址如下</p>
<a class="btn" href="https://www.bankofscotland.co.uk/bankaccounts.html"><i class="fa fa-home fa-fw"></i>申请地址</a>

<h3 id="个人基本信息"><a href="#个人基本信息" class="headerlink" title="个人基本信息"></a>个人基本信息</h3><ul>
<li>打开申请地址后向下找到绿色的 <code>Apply Today</code> 按钮</li>
<li>首先会询问你是否是苏格兰银行的现存客户(Are you an existing Bank of Scotland customer?) - 选 <strong>No</strong></li>
<li>你先前是否有过申请（Have you previously started an application and still need to provide us with proof of ID to complete it?）- 选 <strong>No</strong></li>
<li>这会是你的主账户吗（Is this going to be your main account?）- 选 <strong>Yes</strong></li>
<li>然后下面会出现balabala一长串的个人信息使用说明，直接拖到最后点 <code>Continue</code></li>
<li>继续填写姓名、性别、出身年月、国籍等个人信息</li>
<li>填写完国籍后会问你是不是中国人（Are you Chinese？）- 选 <strong>Yes</strong></li>
<li>填写到达英国的日期</li>
<li>Do you have indefinite leave to remain? - 选 <strong>Yes</strong></li>
<li>点 <code>Continue</code> 继续下一页</li>
</ul>
<h3 id="住址"><a href="#住址" class="headerlink" title="住址"></a>住址</h3><ul>
<li>填写你的住址的邮编与房间号，注意这里要和 Bank Letter 上面显示的完全一致，否则就可能会白跑一趟</li>
<li>点击 <code>Find Address</code>，但是它自动给出的地址并不准确，需要手动再修改</li>
<li>点击 <code>Change Address</code>， 然后点击 <code>Select Address</code>，向下拉到最后，选择的 <code>Address not listed</code>，然后手动输入自己的地址</li>
<li>在 <code>First line of address</code> 填写自己的 Flat 号，比如 Z818</li>
<li>在 <code>Second line of address</code> 填写公寓的门牌号以及街道，比如 KC 的就是 30, Yorkhill Street</li>
<li><code>Town/City</code>填写 Glasgow，然后填写邮编</li>
<li>你是否有配偶（Do you have a partner or spouse?） - 一般选 <strong>No</strong></li>
<li>你是租房还是住在自己的房子（Do you rent or own your home?） - 一般选 <strong>I rent my home</strong></li>
<li>你是否从市政厅租房（Do you rent from the Council?） - 一般选 <strong>No</strong></li>
<li>你每个月的房租是多少（How much do you pay for your rent each month?） -按照公寓每月房租填写，KC大概是640</li>
<li>每个月的学费是多少（How much do you pay towards childcare costs, maintenance and school&#x2F;university fees each month?）- 学费除以12填上就行</li>
<li>你什么时候住到现在的住址的（When did you move to your current address?） - 填写公寓的入住日期</li>
<li>这是否是你原来在英国的住址（Is your previous address in the UK?）- 选 <strong>No</strong></li>
<li>然后填写在中国的家庭住址，这里也要和 Bank Letter 上面显示的一致，格式和英国的一样，第一行也是单元号，第二行是门牌号和街道</li>
<li>点 <code>Continue</code> 继续下一页</li>
</ul>
<h3 id="收入状态"><a href="#收入状态" class="headerlink" title="收入状态"></a>收入状态</h3><ul>
<li>你是否有工作（Are you currently employed?） - 一般选 <strong>No</strong></li>
<li>你现在的状态是什么（What is your status?） - 一般选 <strong>I’m in full time education</strong></li>
<li>你每月的收入（Your monthly take home pay and other allowed income） - 一般就是在英国一年的花销除以12，我填的3000</li>
<li>你的存款总额（Your total amount of savings） - 一般选 <strong>25000-50000</strong></li>
<li>你是否在英国境外纳税（Do you pay taxes outside the UK?） - 一般选 <strong>No</strong></li>
</ul>
<h3 id="联系方式与营销选项"><a href="#联系方式与营销选项" class="headerlink" title="联系方式与营销选项"></a>联系方式与营销选项</h3><ul>
<li>填写在英国的手机号码</li>
<li>填写使用的邮箱，一定填写常用的，带回会有邮件发送到这个邮箱</li>
<li>营销选项里我只保留了网上银行和手机银行，这个不会影响你接收账户变动的通知</li>
<li>然后点击下面的 <strong>Submit</strong> 提交</li>
</ul>
<h3 id="提供身份证明"><a href="#提供身份证明" class="headerlink" title="提供身份证明"></a>提供身份证明</h3><p>这里只能接收英国的驾照和护照，而我们只有BRP，所以就需要去线下支行提供身份证明了。</p>
<p>银行会发给你一个包含 <code>reference number</code> 的邮件，记好这个，线下开卡的时候需要用到</p>
<p>到这里线上申请的部分就全部结束了</p>
<h2 id="线下开卡"><a href="#线下开卡" class="headerlink" title="线下开卡"></a>线下开卡</h2><p>在收到邮件后的14天内可以去任何一家苏格兰银行的支行开户，不需要其他的预约</p>
<p><strong>需要携带的材料有</strong></p>
<ul>
<li>BRP</li>
<li>Bank Letter （A4纸打印）</li>
<li>预约邮件里的 <code>reference number</code></li>
</ul>
<p>线下流程如下</p>
<ul>
<li>苏格兰银行周一到周五早上九点半开门，我大概是10点去的，现在疫情原因人不是很多</li>
<li>等一小会会有大堂经理来询问你办什么业务，和她说要 Open Account</li>
<li>然后她可能让你稍等一会，她会去找负责开卡业务的工作人员来</li>
<li>跟着工作人员到旁边的一间小屋子里开卡</li>
<li>把上面的材料交给工作人员</li>
<li>工作人员会问你的 <code>reference number</code></li>
<li>然后就干等着</li>
<li>工作人员处理完后会给你一张回执，上面会有你从国内转账过来所需要的那些信息（IBAN、Swift Code这些）</li>
<li>然后就可以回家等邮件了</li>
<li>期间可以下载注册手机银行</li>
<li>银行卡会在5个工作日内寄到你的住处</li>
<li>密码会在银行卡到达后的几个工作日内寄到，两者是分开的</li>
</ul>
<h1 id="警局注册"><a href="#警局注册" class="headerlink" title="警局注册"></a>警局注册</h1><p>苏格兰的警局注册已经从4月23日恢复了（虽然咕咕咕的老鸽子现在才更），在下面的官网上找到自己所在地区的警局邮箱，给警局发邮件预约注册，邮件内建议标明以下信息，不然的话警局会回信给你让你提供这些信息，耽误时间</p>
<ul>
<li>全名</li>
<li>国籍</li>
<li>住址</li>
<li>到英国的时间，出发的国家，隔离的信息</li>
<li>以前是否进行过警局注册，如果有的话注明时间地点</li>
</ul>
<a class="btn" href="https://www.scotland.police.uk/contact-us/overseas-visitor-registration-registering-with-the-police/"><i class="fa fa-home fa-fw"></i>警局官网</a>

<p>警局回复的效率都很高，一般一两天就会收到回信，告诉你注册的时间、地点与注意事项，这个时间是不能更改的，如果当天没法去的话就只能重新预约了。而且由于需要保持社交距离，每天注册的人数非常有限，我五月初发的邮件，然后给我排到了八月注册。。。。。。</p>
<p>去注册的话要带好这些东西：</p>
<ul>
<li>护照</li>
<li>BRP</li>
<li>办签证的时候一起寄来的那两张纸（BRP Letter）</li>
<li>警局注册表，可以直接填好然后打出来，不会填的可以空着，工作人员会帮你填</li>
<li>2张护照尺寸的照片</li>
<li>CAS 或者 uncon offer</li>
<li>居住证明，找公寓开</li>
</ul>
<p>之前由于疫情原因，苏格兰地区的警局注册全部暂停过，我1月给警局发过邮件询问，得到的答复是等待警局重新开门再进行预约，开门前不进行预约不会被罚款。</p>
<p>当时警局给我回复的邮件如下：</p>
<div class="note warning"><p>
OFFICIAL

<p>We have suspended services due to  Covid 19.</p>
<p>Please use this email as evidence that the OVRO Glasgow department will shut from 23rd November 2020  due to the Covid-19 Pandemic restrictions being imposed and will be closed until further notice. Please keep checking the Police Scotland website for updates of when we will re-open to make an appointment to register then. Please do not email or go into other Police Stations in Scotland.</p>
<p>Those required to register or update their certificates as part of their visa conditions should not worry about the seven day registration period, this decision has been taken in conjunction with the Home Office and deemed as a reasonable excuse for failing to register within the seven days stated in the legislation.</p>
<p>Regards,</p>
<p>OVRO Glasgow</p>
</p></div>

<h1 id="注册GP"><a href="#注册GP" class="headerlink" title="注册GP"></a>注册GP</h1><p>GP 全称 General Practitioner， 翻译成中文就是全科医生，有什么头疼脑热的就去找他，当然紧急情况还是要直接打999叫救护车吧</p>
<p>建议大家来了之后去注册一下，毕竟办签证的时候已经交了一笔四百多磅的医疗保险（IHS），注册之后拿着医生开的处方就可以去 Boots 等药店免费拿药了（英格兰除外，英格兰每次拿药都要9.15磅的处方费）</p>
<p>下面的网站可以查询附近的GP的基本信息，输入邮编即可</p>
<p>建议大家选择离自己近的 GP，不用一定选学校的那个GP，毕竟生病了再顶着英国的妖风去看病的话实在有点惨。另外可以去谷歌地图看一下每个GP的评价，以免踩坑</p>
<a class="btn" href="https://www.nhsinform.scot/scotlands-service-directory/gp-practices"><i class="fa fa-home fa-fw"></i>苏格兰 GP 查询</a>

<a class="btn" href="https://www.nhs.uk/service-search/find-a-GP"><i class="fa fa-home fa-fw"></i>英格兰 GP 查询</a>

<p>在上面的网站选好 GP 后就可以去相关 GP 的网站查看注册所需要的信息了，以我注册的 GP 为例，需要在 GP 的网站上下载 GPR、 New Patient Questionnaire 和 Ethnicity Form 三张表，打印填写然后带着这三张表与<code>护照/BRP</code>到 GP 的 Reception 去注册就好，有些 GP 可能还要居住证明，具体要求看官网说明或者打电话询问</p>
<h1 id="白嫖"><a href="#白嫖" class="headerlink" title="白嫖"></a>白嫖</h1><p>所谓的白嫖就是在英国申请 NHS 的低保，申请成功的话就可以白嫖眼镜、牙医以及假发（大雾）了</p>
<p>白嫖的第一步是去GP&#x2F;牙医&#x2F;药店等地方要一张 <code>HC1(Claim for help with health costs)</code> 表格，当然如果有像我一样跑了四五家 Boots 还是没有要到表格的幸运儿的话，还是去网站下载一个自己打印吧（淦），苏格兰地区去下面这个网站下载</p>
<a class="btn" href="https://www.nhsinform.scot/care-support-and-rights/health-rights/access/help-with-health-costs#low-income"><i class="fa fa-home fa-fw"></i>苏格兰 HC1 下载</a>

<p><strong>填写表格的指南仅供没结婚没生孩子的朋友参考</strong></p>
<table>
<thead>
<tr>
<th align="left">序号</th>
<th align="left">内容</th>
<th align="left">举例</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1.1</td>
<td align="left">申请退款</td>
<td align="left">如果你在申请HC1之前配过眼镜并且想获得退款就勾选 Glasses or contact lenses</td>
</tr>
<tr>
<td align="left">1.2</td>
<td align="left">是否有配偶</td>
<td align="left">没有的话后面右侧所有与 Partner 有关的内容都不用填写</td>
</tr>
<tr>
<td align="left">1.3</td>
<td align="left">基本信息</td>
<td align="left">姓名建议全部大写，National Insurance number 没有可以不写，电话号码形式为 （44）0xxxxxxxxxx，底下是你方便接听电话的时间段</td>
</tr>
<tr>
<td align="left">2.1</td>
<td align="left">有没有孩子</td>
<td align="left">勾选 No，下面都不用填，直接去 Part 3</td>
</tr>
<tr>
<td align="left">3.1</td>
<td align="left">有没有人一起住</td>
<td align="left">公寓的室友不算，勾选 No，下面都不用填，直接去 3.3</td>
</tr>
<tr>
<td align="left">4.1</td>
<td align="left">有没有存款</td>
<td align="left">勾选 Yes，勾选后填写 Money in accounts，金额理论上不超过1w就行，但是有人写6000通过了，有人如实写200被拒了，很迷惑</td>
</tr>
<tr>
<td align="left">4.2</td>
<td align="left">有没有地产或房产</td>
<td align="left">勾选 No，下面内容不用填</td>
</tr>
<tr>
<td align="left">5.1 - 5.9</td>
<td align="left">社会福利补助之类的东西</td>
<td align="left">都勾选 No，下面内容不用填</td>
</tr>
<tr>
<td align="left">6.1</td>
<td align="left">有没有工作</td>
<td align="left">勾选 No，下面都不用填，直接去 Part 7</td>
</tr>
<tr>
<td align="left">7.1 - 7.6</td>
<td align="left">有没有人一起住的问题</td>
<td align="left">勾选 No，下面内容都不用填，跳过7.7</td>
</tr>
<tr>
<td align="left">7.8 - 7.11</td>
<td align="left">同上</td>
<td align="left">勾选 No，下面内容都不用填，跳过7.12直接去 Part 8</td>
</tr>
<tr>
<td align="left">8.1</td>
<td align="left">是不是全日制学生</td>
<td align="left">勾选 Yes，下面根据个人情况填写，Qualification 那里我填的 MSc, Post-graduate，下面是大学名字和三个学期的起止时间，再下面问你是否是一年制课程，一般选 Yes，如果选 No 就在下面写下一学年的开学日期</td>
</tr>
<tr>
<td align="left">8.2</td>
<td align="left">是不是留学生</td>
<td align="left">勾选 Yes，下面填 China</td>
</tr>
<tr>
<td align="left">8.3</td>
<td align="left">学费是不是由奖学金之类的支付</td>
<td align="left">勾选 No，下面来源填 Parents</td>
</tr>
<tr>
<td align="left">8.4</td>
<td align="left">有没有申请过学生补助</td>
<td align="left">勾选 No，下面内容不用填</td>
</tr>
<tr>
<td align="left">8.5</td>
<td align="left">经济来源是什么</td>
<td align="left">上面那一串都不用管，在 Money from parents 后边打勾并填写生活费，例如 ￡200 &#x2F; Every Month，这里的数字也很迷惑</td>
</tr>
<tr>
<td align="left">8.6</td>
<td align="left">上学的时候和是否父母住在一起</td>
<td align="left">勾选 No</td>
</tr>
<tr>
<td align="left">8.7</td>
<td align="left">需不需要付房租</td>
<td align="left">勾选 Yes，下面如实填写就行，例如 ￡600 &#x2F; Every Month，下面的 Heating Lighting Cooking Hot water 全部打勾，Do you have just one room? 选Yes，Does your rent include any meals? 选 No，下面内容不用写</td>
</tr>
<tr>
<td align="left">8.8</td>
<td align="left">圣诞节复活节假期是否付房租</td>
<td align="left">勾选 Yes，下面如实填写就行，例如 ￡600 &#x2F; Every Month</td>
</tr>
<tr>
<td align="left">8.9</td>
<td align="left">暑假是否住在公寓</td>
<td align="left">如实填写就行</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left">补充信息</td>
<td align="left">一般跳过就行</td>
</tr>
<tr>
<td align="left">10a</td>
<td align="left">英文签名并写日期</td>
<td align="left">如实填写就行</td>
</tr>
<tr>
<td align="left">10b</td>
<td align="left">是不是帮别人申请</td>
<td align="left">直接跳过</td>
</tr>
<tr>
<td align="left">最底下</td>
<td align="left">声明条款</td>
<td align="left">I have answered all the questions that apply to me. 和 I have signed the declaration above. 打勾就行，中间的两个不用管</td>
</tr>
</tbody></table>
<p>如果你在药店等地方领到了表格的话，填完之后装到附赠的信封里，附上一份学生证明，然后填好地址信息扔进邮筒就可以了，不用贴邮票；像我这种自己打印的话就得去邮局邮寄了（淦*2），邮寄地址如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NHS Business Services Authority</span><br><span class="line">Bridge House</span><br><span class="line">152 Pilgrim Street</span><br><span class="line">NEWCASTLE-UPON-TYNE</span><br><span class="line">NE1 6SN</span><br></pre></td></tr></table></figure>

<p>寄出后一般两三周后会收到低保证明，按照具体的收入情况来区分，会有 HC2（全额报销）和 HC3 (部分报销) 两种表格，拿到寄回来的表格后就可以快乐白嫖了~~~</p>
<h1 id="KC附近超市"><a href="#KC附近超市" class="headerlink" title="KC附近超市"></a>KC附近超市</h1><p>我和室友出去采购的话一般有东、西、北三条路线</p>
<ul>
<li>东边主要是中超和小超市<ul>
<li>Tesco Express 最小号的Tesco，类似于楼下小超市的存在，步行五分钟到</li>
<li>Sainsburys Local 最小号的Sainsburys，东西不多</li>
<li>爱佳中超 小号的爱佳，国内的调味料小零食啥的都有</li>
<li>锦鲤中超 中号的中超，上下两层，东西很全</li>
<li>Boots 巨小的一家Boots</li>
</ul>
</li>
<li>北边主要是 Iceland ，还有 Waitrose 与 中号 Tesco<ul>
<li>Iceland 听名字就知道是个卖冷冻食品的，所以只建议买冷冻食品，它家的菜不太ok</li>
<li>Waitrose 高端土豪超市，我就看看我不买（其实有款柠檬茶还是挺好喝的）</li>
<li>Tesco Metro 中号的Tesco</li>
</ul>
</li>
<li>西边的店比较多，扫荡一圈要三四个小时的亚子<ul>
<li>Lidl Vita楼下，德国来的平价超市，一般去屯披萨，菜的成色一般般</li>
<li>Morrisons Vita对面，快乐老家，主要买各种吃的，菜和水果比较新鲜，锅碗瓢盆都有</li>
<li>Poundland Morrisons北边，俗称一磅店，听名字就知道巨便宜，就是质量一般般</li>
<li>Argos 下面这些超市都在一起，走过去大概二十多分钟，Argos目前只能到店提货</li>
<li>Home Bargain 快乐老家，每次去都能发现新的便宜货，质量还不错</li>
<li>Sainsburys 超大号的超市，东西巨全</li>
<li>M&amp;S Simply Food 玛莎，高端超市，每次去都是为了抢草莓挞hhh</li>
<li>爱佳中超 大型爱佳，还没进去过hhh</li>
<li>Boots 大号的Boots，各种化妆品日用品</li>
</ul>
</li>
</ul>
<h1 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h1><p>下面是我来英国后装的各种APP</p>
<ul>
<li>UNiDAYS 白嫖各种学生优惠，比如半年的亚马逊会员</li>
<li>Railcard 火车的优惠卡，每次节省三分之一票价</li>
<li>Trainline 买火车票的软件</li>
<li>Uber 打车</li>
<li>Google Maps 防止迷路</li>
<li>Paypal eBay买东西付款用</li>
<li>各家超市的App<ul>
<li>Boots 积分抵现，建议带着学生证去线下激活学生会员，买东西9折</li>
<li>Lidl 积分比较坑，每月清零，攒到100磅积分才能换优惠券</li>
<li>Morrisons More 积分也比较坑，要攒好久</li>
<li>Clubcard Tesco的积分卡，攒够150磅换1.5磅优惠券。。。</li>
</ul>
</li>
<li>网购<ul>
<li>eBay 类似于淘宝的存在，东西便宜</li>
<li>Amazon 类似京东</li>
<li>AliExpress 淘宝海外版，比较少用</li>
</ul>
</li>
<li>Red Scarf 英国红领巾，有不少英国的攻略，写的比我这个业余的强多了hhh</li>
<li>哔哩助手 翻回国的VPN，免费但是有广告，但是我不怎么用所以就将就了</li>
<li>小红书 留学生聚集地，能搜到好多攻略（以及各种食谱）</li>
</ul>
<h1 id="买买买"><a href="#买买买" class="headerlink" title="买买买"></a>买买买</h1><p>家具电器什么的尽量收二手，便宜好多，像我这种收不到二手的幸运鹅就只能买新的了（淦*3），下面是来了之后我买的一些东西</p>
<ul>
<li>加湿器 头号推荐，英国这边开了暖气屋里贼干，没有加湿器睡一晚起来嗓子都是哑的，湿度只有30%，亚马逊的比较贵，我在eBay买的</li>
<li>挂衣架 我在亚马逊买的，花了十几磅，亏大了，后来发现一磅店里的只要5磅</li>
<li>晾衣架 收的二手，可以看下宜家，因为英国没有阳台，洗完衣服就晾在暖气边烘干</li>
<li>迷你洗衣机 宿舍的洗衣机可太贵了，洗一次衣服3.3磅，烘干一次1.5磅，自己买个半自动的洗衣机四五十磅，洗十几次就回本了，毕业再出二手，香的很，建议ebay或者AliExpress（类似国际版的淘宝）买</li>
<li>过滤水壶&#x2F;滤芯 图个心理安慰罢了，苏格兰的水质还是可以的</li>
<li>过滤花洒 据说防脱发，也不知道用没用有，毕竟不敢做对照试验（手动狗头）</li>
<li>电饭煲 对米饭的执念</li>
<li>英标插排 插座永远都不够用</li>
<li>衣架 homebargain 很便宜，网购价格就离谱</li>
<li>瑜伽垫 homebargain 5.99磅</li>
<li>妈妈买菜的小拉车 homebargain 7.99磅，但经常没货</li>
<li>消毒酒精 亚马逊13磅5L一大桶，推荐几个人一起买套装，单个买16磅</li>
<li>脏衣篓 homebargain 很便宜</li>
<li>烤箱手套 一磅店只要1磅还是2磅来着</li>
<li>烤盘 一磅店</li>
<li>塑料盆子 一磅店1磅一个</li>
<li>菜板菜刀各种调料 中国超市，价格稍贵但是也没办法</li>
<li>床单被罩被子枕头 Argos&#x2F;Morrisons都有，下面稍微科普下各种东西都是啥，英国学生公寓的床一般都是 <code>3/4 double</code> 的，推荐直接买 double 的， single 的有点小。<ul>
<li>DuvetCover被套</li>
<li>DuvetCoverSet被套+枕套</li>
<li>Pillowcases枕套</li>
<li>FittedSheet&#x2F;Flatsheet被单–区别是fitted是包边的，Flat就是国内常见的那种</li>
<li>Pillow枕芯</li>
<li>Duvet被芯</li>
</ul>
</li>
</ul>
<h1 id="火车卡"><a href="#火车卡" class="headerlink" title="火车卡"></a>火车卡</h1><p>火车卡有好多种类，留学生一般办理的都是16-25 Railcard，每次买票省三分之一的钱</p>
<a class="btn" href="https://secure.railcard.co.uk/purchase/16-25/"><i class="fa fa-home fa-fw"></i>16-25 Railcard 办理</a>

<ul>
<li><code>Are you a mature student?</code> 如果你超过26岁的话就要勾上 <code>Yes, I am a mature student</code> ，超过26岁只能买一年期的卡</li>
<li>没超过的话可以买一年期和三年期的卡，一年期30磅，三年期70磅，然而大家一般都是一年的研究生，所以三年期优惠的并没有什么卵用</li>
<li>个人感觉电子卡比较方便，实体卡需要一到两周才能寄到</li>
<li>Promotional code 这个神奇的优惠码不太好找，我没找到能用的</li>
<li>验证身份信息的时候建议选择护照，比较方便，BRP上的信息和他要的信息有出入</li>
<li>付完款后会弹窗问你要不要返现，返现的话是16磅多，但是会给你自动开通一个会员，首月免费，然后每个月15磅订阅费，我选择了要返现，等到返现到账后记得把会员取消掉就好了，资本主义的羊毛不薅一把心里都过意不去（狗头）</li>
</ul>
<h1 id="邮局寄信"><a href="#邮局寄信" class="headerlink" title="邮局寄信"></a>邮局寄信</h1><p>腐国的办事效率和天朝还是差得远呢，明明网上上传就可以解决的东西还是需要邮寄，而且资本主义的邮局果不其然的很坑，我周五去的邮局，下面是被坑的经过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我进去之后说：我想要寄一封信</span><br><span class="line">他说：好的，放到称上称一下重，大概周一可以寄到</span><br><span class="line">我寻思最便宜的好像也就是两三天，就说OK</span><br><span class="line">然后他噼里啪啦一顿操作，跟我说：可以了，付钱吧</span><br><span class="line">我把 Apple Pay 打开差点就放到 POS 机上了，一看金额 ￡7.65</span><br><span class="line">我以为他搞错了，我问他要7磅嘛？？</span><br><span class="line">他说：是的，这是最快的服务</span><br><span class="line">我寻思最快的服务不是第二天就能到吗？？？</span><br><span class="line">然后我说：我想要便宜的，我不着急</span><br><span class="line">然后他跟我说：便宜的是3磅多</span><br><span class="line">我寻思3磅多的应该是 1st class吧，我就说：我用 2nd class 就行</span><br><span class="line">他说：那就是两磅多</span><br><span class="line">我还是觉得哪里不对劲，但是当时想不起来了，2磅就2磅吧</span><br><span class="line">然后回家之后才发现2磅多的是带邮件追踪的，不带追踪的只要 ￡1.53</span><br><span class="line">但是这个追踪也没啥卵用，多卖1磅就离谱</span><br></pre></td></tr></table></figure>

<p>英国的寄送一般分三个等级</p>
<ul>
<li>Special Delivery 最快的也是最贵的，最快第二天上午9点前到</li>
<li>1st Class 一等邮件，一般一两天到</li>
<li>2nd Class 二等邮件，一般两三天到</li>
</ul>
<p>然后又分为两种情况</p>
<ul>
<li>Standard 最基础的，不带邮件追踪，不需要收件人签名</li>
<li>Signed 签名信，带邮件追踪，需要收件人签收，价格更高</li>
</ul>
<p>我当时是自己带着封好的信封去的，如果没有信封的话还要从他那里买一个，买完之后再去找他邮寄。</p>
<p>如果不急的话就直接跟他说用 Standard&#x2F;Unsigned 2nd Class，不然他就可能给你用 Special Delivery（黑心商贩）。下面是邮寄价格的查询</p>
<a class="btn" href="https://www.postoffice.co.uk/price-finder"><i class="fa fa-home fa-fw"></i>邮寄价格查询</a>

<p>而且英国邮局支持自己打印邮票，网站上的价格很清晰（我为什么没早点看到这个），打印完直接贴在信封上扔到红色的邮筒里就行了，我准备下次试一下，下面是链接</p>
<a class="btn" href="https://send.royalmail.com/"><i class="fa fa-home fa-fw"></i>自助打印</a>

<h1 id="老鸽子的-Vlog"><a href="#老鸽子的-Vlog" class="headerlink" title="老鸽子的 Vlog"></a>老鸽子的 Vlog</h1><p>咕咕咕咕咕咕<br>中二病晚期</p>
<h2 id="Chapter-1-未从9-3-4-站台开始的旅程"><a href="#Chapter-1-未从9-3-4-站台开始的旅程" class="headerlink" title="Chapter 1 未从9 3&#x2F;4 站台开始的旅程"></a>Chapter 1 未从9 3&#x2F;4 站台开始的旅程</h2><p>为什么不能坐小火车来上学呢？</p>
<iframe src="//player.bilibili.com/player.html?aid=799088903&bvid=BV1Wy4y1Y7sY&cid=294103931&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Chapter-2-没戴分院帽就被分到了蛇院"><a href="#Chapter-2-没戴分院帽就被分到了蛇院" class="headerlink" title="Chapter 2 没戴分院帽就被分到了蛇院"></a>Chapter 2 没戴分院帽就被分到了蛇院</h2><p>中二病发作</p>
<iframe src="//player.bilibili.com/player.html?aid=756524982&bvid=BV1wr4y1T7Ry&cid=294585550&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Chapter-13-用麻瓜的方式堆雪人"><a href="#Chapter-13-用麻瓜的方式堆雪人" class="headerlink" title="Chapter 13 用麻瓜的方式堆雪人"></a>Chapter 13 用麻瓜的方式堆雪人</h2><p>学校外面不能用魔法，只能像个麻瓜一样堆雪人</p>
<iframe src="//player.bilibili.com/player.html?aid=502552462&bvid=BV1EK411F7Y2&cid=321638065&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Chapter-4-为什么英国不能吃铁锅炖大鹅"><a href="#Chapter-4-为什么英国不能吃铁锅炖大鹅" class="headerlink" title="Chapter 4 为什么英国不能吃铁锅炖大鹅"></a>Chapter 4 为什么英国不能吃铁锅炖大鹅</h2><p>天鹅只是女王的财产，又不是魔法部长的财产，凭啥不能吃？</p>
<iframe src="//player.bilibili.com/player.html?aid=802533389&bvid=BV1Qy4y1x76F&cid=321649638&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Chapter-5-为什么学校上空都是飞机却没有飞天扫帚"><a href="#Chapter-5-为什么学校上空都是飞机却没有飞天扫帚" class="headerlink" title="Chapter 5 为什么学校上空都是飞机却没有飞天扫帚"></a>Chapter 5 为什么学校上空都是飞机却没有飞天扫帚</h2><p>是因为飞天扫帚的飞航许可被撤销了吗？</p>
<iframe src="//player.bilibili.com/player.html?aid=672618143&bvid=BV1kU4y1h7sj&cid=321681267&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Chapter-6-神奇的消失柜"><a href="#Chapter-6-神奇的消失柜" class="headerlink" title="Chapter 6 神奇的消失柜"></a>Chapter 6 神奇的消失柜</h2><p>啪，没了（手动滑稽）<br>攒下来的素材太多就懒得剪了hhh</p>
<h1 id="配眼镜"><a href="#配眼镜" class="headerlink" title="配眼镜"></a>配眼镜</h1><p>夏至日更新~ 考完试的老鸽子回来了！</p>
<p>英国配眼镜主要有四家店：</p>
<ul>
<li>Specsavers</li>
<li>Boots Opticians</li>
<li>Vision Express</li>
<li>David Clulow （富婆可考虑，贼贵）</li>
</ul>
<p>我选的是 Specsavers，因为离家最近，而且官网可以 AR 试戴镜框hhh，官网如下</p>
<a class="btn" href="https://www.specsavers.co.uk/"><i class="fa fa-home fa-fw"></i>Specsavers</a>

<p>下面是框架眼镜的配镜流程：</p>
<ul>
<li>点击右上角的 <code>Book appointment</code></li>
<li>输入自己的邮编查询附近的店，然后点击 <code>Book online</code></li>
<li>选择 <code>Adult eye test</code></li>
<li>然后会问你是否要做青光眼的检查，做的话要单独花10磅，我没做</li>
<li>然后选择日期与时间，我附近的那家店只能选择10天之后的了</li>
<li>然后输入个人信息，如果有 HC2 的话最后一项 <code>Are you entitled to an NHS eye test?</code> 就选择 <code>Yes</code></li>
<li>提交之后会让你再填写一个问卷，另外也会收到一封带有问卷链接的邮件，问卷内容就是具体的用眼情况</li>
<li>在预约日期的前一天眼镜店会打电话确认以下当天是否能去，然后会有一个确认短信</li>
<li>预约当天准时到就好，迟到二十分钟以上预约就会被取消</li>
<li>进去之后和前台说你有几点几点的预约，然后他会确认你的名字、住址、是否是第一次在英国测视力等等</li>
<li>然后去等待区等验光师叫人</li>
<li>如果你原来带着眼睛的话验光师会先拿你的眼镜去测一下旧眼镜的度数</li>
<li>之后跟配镜师去小屋子里，然后就是各种仪器劈里啪啦的一顿操作<ul>
<li>先是类似国内看小房子的那个仪器，不过这边看的是热气球</li>
<li>然后是让你盯着仪器里面的红点看，然后猝不及防一个白色闪光，差点给我闪瞎了</li>
<li>下一步就是测度数，脸贴在仪器上读视力表上的字母，视力表和国内的不同，是每一行几个字母，你需要读出来能看清的最后一行</li>
<li>验光师会操作仪器加减镜片的度数，然后询问你现在的情况和原来相比是 better 还是 worse 了，差不多的话就说 same</li>
<li>然后是测散光，问你两个图哪一个更清楚 （one or two)</li>
<li>最后是检查眼球健康状况，脸贴在仪器上，验光师会用小灯照射你的眼球，然后让你上下左右看</li>
<li>检查到此就结束了，记得出示 HC2 给验光师，验光师会把你的 HC2 编号录入系统，然后把 HC2 收好就用不到了</li>
</ul>
</li>
<li>验完光之后配镜师会给你验光结果，然后带你出去到挑选镜框的地方</li>
<li>负责镜框的工作人员会给你一个小托盘，从展示架上取下来的试戴的眼镜要放到小托盘里，不要再放回原处，因为工作人员要给他们消毒</li>
<li>有 HC2 的话镜框在49磅以下的都免费，多的需要补差价</li>
<li>选好镜架后把托盘还给工作人员，然后她会询问你是否需要附加服务，包括<ul>
<li>是否要打薄，打薄原价是20磅，我度数比较高就选择了打薄</li>
<li>我选的镜架是69磅的，英国的镜架属实丑，挑了半天挑了个勉强能看的</li>
<li>然后用 HC2 打完折之后一共需要付 29.7 磅，当然选 49 磅及以下的镜框并且不打薄镜片的话，你就可以成功白嫖了（薅资本主义的羊毛）</li>
<li>白嫖的话工作人员可能会推荐你加镜片涂层，比如防反射、防蓝光、防紫外线之类的</li>
<li>这里会有套路，工作人员可能直接给你报最后的价格，而不跟你说加了什么涂层，这个时候就要脸皮厚的问为啥这么贵，要不然就要花冤枉钱咯</li>
<li>我室友就遇到了这个套路，49的镜框 + 不打薄，报的价格比我的还高，最后问她才说推荐你加一个抗反射的涂层。。。。。。</li>
<li>不想要涂层的话就说你只想要 Standard 的镜片，不要加涂层（coating）</li>
<li>有一说一拿着白嫖的验光单回国淘宝再搞一个眼镜他不香吗，颜值比英国的不知道高到哪里去了</li>
</ul>
</li>
<li>全部结束之后最后会给你一张你卡，上面写着取眼镜的时间，我的是一周后到店领取，还蛮快的，领取的时候据说会现场调试</li>
</ul>
<h1 id="城堡快乐卡"><a href="#城堡快乐卡" class="headerlink" title="城堡快乐卡"></a>城堡快乐卡</h1><p>给喜欢逛城堡的朋友强烈安利，这个卡是我在买爱丁堡城堡门票的时候偶然发现的，全称 <code>HISTORIC SCOTLAND MEMBERSHIP</code>，30磅包年，无限次免费游览爱丁堡城堡、斯特灵城堡等苏格兰的古迹，并且在景区的礼品店内有8折优惠。因为爱丁堡和斯特灵城堡的门票都要15磅，所以各去一次就不亏了，后面再去别的城堡古迹就纯属白嫖，而且爱丁堡城堡景色太好，我估计要再去好几次hhh。下面是注册的链接</p>
<a class="btn" href="https://members.historic-scotland.gov.uk/join?tab=1"><i class="fa fa-home fa-fw"></i>快乐卡注册</a>

<p>进去之后填写个人信息进行注册，然后付款方式建议选择 <code>Direct Debit Annual</code>，可以省下 10% 的费用。</p>
<p>另外会员会收到杂志，可以选电子版或者纸质版，注册完之后大概三四天就能收到会员卡与介绍手册了。</p>
<p>当然如果像我一样在预约的前几天才发现这张卡，然后到了预约日期卡还没有到，也可以凭着收到的确认邮件进入城堡的。</p>
<p>有了卡之后预约的时候就选择苏格兰历史会员票，然后付款页面就是0磅咯~</p>
<h1 id="TBC。。。"><a href="#TBC。。。" class="headerlink" title="TBC。。。"></a>TBC。。。</h1><p>咕咕咕咕咕咕，牙医注册的我放弃了，因为白嫖的补牙材料好像是黑色的，不如回国搞了hhh</p>
<h1 id="KC-Room-Tour"><a href="#KC-Room-Tour" class="headerlink" title="KC Room Tour"></a>KC Room Tour</h1><p>这个可能要无限期咕咕咕了，公寓staff来把空房间的门都给锁上了，进不去没法拍，只能等室友来了（淦*4）</p>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>攻略</tag>
        <tag>英国</tag>
      </tags>
  </entry>
  <entry>
    <title>英国行李清单</title>
    <url>/%E8%8B%B1%E5%9B%BD%E8%A1%8C%E6%9D%8E%E6%B8%85%E5%8D%95.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">结合本鸽子逛了三个月英国超市的经历，整理了一下来英国建议带的东西 && 不建议带的东西，针对不建议带的东西列出了购买方式</blockquote>

<span id="more"></span>

<h1 id="建议带"><a href="#建议带" class="headerlink" title="建议带"></a>建议带</h1><p>这一类一般是在英国很难买到，或者是价格高得离谱的东西</p>
<ul>
<li>挂钩 ⭐⭐⭐⭐⭐ 英国挂钩的价格就真的离谱，一个的价格我在淘宝能买一盒</li>
<li>围裙 ⭐⭐⭐⭐ 价格同样离谱，一样的钱淘宝能买十条</li>
<li>油壶 ⭐⭐⭐ 找遍了各个超市，最后在一家街角小卖店里找到了，但是非常难用，会漏油</li>
<li>备用手机 ⭐⭐⭐⭐ 万一手机坏了还能撑一下，这边买手机可太贵了</li>
<li>理发器 ⭐⭐⭐ 这边理一次发的价格就能买个理发器了，而且疫情期间不太敢让理发师上门，我就老老实实给自己理了一个狗啃头</li>
<li>中标插排 ⭐⭐⭐⭐ 基本只有中超有，价格偏贵</li>
<li>转接插头 ⭐⭐⭐⭐ 英超虽然有，但是价格离谱</li>
<li>冲锋衣 ⭐⭐⭐⭐⭐ 妖风 + 下雨天出门必备，这边服装店目前不开门</li>
<li>SIM卡针 ⭐⭐⭐⭐ 不占地方</li>
<li>充电宝 ⭐⭐⭐⭐ 这边价格偏高</li>
</ul>
<h1 id="可带可不带"><a href="#可带可不带" class="headerlink" title="可带可不带"></a>可带可不带</h1><p>这一类一般是体积较小，重量较轻，可有可无或者在英国也能买到且价格不离谱的东西</p>
<ul>
<li>路由器 ⭐⭐⭐ 需要的话还是自己带一个，英国价格有点离谱</li>
<li>网线 ⭐ 价格差不多</li>
<li>USB小风扇 ⭐⭐⭐ 英国宿舍基本没空调，夏天还是会热的</li>
<li>温湿度计 ⭐ 有需要可以带一个看下室内温湿度，这边价格比较高</li>
<li>肥皂盒 ⭐ 一磅店就有，只不过款式不太好看</li>
<li>数据线 ⭐⭐ 编织线的价格和国内差不多</li>
<li>台灯 ⭐ 我宿舍书桌上面有两个巨亮的射灯，所以台灯就华丽丽的吃灰了，这边的台灯价格稍贵</li>
<li>相机三脚架 ⭐⭐ 有需要的可以带一个轻便的，这边价格基本翻倍了</li>
<li>小加湿器 ⭐⭐ 小的话可以带一个，eBay上最便宜的也要7磅，还没一卷卫生纸大</li>
<li>筷子 ⭐ 中超就有，价格可以接受</li>
<li>折叠盆 ⭐ 这边盆子质量稍差，但也不是不能用，而且中超也有国内那种盆子</li>
<li>保温杯 ⭐ 价格和国内差不多</li>
<li>指甲钳 ⭐⭐ 有得卖，但是不清楚质量如何</li>
<li>电池 ⭐ 这边价格稍高，但也可以接受，充电电池可以带，干电池就算了吧</li>
<li>牙杯 ⭐ 一磅店的塑料杯子就能用hhh</li>
<li>削皮器 ⭐ 中超英超都有，价格不贵</li>
<li>鞋刷 ⭐ 同上</li>
<li>多功能刀 ⭐ 相当于临时的工具箱吧，这边价格很贵</li>
<li>U盘 ⭐ 价格不算很贵</li>
<li>拖鞋⭐⭐⭐ 这边的款式有点丑的</li>
<li>钢化膜 ⭐⭐ 价格小贵</li>
<li>笔记本支架 ⭐⭐ 预防颈椎病（狗头）</li>
<li>备用眼镜 ⭐ 来了之后可以白嫖的（再次狗头）</li>
<li>洗衣袋 ⭐⭐ 这边价格有点贵</li>
</ul>
<h1 id="不建议带"><a href="#不建议带" class="headerlink" title="不建议带"></a>不建议带</h1><p>这一类就是体积太大，重量太沉，或者在英国能以更低价格买到的东西</p>
<ul>
<li>肥皂 ❌ homebargain有的买， 80p两块</li>
<li>电饭煲 ❌❌❌ 这个是真的没必要，收二手就可以，自己带的话又重又占地方，还要浪费一个转换插头，收不到二手网购也差不多价格，可能没有国内那么丰富的功能</li>
<li>电吹风 ❌❌❌ 同上</li>
<li>大加湿器 ❌❌❌ 同上</li>
<li>折叠水壶 ❌ 用几次就吃灰的东西，落地之后直接去大点的超市买烧水壶就可以，或者提前网购</li>
<li>菜刀 ❌❌ 太沉了，中超就有，价格可以接受</li>
<li>电动牙刷刷头 ❌ 别的不知道，反正欧乐B的比国内便宜不少</li>
<li>雨伞 ❌ 遇到妖风基本报废，淘宝那种抗台风的可以试一下？</li>
<li>锅碗瓢盆 ❌❌❌ 真的没必要，大点的超市都有，样式也还行</li>
<li>被子 ❌❌❌ 除非行李箱空一半（手动狗头）</li>
<li>纱窗 ❌❌ 亚马逊就有，而且学生公寓的窗子基本只能开一道缝隙，根本就装不上</li>
</ul>
]]></content>
      <categories>
        <category>留学</category>
      </categories>
      <tags>
        <tag>留学</tag>
        <tag>攻略</tag>
        <tag>英国</tag>
      </tags>
  </entry>
  <entry>
    <title>荣耀 magic watch 表盘制作</title>
    <url>/%E8%8D%A3%E8%80%80-magic-watch-%E8%A1%A8%E7%9B%98%E5%88%B6%E4%BD%9C.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">趁着还没开学给老爸的 Magic Watch 做了个表盘，甲方唯二的要求就是：字大+醒目</blockquote>

<p><img data-src="https://s2.loli.net/2022/05/13/fswCopBAYqjnFKl.png" alt="icon"></p>
<span id="more"></span>

<div class="note danger"><p>提醒：此文写于2020年6月，一些内容已过时，请注意时效！</p>
</div>

<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p>刚开始搜集材料的时候看见有人说表盘要<strong>手动</strong>编辑xml文件，这不是反人类吗。。。不过好在华为已经推出了表盘设计软件<code>HwWatchFaceDesigner</code>，整个设计过程就和用<code>PhotoShop</code>P图一样<br>首先到华为的网站去下载<code>华为手表表盘开发工具</code>并解压，然后打开<code>HwWatchFaceDesigner.exe</code></p>
<a class="btn" href="https://developer.huawei.com/consumer/cn/doc/5050601"><i class="fa fa-download fa-fw"></i>传送门</a>

<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>在解压后的文件夹里有中英文的<code>用户手册</code>，路径是<code>.\document\用户手册.pdf</code>,也可以在<code>帮助</code>中点击<code>用户手册</code>。我就不再啰嗦了，只记录一些注意事项</p>
<ul>
<li><code>荣耀 Magic Watch</code>的分辨率是<code>390*390</code></li>
<li>新建工程的时候<code>表盘效果图</code>先空着，设计完成之后再截图到PS里，导出不同分辨率的效果图</li>
<li>图层最多25个</li>
<li>一些位置固定的图标可以到最后在PS里和背景图合成为一张图片，节省图层</li>
<li><code>星期</code>的<code>选图</code>里面第一张图是无效的，随便添加一张，从第二张图开始才是周一</li>
<li><code>上午下午</code>的<code>选图</code>里面第三张图要找一张空白的png图</li>
<li><code>撤销</code>不能使用<code>ctrl+z</code>的快捷键，只能点击上面菜单栏的返回图标，而且一经保存就不能再撤回</li>
</ul>
<h1 id="素材"><a href="#素材" class="headerlink" title="素材"></a>素材</h1><p>制作表盘需要用到各种png格式的图片素材，下面是我使用到的素材网站<br><a href="https://www.freepik.com/">freepik</a> - 背景图片素材，未注册的话每天有下载数量限制，注册的时候需要科学上网，因为需要用到谷歌的验证服务，注册完成后不需要<br><a href="https://webgradients.com/">webgradients</a> - 渐变色配色<br><a href="https://www.iconfinder.com/">iconfinder</a> - 图标素材，这个网站有在线编辑器，点开图片后有一个<code>Open in icon editor</code>，可以在线调整好素材的颜色，省下PS的过程</p>
<p>部分素材是需要付费的，筛选的时候勾上<code>free</code>就好了</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>目前版本的<code>华为运动健康</code>软件是不能自定义添加表盘的，需要下载老版本，百度云自取</p>
<a class="btn" href="https://pan.baidu.com/s/1Pg0lIOtRS3fmXG8kvMkNDA"><i class="fa fa-download fa-fw"></i>提取码: mpbm</a>

<p>安装的具体操作步骤如下</p>
<ul>
<li>先将导出的<code>hwt</code>文件拷贝到手机</li>
<li>成功连接设备后进入<code>表盘市场</code></li>
<li>点击右上角的三个点</li>
<li>进入<code>隐私声明</code></li>
<li>撤销华为主题服务</li>
<li>退出来再重新进入<code>表盘市场</code></li>
<li>在弹出窗口中重新给华为主题服务授权</li>
<li>再次点击右上角的三个点，会多出一个<code>添加表盘</code>选项</li>
<li>点击后会询问你是否是开发者，点击<code>是</code></li>
<li>找到拷贝进手机的<code>hwt</code>文件路径，点击确定并安装</li>
</ul>
<p>如果觉得这个表盘不满意需要卸载的话，还要重新安装最新版的<code>华为运动健康</code>，进入<code>表盘市场</code>中的<code>我的</code>里面删除，老版本的不能在表盘市场中删除自定义的表盘，这就很尴尬，所以。。。一定要设计好了检查好了再安装，要不这个过程可是太反人类了，手表安装表盘巨慢，1秒钟才安装百分之一。。。</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>我做的表盘已经上传到我的Github了，源文件也一起上传了，有需要的自取</p>
<a class="btn" href="https://github.com/Siriusq/Honor-Magic-Watch-Theme-Sirius"><i class="fa fa-download fa-fw"></i>源文件</a>

<a class="btn" href="https://github.com/Siriusq/Honor-Magic-Watch-Theme-Sirius/releases/download/6.0/sirius_3.1.6.hwt"><i class="fa fa-download fa-fw"></i>表盘下载</a>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>表盘</tag>
        <tag>荣耀 magic watch</tag>
      </tags>
  </entry>
  <entry>
    <title>软件整理</title>
    <url>/%E8%BD%AF%E4%BB%B6%E6%95%B4%E7%90%86.html</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 整理收录了一些我常用/用过的软件、网站以及浏览器扩展，以开源/免费软件为主。 </blockquote>

<span id="more"></span>

<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>图例说明:</p>
<ul>
<li>🔓 开源软件</li>
<li>💸 含付费解锁功能</li>
<li>💲 付费软件</li>
<li>⛓️‍💥 不再积极维护</li>
<li>🛜 网页版</li>
<li>🪟 Windows</li>
<li>🍎 macOS</li>
</ul>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/link.webp"></object>
<p>AlternativeTo</p><p>更多的替换软件查找</p>
<a href="https://alternativeto.net/"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Adobe Alternatives</p><p>Adobe系软件替换</p>
<a href="https://github.com/KenneyNL/Adobe-Alternatives?tab=readme-ov-file#adobe-alternatives"></a>
</div><div class="link-grid-container">
<object class="link-grid-image" data="/images/link/github.webp"></object>
<p>Awesome Mac</p><p>好用的 macOS 应用程序、软件以及工具列表</p>
<a href="https://github.com/jaywcjlove/awesome-mac/blob/master/README-zh.md"></a>
</div></div>

<h1 id="基本软件"><a href="#基本软件" class="headerlink" title="基本软件"></a>基本软件</h1><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul>
<li><a href="https://vivaldi.com/">Vivadli</a> 🪟🍎 Chromium内核，支持垂直标签页</li>
<li><a href="https://www.mozilla.org/en-US/firefox/all/">Firefox</a> 🔓🪟🍎</li>
</ul>
<h2 id="看图"><a href="#看图" class="headerlink" title="看图"></a>看图</h2><ul>
<li><a href="https://github.com/nomacs/nomacs/releases">nomacs</a> 🔓🪟 支持格式丰富，可转换图片格式</li>
<li><a href="https://github.com/riyasy/FlyPhotos">FlyPhotos</a> 🔓🪟 UI美观，仅支持看图</li>
<li><a href="https://www.bandisoft.com/honeyview/">Honeyview</a> ⛓️‍💥🪟 支持格式丰富，可转换图片格式，配合Bandzip可以预览压缩包内图片</li>
</ul>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><ul>
<li><a href="https://getsharex.com/">ShortX</a> 🔓🪟 功能丰富，自定义程度高，支持OCR</li>
<li><a href="https://www.snipaste.com/">Snipaste</a> 💸🪟🍎 有MS商店版本</li>
</ul>
<h2 id="屏幕录制"><a href="#屏幕录制" class="headerlink" title="屏幕录制"></a>屏幕录制</h2><ul>
<li><a href="https://obsproject.com/">OBS Studio</a> 🔓🪟🍎</li>
</ul>
<h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><ul>
<li><a href="https://github.com/clsid2/mpc-hc">mpc-hc</a> 🔓🪟</li>
<li><a href="https://github.com/Aleksoid1978/MPC-BE">mpc-be</a> 🔓🪟</li>
<li><a href="https://www.videolan.org/vlc/">VLC</a> 🔓🪟🍎</li>
<li><a href="https://potplayer.daum.net/">Potplayer</a> 🪟 功能最多，但是有黑历史</li>
</ul>
<h2 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h2><ul>
<li><a href="https://peazip.github.io/">Peazip</a> 🔓🪟🍎 双击解压后可打开自动解压文件夹</li>
<li><a href="https://www.7-zip.org/">7-Zip</a> 🔓🪟 体积小，性能强</li>
<li>Bandzip 双击解压后可自动打开解压文件夹并删除压缩包<ul>
<li><a href="https://www.bandisoft.com/bandizip/old/6/">v6</a> ⛓️‍💥🪟 需关闭自动更新使用</li>
<li><a href="https://www.bandisoft.com/bandizip/">v7</a> 💸🪟🍎 有广告</li>
</ul>
</li>
<li><a href="https://github.com/aonez/Keka">Keka</a> 🔓🍎 解压缩</li>
</ul>
<h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><ul>
<li><a href="https://www.freedownloadmanager.org/zh/">FDM</a> 🪟🍎 可搭配浏览器扩展使用</li>
<li><a href="https://motrix.app/">Motrix</a> ⛓️‍💥🔓🪟🍎 UI美观</li>
</ul>
<h2 id="安全-密码"><a href="#安全-密码" class="headerlink" title="安全&#x2F;密码"></a>安全&#x2F;密码</h2><ul>
<li><a href="https://www.eset.com/cn/">ESET</a> 💲🪟🍎 系统资源占用不多，HIPS功能强大，推荐Internet Security版本</li>
<li><a href="https://www.huorong.cn/">火绒安全</a> 🪟</li>
<li><a href="https://keepassxc.org/">KeepassXC</a> 🔓🪟🍎 密码管理工具，可以通过OneDrive同步数据库，iOS端可以用StrongBox&#x2F;KeePassium</li>
<li><a href="https://objective-see.org/products/knockknock.html">KnockKnock</a> 🔓🍎 软件行为监控</li>
<li><a href="https://objective-see.org/products/lulu.html">LuLu</a> 🔓🍎 防火墙</li>
</ul>
<h1 id="创意设计-生产力"><a href="#创意设计-生产力" class="headerlink" title="创意设计&#x2F;生产力"></a>创意设计&#x2F;生产力</h1><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><ul>
<li><a href="https://www.photopea.com/">Photopea</a> 💸🛜</li>
<li><a href="https://www.gimp.org/">GIMP</a> 🔓🪟🍎</li>
<li><a href="https://www.getpaint.net/">Paint.NET</a> 🪟</li>
<li><a href="https://www.adobe.com/products/photoshop.html">Photoshop</a> 💲🪟🍎</li>
<li><a href="https://github.com/AlexAzumi/webp-converter">webp-converter</a> 🔓🪟 将图片批量转换为webp格式</li>
</ul>
<h2 id="视频剪辑"><a href="#视频剪辑" class="headerlink" title="视频剪辑"></a>视频剪辑</h2><ul>
<li><a href="https://kdenlive.org/">Kdenlive</a> 🔓🪟🍎</li>
<li><a href="https://www.openshot.org/">OpenShot</a> 🔓🪟🍎</li>
<li><a href="https://www.adobe.com/products/premiere.html">Premiere Pro</a> 💲🪟🍎</li>
</ul>
<h2 id="音频剪辑"><a href="#音频剪辑" class="headerlink" title="音频剪辑"></a>音频剪辑</h2><ul>
<li><a href="https://audiomass.co/">AudioMass</a> 🔓🛜</li>
</ul>
<h2 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h2><ul>
<li><a href="https://www.blender.org/download/">Blender</a> 🪟🍎</li>
<li><a href="https://www.freecad.org/downloads.php">FreeCAD</a> 🪟🍎</li>
<li><a href="https://www.qcad.org/en/download">QCAD</a> 🔓💸🪟🍎</li>
<li><a href="https://www.solidworks.com/">SolidWorks</a> 💲🪟</li>
<li><a href="https://www.autodesk.com/products/autocad/free-trial">AutoCAD</a> 💲🪟🍎</li>
<li><a href="https://www.rhino3d.com/">Rhinoceros 3D</a> 💲🪟🍎</li>
<li><a href="https://www.sketchup.com/">SketchUp</a> 💸🪟🍎 基础网页版免费使用</li>
</ul>
<h1 id="文本办公"><a href="#文本办公" class="headerlink" title="文本办公"></a>文本办公</h1><h2 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h2><ul>
<li>MS Office 💲🪟🍎 新电脑大多已预装<ul>
<li><a href="https://otp.landian.vip/">Office Tool Plus</a> 安装</li>
<li><a href="https://massgrave.dev/">Microsoft Activation Scripts (MAS)</a> 激活</li>
</ul>
</li>
<li><a href="https://www.libreoffice.org/">LibreOffice</a> 🔓🪟🍎</li>
</ul>
<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><ul>
<li><a href="https://obsidian.md/">Obsidian</a> 💸🪟🍎 markdown格式</li>
<li><a href="https://www.microsoft.com/zh-cn/p/onenote/9wzdncrfhvjl">Onenote</a> 🪟🍎</li>
</ul>
<h2 id="电子书阅读"><a href="#电子书阅读" class="headerlink" title="电子书阅读"></a>电子书阅读</h2><ul>
<li><a href="https://www.sumatrapdfreader.org/free-pdf-reader">Sumatra PDF</a> 🪟启动速度快</li>
<li><a href="https://apps.microsoft.com/detail/9p08t4jltqnk?activetab=pivot:overviewtab&hl=zh-cn&gl=cn">Aquile Reader</a> 💸🪟 UWP应用</li>
<li><a href="https://www.amazon.com/b?ie=UTF8&node=16571048011">Kindle for PC</a> 🪟🍎 内置词典</li>
</ul>
<h2 id="PDF编辑"><a href="#PDF编辑" class="headerlink" title="PDF编辑"></a>PDF编辑</h2><ul>
<li><a href="https://github.com/Stirling-Tools/Stirling-PDF">Stirling-PDF</a> 🛜🪟 本地部署，浏览器中交互</li>
<li><a href="https://www.cleverpdf.com/cn">CleverPDF</a> 🛜</li>
<li><a href="https://www.pdfgear.com/zh/">PDFgear</a> 🪟🍎</li>
<li><a href="https://www.gonitro.com/download">Nitro PDF Pro</a> 💲🪟🍎</li>
<li><a href="https://www.adobe.com/acrobat.html">Adobe Acrobat Pro DC</a> 💲🪟🍎</li>
</ul>
<h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><ul>
<li><a href="https://github.com/pot-app/pot-desktop">pot-desktop</a> 🔓🪟🍎 划词&#x2F;OCR翻译</li>
<li><a href="https://www.grammarly.com/">Grammarly</a> 💸🪟🍎 语法纠正，支持嵌入 Word</li>
<li><a href="https://www.deepl.com/zh/translator">DeepL</a> 💸🛜</li>
<li><a href="https://www.eudic.net/v4/en/app/eudic">欧陆词典</a> 💸🪟🍎</li>
</ul>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><ul>
<li><a href="https://app.diagrams.net/">draw.io</a> 🛜 绘制UML图等</li>
</ul>
<h2 id="远程会议"><a href="#远程会议" class="headerlink" title="远程会议"></a>远程会议</h2><ul>
<li><a href="https://zoom.us/download">Zoom</a> 💸🪟🍎</li>
<li><a href="https://www.microsoft.com/zh-cn/microsoft-teams/log-in">Microsoft Teams</a> 💸🪟🍎</li>
</ul>
<h1 id="科研学术"><a href="#科研学术" class="headerlink" title="科研学术"></a>科研学术</h1><ul>
<li><a href="https://www.tug.org/texlive/acquire-iso.html">LATEX</a> 🪟🍎 论文排版软件，对数学公式的支持很强大</li>
<li><a href="https://www.zotero.org/download/">Zotero</a> 🪟🍎 文献查看与整理<ul>
<li><a href="https://github.com/retorquere/zotero-better-bibtex/releases">zotero-better-bibtex</a> 🔓 插件，自动生成BibTeX文件</li>
</ul>
</li>
<li><a href="https://sci-hub.usualwant.com/">Sci-Hub</a> 🛜 免费下载文献，当代雷锋</li>
<li><a href="https://app.bibguru.com/">BibGuru</a> 🛜 引用格式整理</li>
</ul>
<h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><ul>
<li><a href="https://git-scm.com/downloads/win">Git</a> 🔓🪟🍎</li>
<li><a href="https://github.com/PowerShell/PowerShell">Powershell7</a> 🔓🪟</li>
<li><a href="https://github.com/microsoft/terminal">Windows Terminal</a> 🔓🪟<ul>
<li><a href="https://siriusq.top/Windows-Terminal-%E7%BE%8E%E5%8C%96.html">美化</a></li>
</ul>
</li>
<li><a href="https://iterm2.com/">iTerm2</a> 🍎<ul>
<li><a href="https://github.com/romkatv/powerlevel10k">p10k主题</a> 🔓</li>
<li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">代码高亮</a> 🔓</li>
<li><a href="https://github.com/zsh-users/zsh-autosuggestions">自动补全</a> 🔓</li>
</ul>
</li>
<li><a href="https://www.mingw-w64.org/">MinGW-w64</a> 🔓🪟🍎 C&#x2F;C++</li>
<li><a href="https://www.oracle.com/java/technologies/downloads/">Java JDK</a> 🪟🍎</li>
<li><a href="https://www.anaconda.com/download/success">Anaconda</a> 🔓🪟🍎</li>
<li><a href="https://www.python.org/">Python</a> 🔓🪟🍎</li>
<li><a href="https://nodejs.org/zh-cn">Node.js</a> 🔓🪟🍎</li>
<li><a href="https://code.visualstudio.com/">VSCode</a> 🔓🪟🍎</li>
<li><a href="https://visualstudio.microsoft.com/zh-hans/">Visual Studio</a> 🪟🍎</li>
<li><a href="https://www.jetbrains.com/pycharm/">PyCharm</a> 🪟🍎</li>
<li><a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> 🪟🍎</li>
<li><a href="https://www.codeblocks.org/downloads/binaries/">CodeBlocks</a> 🔓🪟🍎</li>
<li><a href="https://www.netsarang.com/zh/free-for-home-school/">XShell</a> 🪟</li>
<li><a href="https://unity.com/">Unity 国际版</a> 注意不要装成特供版，特供版版本号后缀有c，关于<a href="https://www.logiconsole.com/fuck-unity-cn/">如何避开特供版</a> 🪟🍎</li>
<li><a href="https://trello.com/">Trello</a> 🛜</li>
<li><a href="https://developer.apple.com/xcode/">XCode</a> 🍎</li>
<li><a href="https://www.sourcetreeapp.com/">Sourcetree</a> 🪟🍎</li>
<li><a href="https://www.mono-project.com/">Mono Framework</a> 🔓🪟🍎 跨平台 .NET 框架</li>
</ul>
<h1 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h1><ul>
<li><a href="https://store.steampowered.com/about/">Steam</a> 🪟🍎</li>
</ul>
<h1 id="效率-工具"><a href="#效率-工具" class="headerlink" title="效率&#x2F;工具"></a>效率&#x2F;工具</h1><h2 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h2><ul>
<li><a href="https://github.com/Flow-Launcher/Flow.Launcher">Flow.Launcher</a> 🔓🪟</li>
<li><a href="https://github.com/microsoft/PowerToys/releases">PowerToys Run</a> 🔓🪟</li>
<li><a href="https://www.u.tools/">utools</a> 💸🪟🍎 功能最多</li>
<li><a href="https://github.com/rubickCenter/rubick">rubick</a> 🔓🪟🍎 高仿utools</li>
</ul>
<h2 id="远程控制"><a href="#远程控制" class="headerlink" title="远程控制"></a>远程控制</h2><ul>
<li><a href="https://parsec.app/">Parsec</a> 💸🪟🍎 局域网内免费，Windows PC 远程 mac，画质高但是占用资源也高</li>
<li><a href="https://sunlogin.oray.com/">向日葵</a> 💸🪟🍎 有广告弹窗</li>
<li><a href="https://www.realvnc.com/en/connect/download/viewer/">VNC Viewer</a> 🪟🍎</li>
<li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=35460">Mouse Without Borders</a> 🪟 局域网内控制</li>
</ul>
<h2 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h2><ul>
<li><a href="https://github.com/clash-verge-rev/clash-verge-rev">Clash Verge Rev</a> 🔓🪟🍎 科学上网</li>
<li><a href="https://github.com/2dust/v2rayN/releases">V2RayN</a> 🔓🪟🍎 科学上网</li>
<li><a href="https://www.wireshark.org/">Wireshark</a> 🪟🍎 抓包工具</li>
</ul>
<h2 id="鼠标增强"><a href="#鼠标增强" class="headerlink" title="鼠标增强"></a>鼠标增强</h2><ul>
<li><a href="https://www.yingdev.com/projects/wgestures">WGestures</a> 💸🪟🍎 鼠标手势控制</li>
<li><a href="https://snipdo-app.com/">SnipDo</a> 🪟 悬浮文本工具，当选中文字时会出现悬浮框，可以快捷执行复制粘贴等操作，也可以自定义自动化操作</li>
<li><a href="https://mos.caldis.me/">MOS</a> 🔓⛓️‍💥🍎 模拟平滑滚动，消除鼠标滚轮的卡顿感</li>
</ul>
<h2 id="文件管理-传输"><a href="#文件管理-传输" class="headerlink" title="文件管理&#x2F;传输"></a>文件管理&#x2F;传输</h2><ul>
<li><a href="https://www.voidtools.com/zh-cn/">Everything</a> 🪟 快速搜索文件</li>
<li><a href="https://github.com/QL-Win/QuickLook?tab=readme-ov-file">QuickLook</a> 🔓⛓️‍💥🪟 空格键快速预览文件</li>
<li><a href="https://localsend.org/zh-CN">LocalSend</a> 🔓🪟🍎 局域网文件传输共享</li>
<li><a href="https://apps.microsoft.com/detail/9np83lwlpz9k?hl=zh-cn&gl=CN">Apple设备</a> 🪟 iOS 设备与 Windows 间传送文件</li>
<li><a href="https://www.microsoft.com/en-us/microsoft-365/onedrive/download">Onedrive</a> 🪟🍎</li>
<li><a href="https://sourceforge.net/projects/spacesniffer/">SpaceSniffer</a> 🪟 将每个文件占用的磁盘空间可视化</li>
<li><a href="https://www.duplicatecleaner.com/">Duplicate Cleaner</a> 💲🪟 找出并删除重复文件</li>
</ul>
<h2 id="桌面美化"><a href="#桌面美化" class="headerlink" title="桌面美化"></a>桌面美化</h2><ul>
<li><a href="https://www.rainmeter.net/">Rainmeter</a> 🔓🪟</li>
<li><a href="https://store.steampowered.com/app/431960/Wallpaper_Engine/">Wallpaper Engine</a> 💲🪟 动态壁纸</li>
<li><a href="https://github.com/TranslucentTB/TranslucentTB">TranslucentTB</a> 🔓🪟 透明任务栏</li>
</ul>
<h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><ul>
<li><a href="https://github.com/microsoft/PowerToys">Microsoft PowerToys</a> 🔓🪟 Windows 系统优化与功能扩展</li>
<li><a href="https://github.com/zhongyang219/TrafficMonitor/releases">Traffic Monitor</a> 🔓⛓️‍💥🪟 悬浮窗监控系统状态</li>
<li><a href="https://github.com/Chuyu-Team/Dism-Multi-language">DISM++</a> 🔓⛓️‍💥🪟 系统优化工具箱</li>
<li><a href="https://www.aida64.com/downloads">AIDA64</a> 💲🪟 详细查看系统的各项参数并进行测试</li>
<li><a href="https://rufus.ie/zh/">Rufus</a> 🔓🪟 系统安装盘制作工具</li>
<li><a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-">DDU</a> 🪟 显卡驱动完整卸载</li>
<li><a href="https://www.tbtool.cn/">图吧工具箱</a> 🪟 各种系统测试工具的合集</li>
<li><a href="https://github.com/Moneypulation/iGlance">iGlance</a> 🔓⛓️‍💥🍎 在菜单栏显示系统信息，如CPU温度、内存使用以及网速</li>
<li><a href="https://www.mediaatelier.com/CheatSheet/feedNotes.php">CheatSheet</a> 🍎 长按command键查看当前软件的快捷键</li>
<li><a href="https://rectangleapp.com/">Rectangle</a> 🔓🍎 分屏软件</li>
</ul>
<h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><ul>
<li><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion">VMWare</a> 🪟🍎 被博通收购后免费了</li>
<li><a href="https://www.virtualbox.org/">VirtualBox</a> 🔓🪟🍎</li>
</ul>
<h2 id="硬件控制"><a href="#硬件控制" class="headerlink" title="硬件控制"></a>硬件控制</h2><ul>
<li><a href="https://eartrumpet.app/">EarTrumpet</a> 🔓🪟 独立控制不同软件的音量大小</li>
<li><a href="https://twinkletray.com/">Twinkle Tray</a> 🔓🪟 显示器亮度调节</li>
<li><a href="https://github.com/waydabber/BetterDisplay">BetterDisplay</a> 💸🍎 在2K外接显示器上开启HiDPI </li>
<li><a href="https://apphousekitchen.com/">AlDente</a> 💸🍎 设置电池充电电量上限，延长电池寿命</li>
<li><a href="https://rog.asus.com/motherboards/rog-strix/rog-strix-b460-i-gaming-model/helpdesk_download/">AI Suite3</a> 🪟 华硕主板风扇转速控制</li>
<li><a href="https://www.logitechg.com/en-us/innovation/g-hub.html">Logitech G Hub</a> 🪟🍎 罗技鼠标设置</li>
<li><a href="https://www.gskill.com/cn/download/1502180912/1551690847/Trident-Z-Z5-Ripjaws-M5-RGB-%E7%B3%BB%E5%88%97-%E5%B9%BB%E5%85%89%E6%88%9F-%E7%84%B0%E5%85%89%E6%88%9F-%E7%9A%87%E5%AE%B6%E6%88%9F-%E7%9A%87%E5%AE%B6%E6%88%9F-%E5%B0%8A%E7%88%B5%E7%89%88-%E5%B9%BB%E9%94%8B%E6%88%9F-%E7%84%B0%E9%94%8B%E6%88%9F-%E7%84%B0%E5%88%83">Trident Z 控制台</a> 🪟 芝奇幻光戟灯效控制</li>
<li><a href="https://openrgb.org/">OpenRGB</a> 🔓🪟 </li>
<li><a href="https://www.asus.com.cn/supportonly/Armoury%20Crate/HelpDesk_Download/">Armoury Crate</a> 🪟 华硕主板的控制软件，界面很炫酷，但是Bug太多，依托答辩</li>
<li><a href="https://dlcdnets.asus.com/pub/ASUS/mb/14Utilities/Lighting_Control_1.07.79_V2.2.zip">Aura Sync</a> 🪟 华硕神光同步灯控软件，功能单一，但bug少多了</li>
</ul>
<h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><ul>
<li><a href="https://www.amd.com/en/support/downloads/previous-drivers.html/graphics/radeon-rx/radeon-rx-6000-series/amd-radeon-rx-6500-xt.html">AMD rx6500xt 显卡驱动</a> 🪟</li>
<li><a href="https://rog-forum.asus.com/t5/downloads-for-motherboards/drivers-realtek-audio-amd-3xx-4xx-5xx-6xx-8xx-amp-intel-2xx-3xx/m-p/971353">ROG B460i 声卡驱动</a> 🪟</li>
<li><a href="https://www.dell.com/support/home/en-us/product-support/product/dell-p2418d-monitor/drivers">Dell Display Manager</a> 以及<a href="https://www.dell.com/support/home/zh-cn/drivers/driversdetails?driverid=1n3cg&lwp=rt">校色文件</a> 🪟</li>
</ul>
<h1 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h1><ul>
<li><a href="https://chromewebstore.google.com/detail/%E6%B2%99%E6%8B%89%E6%9F%A5%E8%AF%8D-%E8%81%9A%E5%90%88%E8%AF%8D%E5%85%B8%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=zh-CN">沙拉查词</a> 🔓🛜 网页划词翻译</li>
<li><a href="https://chromewebstore.google.com/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh?hl=zh-CN">Dark Reader</a> 🔓💸🛜 开启网页夜间模式</li>
<li><a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm?hl=zh-CN">uBlock Origin</a> 🔓🛜 广告屏蔽</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>过气学长的碎碎念</title>
    <url>/%E8%BF%87%E6%B0%94%E5%AD%A6%E9%95%BF%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">交完毕设就想写，咕到了现在，主要给学弟学妹说一下大四大五的流程和注意事项，大四部分内容可能和实际有出入，年代久远记不清了</blockquote>

<span id="more"></span>

<h1 id="大四篇"><a href="#大四篇" class="headerlink" title="大四篇"></a>大四篇</h1><p>大四学年没什么课，比较闲，想要考研的要开始准备了，出国的最好在大四把语言考出来，免得夜长梦多，本辣鸡去年12月才考过，还是在武汉考的，考完半个月武汉就暴发疫情了，然后雅思托福PTE全都取消了，雅思到现在还没有恢复，没考过的话这半年真的是煎熬了，所以说越早越好。</p>
<h2 id="上学期"><a href="#上学期" class="headerlink" title="上学期"></a>上学期</h2><p>上学期的必修课只有专业课和建筑设备。专业课做的是居住区规划设计，地块在萍乡路，设计内容包括地块规划、道路规划、高差处理、户型设计、日照计算、立面设计、地下车库设计、景观设计这些，最后还搞了一个联（diu）合（ren）展评，想看本辣鸡作业的话微信找我要；建筑设备挺简单的，老师人很好，点名形式是传一张A4纸挨个签名，然后我们那年是开卷考试，上课的时候跟着老师在课本上做好勾画就没问题，重点关注一下老师的补充内容，考试会考到，建筑设备课的考试是大学的最后一场考试了。</p>
<p>我当时还选了环境行为学和建筑系统化设计两门选修，两门选修课程压力都不大。环境行为学的作业是研究养老建筑，有实地调研和一个装置设计，要做一个文本；建筑系统化设计用英语上的，中间会有一个英文的汇报，介绍一个案例，自己写不出来就在谷德网上找中英对照的说明，最后的作业是挑一个你的专业课作业，对它进行改造，要求是换一个结构形式然后加一些绿色节能的设计，也要做成文本。</p>
<h2 id="下学期"><a href="#下学期" class="headerlink" title="下学期"></a>下学期</h2><p>下学期就更闲了，必修课只有专业课和就业指导了。专业课是做旧城改造和高层设计，我们当时是两个作业合在一起做的，高层在旧城改造的地块里面，地块在金茂湾轮渡码头那边，考研的注意专业课和复习的时间分配，最后也是做了一个联（diu）合（ren）展评。就业指导就上几个周，主要会邀请考研成功和已经就业的学长学姐来分享经验，然后会有一些设计院来做宣讲，没有作业和考试。</p>
<h1 id="大五篇"><a href="#大五篇" class="headerlink" title="大五篇"></a>大五篇</h1><h2 id="上学期-1"><a href="#上学期-1" class="headerlink" title="上学期"></a>上学期</h2><p>上学期基本没人在学校了，考研的基本会去报考的学校复习，实习的各回各家了，出国的要开始投递申请了。这个学期所谓的课程是建筑师职业实践，10个学分，名字起的很迷惑，实际就是去设计院实习，然后下学期开学要交一篇8000字的实习报告、15张A1施工图纸、一套方案文本、几张需要实习单位盖章的表格。这门课实习的同学比较好说，考研的同学基本没时间，就需要一定的操作了hhh</p>
<h2 id="下学期-1"><a href="#下学期-1" class="headerlink" title="下学期"></a>下学期</h2><p>下学期开学要回学校了，有毕业实习（3学分）和毕业设计（10学分）两门课。毕业实习的名字也很迷惑，应该叫毕业设计前期调研的，需要交一份5000字的调研报告和10篇日记，主要是对调研的建筑案例的记录。</p>
<p>毕业设计和平常的大作业差不多，时间线大概是</p>
<ul>
<li>开学到四月做一草二草</li>
<li>四月底有中期检查，就是把你目前做的设计成果交上去，需要交的内容有<ul>
<li>草图照片</li>
<li>实体模型照片</li>
<li>总平面图、各层平面图的CAD</li>
<li>SU模型文件</li>
<li>前八周的毕业设计周记，周记就是记录你每个周都干了些啥，有什么问题，如何解决问题的</li>
</ul>
</li>
<li>中期检查完继续做一个周设计</li>
<li>中期第一次没过的话，一个周后会再检查一次，第二次再不过就会被推迟答辩了</li>
<li>然后就要开始出图了，最后要交的材料有<ul>
<li>毕业设计的文本，这个学校有统一格式，到时候会发，大概内容有<ul>
<li>设计说明</li>
<li>给老师的一些评分表</li>
<li>设计成果</li>
</ul>
</li>
<li>实体模型或者动画，动画一般用Lumion做，时长一分钟</li>
<li>5000字的设计说明<ul>
<li>这个设计说明是需要查重的，学校知网会有两次免费的查重机会</li>
<li>重复率不能超过30%</li>
<li>建议自己用别的系统先查一下载上传学校的知网</li>
<li>不要借鉴往届学长学姐的说明，学校有一个往届毕业生的论文库，这个库用其他网站是查不到的，借鉴的话基本全红</li>
<li>纯自己写的话重复率很低的，我用学校的系统查的重复率只有0.7%，5000字写了一整天</li>
</ul>
</li>
<li>所有的周记</li>
<li>可能要做A1展板，我们因为疫情没有做这个</li>
</ul>
</li>
<li>六月初会交图，过一个周会进行毕业答辩，关于答辩<ul>
<li>答辩分为公开答辩和小组答辩，我们由于疫情就直接小组答辩了</li>
<li>公开答辩的人选是每一个导师组推选一个人，然后这个人拿到的分数就是导师组内的最高分</li>
<li>公开答辩结束后进行小组答辩，一般一个组十几个人，答辩老师四位</li>
<li>答辩过程大概15-20分钟，首先用介绍你的方案，然后老师会问几个问题</li>
<li>答辩前最好背熟规范，尤其是防火规范，问到规范的问题答不上来的话就非常尴尬了</li>
<li>只答不辩，疯狂道歉（手动狗头）</li>
</ul>
</li>
<li>答辩完成就坐等出分了，剩下的时间就是吃散伙饭、拍毕业照、拿毕业证滚蛋了</li>
</ul>
<p>差不多就这些内容了，有什么问题可以在下面评论留言或者微信找我，溜了溜了</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>建筑</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云域名转出至NameSilo</title>
    <url>/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E8%BD%AC%E5%87%BA%E8%87%B3NameSilo.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">今天心血来潮，跑去查了一下自己域名的WHOIS信息，然后发现在阿里云注册的域名处于裸奔状态，姓名省份都能查到……查了一下发现阿里云在2018年就停止了WHOIS隐私保护，裸奔了三年我竟浑然不知，本着亡羊补牢的心态，再加上令人讨厌的实名认证，就决定把域名迁出阿里云了，迁出的过程也是被阿里云恶心坏了，本文吐槽预警</blockquote>

<span id="more"></span>

<h1 id="阿里云转出"><a href="#阿里云转出" class="headerlink" title="阿里云转出"></a>阿里云转出</h1><p>首先登陆<a class="btn" href="https://dc.console.aliyun.com/"><i class="fa fa-link fa-fw"></i>阿里云域名控制台</a>，点击要转移的域名，在跳转后的页面侧边栏里才会出现<code>域名转出</code>选项，转入倒是挺勤快的放在了首页上。这里为了方便区分，把域名控制台首页叫做<code>首页</code>，点击域名跳转后的页面叫做<code>域名管理页面</code><br><img data-src="https://s2.loli.net/2022/06/04/eGpfiLlvtWVKYUd.png" alt="域名转出"></p>
<p>转出的时候需要核对邮箱+安全认证，我这里用foxmail，试了好几次都收不到阿里云的邮件，垃圾邮件里也没有，就要改邮箱。如果像我一样收不到邮件的话，恭喜，先撤销转出，重新开始吧。</p>
<h2 id="更改邮箱"><a href="#更改邮箱" class="headerlink" title="更改邮箱"></a>更改邮箱</h2><p>改邮箱要到域名控制台的<code>信息模板</code>里改，<code>信息模板</code>在首页侧边栏。我是真的没想到模板还要实名认证，对你没看错，不是个人信息，是信息模板。如果不实名认证信息模版的话，信息模版前面的勾选框就不能用，也就无法更改邮箱。这里除了要验证更改的邮箱外，还得等审核，我用了几十分钟才通过审核。</p>
<p>模板改完后要到域名管理页面的<code>域名持有者信息修改（过户）</code>进行<code>快速过户</code>才能更改域名绑定的邮箱。这里务必勾选<code>关闭“域名信息修改成功后60天内禁止转出阿里云”</code>。我真的不理解，改个邮箱能这么麻烦，而且自己转给自己还要审核，再等几十分钟。。。<br><img data-src="https://s2.loli.net/2022/06/04/6FMNoGQCEUThOwc.png" alt="更改邮箱"></p>
<h2 id="接收密码"><a href="#接收密码" class="headerlink" title="接收密码"></a>接收密码</h2><p>都改完后就回到域名转出，重新进行邮箱核对+安全认证，看到下面的页面就可以到邮箱找阿里云发来的密码了<br><img data-src="https://s2.loli.net/2022/06/04/PR4bYylMVHf86jW.png" alt="发送转移码"></p>
<h1 id="NameSilo转入"><a href="#NameSilo转入" class="headerlink" title="NameSilo转入"></a>NameSilo转入</h1><p>转入的域名注册商我选择了<a class="btn" href="https://www.namesilo.com/login"><i class="fa fa-link fa-fw"></i>NameSilo</a>，看中的是他价格便宜，续费和第一次注册的价格一样，还提供免费的隐私保护服务。我的<code>.top</code>域名是4.79美元一年，比阿里云贵不了几块钱。</p>
<p>没注册的先注册个账号。然后在顶栏<code>Domains</code>的下拉菜单找到<code>Transfer a Domain</code>。然后在<code>Domain Transfer</code>里输入自己的域名，点右边的<code>Search</code><br><img data-src="https://s2.loli.net/2022/06/04/YKJL695WZuQfHvw.png" alt="转入NameSilo"></p>
<p>然后把收到的转出密码粘贴进<code>Authorization Code</code>里，点下面的<code>Transfer Domains</code>。接下来会跳转到付款界面，在右边可以用优惠码，我用的是<code>vpsss</code>，可以优惠1美元。另外可以看到这里NameSilo赠送了免费的WHOIS隐私服务，裸奔状态解除，好耶！<br><img data-src="https://s2.loli.net/2022/06/04/q9Yzv8yQto2kLUE.png" alt="打钱"></p>
<p>最后就是<code>checkout</code>交钱咯，付款方式支持支付宝</p>
<h1 id="状态确认"><a href="#状态确认" class="headerlink" title="状态确认"></a>状态确认</h1><p>付款成功后会收到3封邮件</p>
<ul>
<li>第一封来自NameSilo，标题为Thank you for your order，说明你的钱已经到账了</li>
<li>第二封也是NameSilo的，标题为Approved Domain Transfers，说明NameSilo已经通过了你的域名转移请求</li>
<li>第三封来自阿里云，标题为阿里云域名转出通知邮件 Notice of Transfer-Out，说明阿里云也收到了域名转出的通知</li>
</ul>
<p>这时回到阿里云的转出页面，可以看到状态是“转出中”。<br><img data-src="https://s2.loli.net/2022/06/04/IpOedSaUN1Xg2rq.png" alt="阿里云状态确认"></p>
<p>而NameSilo的Account Home Page会有一条提示：<code>You have transfers that are pending completion.</code>，然后进入<code>Transfer Manager</code>可以看到域名处于<code>Pending Transfers</code>的状态。<br><img data-src="https://s2.loli.net/2022/06/04/NZGF4eYkvP6LM1o.png" alt="NameSilo状态确认"></p>
<p>确认完成后就默默等待域名转移完成咯，一般需要5-7天。</p>
<p>现在再去WHOIS查询，隐私数据已经全部变成了REDACTED FOR PRIVACY，舒服<br><img data-src="https://s2.loli.net/2022/06/22/JYEFZWdSr5AHoqG.png" alt="WHOIS"></p>
]]></content>
      <categories>
        <category>网站配置</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>NameSilo</tag>
        <tag>域名</tag>
        <tag>WHOIS</tag>
      </tags>
  </entry>
</search>
